import * as $protobuf from "protobufjs";
/** Namespace injective. */
export namespace injective {

    /** Namespace auction. */
    namespace auction {

        /** Namespace v1beta1. */
        namespace v1beta1 {

            /** Represents a Msg */
            class Msg extends $protobuf.rpc.Service {

                /**
                 * Constructs a new Msg service.
                 * @param rpcImpl RPC implementation
                 * @param [requestDelimited=false] Whether requests are length-delimited
                 * @param [responseDelimited=false] Whether responses are length-delimited
                 */
                constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

                /**
                 * Calls Bid.
                 * @param request MsgBid message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgBidResponse
                 */
                public bid(request: injective.auction.v1beta1.IMsgBid, callback: injective.auction.v1beta1.Msg.BidCallback): void;

                /**
                 * Calls Bid.
                 * @param request MsgBid message or plain object
                 * @returns Promise
                 */
                public bid(request: injective.auction.v1beta1.IMsgBid): Promise<injective.auction.v1beta1.MsgBidResponse>;

                /**
                 * Calls UpdateParams.
                 * @param request MsgUpdateParams message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgUpdateParamsResponse
                 */
                public updateParams(request: injective.auction.v1beta1.IMsgUpdateParams, callback: injective.auction.v1beta1.Msg.UpdateParamsCallback): void;

                /**
                 * Calls UpdateParams.
                 * @param request MsgUpdateParams message or plain object
                 * @returns Promise
                 */
                public updateParams(request: injective.auction.v1beta1.IMsgUpdateParams): Promise<injective.auction.v1beta1.MsgUpdateParamsResponse>;
            }

            namespace Msg {

                /**
                 * Callback as used by {@link injective.auction.v1beta1.Msg#bid}.
                 * @param error Error, if any
                 * @param [response] MsgBidResponse
                 */
                type BidCallback = (error: (Error|null), response?: injective.auction.v1beta1.MsgBidResponse) => void;

                /**
                 * Callback as used by {@link injective.auction.v1beta1.Msg#updateParams}.
                 * @param error Error, if any
                 * @param [response] MsgUpdateParamsResponse
                 */
                type UpdateParamsCallback = (error: (Error|null), response?: injective.auction.v1beta1.MsgUpdateParamsResponse) => void;
            }

            /** Properties of a MsgBid. */
            interface IMsgBid {

                /** MsgBid sender */
                sender?: (string|null);

                /** MsgBid bid_amount */
                bid_amount?: (cosmos.base.v1beta1.ICoin|null);

                /** MsgBid round */
                round?: (number|null);
            }

            /** Represents a MsgBid. */
            class MsgBid implements IMsgBid {

                /**
                 * Constructs a new MsgBid.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.auction.v1beta1.IMsgBid);

                /** MsgBid sender. */
                public sender: string;

                /** MsgBid bid_amount. */
                public bid_amount?: (cosmos.base.v1beta1.ICoin|null);

                /** MsgBid round. */
                public round: number;

                /**
                 * Encodes the specified MsgBid message. Does not implicitly {@link injective.auction.v1beta1.MsgBid.verify|verify} messages.
                 * @param message MsgBid message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.auction.v1beta1.IMsgBid, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgBid message, length delimited. Does not implicitly {@link injective.auction.v1beta1.MsgBid.verify|verify} messages.
                 * @param message MsgBid message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.auction.v1beta1.IMsgBid, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgBid message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgBid
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.auction.v1beta1.MsgBid;

                /**
                 * Decodes a MsgBid message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgBid
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.auction.v1beta1.MsgBid;

                /**
                 * Verifies a MsgBid message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgBid message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgBid
                 */
                public static fromObject(object: { [k: string]: any }): injective.auction.v1beta1.MsgBid;

                /**
                 * Creates a plain object from a MsgBid message. Also converts values to other types if specified.
                 * @param message MsgBid
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.auction.v1beta1.MsgBid, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgBid to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgBidResponse. */
            interface IMsgBidResponse {
            }

            /** Represents a MsgBidResponse. */
            class MsgBidResponse implements IMsgBidResponse {

                /**
                 * Constructs a new MsgBidResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.auction.v1beta1.IMsgBidResponse);

                /**
                 * Encodes the specified MsgBidResponse message. Does not implicitly {@link injective.auction.v1beta1.MsgBidResponse.verify|verify} messages.
                 * @param message MsgBidResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.auction.v1beta1.IMsgBidResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgBidResponse message, length delimited. Does not implicitly {@link injective.auction.v1beta1.MsgBidResponse.verify|verify} messages.
                 * @param message MsgBidResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.auction.v1beta1.IMsgBidResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgBidResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgBidResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.auction.v1beta1.MsgBidResponse;

                /**
                 * Decodes a MsgBidResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgBidResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.auction.v1beta1.MsgBidResponse;

                /**
                 * Verifies a MsgBidResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgBidResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgBidResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.auction.v1beta1.MsgBidResponse;

                /**
                 * Creates a plain object from a MsgBidResponse message. Also converts values to other types if specified.
                 * @param message MsgBidResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.auction.v1beta1.MsgBidResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgBidResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgUpdateParams. */
            interface IMsgUpdateParams {

                /** MsgUpdateParams authority */
                authority?: (string|null);

                /** MsgUpdateParams params */
                params?: (injective.auction.v1beta1.IParams|null);
            }

            /** Represents a MsgUpdateParams. */
            class MsgUpdateParams implements IMsgUpdateParams {

                /**
                 * Constructs a new MsgUpdateParams.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.auction.v1beta1.IMsgUpdateParams);

                /** MsgUpdateParams authority. */
                public authority: string;

                /** MsgUpdateParams params. */
                public params?: (injective.auction.v1beta1.IParams|null);

                /**
                 * Encodes the specified MsgUpdateParams message. Does not implicitly {@link injective.auction.v1beta1.MsgUpdateParams.verify|verify} messages.
                 * @param message MsgUpdateParams message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.auction.v1beta1.IMsgUpdateParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgUpdateParams message, length delimited. Does not implicitly {@link injective.auction.v1beta1.MsgUpdateParams.verify|verify} messages.
                 * @param message MsgUpdateParams message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.auction.v1beta1.IMsgUpdateParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgUpdateParams message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgUpdateParams
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.auction.v1beta1.MsgUpdateParams;

                /**
                 * Decodes a MsgUpdateParams message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgUpdateParams
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.auction.v1beta1.MsgUpdateParams;

                /**
                 * Verifies a MsgUpdateParams message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgUpdateParams message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgUpdateParams
                 */
                public static fromObject(object: { [k: string]: any }): injective.auction.v1beta1.MsgUpdateParams;

                /**
                 * Creates a plain object from a MsgUpdateParams message. Also converts values to other types if specified.
                 * @param message MsgUpdateParams
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.auction.v1beta1.MsgUpdateParams, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgUpdateParams to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgUpdateParamsResponse. */
            interface IMsgUpdateParamsResponse {
            }

            /** Represents a MsgUpdateParamsResponse. */
            class MsgUpdateParamsResponse implements IMsgUpdateParamsResponse {

                /**
                 * Constructs a new MsgUpdateParamsResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.auction.v1beta1.IMsgUpdateParamsResponse);

                /**
                 * Encodes the specified MsgUpdateParamsResponse message. Does not implicitly {@link injective.auction.v1beta1.MsgUpdateParamsResponse.verify|verify} messages.
                 * @param message MsgUpdateParamsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.auction.v1beta1.IMsgUpdateParamsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgUpdateParamsResponse message, length delimited. Does not implicitly {@link injective.auction.v1beta1.MsgUpdateParamsResponse.verify|verify} messages.
                 * @param message MsgUpdateParamsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.auction.v1beta1.IMsgUpdateParamsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgUpdateParamsResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgUpdateParamsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.auction.v1beta1.MsgUpdateParamsResponse;

                /**
                 * Decodes a MsgUpdateParamsResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgUpdateParamsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.auction.v1beta1.MsgUpdateParamsResponse;

                /**
                 * Verifies a MsgUpdateParamsResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgUpdateParamsResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgUpdateParamsResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.auction.v1beta1.MsgUpdateParamsResponse;

                /**
                 * Creates a plain object from a MsgUpdateParamsResponse message. Also converts values to other types if specified.
                 * @param message MsgUpdateParamsResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.auction.v1beta1.MsgUpdateParamsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgUpdateParamsResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a Params. */
            interface IParams {

                /** Params auction_period */
                auction_period?: (number|null);

                /** Params min_next_bid_increment_rate */
                min_next_bid_increment_rate?: (string|null);
            }

            /** Represents a Params. */
            class Params implements IParams {

                /**
                 * Constructs a new Params.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.auction.v1beta1.IParams);

                /** Params auction_period. */
                public auction_period: number;

                /** Params min_next_bid_increment_rate. */
                public min_next_bid_increment_rate: string;

                /**
                 * Encodes the specified Params message. Does not implicitly {@link injective.auction.v1beta1.Params.verify|verify} messages.
                 * @param message Params message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.auction.v1beta1.IParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Params message, length delimited. Does not implicitly {@link injective.auction.v1beta1.Params.verify|verify} messages.
                 * @param message Params message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.auction.v1beta1.IParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Params message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Params
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.auction.v1beta1.Params;

                /**
                 * Decodes a Params message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Params
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.auction.v1beta1.Params;

                /**
                 * Verifies a Params message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Params message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Params
                 */
                public static fromObject(object: { [k: string]: any }): injective.auction.v1beta1.Params;

                /**
                 * Creates a plain object from a Params message. Also converts values to other types if specified.
                 * @param message Params
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.auction.v1beta1.Params, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Params to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a Bid. */
            interface IBid {

                /** Bid bidder */
                bidder?: (string|null);

                /** Bid amount */
                amount?: (string|null);
            }

            /** Represents a Bid. */
            class Bid implements IBid {

                /**
                 * Constructs a new Bid.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.auction.v1beta1.IBid);

                /** Bid bidder. */
                public bidder: string;

                /** Bid amount. */
                public amount: string;

                /**
                 * Encodes the specified Bid message. Does not implicitly {@link injective.auction.v1beta1.Bid.verify|verify} messages.
                 * @param message Bid message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.auction.v1beta1.IBid, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Bid message, length delimited. Does not implicitly {@link injective.auction.v1beta1.Bid.verify|verify} messages.
                 * @param message Bid message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.auction.v1beta1.IBid, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Bid message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Bid
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.auction.v1beta1.Bid;

                /**
                 * Decodes a Bid message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Bid
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.auction.v1beta1.Bid;

                /**
                 * Verifies a Bid message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Bid message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Bid
                 */
                public static fromObject(object: { [k: string]: any }): injective.auction.v1beta1.Bid;

                /**
                 * Creates a plain object from a Bid message. Also converts values to other types if specified.
                 * @param message Bid
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.auction.v1beta1.Bid, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Bid to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an EventBid. */
            interface IEventBid {

                /** EventBid bidder */
                bidder?: (string|null);

                /** EventBid amount */
                amount?: (string|null);

                /** EventBid round */
                round?: (number|null);
            }

            /** Represents an EventBid. */
            class EventBid implements IEventBid {

                /**
                 * Constructs a new EventBid.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.auction.v1beta1.IEventBid);

                /** EventBid bidder. */
                public bidder: string;

                /** EventBid amount. */
                public amount: string;

                /** EventBid round. */
                public round: number;

                /**
                 * Encodes the specified EventBid message. Does not implicitly {@link injective.auction.v1beta1.EventBid.verify|verify} messages.
                 * @param message EventBid message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.auction.v1beta1.IEventBid, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified EventBid message, length delimited. Does not implicitly {@link injective.auction.v1beta1.EventBid.verify|verify} messages.
                 * @param message EventBid message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.auction.v1beta1.IEventBid, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an EventBid message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns EventBid
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.auction.v1beta1.EventBid;

                /**
                 * Decodes an EventBid message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns EventBid
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.auction.v1beta1.EventBid;

                /**
                 * Verifies an EventBid message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an EventBid message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns EventBid
                 */
                public static fromObject(object: { [k: string]: any }): injective.auction.v1beta1.EventBid;

                /**
                 * Creates a plain object from an EventBid message. Also converts values to other types if specified.
                 * @param message EventBid
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.auction.v1beta1.EventBid, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this EventBid to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an EventAuctionResult. */
            interface IEventAuctionResult {

                /** EventAuctionResult winner */
                winner?: (string|null);

                /** EventAuctionResult amount */
                amount?: (string|null);

                /** EventAuctionResult round */
                round?: (number|null);
            }

            /** Represents an EventAuctionResult. */
            class EventAuctionResult implements IEventAuctionResult {

                /**
                 * Constructs a new EventAuctionResult.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.auction.v1beta1.IEventAuctionResult);

                /** EventAuctionResult winner. */
                public winner: string;

                /** EventAuctionResult amount. */
                public amount: string;

                /** EventAuctionResult round. */
                public round: number;

                /**
                 * Encodes the specified EventAuctionResult message. Does not implicitly {@link injective.auction.v1beta1.EventAuctionResult.verify|verify} messages.
                 * @param message EventAuctionResult message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.auction.v1beta1.IEventAuctionResult, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified EventAuctionResult message, length delimited. Does not implicitly {@link injective.auction.v1beta1.EventAuctionResult.verify|verify} messages.
                 * @param message EventAuctionResult message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.auction.v1beta1.IEventAuctionResult, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an EventAuctionResult message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns EventAuctionResult
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.auction.v1beta1.EventAuctionResult;

                /**
                 * Decodes an EventAuctionResult message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns EventAuctionResult
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.auction.v1beta1.EventAuctionResult;

                /**
                 * Verifies an EventAuctionResult message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an EventAuctionResult message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns EventAuctionResult
                 */
                public static fromObject(object: { [k: string]: any }): injective.auction.v1beta1.EventAuctionResult;

                /**
                 * Creates a plain object from an EventAuctionResult message. Also converts values to other types if specified.
                 * @param message EventAuctionResult
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.auction.v1beta1.EventAuctionResult, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this EventAuctionResult to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an EventAuctionStart. */
            interface IEventAuctionStart {

                /** EventAuctionStart round */
                round?: (number|null);

                /** EventAuctionStart ending_timestamp */
                ending_timestamp?: (number|null);

                /** EventAuctionStart new_basket */
                new_basket?: (cosmos.base.v1beta1.ICoin[]|null);
            }

            /** Represents an EventAuctionStart. */
            class EventAuctionStart implements IEventAuctionStart {

                /**
                 * Constructs a new EventAuctionStart.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.auction.v1beta1.IEventAuctionStart);

                /** EventAuctionStart round. */
                public round: number;

                /** EventAuctionStart ending_timestamp. */
                public ending_timestamp: number;

                /** EventAuctionStart new_basket. */
                public new_basket: cosmos.base.v1beta1.ICoin[];

                /**
                 * Encodes the specified EventAuctionStart message. Does not implicitly {@link injective.auction.v1beta1.EventAuctionStart.verify|verify} messages.
                 * @param message EventAuctionStart message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.auction.v1beta1.IEventAuctionStart, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified EventAuctionStart message, length delimited. Does not implicitly {@link injective.auction.v1beta1.EventAuctionStart.verify|verify} messages.
                 * @param message EventAuctionStart message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.auction.v1beta1.IEventAuctionStart, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an EventAuctionStart message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns EventAuctionStart
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.auction.v1beta1.EventAuctionStart;

                /**
                 * Decodes an EventAuctionStart message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns EventAuctionStart
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.auction.v1beta1.EventAuctionStart;

                /**
                 * Verifies an EventAuctionStart message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an EventAuctionStart message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns EventAuctionStart
                 */
                public static fromObject(object: { [k: string]: any }): injective.auction.v1beta1.EventAuctionStart;

                /**
                 * Creates a plain object from an EventAuctionStart message. Also converts values to other types if specified.
                 * @param message EventAuctionStart
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.auction.v1beta1.EventAuctionStart, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this EventAuctionStart to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Represents a Query */
            class Query extends $protobuf.rpc.Service {

                /**
                 * Constructs a new Query service.
                 * @param rpcImpl RPC implementation
                 * @param [requestDelimited=false] Whether requests are length-delimited
                 * @param [responseDelimited=false] Whether responses are length-delimited
                 */
                constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

                /**
                 * Calls AuctionParams.
                 * @param request QueryAuctionParamsRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryAuctionParamsResponse
                 */
                public auctionParams(request: injective.auction.v1beta1.IQueryAuctionParamsRequest, callback: injective.auction.v1beta1.Query.AuctionParamsCallback): void;

                /**
                 * Calls AuctionParams.
                 * @param request QueryAuctionParamsRequest message or plain object
                 * @returns Promise
                 */
                public auctionParams(request: injective.auction.v1beta1.IQueryAuctionParamsRequest): Promise<injective.auction.v1beta1.QueryAuctionParamsResponse>;

                /**
                 * Calls CurrentAuctionBasket.
                 * @param request QueryCurrentAuctionBasketRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryCurrentAuctionBasketResponse
                 */
                public currentAuctionBasket(request: injective.auction.v1beta1.IQueryCurrentAuctionBasketRequest, callback: injective.auction.v1beta1.Query.CurrentAuctionBasketCallback): void;

                /**
                 * Calls CurrentAuctionBasket.
                 * @param request QueryCurrentAuctionBasketRequest message or plain object
                 * @returns Promise
                 */
                public currentAuctionBasket(request: injective.auction.v1beta1.IQueryCurrentAuctionBasketRequest): Promise<injective.auction.v1beta1.QueryCurrentAuctionBasketResponse>;

                /**
                 * Calls AuctionModuleState.
                 * @param request QueryModuleStateRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryModuleStateResponse
                 */
                public auctionModuleState(request: injective.auction.v1beta1.IQueryModuleStateRequest, callback: injective.auction.v1beta1.Query.AuctionModuleStateCallback): void;

                /**
                 * Calls AuctionModuleState.
                 * @param request QueryModuleStateRequest message or plain object
                 * @returns Promise
                 */
                public auctionModuleState(request: injective.auction.v1beta1.IQueryModuleStateRequest): Promise<injective.auction.v1beta1.QueryModuleStateResponse>;
            }

            namespace Query {

                /**
                 * Callback as used by {@link injective.auction.v1beta1.Query#auctionParams}.
                 * @param error Error, if any
                 * @param [response] QueryAuctionParamsResponse
                 */
                type AuctionParamsCallback = (error: (Error|null), response?: injective.auction.v1beta1.QueryAuctionParamsResponse) => void;

                /**
                 * Callback as used by {@link injective.auction.v1beta1.Query#currentAuctionBasket}.
                 * @param error Error, if any
                 * @param [response] QueryCurrentAuctionBasketResponse
                 */
                type CurrentAuctionBasketCallback = (error: (Error|null), response?: injective.auction.v1beta1.QueryCurrentAuctionBasketResponse) => void;

                /**
                 * Callback as used by {@link injective.auction.v1beta1.Query#auctionModuleState}.
                 * @param error Error, if any
                 * @param [response] QueryModuleStateResponse
                 */
                type AuctionModuleStateCallback = (error: (Error|null), response?: injective.auction.v1beta1.QueryModuleStateResponse) => void;
            }

            /** Properties of a QueryAuctionParamsRequest. */
            interface IQueryAuctionParamsRequest {
            }

            /** Represents a QueryAuctionParamsRequest. */
            class QueryAuctionParamsRequest implements IQueryAuctionParamsRequest {

                /**
                 * Constructs a new QueryAuctionParamsRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.auction.v1beta1.IQueryAuctionParamsRequest);

                /**
                 * Encodes the specified QueryAuctionParamsRequest message. Does not implicitly {@link injective.auction.v1beta1.QueryAuctionParamsRequest.verify|verify} messages.
                 * @param message QueryAuctionParamsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.auction.v1beta1.IQueryAuctionParamsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryAuctionParamsRequest message, length delimited. Does not implicitly {@link injective.auction.v1beta1.QueryAuctionParamsRequest.verify|verify} messages.
                 * @param message QueryAuctionParamsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.auction.v1beta1.IQueryAuctionParamsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryAuctionParamsRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryAuctionParamsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.auction.v1beta1.QueryAuctionParamsRequest;

                /**
                 * Decodes a QueryAuctionParamsRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryAuctionParamsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.auction.v1beta1.QueryAuctionParamsRequest;

                /**
                 * Verifies a QueryAuctionParamsRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryAuctionParamsRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryAuctionParamsRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.auction.v1beta1.QueryAuctionParamsRequest;

                /**
                 * Creates a plain object from a QueryAuctionParamsRequest message. Also converts values to other types if specified.
                 * @param message QueryAuctionParamsRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.auction.v1beta1.QueryAuctionParamsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryAuctionParamsRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryAuctionParamsResponse. */
            interface IQueryAuctionParamsResponse {

                /** QueryAuctionParamsResponse params */
                params?: (injective.auction.v1beta1.IParams|null);
            }

            /** Represents a QueryAuctionParamsResponse. */
            class QueryAuctionParamsResponse implements IQueryAuctionParamsResponse {

                /**
                 * Constructs a new QueryAuctionParamsResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.auction.v1beta1.IQueryAuctionParamsResponse);

                /** QueryAuctionParamsResponse params. */
                public params?: (injective.auction.v1beta1.IParams|null);

                /**
                 * Encodes the specified QueryAuctionParamsResponse message. Does not implicitly {@link injective.auction.v1beta1.QueryAuctionParamsResponse.verify|verify} messages.
                 * @param message QueryAuctionParamsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.auction.v1beta1.IQueryAuctionParamsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryAuctionParamsResponse message, length delimited. Does not implicitly {@link injective.auction.v1beta1.QueryAuctionParamsResponse.verify|verify} messages.
                 * @param message QueryAuctionParamsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.auction.v1beta1.IQueryAuctionParamsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryAuctionParamsResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryAuctionParamsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.auction.v1beta1.QueryAuctionParamsResponse;

                /**
                 * Decodes a QueryAuctionParamsResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryAuctionParamsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.auction.v1beta1.QueryAuctionParamsResponse;

                /**
                 * Verifies a QueryAuctionParamsResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryAuctionParamsResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryAuctionParamsResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.auction.v1beta1.QueryAuctionParamsResponse;

                /**
                 * Creates a plain object from a QueryAuctionParamsResponse message. Also converts values to other types if specified.
                 * @param message QueryAuctionParamsResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.auction.v1beta1.QueryAuctionParamsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryAuctionParamsResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryCurrentAuctionBasketRequest. */
            interface IQueryCurrentAuctionBasketRequest {
            }

            /** Represents a QueryCurrentAuctionBasketRequest. */
            class QueryCurrentAuctionBasketRequest implements IQueryCurrentAuctionBasketRequest {

                /**
                 * Constructs a new QueryCurrentAuctionBasketRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.auction.v1beta1.IQueryCurrentAuctionBasketRequest);

                /**
                 * Encodes the specified QueryCurrentAuctionBasketRequest message. Does not implicitly {@link injective.auction.v1beta1.QueryCurrentAuctionBasketRequest.verify|verify} messages.
                 * @param message QueryCurrentAuctionBasketRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.auction.v1beta1.IQueryCurrentAuctionBasketRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryCurrentAuctionBasketRequest message, length delimited. Does not implicitly {@link injective.auction.v1beta1.QueryCurrentAuctionBasketRequest.verify|verify} messages.
                 * @param message QueryCurrentAuctionBasketRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.auction.v1beta1.IQueryCurrentAuctionBasketRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryCurrentAuctionBasketRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryCurrentAuctionBasketRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.auction.v1beta1.QueryCurrentAuctionBasketRequest;

                /**
                 * Decodes a QueryCurrentAuctionBasketRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryCurrentAuctionBasketRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.auction.v1beta1.QueryCurrentAuctionBasketRequest;

                /**
                 * Verifies a QueryCurrentAuctionBasketRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryCurrentAuctionBasketRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryCurrentAuctionBasketRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.auction.v1beta1.QueryCurrentAuctionBasketRequest;

                /**
                 * Creates a plain object from a QueryCurrentAuctionBasketRequest message. Also converts values to other types if specified.
                 * @param message QueryCurrentAuctionBasketRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.auction.v1beta1.QueryCurrentAuctionBasketRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryCurrentAuctionBasketRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryCurrentAuctionBasketResponse. */
            interface IQueryCurrentAuctionBasketResponse {

                /** QueryCurrentAuctionBasketResponse amount */
                amount?: (cosmos.base.v1beta1.ICoin[]|null);

                /** QueryCurrentAuctionBasketResponse auctionRound */
                auctionRound?: (number|null);

                /** QueryCurrentAuctionBasketResponse auctionClosingTime */
                auctionClosingTime?: (number|null);

                /** QueryCurrentAuctionBasketResponse highestBidder */
                highestBidder?: (string|null);

                /** QueryCurrentAuctionBasketResponse highestBidAmount */
                highestBidAmount?: (string|null);
            }

            /** Represents a QueryCurrentAuctionBasketResponse. */
            class QueryCurrentAuctionBasketResponse implements IQueryCurrentAuctionBasketResponse {

                /**
                 * Constructs a new QueryCurrentAuctionBasketResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.auction.v1beta1.IQueryCurrentAuctionBasketResponse);

                /** QueryCurrentAuctionBasketResponse amount. */
                public amount: cosmos.base.v1beta1.ICoin[];

                /** QueryCurrentAuctionBasketResponse auctionRound. */
                public auctionRound: number;

                /** QueryCurrentAuctionBasketResponse auctionClosingTime. */
                public auctionClosingTime: number;

                /** QueryCurrentAuctionBasketResponse highestBidder. */
                public highestBidder: string;

                /** QueryCurrentAuctionBasketResponse highestBidAmount. */
                public highestBidAmount: string;

                /**
                 * Encodes the specified QueryCurrentAuctionBasketResponse message. Does not implicitly {@link injective.auction.v1beta1.QueryCurrentAuctionBasketResponse.verify|verify} messages.
                 * @param message QueryCurrentAuctionBasketResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.auction.v1beta1.IQueryCurrentAuctionBasketResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryCurrentAuctionBasketResponse message, length delimited. Does not implicitly {@link injective.auction.v1beta1.QueryCurrentAuctionBasketResponse.verify|verify} messages.
                 * @param message QueryCurrentAuctionBasketResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.auction.v1beta1.IQueryCurrentAuctionBasketResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryCurrentAuctionBasketResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryCurrentAuctionBasketResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.auction.v1beta1.QueryCurrentAuctionBasketResponse;

                /**
                 * Decodes a QueryCurrentAuctionBasketResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryCurrentAuctionBasketResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.auction.v1beta1.QueryCurrentAuctionBasketResponse;

                /**
                 * Verifies a QueryCurrentAuctionBasketResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryCurrentAuctionBasketResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryCurrentAuctionBasketResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.auction.v1beta1.QueryCurrentAuctionBasketResponse;

                /**
                 * Creates a plain object from a QueryCurrentAuctionBasketResponse message. Also converts values to other types if specified.
                 * @param message QueryCurrentAuctionBasketResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.auction.v1beta1.QueryCurrentAuctionBasketResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryCurrentAuctionBasketResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryModuleStateRequest. */
            interface IQueryModuleStateRequest {
            }

            /** Represents a QueryModuleStateRequest. */
            class QueryModuleStateRequest implements IQueryModuleStateRequest {

                /**
                 * Constructs a new QueryModuleStateRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.auction.v1beta1.IQueryModuleStateRequest);

                /**
                 * Encodes the specified QueryModuleStateRequest message. Does not implicitly {@link injective.auction.v1beta1.QueryModuleStateRequest.verify|verify} messages.
                 * @param message QueryModuleStateRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.auction.v1beta1.IQueryModuleStateRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryModuleStateRequest message, length delimited. Does not implicitly {@link injective.auction.v1beta1.QueryModuleStateRequest.verify|verify} messages.
                 * @param message QueryModuleStateRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.auction.v1beta1.IQueryModuleStateRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryModuleStateRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryModuleStateRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.auction.v1beta1.QueryModuleStateRequest;

                /**
                 * Decodes a QueryModuleStateRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryModuleStateRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.auction.v1beta1.QueryModuleStateRequest;

                /**
                 * Verifies a QueryModuleStateRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryModuleStateRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryModuleStateRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.auction.v1beta1.QueryModuleStateRequest;

                /**
                 * Creates a plain object from a QueryModuleStateRequest message. Also converts values to other types if specified.
                 * @param message QueryModuleStateRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.auction.v1beta1.QueryModuleStateRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryModuleStateRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryModuleStateResponse. */
            interface IQueryModuleStateResponse {

                /** QueryModuleStateResponse state */
                state?: (injective.auction.v1beta1.IGenesisState|null);
            }

            /** Represents a QueryModuleStateResponse. */
            class QueryModuleStateResponse implements IQueryModuleStateResponse {

                /**
                 * Constructs a new QueryModuleStateResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.auction.v1beta1.IQueryModuleStateResponse);

                /** QueryModuleStateResponse state. */
                public state?: (injective.auction.v1beta1.IGenesisState|null);

                /**
                 * Encodes the specified QueryModuleStateResponse message. Does not implicitly {@link injective.auction.v1beta1.QueryModuleStateResponse.verify|verify} messages.
                 * @param message QueryModuleStateResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.auction.v1beta1.IQueryModuleStateResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryModuleStateResponse message, length delimited. Does not implicitly {@link injective.auction.v1beta1.QueryModuleStateResponse.verify|verify} messages.
                 * @param message QueryModuleStateResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.auction.v1beta1.IQueryModuleStateResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryModuleStateResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryModuleStateResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.auction.v1beta1.QueryModuleStateResponse;

                /**
                 * Decodes a QueryModuleStateResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryModuleStateResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.auction.v1beta1.QueryModuleStateResponse;

                /**
                 * Verifies a QueryModuleStateResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryModuleStateResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryModuleStateResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.auction.v1beta1.QueryModuleStateResponse;

                /**
                 * Creates a plain object from a QueryModuleStateResponse message. Also converts values to other types if specified.
                 * @param message QueryModuleStateResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.auction.v1beta1.QueryModuleStateResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryModuleStateResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a GenesisState. */
            interface IGenesisState {

                /** GenesisState params */
                params?: (injective.auction.v1beta1.IParams|null);

                /** GenesisState auction_round */
                auction_round?: (number|null);

                /** GenesisState highest_bid */
                highest_bid?: (injective.auction.v1beta1.IBid|null);

                /** GenesisState auction_ending_timestamp */
                auction_ending_timestamp?: (number|null);
            }

            /** Represents a GenesisState. */
            class GenesisState implements IGenesisState {

                /**
                 * Constructs a new GenesisState.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.auction.v1beta1.IGenesisState);

                /** GenesisState params. */
                public params?: (injective.auction.v1beta1.IParams|null);

                /** GenesisState auction_round. */
                public auction_round: number;

                /** GenesisState highest_bid. */
                public highest_bid?: (injective.auction.v1beta1.IBid|null);

                /** GenesisState auction_ending_timestamp. */
                public auction_ending_timestamp: number;

                /**
                 * Encodes the specified GenesisState message. Does not implicitly {@link injective.auction.v1beta1.GenesisState.verify|verify} messages.
                 * @param message GenesisState message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.auction.v1beta1.IGenesisState, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified GenesisState message, length delimited. Does not implicitly {@link injective.auction.v1beta1.GenesisState.verify|verify} messages.
                 * @param message GenesisState message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.auction.v1beta1.IGenesisState, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a GenesisState message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns GenesisState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.auction.v1beta1.GenesisState;

                /**
                 * Decodes a GenesisState message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns GenesisState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.auction.v1beta1.GenesisState;

                /**
                 * Verifies a GenesisState message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a GenesisState message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns GenesisState
                 */
                public static fromObject(object: { [k: string]: any }): injective.auction.v1beta1.GenesisState;

                /**
                 * Creates a plain object from a GenesisState message. Also converts values to other types if specified.
                 * @param message GenesisState
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.auction.v1beta1.GenesisState, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this GenesisState to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }
    }

    /** Namespace crypto. */
    namespace crypto {

        /** Namespace v1beta1. */
        namespace v1beta1 {

            /** Namespace ethsecp256k1. */
            namespace ethsecp256k1 {

                /** Properties of a PubKey. */
                interface IPubKey {

                    /** PubKey key */
                    key?: (Uint8Array|null);
                }

                /** Represents a PubKey. */
                class PubKey implements IPubKey {

                    /**
                     * Constructs a new PubKey.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: injective.crypto.v1beta1.ethsecp256k1.IPubKey);

                    /** PubKey key. */
                    public key: Uint8Array;

                    /**
                     * Encodes the specified PubKey message. Does not implicitly {@link injective.crypto.v1beta1.ethsecp256k1.PubKey.verify|verify} messages.
                     * @param message PubKey message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: injective.crypto.v1beta1.ethsecp256k1.IPubKey, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified PubKey message, length delimited. Does not implicitly {@link injective.crypto.v1beta1.ethsecp256k1.PubKey.verify|verify} messages.
                     * @param message PubKey message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: injective.crypto.v1beta1.ethsecp256k1.IPubKey, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a PubKey message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns PubKey
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.crypto.v1beta1.ethsecp256k1.PubKey;

                    /**
                     * Decodes a PubKey message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns PubKey
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.crypto.v1beta1.ethsecp256k1.PubKey;

                    /**
                     * Verifies a PubKey message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a PubKey message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns PubKey
                     */
                    public static fromObject(object: { [k: string]: any }): injective.crypto.v1beta1.ethsecp256k1.PubKey;

                    /**
                     * Creates a plain object from a PubKey message. Also converts values to other types if specified.
                     * @param message PubKey
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: injective.crypto.v1beta1.ethsecp256k1.PubKey, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this PubKey to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a PrivKey. */
                interface IPrivKey {

                    /** PrivKey key */
                    key?: (Uint8Array|null);
                }

                /** Represents a PrivKey. */
                class PrivKey implements IPrivKey {

                    /**
                     * Constructs a new PrivKey.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: injective.crypto.v1beta1.ethsecp256k1.IPrivKey);

                    /** PrivKey key. */
                    public key: Uint8Array;

                    /**
                     * Encodes the specified PrivKey message. Does not implicitly {@link injective.crypto.v1beta1.ethsecp256k1.PrivKey.verify|verify} messages.
                     * @param message PrivKey message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: injective.crypto.v1beta1.ethsecp256k1.IPrivKey, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified PrivKey message, length delimited. Does not implicitly {@link injective.crypto.v1beta1.ethsecp256k1.PrivKey.verify|verify} messages.
                     * @param message PrivKey message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: injective.crypto.v1beta1.ethsecp256k1.IPrivKey, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a PrivKey message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns PrivKey
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.crypto.v1beta1.ethsecp256k1.PrivKey;

                    /**
                     * Decodes a PrivKey message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns PrivKey
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.crypto.v1beta1.ethsecp256k1.PrivKey;

                    /**
                     * Verifies a PrivKey message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a PrivKey message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns PrivKey
                     */
                    public static fromObject(object: { [k: string]: any }): injective.crypto.v1beta1.ethsecp256k1.PrivKey;

                    /**
                     * Creates a plain object from a PrivKey message. Also converts values to other types if specified.
                     * @param message PrivKey
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: injective.crypto.v1beta1.ethsecp256k1.PrivKey, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this PrivKey to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }
            }
        }
    }

    /** Namespace exchange. */
    namespace exchange {

        /** Namespace v1beta1. */
        namespace v1beta1 {

            /** Represents a Msg */
            class Msg extends $protobuf.rpc.Service {

                /**
                 * Constructs a new Msg service.
                 * @param rpcImpl RPC implementation
                 * @param [requestDelimited=false] Whether requests are length-delimited
                 * @param [responseDelimited=false] Whether responses are length-delimited
                 */
                constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

                /**
                 * Calls Deposit.
                 * @param request MsgDeposit message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgDepositResponse
                 */
                public deposit(request: injective.exchange.v1beta1.IMsgDeposit, callback: injective.exchange.v1beta1.Msg.DepositCallback): void;

                /**
                 * Calls Deposit.
                 * @param request MsgDeposit message or plain object
                 * @returns Promise
                 */
                public deposit(request: injective.exchange.v1beta1.IMsgDeposit): Promise<injective.exchange.v1beta1.MsgDepositResponse>;

                /**
                 * Calls Withdraw.
                 * @param request MsgWithdraw message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgWithdrawResponse
                 */
                public withdraw(request: injective.exchange.v1beta1.IMsgWithdraw, callback: injective.exchange.v1beta1.Msg.WithdrawCallback): void;

                /**
                 * Calls Withdraw.
                 * @param request MsgWithdraw message or plain object
                 * @returns Promise
                 */
                public withdraw(request: injective.exchange.v1beta1.IMsgWithdraw): Promise<injective.exchange.v1beta1.MsgWithdrawResponse>;

                /**
                 * Calls InstantSpotMarketLaunch.
                 * @param request MsgInstantSpotMarketLaunch message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgInstantSpotMarketLaunchResponse
                 */
                public instantSpotMarketLaunch(request: injective.exchange.v1beta1.IMsgInstantSpotMarketLaunch, callback: injective.exchange.v1beta1.Msg.InstantSpotMarketLaunchCallback): void;

                /**
                 * Calls InstantSpotMarketLaunch.
                 * @param request MsgInstantSpotMarketLaunch message or plain object
                 * @returns Promise
                 */
                public instantSpotMarketLaunch(request: injective.exchange.v1beta1.IMsgInstantSpotMarketLaunch): Promise<injective.exchange.v1beta1.MsgInstantSpotMarketLaunchResponse>;

                /**
                 * Calls InstantPerpetualMarketLaunch.
                 * @param request MsgInstantPerpetualMarketLaunch message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgInstantPerpetualMarketLaunchResponse
                 */
                public instantPerpetualMarketLaunch(request: injective.exchange.v1beta1.IMsgInstantPerpetualMarketLaunch, callback: injective.exchange.v1beta1.Msg.InstantPerpetualMarketLaunchCallback): void;

                /**
                 * Calls InstantPerpetualMarketLaunch.
                 * @param request MsgInstantPerpetualMarketLaunch message or plain object
                 * @returns Promise
                 */
                public instantPerpetualMarketLaunch(request: injective.exchange.v1beta1.IMsgInstantPerpetualMarketLaunch): Promise<injective.exchange.v1beta1.MsgInstantPerpetualMarketLaunchResponse>;

                /**
                 * Calls InstantExpiryFuturesMarketLaunch.
                 * @param request MsgInstantExpiryFuturesMarketLaunch message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgInstantExpiryFuturesMarketLaunchResponse
                 */
                public instantExpiryFuturesMarketLaunch(request: injective.exchange.v1beta1.IMsgInstantExpiryFuturesMarketLaunch, callback: injective.exchange.v1beta1.Msg.InstantExpiryFuturesMarketLaunchCallback): void;

                /**
                 * Calls InstantExpiryFuturesMarketLaunch.
                 * @param request MsgInstantExpiryFuturesMarketLaunch message or plain object
                 * @returns Promise
                 */
                public instantExpiryFuturesMarketLaunch(request: injective.exchange.v1beta1.IMsgInstantExpiryFuturesMarketLaunch): Promise<injective.exchange.v1beta1.MsgInstantExpiryFuturesMarketLaunchResponse>;

                /**
                 * Calls CreateSpotLimitOrder.
                 * @param request MsgCreateSpotLimitOrder message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgCreateSpotLimitOrderResponse
                 */
                public createSpotLimitOrder(request: injective.exchange.v1beta1.IMsgCreateSpotLimitOrder, callback: injective.exchange.v1beta1.Msg.CreateSpotLimitOrderCallback): void;

                /**
                 * Calls CreateSpotLimitOrder.
                 * @param request MsgCreateSpotLimitOrder message or plain object
                 * @returns Promise
                 */
                public createSpotLimitOrder(request: injective.exchange.v1beta1.IMsgCreateSpotLimitOrder): Promise<injective.exchange.v1beta1.MsgCreateSpotLimitOrderResponse>;

                /**
                 * Calls BatchCreateSpotLimitOrders.
                 * @param request MsgBatchCreateSpotLimitOrders message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgBatchCreateSpotLimitOrdersResponse
                 */
                public batchCreateSpotLimitOrders(request: injective.exchange.v1beta1.IMsgBatchCreateSpotLimitOrders, callback: injective.exchange.v1beta1.Msg.BatchCreateSpotLimitOrdersCallback): void;

                /**
                 * Calls BatchCreateSpotLimitOrders.
                 * @param request MsgBatchCreateSpotLimitOrders message or plain object
                 * @returns Promise
                 */
                public batchCreateSpotLimitOrders(request: injective.exchange.v1beta1.IMsgBatchCreateSpotLimitOrders): Promise<injective.exchange.v1beta1.MsgBatchCreateSpotLimitOrdersResponse>;

                /**
                 * Calls CreateSpotMarketOrder.
                 * @param request MsgCreateSpotMarketOrder message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgCreateSpotMarketOrderResponse
                 */
                public createSpotMarketOrder(request: injective.exchange.v1beta1.IMsgCreateSpotMarketOrder, callback: injective.exchange.v1beta1.Msg.CreateSpotMarketOrderCallback): void;

                /**
                 * Calls CreateSpotMarketOrder.
                 * @param request MsgCreateSpotMarketOrder message or plain object
                 * @returns Promise
                 */
                public createSpotMarketOrder(request: injective.exchange.v1beta1.IMsgCreateSpotMarketOrder): Promise<injective.exchange.v1beta1.MsgCreateSpotMarketOrderResponse>;

                /**
                 * Calls CancelSpotOrder.
                 * @param request MsgCancelSpotOrder message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgCancelSpotOrderResponse
                 */
                public cancelSpotOrder(request: injective.exchange.v1beta1.IMsgCancelSpotOrder, callback: injective.exchange.v1beta1.Msg.CancelSpotOrderCallback): void;

                /**
                 * Calls CancelSpotOrder.
                 * @param request MsgCancelSpotOrder message or plain object
                 * @returns Promise
                 */
                public cancelSpotOrder(request: injective.exchange.v1beta1.IMsgCancelSpotOrder): Promise<injective.exchange.v1beta1.MsgCancelSpotOrderResponse>;

                /**
                 * Calls BatchCancelSpotOrders.
                 * @param request MsgBatchCancelSpotOrders message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgBatchCancelSpotOrdersResponse
                 */
                public batchCancelSpotOrders(request: injective.exchange.v1beta1.IMsgBatchCancelSpotOrders, callback: injective.exchange.v1beta1.Msg.BatchCancelSpotOrdersCallback): void;

                /**
                 * Calls BatchCancelSpotOrders.
                 * @param request MsgBatchCancelSpotOrders message or plain object
                 * @returns Promise
                 */
                public batchCancelSpotOrders(request: injective.exchange.v1beta1.IMsgBatchCancelSpotOrders): Promise<injective.exchange.v1beta1.MsgBatchCancelSpotOrdersResponse>;

                /**
                 * Calls BatchUpdateOrders.
                 * @param request MsgBatchUpdateOrders message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgBatchUpdateOrdersResponse
                 */
                public batchUpdateOrders(request: injective.exchange.v1beta1.IMsgBatchUpdateOrders, callback: injective.exchange.v1beta1.Msg.BatchUpdateOrdersCallback): void;

                /**
                 * Calls BatchUpdateOrders.
                 * @param request MsgBatchUpdateOrders message or plain object
                 * @returns Promise
                 */
                public batchUpdateOrders(request: injective.exchange.v1beta1.IMsgBatchUpdateOrders): Promise<injective.exchange.v1beta1.MsgBatchUpdateOrdersResponse>;

                /**
                 * Calls PrivilegedExecuteContract.
                 * @param request MsgPrivilegedExecuteContract message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgPrivilegedExecuteContractResponse
                 */
                public privilegedExecuteContract(request: injective.exchange.v1beta1.IMsgPrivilegedExecuteContract, callback: injective.exchange.v1beta1.Msg.PrivilegedExecuteContractCallback): void;

                /**
                 * Calls PrivilegedExecuteContract.
                 * @param request MsgPrivilegedExecuteContract message or plain object
                 * @returns Promise
                 */
                public privilegedExecuteContract(request: injective.exchange.v1beta1.IMsgPrivilegedExecuteContract): Promise<injective.exchange.v1beta1.MsgPrivilegedExecuteContractResponse>;

                /**
                 * Calls CreateDerivativeLimitOrder.
                 * @param request MsgCreateDerivativeLimitOrder message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgCreateDerivativeLimitOrderResponse
                 */
                public createDerivativeLimitOrder(request: injective.exchange.v1beta1.IMsgCreateDerivativeLimitOrder, callback: injective.exchange.v1beta1.Msg.CreateDerivativeLimitOrderCallback): void;

                /**
                 * Calls CreateDerivativeLimitOrder.
                 * @param request MsgCreateDerivativeLimitOrder message or plain object
                 * @returns Promise
                 */
                public createDerivativeLimitOrder(request: injective.exchange.v1beta1.IMsgCreateDerivativeLimitOrder): Promise<injective.exchange.v1beta1.MsgCreateDerivativeLimitOrderResponse>;

                /**
                 * Calls BatchCreateDerivativeLimitOrders.
                 * @param request MsgBatchCreateDerivativeLimitOrders message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgBatchCreateDerivativeLimitOrdersResponse
                 */
                public batchCreateDerivativeLimitOrders(request: injective.exchange.v1beta1.IMsgBatchCreateDerivativeLimitOrders, callback: injective.exchange.v1beta1.Msg.BatchCreateDerivativeLimitOrdersCallback): void;

                /**
                 * Calls BatchCreateDerivativeLimitOrders.
                 * @param request MsgBatchCreateDerivativeLimitOrders message or plain object
                 * @returns Promise
                 */
                public batchCreateDerivativeLimitOrders(request: injective.exchange.v1beta1.IMsgBatchCreateDerivativeLimitOrders): Promise<injective.exchange.v1beta1.MsgBatchCreateDerivativeLimitOrdersResponse>;

                /**
                 * Calls CreateDerivativeMarketOrder.
                 * @param request MsgCreateDerivativeMarketOrder message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgCreateDerivativeMarketOrderResponse
                 */
                public createDerivativeMarketOrder(request: injective.exchange.v1beta1.IMsgCreateDerivativeMarketOrder, callback: injective.exchange.v1beta1.Msg.CreateDerivativeMarketOrderCallback): void;

                /**
                 * Calls CreateDerivativeMarketOrder.
                 * @param request MsgCreateDerivativeMarketOrder message or plain object
                 * @returns Promise
                 */
                public createDerivativeMarketOrder(request: injective.exchange.v1beta1.IMsgCreateDerivativeMarketOrder): Promise<injective.exchange.v1beta1.MsgCreateDerivativeMarketOrderResponse>;

                /**
                 * Calls CancelDerivativeOrder.
                 * @param request MsgCancelDerivativeOrder message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgCancelDerivativeOrderResponse
                 */
                public cancelDerivativeOrder(request: injective.exchange.v1beta1.IMsgCancelDerivativeOrder, callback: injective.exchange.v1beta1.Msg.CancelDerivativeOrderCallback): void;

                /**
                 * Calls CancelDerivativeOrder.
                 * @param request MsgCancelDerivativeOrder message or plain object
                 * @returns Promise
                 */
                public cancelDerivativeOrder(request: injective.exchange.v1beta1.IMsgCancelDerivativeOrder): Promise<injective.exchange.v1beta1.MsgCancelDerivativeOrderResponse>;

                /**
                 * Calls BatchCancelDerivativeOrders.
                 * @param request MsgBatchCancelDerivativeOrders message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgBatchCancelDerivativeOrdersResponse
                 */
                public batchCancelDerivativeOrders(request: injective.exchange.v1beta1.IMsgBatchCancelDerivativeOrders, callback: injective.exchange.v1beta1.Msg.BatchCancelDerivativeOrdersCallback): void;

                /**
                 * Calls BatchCancelDerivativeOrders.
                 * @param request MsgBatchCancelDerivativeOrders message or plain object
                 * @returns Promise
                 */
                public batchCancelDerivativeOrders(request: injective.exchange.v1beta1.IMsgBatchCancelDerivativeOrders): Promise<injective.exchange.v1beta1.MsgBatchCancelDerivativeOrdersResponse>;

                /**
                 * Calls InstantBinaryOptionsMarketLaunch.
                 * @param request MsgInstantBinaryOptionsMarketLaunch message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgInstantBinaryOptionsMarketLaunchResponse
                 */
                public instantBinaryOptionsMarketLaunch(request: injective.exchange.v1beta1.IMsgInstantBinaryOptionsMarketLaunch, callback: injective.exchange.v1beta1.Msg.InstantBinaryOptionsMarketLaunchCallback): void;

                /**
                 * Calls InstantBinaryOptionsMarketLaunch.
                 * @param request MsgInstantBinaryOptionsMarketLaunch message or plain object
                 * @returns Promise
                 */
                public instantBinaryOptionsMarketLaunch(request: injective.exchange.v1beta1.IMsgInstantBinaryOptionsMarketLaunch): Promise<injective.exchange.v1beta1.MsgInstantBinaryOptionsMarketLaunchResponse>;

                /**
                 * Calls CreateBinaryOptionsLimitOrder.
                 * @param request MsgCreateBinaryOptionsLimitOrder message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgCreateBinaryOptionsLimitOrderResponse
                 */
                public createBinaryOptionsLimitOrder(request: injective.exchange.v1beta1.IMsgCreateBinaryOptionsLimitOrder, callback: injective.exchange.v1beta1.Msg.CreateBinaryOptionsLimitOrderCallback): void;

                /**
                 * Calls CreateBinaryOptionsLimitOrder.
                 * @param request MsgCreateBinaryOptionsLimitOrder message or plain object
                 * @returns Promise
                 */
                public createBinaryOptionsLimitOrder(request: injective.exchange.v1beta1.IMsgCreateBinaryOptionsLimitOrder): Promise<injective.exchange.v1beta1.MsgCreateBinaryOptionsLimitOrderResponse>;

                /**
                 * Calls CreateBinaryOptionsMarketOrder.
                 * @param request MsgCreateBinaryOptionsMarketOrder message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgCreateBinaryOptionsMarketOrderResponse
                 */
                public createBinaryOptionsMarketOrder(request: injective.exchange.v1beta1.IMsgCreateBinaryOptionsMarketOrder, callback: injective.exchange.v1beta1.Msg.CreateBinaryOptionsMarketOrderCallback): void;

                /**
                 * Calls CreateBinaryOptionsMarketOrder.
                 * @param request MsgCreateBinaryOptionsMarketOrder message or plain object
                 * @returns Promise
                 */
                public createBinaryOptionsMarketOrder(request: injective.exchange.v1beta1.IMsgCreateBinaryOptionsMarketOrder): Promise<injective.exchange.v1beta1.MsgCreateBinaryOptionsMarketOrderResponse>;

                /**
                 * Calls CancelBinaryOptionsOrder.
                 * @param request MsgCancelBinaryOptionsOrder message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgCancelBinaryOptionsOrderResponse
                 */
                public cancelBinaryOptionsOrder(request: injective.exchange.v1beta1.IMsgCancelBinaryOptionsOrder, callback: injective.exchange.v1beta1.Msg.CancelBinaryOptionsOrderCallback): void;

                /**
                 * Calls CancelBinaryOptionsOrder.
                 * @param request MsgCancelBinaryOptionsOrder message or plain object
                 * @returns Promise
                 */
                public cancelBinaryOptionsOrder(request: injective.exchange.v1beta1.IMsgCancelBinaryOptionsOrder): Promise<injective.exchange.v1beta1.MsgCancelBinaryOptionsOrderResponse>;

                /**
                 * Calls BatchCancelBinaryOptionsOrders.
                 * @param request MsgBatchCancelBinaryOptionsOrders message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgBatchCancelBinaryOptionsOrdersResponse
                 */
                public batchCancelBinaryOptionsOrders(request: injective.exchange.v1beta1.IMsgBatchCancelBinaryOptionsOrders, callback: injective.exchange.v1beta1.Msg.BatchCancelBinaryOptionsOrdersCallback): void;

                /**
                 * Calls BatchCancelBinaryOptionsOrders.
                 * @param request MsgBatchCancelBinaryOptionsOrders message or plain object
                 * @returns Promise
                 */
                public batchCancelBinaryOptionsOrders(request: injective.exchange.v1beta1.IMsgBatchCancelBinaryOptionsOrders): Promise<injective.exchange.v1beta1.MsgBatchCancelBinaryOptionsOrdersResponse>;

                /**
                 * Calls SubaccountTransfer.
                 * @param request MsgSubaccountTransfer message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgSubaccountTransferResponse
                 */
                public subaccountTransfer(request: injective.exchange.v1beta1.IMsgSubaccountTransfer, callback: injective.exchange.v1beta1.Msg.SubaccountTransferCallback): void;

                /**
                 * Calls SubaccountTransfer.
                 * @param request MsgSubaccountTransfer message or plain object
                 * @returns Promise
                 */
                public subaccountTransfer(request: injective.exchange.v1beta1.IMsgSubaccountTransfer): Promise<injective.exchange.v1beta1.MsgSubaccountTransferResponse>;

                /**
                 * Calls ExternalTransfer.
                 * @param request MsgExternalTransfer message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgExternalTransferResponse
                 */
                public externalTransfer(request: injective.exchange.v1beta1.IMsgExternalTransfer, callback: injective.exchange.v1beta1.Msg.ExternalTransferCallback): void;

                /**
                 * Calls ExternalTransfer.
                 * @param request MsgExternalTransfer message or plain object
                 * @returns Promise
                 */
                public externalTransfer(request: injective.exchange.v1beta1.IMsgExternalTransfer): Promise<injective.exchange.v1beta1.MsgExternalTransferResponse>;

                /**
                 * Calls LiquidatePosition.
                 * @param request MsgLiquidatePosition message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgLiquidatePositionResponse
                 */
                public liquidatePosition(request: injective.exchange.v1beta1.IMsgLiquidatePosition, callback: injective.exchange.v1beta1.Msg.LiquidatePositionCallback): void;

                /**
                 * Calls LiquidatePosition.
                 * @param request MsgLiquidatePosition message or plain object
                 * @returns Promise
                 */
                public liquidatePosition(request: injective.exchange.v1beta1.IMsgLiquidatePosition): Promise<injective.exchange.v1beta1.MsgLiquidatePositionResponse>;

                /**
                 * Calls IncreasePositionMargin.
                 * @param request MsgIncreasePositionMargin message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgIncreasePositionMarginResponse
                 */
                public increasePositionMargin(request: injective.exchange.v1beta1.IMsgIncreasePositionMargin, callback: injective.exchange.v1beta1.Msg.IncreasePositionMarginCallback): void;

                /**
                 * Calls IncreasePositionMargin.
                 * @param request MsgIncreasePositionMargin message or plain object
                 * @returns Promise
                 */
                public increasePositionMargin(request: injective.exchange.v1beta1.IMsgIncreasePositionMargin): Promise<injective.exchange.v1beta1.MsgIncreasePositionMarginResponse>;

                /**
                 * Calls RewardsOptOut.
                 * @param request MsgRewardsOptOut message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgRewardsOptOutResponse
                 */
                public rewardsOptOut(request: injective.exchange.v1beta1.IMsgRewardsOptOut, callback: injective.exchange.v1beta1.Msg.RewardsOptOutCallback): void;

                /**
                 * Calls RewardsOptOut.
                 * @param request MsgRewardsOptOut message or plain object
                 * @returns Promise
                 */
                public rewardsOptOut(request: injective.exchange.v1beta1.IMsgRewardsOptOut): Promise<injective.exchange.v1beta1.MsgRewardsOptOutResponse>;

                /**
                 * Calls AdminUpdateBinaryOptionsMarket.
                 * @param request MsgAdminUpdateBinaryOptionsMarket message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgAdminUpdateBinaryOptionsMarketResponse
                 */
                public adminUpdateBinaryOptionsMarket(request: injective.exchange.v1beta1.IMsgAdminUpdateBinaryOptionsMarket, callback: injective.exchange.v1beta1.Msg.AdminUpdateBinaryOptionsMarketCallback): void;

                /**
                 * Calls AdminUpdateBinaryOptionsMarket.
                 * @param request MsgAdminUpdateBinaryOptionsMarket message or plain object
                 * @returns Promise
                 */
                public adminUpdateBinaryOptionsMarket(request: injective.exchange.v1beta1.IMsgAdminUpdateBinaryOptionsMarket): Promise<injective.exchange.v1beta1.MsgAdminUpdateBinaryOptionsMarketResponse>;

                /**
                 * Calls ReclaimLockedFunds.
                 * @param request MsgReclaimLockedFunds message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgReclaimLockedFundsResponse
                 */
                public reclaimLockedFunds(request: injective.exchange.v1beta1.IMsgReclaimLockedFunds, callback: injective.exchange.v1beta1.Msg.ReclaimLockedFundsCallback): void;

                /**
                 * Calls ReclaimLockedFunds.
                 * @param request MsgReclaimLockedFunds message or plain object
                 * @returns Promise
                 */
                public reclaimLockedFunds(request: injective.exchange.v1beta1.IMsgReclaimLockedFunds): Promise<injective.exchange.v1beta1.MsgReclaimLockedFundsResponse>;

                /**
                 * Calls UpdateParams.
                 * @param request MsgUpdateParams message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgUpdateParamsResponse
                 */
                public updateParams(request: injective.exchange.v1beta1.IMsgUpdateParams, callback: injective.exchange.v1beta1.Msg.UpdateParamsCallback): void;

                /**
                 * Calls UpdateParams.
                 * @param request MsgUpdateParams message or plain object
                 * @returns Promise
                 */
                public updateParams(request: injective.exchange.v1beta1.IMsgUpdateParams): Promise<injective.exchange.v1beta1.MsgUpdateParamsResponse>;
            }

            namespace Msg {

                /**
                 * Callback as used by {@link injective.exchange.v1beta1.Msg#deposit}.
                 * @param error Error, if any
                 * @param [response] MsgDepositResponse
                 */
                type DepositCallback = (error: (Error|null), response?: injective.exchange.v1beta1.MsgDepositResponse) => void;

                /**
                 * Callback as used by {@link injective.exchange.v1beta1.Msg#withdraw}.
                 * @param error Error, if any
                 * @param [response] MsgWithdrawResponse
                 */
                type WithdrawCallback = (error: (Error|null), response?: injective.exchange.v1beta1.MsgWithdrawResponse) => void;

                /**
                 * Callback as used by {@link injective.exchange.v1beta1.Msg#instantSpotMarketLaunch}.
                 * @param error Error, if any
                 * @param [response] MsgInstantSpotMarketLaunchResponse
                 */
                type InstantSpotMarketLaunchCallback = (error: (Error|null), response?: injective.exchange.v1beta1.MsgInstantSpotMarketLaunchResponse) => void;

                /**
                 * Callback as used by {@link injective.exchange.v1beta1.Msg#instantPerpetualMarketLaunch}.
                 * @param error Error, if any
                 * @param [response] MsgInstantPerpetualMarketLaunchResponse
                 */
                type InstantPerpetualMarketLaunchCallback = (error: (Error|null), response?: injective.exchange.v1beta1.MsgInstantPerpetualMarketLaunchResponse) => void;

                /**
                 * Callback as used by {@link injective.exchange.v1beta1.Msg#instantExpiryFuturesMarketLaunch}.
                 * @param error Error, if any
                 * @param [response] MsgInstantExpiryFuturesMarketLaunchResponse
                 */
                type InstantExpiryFuturesMarketLaunchCallback = (error: (Error|null), response?: injective.exchange.v1beta1.MsgInstantExpiryFuturesMarketLaunchResponse) => void;

                /**
                 * Callback as used by {@link injective.exchange.v1beta1.Msg#createSpotLimitOrder}.
                 * @param error Error, if any
                 * @param [response] MsgCreateSpotLimitOrderResponse
                 */
                type CreateSpotLimitOrderCallback = (error: (Error|null), response?: injective.exchange.v1beta1.MsgCreateSpotLimitOrderResponse) => void;

                /**
                 * Callback as used by {@link injective.exchange.v1beta1.Msg#batchCreateSpotLimitOrders}.
                 * @param error Error, if any
                 * @param [response] MsgBatchCreateSpotLimitOrdersResponse
                 */
                type BatchCreateSpotLimitOrdersCallback = (error: (Error|null), response?: injective.exchange.v1beta1.MsgBatchCreateSpotLimitOrdersResponse) => void;

                /**
                 * Callback as used by {@link injective.exchange.v1beta1.Msg#createSpotMarketOrder}.
                 * @param error Error, if any
                 * @param [response] MsgCreateSpotMarketOrderResponse
                 */
                type CreateSpotMarketOrderCallback = (error: (Error|null), response?: injective.exchange.v1beta1.MsgCreateSpotMarketOrderResponse) => void;

                /**
                 * Callback as used by {@link injective.exchange.v1beta1.Msg#cancelSpotOrder}.
                 * @param error Error, if any
                 * @param [response] MsgCancelSpotOrderResponse
                 */
                type CancelSpotOrderCallback = (error: (Error|null), response?: injective.exchange.v1beta1.MsgCancelSpotOrderResponse) => void;

                /**
                 * Callback as used by {@link injective.exchange.v1beta1.Msg#batchCancelSpotOrders}.
                 * @param error Error, if any
                 * @param [response] MsgBatchCancelSpotOrdersResponse
                 */
                type BatchCancelSpotOrdersCallback = (error: (Error|null), response?: injective.exchange.v1beta1.MsgBatchCancelSpotOrdersResponse) => void;

                /**
                 * Callback as used by {@link injective.exchange.v1beta1.Msg#batchUpdateOrders}.
                 * @param error Error, if any
                 * @param [response] MsgBatchUpdateOrdersResponse
                 */
                type BatchUpdateOrdersCallback = (error: (Error|null), response?: injective.exchange.v1beta1.MsgBatchUpdateOrdersResponse) => void;

                /**
                 * Callback as used by {@link injective.exchange.v1beta1.Msg#privilegedExecuteContract}.
                 * @param error Error, if any
                 * @param [response] MsgPrivilegedExecuteContractResponse
                 */
                type PrivilegedExecuteContractCallback = (error: (Error|null), response?: injective.exchange.v1beta1.MsgPrivilegedExecuteContractResponse) => void;

                /**
                 * Callback as used by {@link injective.exchange.v1beta1.Msg#createDerivativeLimitOrder}.
                 * @param error Error, if any
                 * @param [response] MsgCreateDerivativeLimitOrderResponse
                 */
                type CreateDerivativeLimitOrderCallback = (error: (Error|null), response?: injective.exchange.v1beta1.MsgCreateDerivativeLimitOrderResponse) => void;

                /**
                 * Callback as used by {@link injective.exchange.v1beta1.Msg#batchCreateDerivativeLimitOrders}.
                 * @param error Error, if any
                 * @param [response] MsgBatchCreateDerivativeLimitOrdersResponse
                 */
                type BatchCreateDerivativeLimitOrdersCallback = (error: (Error|null), response?: injective.exchange.v1beta1.MsgBatchCreateDerivativeLimitOrdersResponse) => void;

                /**
                 * Callback as used by {@link injective.exchange.v1beta1.Msg#createDerivativeMarketOrder}.
                 * @param error Error, if any
                 * @param [response] MsgCreateDerivativeMarketOrderResponse
                 */
                type CreateDerivativeMarketOrderCallback = (error: (Error|null), response?: injective.exchange.v1beta1.MsgCreateDerivativeMarketOrderResponse) => void;

                /**
                 * Callback as used by {@link injective.exchange.v1beta1.Msg#cancelDerivativeOrder}.
                 * @param error Error, if any
                 * @param [response] MsgCancelDerivativeOrderResponse
                 */
                type CancelDerivativeOrderCallback = (error: (Error|null), response?: injective.exchange.v1beta1.MsgCancelDerivativeOrderResponse) => void;

                /**
                 * Callback as used by {@link injective.exchange.v1beta1.Msg#batchCancelDerivativeOrders}.
                 * @param error Error, if any
                 * @param [response] MsgBatchCancelDerivativeOrdersResponse
                 */
                type BatchCancelDerivativeOrdersCallback = (error: (Error|null), response?: injective.exchange.v1beta1.MsgBatchCancelDerivativeOrdersResponse) => void;

                /**
                 * Callback as used by {@link injective.exchange.v1beta1.Msg#instantBinaryOptionsMarketLaunch}.
                 * @param error Error, if any
                 * @param [response] MsgInstantBinaryOptionsMarketLaunchResponse
                 */
                type InstantBinaryOptionsMarketLaunchCallback = (error: (Error|null), response?: injective.exchange.v1beta1.MsgInstantBinaryOptionsMarketLaunchResponse) => void;

                /**
                 * Callback as used by {@link injective.exchange.v1beta1.Msg#createBinaryOptionsLimitOrder}.
                 * @param error Error, if any
                 * @param [response] MsgCreateBinaryOptionsLimitOrderResponse
                 */
                type CreateBinaryOptionsLimitOrderCallback = (error: (Error|null), response?: injective.exchange.v1beta1.MsgCreateBinaryOptionsLimitOrderResponse) => void;

                /**
                 * Callback as used by {@link injective.exchange.v1beta1.Msg#createBinaryOptionsMarketOrder}.
                 * @param error Error, if any
                 * @param [response] MsgCreateBinaryOptionsMarketOrderResponse
                 */
                type CreateBinaryOptionsMarketOrderCallback = (error: (Error|null), response?: injective.exchange.v1beta1.MsgCreateBinaryOptionsMarketOrderResponse) => void;

                /**
                 * Callback as used by {@link injective.exchange.v1beta1.Msg#cancelBinaryOptionsOrder}.
                 * @param error Error, if any
                 * @param [response] MsgCancelBinaryOptionsOrderResponse
                 */
                type CancelBinaryOptionsOrderCallback = (error: (Error|null), response?: injective.exchange.v1beta1.MsgCancelBinaryOptionsOrderResponse) => void;

                /**
                 * Callback as used by {@link injective.exchange.v1beta1.Msg#batchCancelBinaryOptionsOrders}.
                 * @param error Error, if any
                 * @param [response] MsgBatchCancelBinaryOptionsOrdersResponse
                 */
                type BatchCancelBinaryOptionsOrdersCallback = (error: (Error|null), response?: injective.exchange.v1beta1.MsgBatchCancelBinaryOptionsOrdersResponse) => void;

                /**
                 * Callback as used by {@link injective.exchange.v1beta1.Msg#subaccountTransfer}.
                 * @param error Error, if any
                 * @param [response] MsgSubaccountTransferResponse
                 */
                type SubaccountTransferCallback = (error: (Error|null), response?: injective.exchange.v1beta1.MsgSubaccountTransferResponse) => void;

                /**
                 * Callback as used by {@link injective.exchange.v1beta1.Msg#externalTransfer}.
                 * @param error Error, if any
                 * @param [response] MsgExternalTransferResponse
                 */
                type ExternalTransferCallback = (error: (Error|null), response?: injective.exchange.v1beta1.MsgExternalTransferResponse) => void;

                /**
                 * Callback as used by {@link injective.exchange.v1beta1.Msg#liquidatePosition}.
                 * @param error Error, if any
                 * @param [response] MsgLiquidatePositionResponse
                 */
                type LiquidatePositionCallback = (error: (Error|null), response?: injective.exchange.v1beta1.MsgLiquidatePositionResponse) => void;

                /**
                 * Callback as used by {@link injective.exchange.v1beta1.Msg#increasePositionMargin}.
                 * @param error Error, if any
                 * @param [response] MsgIncreasePositionMarginResponse
                 */
                type IncreasePositionMarginCallback = (error: (Error|null), response?: injective.exchange.v1beta1.MsgIncreasePositionMarginResponse) => void;

                /**
                 * Callback as used by {@link injective.exchange.v1beta1.Msg#rewardsOptOut}.
                 * @param error Error, if any
                 * @param [response] MsgRewardsOptOutResponse
                 */
                type RewardsOptOutCallback = (error: (Error|null), response?: injective.exchange.v1beta1.MsgRewardsOptOutResponse) => void;

                /**
                 * Callback as used by {@link injective.exchange.v1beta1.Msg#adminUpdateBinaryOptionsMarket}.
                 * @param error Error, if any
                 * @param [response] MsgAdminUpdateBinaryOptionsMarketResponse
                 */
                type AdminUpdateBinaryOptionsMarketCallback = (error: (Error|null), response?: injective.exchange.v1beta1.MsgAdminUpdateBinaryOptionsMarketResponse) => void;

                /**
                 * Callback as used by {@link injective.exchange.v1beta1.Msg#reclaimLockedFunds}.
                 * @param error Error, if any
                 * @param [response] MsgReclaimLockedFundsResponse
                 */
                type ReclaimLockedFundsCallback = (error: (Error|null), response?: injective.exchange.v1beta1.MsgReclaimLockedFundsResponse) => void;

                /**
                 * Callback as used by {@link injective.exchange.v1beta1.Msg#updateParams}.
                 * @param error Error, if any
                 * @param [response] MsgUpdateParamsResponse
                 */
                type UpdateParamsCallback = (error: (Error|null), response?: injective.exchange.v1beta1.MsgUpdateParamsResponse) => void;
            }

            /** Properties of a MsgUpdateParams. */
            interface IMsgUpdateParams {

                /** MsgUpdateParams authority */
                authority?: (string|null);

                /** MsgUpdateParams params */
                params?: (injective.exchange.v1beta1.IParams|null);
            }

            /** Represents a MsgUpdateParams. */
            class MsgUpdateParams implements IMsgUpdateParams {

                /**
                 * Constructs a new MsgUpdateParams.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IMsgUpdateParams);

                /** MsgUpdateParams authority. */
                public authority: string;

                /** MsgUpdateParams params. */
                public params?: (injective.exchange.v1beta1.IParams|null);

                /**
                 * Encodes the specified MsgUpdateParams message. Does not implicitly {@link injective.exchange.v1beta1.MsgUpdateParams.verify|verify} messages.
                 * @param message MsgUpdateParams message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IMsgUpdateParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgUpdateParams message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.MsgUpdateParams.verify|verify} messages.
                 * @param message MsgUpdateParams message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IMsgUpdateParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgUpdateParams message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgUpdateParams
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.MsgUpdateParams;

                /**
                 * Decodes a MsgUpdateParams message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgUpdateParams
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.MsgUpdateParams;

                /**
                 * Verifies a MsgUpdateParams message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgUpdateParams message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgUpdateParams
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.MsgUpdateParams;

                /**
                 * Creates a plain object from a MsgUpdateParams message. Also converts values to other types if specified.
                 * @param message MsgUpdateParams
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.MsgUpdateParams, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgUpdateParams to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgUpdateParamsResponse. */
            interface IMsgUpdateParamsResponse {
            }

            /** Represents a MsgUpdateParamsResponse. */
            class MsgUpdateParamsResponse implements IMsgUpdateParamsResponse {

                /**
                 * Constructs a new MsgUpdateParamsResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IMsgUpdateParamsResponse);

                /**
                 * Encodes the specified MsgUpdateParamsResponse message. Does not implicitly {@link injective.exchange.v1beta1.MsgUpdateParamsResponse.verify|verify} messages.
                 * @param message MsgUpdateParamsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IMsgUpdateParamsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgUpdateParamsResponse message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.MsgUpdateParamsResponse.verify|verify} messages.
                 * @param message MsgUpdateParamsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IMsgUpdateParamsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgUpdateParamsResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgUpdateParamsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.MsgUpdateParamsResponse;

                /**
                 * Decodes a MsgUpdateParamsResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgUpdateParamsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.MsgUpdateParamsResponse;

                /**
                 * Verifies a MsgUpdateParamsResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgUpdateParamsResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgUpdateParamsResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.MsgUpdateParamsResponse;

                /**
                 * Creates a plain object from a MsgUpdateParamsResponse message. Also converts values to other types if specified.
                 * @param message MsgUpdateParamsResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.MsgUpdateParamsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgUpdateParamsResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgDeposit. */
            interface IMsgDeposit {

                /** MsgDeposit sender */
                sender?: (string|null);

                /** MsgDeposit subaccount_id */
                subaccount_id?: (string|null);

                /** MsgDeposit amount */
                amount?: (cosmos.base.v1beta1.ICoin|null);
            }

            /** Represents a MsgDeposit. */
            class MsgDeposit implements IMsgDeposit {

                /**
                 * Constructs a new MsgDeposit.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IMsgDeposit);

                /** MsgDeposit sender. */
                public sender: string;

                /** MsgDeposit subaccount_id. */
                public subaccount_id: string;

                /** MsgDeposit amount. */
                public amount?: (cosmos.base.v1beta1.ICoin|null);

                /**
                 * Encodes the specified MsgDeposit message. Does not implicitly {@link injective.exchange.v1beta1.MsgDeposit.verify|verify} messages.
                 * @param message MsgDeposit message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IMsgDeposit, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgDeposit message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.MsgDeposit.verify|verify} messages.
                 * @param message MsgDeposit message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IMsgDeposit, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgDeposit message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgDeposit
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.MsgDeposit;

                /**
                 * Decodes a MsgDeposit message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgDeposit
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.MsgDeposit;

                /**
                 * Verifies a MsgDeposit message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgDeposit message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgDeposit
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.MsgDeposit;

                /**
                 * Creates a plain object from a MsgDeposit message. Also converts values to other types if specified.
                 * @param message MsgDeposit
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.MsgDeposit, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgDeposit to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgDepositResponse. */
            interface IMsgDepositResponse {
            }

            /** Represents a MsgDepositResponse. */
            class MsgDepositResponse implements IMsgDepositResponse {

                /**
                 * Constructs a new MsgDepositResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IMsgDepositResponse);

                /**
                 * Encodes the specified MsgDepositResponse message. Does not implicitly {@link injective.exchange.v1beta1.MsgDepositResponse.verify|verify} messages.
                 * @param message MsgDepositResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IMsgDepositResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgDepositResponse message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.MsgDepositResponse.verify|verify} messages.
                 * @param message MsgDepositResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IMsgDepositResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgDepositResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgDepositResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.MsgDepositResponse;

                /**
                 * Decodes a MsgDepositResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgDepositResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.MsgDepositResponse;

                /**
                 * Verifies a MsgDepositResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgDepositResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgDepositResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.MsgDepositResponse;

                /**
                 * Creates a plain object from a MsgDepositResponse message. Also converts values to other types if specified.
                 * @param message MsgDepositResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.MsgDepositResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgDepositResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgWithdraw. */
            interface IMsgWithdraw {

                /** MsgWithdraw sender */
                sender?: (string|null);

                /** MsgWithdraw subaccount_id */
                subaccount_id?: (string|null);

                /** MsgWithdraw amount */
                amount?: (cosmos.base.v1beta1.ICoin|null);
            }

            /** Represents a MsgWithdraw. */
            class MsgWithdraw implements IMsgWithdraw {

                /**
                 * Constructs a new MsgWithdraw.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IMsgWithdraw);

                /** MsgWithdraw sender. */
                public sender: string;

                /** MsgWithdraw subaccount_id. */
                public subaccount_id: string;

                /** MsgWithdraw amount. */
                public amount?: (cosmos.base.v1beta1.ICoin|null);

                /**
                 * Encodes the specified MsgWithdraw message. Does not implicitly {@link injective.exchange.v1beta1.MsgWithdraw.verify|verify} messages.
                 * @param message MsgWithdraw message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IMsgWithdraw, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgWithdraw message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.MsgWithdraw.verify|verify} messages.
                 * @param message MsgWithdraw message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IMsgWithdraw, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgWithdraw message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgWithdraw
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.MsgWithdraw;

                /**
                 * Decodes a MsgWithdraw message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgWithdraw
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.MsgWithdraw;

                /**
                 * Verifies a MsgWithdraw message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgWithdraw message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgWithdraw
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.MsgWithdraw;

                /**
                 * Creates a plain object from a MsgWithdraw message. Also converts values to other types if specified.
                 * @param message MsgWithdraw
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.MsgWithdraw, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgWithdraw to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgWithdrawResponse. */
            interface IMsgWithdrawResponse {
            }

            /** Represents a MsgWithdrawResponse. */
            class MsgWithdrawResponse implements IMsgWithdrawResponse {

                /**
                 * Constructs a new MsgWithdrawResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IMsgWithdrawResponse);

                /**
                 * Encodes the specified MsgWithdrawResponse message. Does not implicitly {@link injective.exchange.v1beta1.MsgWithdrawResponse.verify|verify} messages.
                 * @param message MsgWithdrawResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IMsgWithdrawResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgWithdrawResponse message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.MsgWithdrawResponse.verify|verify} messages.
                 * @param message MsgWithdrawResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IMsgWithdrawResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgWithdrawResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgWithdrawResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.MsgWithdrawResponse;

                /**
                 * Decodes a MsgWithdrawResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgWithdrawResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.MsgWithdrawResponse;

                /**
                 * Verifies a MsgWithdrawResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgWithdrawResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgWithdrawResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.MsgWithdrawResponse;

                /**
                 * Creates a plain object from a MsgWithdrawResponse message. Also converts values to other types if specified.
                 * @param message MsgWithdrawResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.MsgWithdrawResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgWithdrawResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgCreateSpotLimitOrder. */
            interface IMsgCreateSpotLimitOrder {

                /** MsgCreateSpotLimitOrder sender */
                sender?: (string|null);

                /** MsgCreateSpotLimitOrder order */
                order?: (injective.exchange.v1beta1.ISpotOrder|null);
            }

            /** Represents a MsgCreateSpotLimitOrder. */
            class MsgCreateSpotLimitOrder implements IMsgCreateSpotLimitOrder {

                /**
                 * Constructs a new MsgCreateSpotLimitOrder.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IMsgCreateSpotLimitOrder);

                /** MsgCreateSpotLimitOrder sender. */
                public sender: string;

                /** MsgCreateSpotLimitOrder order. */
                public order?: (injective.exchange.v1beta1.ISpotOrder|null);

                /**
                 * Encodes the specified MsgCreateSpotLimitOrder message. Does not implicitly {@link injective.exchange.v1beta1.MsgCreateSpotLimitOrder.verify|verify} messages.
                 * @param message MsgCreateSpotLimitOrder message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IMsgCreateSpotLimitOrder, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgCreateSpotLimitOrder message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.MsgCreateSpotLimitOrder.verify|verify} messages.
                 * @param message MsgCreateSpotLimitOrder message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IMsgCreateSpotLimitOrder, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgCreateSpotLimitOrder message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgCreateSpotLimitOrder
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.MsgCreateSpotLimitOrder;

                /**
                 * Decodes a MsgCreateSpotLimitOrder message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgCreateSpotLimitOrder
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.MsgCreateSpotLimitOrder;

                /**
                 * Verifies a MsgCreateSpotLimitOrder message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgCreateSpotLimitOrder message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgCreateSpotLimitOrder
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.MsgCreateSpotLimitOrder;

                /**
                 * Creates a plain object from a MsgCreateSpotLimitOrder message. Also converts values to other types if specified.
                 * @param message MsgCreateSpotLimitOrder
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.MsgCreateSpotLimitOrder, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgCreateSpotLimitOrder to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgCreateSpotLimitOrderResponse. */
            interface IMsgCreateSpotLimitOrderResponse {

                /** MsgCreateSpotLimitOrderResponse order_hash */
                order_hash?: (string|null);
            }

            /** Represents a MsgCreateSpotLimitOrderResponse. */
            class MsgCreateSpotLimitOrderResponse implements IMsgCreateSpotLimitOrderResponse {

                /**
                 * Constructs a new MsgCreateSpotLimitOrderResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IMsgCreateSpotLimitOrderResponse);

                /** MsgCreateSpotLimitOrderResponse order_hash. */
                public order_hash: string;

                /**
                 * Encodes the specified MsgCreateSpotLimitOrderResponse message. Does not implicitly {@link injective.exchange.v1beta1.MsgCreateSpotLimitOrderResponse.verify|verify} messages.
                 * @param message MsgCreateSpotLimitOrderResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IMsgCreateSpotLimitOrderResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgCreateSpotLimitOrderResponse message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.MsgCreateSpotLimitOrderResponse.verify|verify} messages.
                 * @param message MsgCreateSpotLimitOrderResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IMsgCreateSpotLimitOrderResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgCreateSpotLimitOrderResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgCreateSpotLimitOrderResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.MsgCreateSpotLimitOrderResponse;

                /**
                 * Decodes a MsgCreateSpotLimitOrderResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgCreateSpotLimitOrderResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.MsgCreateSpotLimitOrderResponse;

                /**
                 * Verifies a MsgCreateSpotLimitOrderResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgCreateSpotLimitOrderResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgCreateSpotLimitOrderResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.MsgCreateSpotLimitOrderResponse;

                /**
                 * Creates a plain object from a MsgCreateSpotLimitOrderResponse message. Also converts values to other types if specified.
                 * @param message MsgCreateSpotLimitOrderResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.MsgCreateSpotLimitOrderResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgCreateSpotLimitOrderResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgBatchCreateSpotLimitOrders. */
            interface IMsgBatchCreateSpotLimitOrders {

                /** MsgBatchCreateSpotLimitOrders sender */
                sender?: (string|null);

                /** MsgBatchCreateSpotLimitOrders orders */
                orders?: (injective.exchange.v1beta1.ISpotOrder[]|null);
            }

            /** Represents a MsgBatchCreateSpotLimitOrders. */
            class MsgBatchCreateSpotLimitOrders implements IMsgBatchCreateSpotLimitOrders {

                /**
                 * Constructs a new MsgBatchCreateSpotLimitOrders.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IMsgBatchCreateSpotLimitOrders);

                /** MsgBatchCreateSpotLimitOrders sender. */
                public sender: string;

                /** MsgBatchCreateSpotLimitOrders orders. */
                public orders: injective.exchange.v1beta1.ISpotOrder[];

                /**
                 * Encodes the specified MsgBatchCreateSpotLimitOrders message. Does not implicitly {@link injective.exchange.v1beta1.MsgBatchCreateSpotLimitOrders.verify|verify} messages.
                 * @param message MsgBatchCreateSpotLimitOrders message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IMsgBatchCreateSpotLimitOrders, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgBatchCreateSpotLimitOrders message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.MsgBatchCreateSpotLimitOrders.verify|verify} messages.
                 * @param message MsgBatchCreateSpotLimitOrders message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IMsgBatchCreateSpotLimitOrders, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgBatchCreateSpotLimitOrders message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgBatchCreateSpotLimitOrders
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.MsgBatchCreateSpotLimitOrders;

                /**
                 * Decodes a MsgBatchCreateSpotLimitOrders message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgBatchCreateSpotLimitOrders
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.MsgBatchCreateSpotLimitOrders;

                /**
                 * Verifies a MsgBatchCreateSpotLimitOrders message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgBatchCreateSpotLimitOrders message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgBatchCreateSpotLimitOrders
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.MsgBatchCreateSpotLimitOrders;

                /**
                 * Creates a plain object from a MsgBatchCreateSpotLimitOrders message. Also converts values to other types if specified.
                 * @param message MsgBatchCreateSpotLimitOrders
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.MsgBatchCreateSpotLimitOrders, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgBatchCreateSpotLimitOrders to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgBatchCreateSpotLimitOrdersResponse. */
            interface IMsgBatchCreateSpotLimitOrdersResponse {

                /** MsgBatchCreateSpotLimitOrdersResponse order_hashes */
                order_hashes?: (string[]|null);
            }

            /** Represents a MsgBatchCreateSpotLimitOrdersResponse. */
            class MsgBatchCreateSpotLimitOrdersResponse implements IMsgBatchCreateSpotLimitOrdersResponse {

                /**
                 * Constructs a new MsgBatchCreateSpotLimitOrdersResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IMsgBatchCreateSpotLimitOrdersResponse);

                /** MsgBatchCreateSpotLimitOrdersResponse order_hashes. */
                public order_hashes: string[];

                /**
                 * Encodes the specified MsgBatchCreateSpotLimitOrdersResponse message. Does not implicitly {@link injective.exchange.v1beta1.MsgBatchCreateSpotLimitOrdersResponse.verify|verify} messages.
                 * @param message MsgBatchCreateSpotLimitOrdersResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IMsgBatchCreateSpotLimitOrdersResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgBatchCreateSpotLimitOrdersResponse message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.MsgBatchCreateSpotLimitOrdersResponse.verify|verify} messages.
                 * @param message MsgBatchCreateSpotLimitOrdersResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IMsgBatchCreateSpotLimitOrdersResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgBatchCreateSpotLimitOrdersResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgBatchCreateSpotLimitOrdersResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.MsgBatchCreateSpotLimitOrdersResponse;

                /**
                 * Decodes a MsgBatchCreateSpotLimitOrdersResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgBatchCreateSpotLimitOrdersResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.MsgBatchCreateSpotLimitOrdersResponse;

                /**
                 * Verifies a MsgBatchCreateSpotLimitOrdersResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgBatchCreateSpotLimitOrdersResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgBatchCreateSpotLimitOrdersResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.MsgBatchCreateSpotLimitOrdersResponse;

                /**
                 * Creates a plain object from a MsgBatchCreateSpotLimitOrdersResponse message. Also converts values to other types if specified.
                 * @param message MsgBatchCreateSpotLimitOrdersResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.MsgBatchCreateSpotLimitOrdersResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgBatchCreateSpotLimitOrdersResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgInstantSpotMarketLaunch. */
            interface IMsgInstantSpotMarketLaunch {

                /** MsgInstantSpotMarketLaunch sender */
                sender?: (string|null);

                /** MsgInstantSpotMarketLaunch ticker */
                ticker?: (string|null);

                /** MsgInstantSpotMarketLaunch base_denom */
                base_denom?: (string|null);

                /** MsgInstantSpotMarketLaunch quote_denom */
                quote_denom?: (string|null);

                /** MsgInstantSpotMarketLaunch min_price_tick_size */
                min_price_tick_size?: (string|null);

                /** MsgInstantSpotMarketLaunch min_quantity_tick_size */
                min_quantity_tick_size?: (string|null);
            }

            /** Represents a MsgInstantSpotMarketLaunch. */
            class MsgInstantSpotMarketLaunch implements IMsgInstantSpotMarketLaunch {

                /**
                 * Constructs a new MsgInstantSpotMarketLaunch.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IMsgInstantSpotMarketLaunch);

                /** MsgInstantSpotMarketLaunch sender. */
                public sender: string;

                /** MsgInstantSpotMarketLaunch ticker. */
                public ticker: string;

                /** MsgInstantSpotMarketLaunch base_denom. */
                public base_denom: string;

                /** MsgInstantSpotMarketLaunch quote_denom. */
                public quote_denom: string;

                /** MsgInstantSpotMarketLaunch min_price_tick_size. */
                public min_price_tick_size: string;

                /** MsgInstantSpotMarketLaunch min_quantity_tick_size. */
                public min_quantity_tick_size: string;

                /**
                 * Encodes the specified MsgInstantSpotMarketLaunch message. Does not implicitly {@link injective.exchange.v1beta1.MsgInstantSpotMarketLaunch.verify|verify} messages.
                 * @param message MsgInstantSpotMarketLaunch message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IMsgInstantSpotMarketLaunch, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgInstantSpotMarketLaunch message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.MsgInstantSpotMarketLaunch.verify|verify} messages.
                 * @param message MsgInstantSpotMarketLaunch message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IMsgInstantSpotMarketLaunch, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgInstantSpotMarketLaunch message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgInstantSpotMarketLaunch
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.MsgInstantSpotMarketLaunch;

                /**
                 * Decodes a MsgInstantSpotMarketLaunch message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgInstantSpotMarketLaunch
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.MsgInstantSpotMarketLaunch;

                /**
                 * Verifies a MsgInstantSpotMarketLaunch message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgInstantSpotMarketLaunch message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgInstantSpotMarketLaunch
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.MsgInstantSpotMarketLaunch;

                /**
                 * Creates a plain object from a MsgInstantSpotMarketLaunch message. Also converts values to other types if specified.
                 * @param message MsgInstantSpotMarketLaunch
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.MsgInstantSpotMarketLaunch, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgInstantSpotMarketLaunch to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgInstantSpotMarketLaunchResponse. */
            interface IMsgInstantSpotMarketLaunchResponse {
            }

            /** Represents a MsgInstantSpotMarketLaunchResponse. */
            class MsgInstantSpotMarketLaunchResponse implements IMsgInstantSpotMarketLaunchResponse {

                /**
                 * Constructs a new MsgInstantSpotMarketLaunchResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IMsgInstantSpotMarketLaunchResponse);

                /**
                 * Encodes the specified MsgInstantSpotMarketLaunchResponse message. Does not implicitly {@link injective.exchange.v1beta1.MsgInstantSpotMarketLaunchResponse.verify|verify} messages.
                 * @param message MsgInstantSpotMarketLaunchResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IMsgInstantSpotMarketLaunchResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgInstantSpotMarketLaunchResponse message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.MsgInstantSpotMarketLaunchResponse.verify|verify} messages.
                 * @param message MsgInstantSpotMarketLaunchResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IMsgInstantSpotMarketLaunchResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgInstantSpotMarketLaunchResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgInstantSpotMarketLaunchResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.MsgInstantSpotMarketLaunchResponse;

                /**
                 * Decodes a MsgInstantSpotMarketLaunchResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgInstantSpotMarketLaunchResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.MsgInstantSpotMarketLaunchResponse;

                /**
                 * Verifies a MsgInstantSpotMarketLaunchResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgInstantSpotMarketLaunchResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgInstantSpotMarketLaunchResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.MsgInstantSpotMarketLaunchResponse;

                /**
                 * Creates a plain object from a MsgInstantSpotMarketLaunchResponse message. Also converts values to other types if specified.
                 * @param message MsgInstantSpotMarketLaunchResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.MsgInstantSpotMarketLaunchResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgInstantSpotMarketLaunchResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgInstantPerpetualMarketLaunch. */
            interface IMsgInstantPerpetualMarketLaunch {

                /** MsgInstantPerpetualMarketLaunch sender */
                sender?: (string|null);

                /** MsgInstantPerpetualMarketLaunch ticker */
                ticker?: (string|null);

                /** MsgInstantPerpetualMarketLaunch quote_denom */
                quote_denom?: (string|null);

                /** MsgInstantPerpetualMarketLaunch oracle_base */
                oracle_base?: (string|null);

                /** MsgInstantPerpetualMarketLaunch oracle_quote */
                oracle_quote?: (string|null);

                /** MsgInstantPerpetualMarketLaunch oracle_scale_factor */
                oracle_scale_factor?: (number|null);

                /** MsgInstantPerpetualMarketLaunch oracle_type */
                oracle_type?: (injective.oracle.v1beta1.OracleType|null);

                /** MsgInstantPerpetualMarketLaunch maker_fee_rate */
                maker_fee_rate?: (string|null);

                /** MsgInstantPerpetualMarketLaunch taker_fee_rate */
                taker_fee_rate?: (string|null);

                /** MsgInstantPerpetualMarketLaunch initial_margin_ratio */
                initial_margin_ratio?: (string|null);

                /** MsgInstantPerpetualMarketLaunch maintenance_margin_ratio */
                maintenance_margin_ratio?: (string|null);

                /** MsgInstantPerpetualMarketLaunch min_price_tick_size */
                min_price_tick_size?: (string|null);

                /** MsgInstantPerpetualMarketLaunch min_quantity_tick_size */
                min_quantity_tick_size?: (string|null);
            }

            /** Represents a MsgInstantPerpetualMarketLaunch. */
            class MsgInstantPerpetualMarketLaunch implements IMsgInstantPerpetualMarketLaunch {

                /**
                 * Constructs a new MsgInstantPerpetualMarketLaunch.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IMsgInstantPerpetualMarketLaunch);

                /** MsgInstantPerpetualMarketLaunch sender. */
                public sender: string;

                /** MsgInstantPerpetualMarketLaunch ticker. */
                public ticker: string;

                /** MsgInstantPerpetualMarketLaunch quote_denom. */
                public quote_denom: string;

                /** MsgInstantPerpetualMarketLaunch oracle_base. */
                public oracle_base: string;

                /** MsgInstantPerpetualMarketLaunch oracle_quote. */
                public oracle_quote: string;

                /** MsgInstantPerpetualMarketLaunch oracle_scale_factor. */
                public oracle_scale_factor: number;

                /** MsgInstantPerpetualMarketLaunch oracle_type. */
                public oracle_type: injective.oracle.v1beta1.OracleType;

                /** MsgInstantPerpetualMarketLaunch maker_fee_rate. */
                public maker_fee_rate: string;

                /** MsgInstantPerpetualMarketLaunch taker_fee_rate. */
                public taker_fee_rate: string;

                /** MsgInstantPerpetualMarketLaunch initial_margin_ratio. */
                public initial_margin_ratio: string;

                /** MsgInstantPerpetualMarketLaunch maintenance_margin_ratio. */
                public maintenance_margin_ratio: string;

                /** MsgInstantPerpetualMarketLaunch min_price_tick_size. */
                public min_price_tick_size: string;

                /** MsgInstantPerpetualMarketLaunch min_quantity_tick_size. */
                public min_quantity_tick_size: string;

                /**
                 * Encodes the specified MsgInstantPerpetualMarketLaunch message. Does not implicitly {@link injective.exchange.v1beta1.MsgInstantPerpetualMarketLaunch.verify|verify} messages.
                 * @param message MsgInstantPerpetualMarketLaunch message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IMsgInstantPerpetualMarketLaunch, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgInstantPerpetualMarketLaunch message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.MsgInstantPerpetualMarketLaunch.verify|verify} messages.
                 * @param message MsgInstantPerpetualMarketLaunch message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IMsgInstantPerpetualMarketLaunch, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgInstantPerpetualMarketLaunch message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgInstantPerpetualMarketLaunch
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.MsgInstantPerpetualMarketLaunch;

                /**
                 * Decodes a MsgInstantPerpetualMarketLaunch message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgInstantPerpetualMarketLaunch
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.MsgInstantPerpetualMarketLaunch;

                /**
                 * Verifies a MsgInstantPerpetualMarketLaunch message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgInstantPerpetualMarketLaunch message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgInstantPerpetualMarketLaunch
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.MsgInstantPerpetualMarketLaunch;

                /**
                 * Creates a plain object from a MsgInstantPerpetualMarketLaunch message. Also converts values to other types if specified.
                 * @param message MsgInstantPerpetualMarketLaunch
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.MsgInstantPerpetualMarketLaunch, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgInstantPerpetualMarketLaunch to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgInstantPerpetualMarketLaunchResponse. */
            interface IMsgInstantPerpetualMarketLaunchResponse {
            }

            /** Represents a MsgInstantPerpetualMarketLaunchResponse. */
            class MsgInstantPerpetualMarketLaunchResponse implements IMsgInstantPerpetualMarketLaunchResponse {

                /**
                 * Constructs a new MsgInstantPerpetualMarketLaunchResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IMsgInstantPerpetualMarketLaunchResponse);

                /**
                 * Encodes the specified MsgInstantPerpetualMarketLaunchResponse message. Does not implicitly {@link injective.exchange.v1beta1.MsgInstantPerpetualMarketLaunchResponse.verify|verify} messages.
                 * @param message MsgInstantPerpetualMarketLaunchResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IMsgInstantPerpetualMarketLaunchResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgInstantPerpetualMarketLaunchResponse message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.MsgInstantPerpetualMarketLaunchResponse.verify|verify} messages.
                 * @param message MsgInstantPerpetualMarketLaunchResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IMsgInstantPerpetualMarketLaunchResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgInstantPerpetualMarketLaunchResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgInstantPerpetualMarketLaunchResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.MsgInstantPerpetualMarketLaunchResponse;

                /**
                 * Decodes a MsgInstantPerpetualMarketLaunchResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgInstantPerpetualMarketLaunchResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.MsgInstantPerpetualMarketLaunchResponse;

                /**
                 * Verifies a MsgInstantPerpetualMarketLaunchResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgInstantPerpetualMarketLaunchResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgInstantPerpetualMarketLaunchResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.MsgInstantPerpetualMarketLaunchResponse;

                /**
                 * Creates a plain object from a MsgInstantPerpetualMarketLaunchResponse message. Also converts values to other types if specified.
                 * @param message MsgInstantPerpetualMarketLaunchResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.MsgInstantPerpetualMarketLaunchResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgInstantPerpetualMarketLaunchResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgInstantBinaryOptionsMarketLaunch. */
            interface IMsgInstantBinaryOptionsMarketLaunch {

                /** MsgInstantBinaryOptionsMarketLaunch sender */
                sender?: (string|null);

                /** MsgInstantBinaryOptionsMarketLaunch ticker */
                ticker?: (string|null);

                /** MsgInstantBinaryOptionsMarketLaunch oracle_symbol */
                oracle_symbol?: (string|null);

                /** MsgInstantBinaryOptionsMarketLaunch oracle_provider */
                oracle_provider?: (string|null);

                /** MsgInstantBinaryOptionsMarketLaunch oracle_type */
                oracle_type?: (injective.oracle.v1beta1.OracleType|null);

                /** MsgInstantBinaryOptionsMarketLaunch oracle_scale_factor */
                oracle_scale_factor?: (number|null);

                /** MsgInstantBinaryOptionsMarketLaunch maker_fee_rate */
                maker_fee_rate?: (string|null);

                /** MsgInstantBinaryOptionsMarketLaunch taker_fee_rate */
                taker_fee_rate?: (string|null);

                /** MsgInstantBinaryOptionsMarketLaunch expiration_timestamp */
                expiration_timestamp?: (number|null);

                /** MsgInstantBinaryOptionsMarketLaunch settlement_timestamp */
                settlement_timestamp?: (number|null);

                /** MsgInstantBinaryOptionsMarketLaunch admin */
                admin?: (string|null);

                /** MsgInstantBinaryOptionsMarketLaunch quote_denom */
                quote_denom?: (string|null);

                /** MsgInstantBinaryOptionsMarketLaunch min_price_tick_size */
                min_price_tick_size?: (string|null);

                /** MsgInstantBinaryOptionsMarketLaunch min_quantity_tick_size */
                min_quantity_tick_size?: (string|null);
            }

            /** Represents a MsgInstantBinaryOptionsMarketLaunch. */
            class MsgInstantBinaryOptionsMarketLaunch implements IMsgInstantBinaryOptionsMarketLaunch {

                /**
                 * Constructs a new MsgInstantBinaryOptionsMarketLaunch.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IMsgInstantBinaryOptionsMarketLaunch);

                /** MsgInstantBinaryOptionsMarketLaunch sender. */
                public sender: string;

                /** MsgInstantBinaryOptionsMarketLaunch ticker. */
                public ticker: string;

                /** MsgInstantBinaryOptionsMarketLaunch oracle_symbol. */
                public oracle_symbol: string;

                /** MsgInstantBinaryOptionsMarketLaunch oracle_provider. */
                public oracle_provider: string;

                /** MsgInstantBinaryOptionsMarketLaunch oracle_type. */
                public oracle_type: injective.oracle.v1beta1.OracleType;

                /** MsgInstantBinaryOptionsMarketLaunch oracle_scale_factor. */
                public oracle_scale_factor: number;

                /** MsgInstantBinaryOptionsMarketLaunch maker_fee_rate. */
                public maker_fee_rate: string;

                /** MsgInstantBinaryOptionsMarketLaunch taker_fee_rate. */
                public taker_fee_rate: string;

                /** MsgInstantBinaryOptionsMarketLaunch expiration_timestamp. */
                public expiration_timestamp: number;

                /** MsgInstantBinaryOptionsMarketLaunch settlement_timestamp. */
                public settlement_timestamp: number;

                /** MsgInstantBinaryOptionsMarketLaunch admin. */
                public admin: string;

                /** MsgInstantBinaryOptionsMarketLaunch quote_denom. */
                public quote_denom: string;

                /** MsgInstantBinaryOptionsMarketLaunch min_price_tick_size. */
                public min_price_tick_size: string;

                /** MsgInstantBinaryOptionsMarketLaunch min_quantity_tick_size. */
                public min_quantity_tick_size: string;

                /**
                 * Encodes the specified MsgInstantBinaryOptionsMarketLaunch message. Does not implicitly {@link injective.exchange.v1beta1.MsgInstantBinaryOptionsMarketLaunch.verify|verify} messages.
                 * @param message MsgInstantBinaryOptionsMarketLaunch message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IMsgInstantBinaryOptionsMarketLaunch, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgInstantBinaryOptionsMarketLaunch message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.MsgInstantBinaryOptionsMarketLaunch.verify|verify} messages.
                 * @param message MsgInstantBinaryOptionsMarketLaunch message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IMsgInstantBinaryOptionsMarketLaunch, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgInstantBinaryOptionsMarketLaunch message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgInstantBinaryOptionsMarketLaunch
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.MsgInstantBinaryOptionsMarketLaunch;

                /**
                 * Decodes a MsgInstantBinaryOptionsMarketLaunch message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgInstantBinaryOptionsMarketLaunch
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.MsgInstantBinaryOptionsMarketLaunch;

                /**
                 * Verifies a MsgInstantBinaryOptionsMarketLaunch message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgInstantBinaryOptionsMarketLaunch message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgInstantBinaryOptionsMarketLaunch
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.MsgInstantBinaryOptionsMarketLaunch;

                /**
                 * Creates a plain object from a MsgInstantBinaryOptionsMarketLaunch message. Also converts values to other types if specified.
                 * @param message MsgInstantBinaryOptionsMarketLaunch
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.MsgInstantBinaryOptionsMarketLaunch, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgInstantBinaryOptionsMarketLaunch to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgInstantBinaryOptionsMarketLaunchResponse. */
            interface IMsgInstantBinaryOptionsMarketLaunchResponse {
            }

            /** Represents a MsgInstantBinaryOptionsMarketLaunchResponse. */
            class MsgInstantBinaryOptionsMarketLaunchResponse implements IMsgInstantBinaryOptionsMarketLaunchResponse {

                /**
                 * Constructs a new MsgInstantBinaryOptionsMarketLaunchResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IMsgInstantBinaryOptionsMarketLaunchResponse);

                /**
                 * Encodes the specified MsgInstantBinaryOptionsMarketLaunchResponse message. Does not implicitly {@link injective.exchange.v1beta1.MsgInstantBinaryOptionsMarketLaunchResponse.verify|verify} messages.
                 * @param message MsgInstantBinaryOptionsMarketLaunchResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IMsgInstantBinaryOptionsMarketLaunchResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgInstantBinaryOptionsMarketLaunchResponse message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.MsgInstantBinaryOptionsMarketLaunchResponse.verify|verify} messages.
                 * @param message MsgInstantBinaryOptionsMarketLaunchResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IMsgInstantBinaryOptionsMarketLaunchResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgInstantBinaryOptionsMarketLaunchResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgInstantBinaryOptionsMarketLaunchResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.MsgInstantBinaryOptionsMarketLaunchResponse;

                /**
                 * Decodes a MsgInstantBinaryOptionsMarketLaunchResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgInstantBinaryOptionsMarketLaunchResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.MsgInstantBinaryOptionsMarketLaunchResponse;

                /**
                 * Verifies a MsgInstantBinaryOptionsMarketLaunchResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgInstantBinaryOptionsMarketLaunchResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgInstantBinaryOptionsMarketLaunchResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.MsgInstantBinaryOptionsMarketLaunchResponse;

                /**
                 * Creates a plain object from a MsgInstantBinaryOptionsMarketLaunchResponse message. Also converts values to other types if specified.
                 * @param message MsgInstantBinaryOptionsMarketLaunchResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.MsgInstantBinaryOptionsMarketLaunchResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgInstantBinaryOptionsMarketLaunchResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgInstantExpiryFuturesMarketLaunch. */
            interface IMsgInstantExpiryFuturesMarketLaunch {

                /** MsgInstantExpiryFuturesMarketLaunch sender */
                sender?: (string|null);

                /** MsgInstantExpiryFuturesMarketLaunch ticker */
                ticker?: (string|null);

                /** MsgInstantExpiryFuturesMarketLaunch quote_denom */
                quote_denom?: (string|null);

                /** MsgInstantExpiryFuturesMarketLaunch oracle_base */
                oracle_base?: (string|null);

                /** MsgInstantExpiryFuturesMarketLaunch oracle_quote */
                oracle_quote?: (string|null);

                /** MsgInstantExpiryFuturesMarketLaunch oracle_type */
                oracle_type?: (injective.oracle.v1beta1.OracleType|null);

                /** MsgInstantExpiryFuturesMarketLaunch oracle_scale_factor */
                oracle_scale_factor?: (number|null);

                /** MsgInstantExpiryFuturesMarketLaunch expiry */
                expiry?: (number|null);

                /** MsgInstantExpiryFuturesMarketLaunch maker_fee_rate */
                maker_fee_rate?: (string|null);

                /** MsgInstantExpiryFuturesMarketLaunch taker_fee_rate */
                taker_fee_rate?: (string|null);

                /** MsgInstantExpiryFuturesMarketLaunch initial_margin_ratio */
                initial_margin_ratio?: (string|null);

                /** MsgInstantExpiryFuturesMarketLaunch maintenance_margin_ratio */
                maintenance_margin_ratio?: (string|null);

                /** MsgInstantExpiryFuturesMarketLaunch min_price_tick_size */
                min_price_tick_size?: (string|null);

                /** MsgInstantExpiryFuturesMarketLaunch min_quantity_tick_size */
                min_quantity_tick_size?: (string|null);
            }

            /** Represents a MsgInstantExpiryFuturesMarketLaunch. */
            class MsgInstantExpiryFuturesMarketLaunch implements IMsgInstantExpiryFuturesMarketLaunch {

                /**
                 * Constructs a new MsgInstantExpiryFuturesMarketLaunch.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IMsgInstantExpiryFuturesMarketLaunch);

                /** MsgInstantExpiryFuturesMarketLaunch sender. */
                public sender: string;

                /** MsgInstantExpiryFuturesMarketLaunch ticker. */
                public ticker: string;

                /** MsgInstantExpiryFuturesMarketLaunch quote_denom. */
                public quote_denom: string;

                /** MsgInstantExpiryFuturesMarketLaunch oracle_base. */
                public oracle_base: string;

                /** MsgInstantExpiryFuturesMarketLaunch oracle_quote. */
                public oracle_quote: string;

                /** MsgInstantExpiryFuturesMarketLaunch oracle_type. */
                public oracle_type: injective.oracle.v1beta1.OracleType;

                /** MsgInstantExpiryFuturesMarketLaunch oracle_scale_factor. */
                public oracle_scale_factor: number;

                /** MsgInstantExpiryFuturesMarketLaunch expiry. */
                public expiry: number;

                /** MsgInstantExpiryFuturesMarketLaunch maker_fee_rate. */
                public maker_fee_rate: string;

                /** MsgInstantExpiryFuturesMarketLaunch taker_fee_rate. */
                public taker_fee_rate: string;

                /** MsgInstantExpiryFuturesMarketLaunch initial_margin_ratio. */
                public initial_margin_ratio: string;

                /** MsgInstantExpiryFuturesMarketLaunch maintenance_margin_ratio. */
                public maintenance_margin_ratio: string;

                /** MsgInstantExpiryFuturesMarketLaunch min_price_tick_size. */
                public min_price_tick_size: string;

                /** MsgInstantExpiryFuturesMarketLaunch min_quantity_tick_size. */
                public min_quantity_tick_size: string;

                /**
                 * Encodes the specified MsgInstantExpiryFuturesMarketLaunch message. Does not implicitly {@link injective.exchange.v1beta1.MsgInstantExpiryFuturesMarketLaunch.verify|verify} messages.
                 * @param message MsgInstantExpiryFuturesMarketLaunch message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IMsgInstantExpiryFuturesMarketLaunch, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgInstantExpiryFuturesMarketLaunch message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.MsgInstantExpiryFuturesMarketLaunch.verify|verify} messages.
                 * @param message MsgInstantExpiryFuturesMarketLaunch message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IMsgInstantExpiryFuturesMarketLaunch, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgInstantExpiryFuturesMarketLaunch message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgInstantExpiryFuturesMarketLaunch
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.MsgInstantExpiryFuturesMarketLaunch;

                /**
                 * Decodes a MsgInstantExpiryFuturesMarketLaunch message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgInstantExpiryFuturesMarketLaunch
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.MsgInstantExpiryFuturesMarketLaunch;

                /**
                 * Verifies a MsgInstantExpiryFuturesMarketLaunch message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgInstantExpiryFuturesMarketLaunch message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgInstantExpiryFuturesMarketLaunch
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.MsgInstantExpiryFuturesMarketLaunch;

                /**
                 * Creates a plain object from a MsgInstantExpiryFuturesMarketLaunch message. Also converts values to other types if specified.
                 * @param message MsgInstantExpiryFuturesMarketLaunch
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.MsgInstantExpiryFuturesMarketLaunch, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgInstantExpiryFuturesMarketLaunch to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgInstantExpiryFuturesMarketLaunchResponse. */
            interface IMsgInstantExpiryFuturesMarketLaunchResponse {
            }

            /** Represents a MsgInstantExpiryFuturesMarketLaunchResponse. */
            class MsgInstantExpiryFuturesMarketLaunchResponse implements IMsgInstantExpiryFuturesMarketLaunchResponse {

                /**
                 * Constructs a new MsgInstantExpiryFuturesMarketLaunchResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IMsgInstantExpiryFuturesMarketLaunchResponse);

                /**
                 * Encodes the specified MsgInstantExpiryFuturesMarketLaunchResponse message. Does not implicitly {@link injective.exchange.v1beta1.MsgInstantExpiryFuturesMarketLaunchResponse.verify|verify} messages.
                 * @param message MsgInstantExpiryFuturesMarketLaunchResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IMsgInstantExpiryFuturesMarketLaunchResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgInstantExpiryFuturesMarketLaunchResponse message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.MsgInstantExpiryFuturesMarketLaunchResponse.verify|verify} messages.
                 * @param message MsgInstantExpiryFuturesMarketLaunchResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IMsgInstantExpiryFuturesMarketLaunchResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgInstantExpiryFuturesMarketLaunchResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgInstantExpiryFuturesMarketLaunchResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.MsgInstantExpiryFuturesMarketLaunchResponse;

                /**
                 * Decodes a MsgInstantExpiryFuturesMarketLaunchResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgInstantExpiryFuturesMarketLaunchResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.MsgInstantExpiryFuturesMarketLaunchResponse;

                /**
                 * Verifies a MsgInstantExpiryFuturesMarketLaunchResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgInstantExpiryFuturesMarketLaunchResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgInstantExpiryFuturesMarketLaunchResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.MsgInstantExpiryFuturesMarketLaunchResponse;

                /**
                 * Creates a plain object from a MsgInstantExpiryFuturesMarketLaunchResponse message. Also converts values to other types if specified.
                 * @param message MsgInstantExpiryFuturesMarketLaunchResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.MsgInstantExpiryFuturesMarketLaunchResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgInstantExpiryFuturesMarketLaunchResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgCreateSpotMarketOrder. */
            interface IMsgCreateSpotMarketOrder {

                /** MsgCreateSpotMarketOrder sender */
                sender?: (string|null);

                /** MsgCreateSpotMarketOrder order */
                order?: (injective.exchange.v1beta1.ISpotOrder|null);
            }

            /** Represents a MsgCreateSpotMarketOrder. */
            class MsgCreateSpotMarketOrder implements IMsgCreateSpotMarketOrder {

                /**
                 * Constructs a new MsgCreateSpotMarketOrder.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IMsgCreateSpotMarketOrder);

                /** MsgCreateSpotMarketOrder sender. */
                public sender: string;

                /** MsgCreateSpotMarketOrder order. */
                public order?: (injective.exchange.v1beta1.ISpotOrder|null);

                /**
                 * Encodes the specified MsgCreateSpotMarketOrder message. Does not implicitly {@link injective.exchange.v1beta1.MsgCreateSpotMarketOrder.verify|verify} messages.
                 * @param message MsgCreateSpotMarketOrder message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IMsgCreateSpotMarketOrder, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgCreateSpotMarketOrder message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.MsgCreateSpotMarketOrder.verify|verify} messages.
                 * @param message MsgCreateSpotMarketOrder message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IMsgCreateSpotMarketOrder, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgCreateSpotMarketOrder message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgCreateSpotMarketOrder
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.MsgCreateSpotMarketOrder;

                /**
                 * Decodes a MsgCreateSpotMarketOrder message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgCreateSpotMarketOrder
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.MsgCreateSpotMarketOrder;

                /**
                 * Verifies a MsgCreateSpotMarketOrder message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgCreateSpotMarketOrder message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgCreateSpotMarketOrder
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.MsgCreateSpotMarketOrder;

                /**
                 * Creates a plain object from a MsgCreateSpotMarketOrder message. Also converts values to other types if specified.
                 * @param message MsgCreateSpotMarketOrder
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.MsgCreateSpotMarketOrder, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgCreateSpotMarketOrder to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgCreateSpotMarketOrderResponse. */
            interface IMsgCreateSpotMarketOrderResponse {

                /** MsgCreateSpotMarketOrderResponse order_hash */
                order_hash?: (string|null);

                /** MsgCreateSpotMarketOrderResponse results */
                results?: (injective.exchange.v1beta1.ISpotMarketOrderResults|null);
            }

            /** Represents a MsgCreateSpotMarketOrderResponse. */
            class MsgCreateSpotMarketOrderResponse implements IMsgCreateSpotMarketOrderResponse {

                /**
                 * Constructs a new MsgCreateSpotMarketOrderResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IMsgCreateSpotMarketOrderResponse);

                /** MsgCreateSpotMarketOrderResponse order_hash. */
                public order_hash: string;

                /** MsgCreateSpotMarketOrderResponse results. */
                public results?: (injective.exchange.v1beta1.ISpotMarketOrderResults|null);

                /**
                 * Encodes the specified MsgCreateSpotMarketOrderResponse message. Does not implicitly {@link injective.exchange.v1beta1.MsgCreateSpotMarketOrderResponse.verify|verify} messages.
                 * @param message MsgCreateSpotMarketOrderResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IMsgCreateSpotMarketOrderResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgCreateSpotMarketOrderResponse message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.MsgCreateSpotMarketOrderResponse.verify|verify} messages.
                 * @param message MsgCreateSpotMarketOrderResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IMsgCreateSpotMarketOrderResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgCreateSpotMarketOrderResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgCreateSpotMarketOrderResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.MsgCreateSpotMarketOrderResponse;

                /**
                 * Decodes a MsgCreateSpotMarketOrderResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgCreateSpotMarketOrderResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.MsgCreateSpotMarketOrderResponse;

                /**
                 * Verifies a MsgCreateSpotMarketOrderResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgCreateSpotMarketOrderResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgCreateSpotMarketOrderResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.MsgCreateSpotMarketOrderResponse;

                /**
                 * Creates a plain object from a MsgCreateSpotMarketOrderResponse message. Also converts values to other types if specified.
                 * @param message MsgCreateSpotMarketOrderResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.MsgCreateSpotMarketOrderResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgCreateSpotMarketOrderResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a SpotMarketOrderResults. */
            interface ISpotMarketOrderResults {

                /** SpotMarketOrderResults quantity */
                quantity?: (string|null);

                /** SpotMarketOrderResults price */
                price?: (string|null);

                /** SpotMarketOrderResults fee */
                fee?: (string|null);
            }

            /** Represents a SpotMarketOrderResults. */
            class SpotMarketOrderResults implements ISpotMarketOrderResults {

                /**
                 * Constructs a new SpotMarketOrderResults.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.ISpotMarketOrderResults);

                /** SpotMarketOrderResults quantity. */
                public quantity: string;

                /** SpotMarketOrderResults price. */
                public price: string;

                /** SpotMarketOrderResults fee. */
                public fee: string;

                /**
                 * Encodes the specified SpotMarketOrderResults message. Does not implicitly {@link injective.exchange.v1beta1.SpotMarketOrderResults.verify|verify} messages.
                 * @param message SpotMarketOrderResults message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.ISpotMarketOrderResults, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified SpotMarketOrderResults message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.SpotMarketOrderResults.verify|verify} messages.
                 * @param message SpotMarketOrderResults message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.ISpotMarketOrderResults, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a SpotMarketOrderResults message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns SpotMarketOrderResults
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.SpotMarketOrderResults;

                /**
                 * Decodes a SpotMarketOrderResults message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns SpotMarketOrderResults
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.SpotMarketOrderResults;

                /**
                 * Verifies a SpotMarketOrderResults message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a SpotMarketOrderResults message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns SpotMarketOrderResults
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.SpotMarketOrderResults;

                /**
                 * Creates a plain object from a SpotMarketOrderResults message. Also converts values to other types if specified.
                 * @param message SpotMarketOrderResults
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.SpotMarketOrderResults, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this SpotMarketOrderResults to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgCreateDerivativeLimitOrder. */
            interface IMsgCreateDerivativeLimitOrder {

                /** MsgCreateDerivativeLimitOrder sender */
                sender?: (string|null);

                /** MsgCreateDerivativeLimitOrder order */
                order?: (injective.exchange.v1beta1.IDerivativeOrder|null);
            }

            /** Represents a MsgCreateDerivativeLimitOrder. */
            class MsgCreateDerivativeLimitOrder implements IMsgCreateDerivativeLimitOrder {

                /**
                 * Constructs a new MsgCreateDerivativeLimitOrder.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IMsgCreateDerivativeLimitOrder);

                /** MsgCreateDerivativeLimitOrder sender. */
                public sender: string;

                /** MsgCreateDerivativeLimitOrder order. */
                public order?: (injective.exchange.v1beta1.IDerivativeOrder|null);

                /**
                 * Encodes the specified MsgCreateDerivativeLimitOrder message. Does not implicitly {@link injective.exchange.v1beta1.MsgCreateDerivativeLimitOrder.verify|verify} messages.
                 * @param message MsgCreateDerivativeLimitOrder message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IMsgCreateDerivativeLimitOrder, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgCreateDerivativeLimitOrder message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.MsgCreateDerivativeLimitOrder.verify|verify} messages.
                 * @param message MsgCreateDerivativeLimitOrder message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IMsgCreateDerivativeLimitOrder, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgCreateDerivativeLimitOrder message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgCreateDerivativeLimitOrder
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.MsgCreateDerivativeLimitOrder;

                /**
                 * Decodes a MsgCreateDerivativeLimitOrder message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgCreateDerivativeLimitOrder
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.MsgCreateDerivativeLimitOrder;

                /**
                 * Verifies a MsgCreateDerivativeLimitOrder message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgCreateDerivativeLimitOrder message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgCreateDerivativeLimitOrder
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.MsgCreateDerivativeLimitOrder;

                /**
                 * Creates a plain object from a MsgCreateDerivativeLimitOrder message. Also converts values to other types if specified.
                 * @param message MsgCreateDerivativeLimitOrder
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.MsgCreateDerivativeLimitOrder, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgCreateDerivativeLimitOrder to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgCreateDerivativeLimitOrderResponse. */
            interface IMsgCreateDerivativeLimitOrderResponse {

                /** MsgCreateDerivativeLimitOrderResponse order_hash */
                order_hash?: (string|null);
            }

            /** Represents a MsgCreateDerivativeLimitOrderResponse. */
            class MsgCreateDerivativeLimitOrderResponse implements IMsgCreateDerivativeLimitOrderResponse {

                /**
                 * Constructs a new MsgCreateDerivativeLimitOrderResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IMsgCreateDerivativeLimitOrderResponse);

                /** MsgCreateDerivativeLimitOrderResponse order_hash. */
                public order_hash: string;

                /**
                 * Encodes the specified MsgCreateDerivativeLimitOrderResponse message. Does not implicitly {@link injective.exchange.v1beta1.MsgCreateDerivativeLimitOrderResponse.verify|verify} messages.
                 * @param message MsgCreateDerivativeLimitOrderResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IMsgCreateDerivativeLimitOrderResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgCreateDerivativeLimitOrderResponse message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.MsgCreateDerivativeLimitOrderResponse.verify|verify} messages.
                 * @param message MsgCreateDerivativeLimitOrderResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IMsgCreateDerivativeLimitOrderResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgCreateDerivativeLimitOrderResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgCreateDerivativeLimitOrderResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.MsgCreateDerivativeLimitOrderResponse;

                /**
                 * Decodes a MsgCreateDerivativeLimitOrderResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgCreateDerivativeLimitOrderResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.MsgCreateDerivativeLimitOrderResponse;

                /**
                 * Verifies a MsgCreateDerivativeLimitOrderResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgCreateDerivativeLimitOrderResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgCreateDerivativeLimitOrderResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.MsgCreateDerivativeLimitOrderResponse;

                /**
                 * Creates a plain object from a MsgCreateDerivativeLimitOrderResponse message. Also converts values to other types if specified.
                 * @param message MsgCreateDerivativeLimitOrderResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.MsgCreateDerivativeLimitOrderResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgCreateDerivativeLimitOrderResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgCreateBinaryOptionsLimitOrder. */
            interface IMsgCreateBinaryOptionsLimitOrder {

                /** MsgCreateBinaryOptionsLimitOrder sender */
                sender?: (string|null);

                /** MsgCreateBinaryOptionsLimitOrder order */
                order?: (injective.exchange.v1beta1.IDerivativeOrder|null);
            }

            /** Represents a MsgCreateBinaryOptionsLimitOrder. */
            class MsgCreateBinaryOptionsLimitOrder implements IMsgCreateBinaryOptionsLimitOrder {

                /**
                 * Constructs a new MsgCreateBinaryOptionsLimitOrder.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IMsgCreateBinaryOptionsLimitOrder);

                /** MsgCreateBinaryOptionsLimitOrder sender. */
                public sender: string;

                /** MsgCreateBinaryOptionsLimitOrder order. */
                public order?: (injective.exchange.v1beta1.IDerivativeOrder|null);

                /**
                 * Encodes the specified MsgCreateBinaryOptionsLimitOrder message. Does not implicitly {@link injective.exchange.v1beta1.MsgCreateBinaryOptionsLimitOrder.verify|verify} messages.
                 * @param message MsgCreateBinaryOptionsLimitOrder message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IMsgCreateBinaryOptionsLimitOrder, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgCreateBinaryOptionsLimitOrder message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.MsgCreateBinaryOptionsLimitOrder.verify|verify} messages.
                 * @param message MsgCreateBinaryOptionsLimitOrder message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IMsgCreateBinaryOptionsLimitOrder, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgCreateBinaryOptionsLimitOrder message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgCreateBinaryOptionsLimitOrder
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.MsgCreateBinaryOptionsLimitOrder;

                /**
                 * Decodes a MsgCreateBinaryOptionsLimitOrder message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgCreateBinaryOptionsLimitOrder
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.MsgCreateBinaryOptionsLimitOrder;

                /**
                 * Verifies a MsgCreateBinaryOptionsLimitOrder message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgCreateBinaryOptionsLimitOrder message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgCreateBinaryOptionsLimitOrder
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.MsgCreateBinaryOptionsLimitOrder;

                /**
                 * Creates a plain object from a MsgCreateBinaryOptionsLimitOrder message. Also converts values to other types if specified.
                 * @param message MsgCreateBinaryOptionsLimitOrder
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.MsgCreateBinaryOptionsLimitOrder, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgCreateBinaryOptionsLimitOrder to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgCreateBinaryOptionsLimitOrderResponse. */
            interface IMsgCreateBinaryOptionsLimitOrderResponse {

                /** MsgCreateBinaryOptionsLimitOrderResponse order_hash */
                order_hash?: (string|null);
            }

            /** Represents a MsgCreateBinaryOptionsLimitOrderResponse. */
            class MsgCreateBinaryOptionsLimitOrderResponse implements IMsgCreateBinaryOptionsLimitOrderResponse {

                /**
                 * Constructs a new MsgCreateBinaryOptionsLimitOrderResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IMsgCreateBinaryOptionsLimitOrderResponse);

                /** MsgCreateBinaryOptionsLimitOrderResponse order_hash. */
                public order_hash: string;

                /**
                 * Encodes the specified MsgCreateBinaryOptionsLimitOrderResponse message. Does not implicitly {@link injective.exchange.v1beta1.MsgCreateBinaryOptionsLimitOrderResponse.verify|verify} messages.
                 * @param message MsgCreateBinaryOptionsLimitOrderResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IMsgCreateBinaryOptionsLimitOrderResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgCreateBinaryOptionsLimitOrderResponse message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.MsgCreateBinaryOptionsLimitOrderResponse.verify|verify} messages.
                 * @param message MsgCreateBinaryOptionsLimitOrderResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IMsgCreateBinaryOptionsLimitOrderResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgCreateBinaryOptionsLimitOrderResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgCreateBinaryOptionsLimitOrderResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.MsgCreateBinaryOptionsLimitOrderResponse;

                /**
                 * Decodes a MsgCreateBinaryOptionsLimitOrderResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgCreateBinaryOptionsLimitOrderResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.MsgCreateBinaryOptionsLimitOrderResponse;

                /**
                 * Verifies a MsgCreateBinaryOptionsLimitOrderResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgCreateBinaryOptionsLimitOrderResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgCreateBinaryOptionsLimitOrderResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.MsgCreateBinaryOptionsLimitOrderResponse;

                /**
                 * Creates a plain object from a MsgCreateBinaryOptionsLimitOrderResponse message. Also converts values to other types if specified.
                 * @param message MsgCreateBinaryOptionsLimitOrderResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.MsgCreateBinaryOptionsLimitOrderResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgCreateBinaryOptionsLimitOrderResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgBatchCreateDerivativeLimitOrders. */
            interface IMsgBatchCreateDerivativeLimitOrders {

                /** MsgBatchCreateDerivativeLimitOrders sender */
                sender?: (string|null);

                /** MsgBatchCreateDerivativeLimitOrders orders */
                orders?: (injective.exchange.v1beta1.IDerivativeOrder[]|null);
            }

            /** Represents a MsgBatchCreateDerivativeLimitOrders. */
            class MsgBatchCreateDerivativeLimitOrders implements IMsgBatchCreateDerivativeLimitOrders {

                /**
                 * Constructs a new MsgBatchCreateDerivativeLimitOrders.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IMsgBatchCreateDerivativeLimitOrders);

                /** MsgBatchCreateDerivativeLimitOrders sender. */
                public sender: string;

                /** MsgBatchCreateDerivativeLimitOrders orders. */
                public orders: injective.exchange.v1beta1.IDerivativeOrder[];

                /**
                 * Encodes the specified MsgBatchCreateDerivativeLimitOrders message. Does not implicitly {@link injective.exchange.v1beta1.MsgBatchCreateDerivativeLimitOrders.verify|verify} messages.
                 * @param message MsgBatchCreateDerivativeLimitOrders message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IMsgBatchCreateDerivativeLimitOrders, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgBatchCreateDerivativeLimitOrders message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.MsgBatchCreateDerivativeLimitOrders.verify|verify} messages.
                 * @param message MsgBatchCreateDerivativeLimitOrders message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IMsgBatchCreateDerivativeLimitOrders, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgBatchCreateDerivativeLimitOrders message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgBatchCreateDerivativeLimitOrders
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.MsgBatchCreateDerivativeLimitOrders;

                /**
                 * Decodes a MsgBatchCreateDerivativeLimitOrders message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgBatchCreateDerivativeLimitOrders
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.MsgBatchCreateDerivativeLimitOrders;

                /**
                 * Verifies a MsgBatchCreateDerivativeLimitOrders message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgBatchCreateDerivativeLimitOrders message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgBatchCreateDerivativeLimitOrders
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.MsgBatchCreateDerivativeLimitOrders;

                /**
                 * Creates a plain object from a MsgBatchCreateDerivativeLimitOrders message. Also converts values to other types if specified.
                 * @param message MsgBatchCreateDerivativeLimitOrders
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.MsgBatchCreateDerivativeLimitOrders, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgBatchCreateDerivativeLimitOrders to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgBatchCreateDerivativeLimitOrdersResponse. */
            interface IMsgBatchCreateDerivativeLimitOrdersResponse {

                /** MsgBatchCreateDerivativeLimitOrdersResponse order_hashes */
                order_hashes?: (string[]|null);
            }

            /** Represents a MsgBatchCreateDerivativeLimitOrdersResponse. */
            class MsgBatchCreateDerivativeLimitOrdersResponse implements IMsgBatchCreateDerivativeLimitOrdersResponse {

                /**
                 * Constructs a new MsgBatchCreateDerivativeLimitOrdersResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IMsgBatchCreateDerivativeLimitOrdersResponse);

                /** MsgBatchCreateDerivativeLimitOrdersResponse order_hashes. */
                public order_hashes: string[];

                /**
                 * Encodes the specified MsgBatchCreateDerivativeLimitOrdersResponse message. Does not implicitly {@link injective.exchange.v1beta1.MsgBatchCreateDerivativeLimitOrdersResponse.verify|verify} messages.
                 * @param message MsgBatchCreateDerivativeLimitOrdersResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IMsgBatchCreateDerivativeLimitOrdersResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgBatchCreateDerivativeLimitOrdersResponse message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.MsgBatchCreateDerivativeLimitOrdersResponse.verify|verify} messages.
                 * @param message MsgBatchCreateDerivativeLimitOrdersResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IMsgBatchCreateDerivativeLimitOrdersResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgBatchCreateDerivativeLimitOrdersResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgBatchCreateDerivativeLimitOrdersResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.MsgBatchCreateDerivativeLimitOrdersResponse;

                /**
                 * Decodes a MsgBatchCreateDerivativeLimitOrdersResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgBatchCreateDerivativeLimitOrdersResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.MsgBatchCreateDerivativeLimitOrdersResponse;

                /**
                 * Verifies a MsgBatchCreateDerivativeLimitOrdersResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgBatchCreateDerivativeLimitOrdersResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgBatchCreateDerivativeLimitOrdersResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.MsgBatchCreateDerivativeLimitOrdersResponse;

                /**
                 * Creates a plain object from a MsgBatchCreateDerivativeLimitOrdersResponse message. Also converts values to other types if specified.
                 * @param message MsgBatchCreateDerivativeLimitOrdersResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.MsgBatchCreateDerivativeLimitOrdersResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgBatchCreateDerivativeLimitOrdersResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgCancelSpotOrder. */
            interface IMsgCancelSpotOrder {

                /** MsgCancelSpotOrder sender */
                sender?: (string|null);

                /** MsgCancelSpotOrder market_id */
                market_id?: (string|null);

                /** MsgCancelSpotOrder subaccount_id */
                subaccount_id?: (string|null);

                /** MsgCancelSpotOrder order_hash */
                order_hash?: (string|null);
            }

            /** Represents a MsgCancelSpotOrder. */
            class MsgCancelSpotOrder implements IMsgCancelSpotOrder {

                /**
                 * Constructs a new MsgCancelSpotOrder.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IMsgCancelSpotOrder);

                /** MsgCancelSpotOrder sender. */
                public sender: string;

                /** MsgCancelSpotOrder market_id. */
                public market_id: string;

                /** MsgCancelSpotOrder subaccount_id. */
                public subaccount_id: string;

                /** MsgCancelSpotOrder order_hash. */
                public order_hash: string;

                /**
                 * Encodes the specified MsgCancelSpotOrder message. Does not implicitly {@link injective.exchange.v1beta1.MsgCancelSpotOrder.verify|verify} messages.
                 * @param message MsgCancelSpotOrder message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IMsgCancelSpotOrder, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgCancelSpotOrder message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.MsgCancelSpotOrder.verify|verify} messages.
                 * @param message MsgCancelSpotOrder message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IMsgCancelSpotOrder, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgCancelSpotOrder message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgCancelSpotOrder
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.MsgCancelSpotOrder;

                /**
                 * Decodes a MsgCancelSpotOrder message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgCancelSpotOrder
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.MsgCancelSpotOrder;

                /**
                 * Verifies a MsgCancelSpotOrder message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgCancelSpotOrder message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgCancelSpotOrder
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.MsgCancelSpotOrder;

                /**
                 * Creates a plain object from a MsgCancelSpotOrder message. Also converts values to other types if specified.
                 * @param message MsgCancelSpotOrder
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.MsgCancelSpotOrder, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgCancelSpotOrder to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgCancelSpotOrderResponse. */
            interface IMsgCancelSpotOrderResponse {
            }

            /** Represents a MsgCancelSpotOrderResponse. */
            class MsgCancelSpotOrderResponse implements IMsgCancelSpotOrderResponse {

                /**
                 * Constructs a new MsgCancelSpotOrderResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IMsgCancelSpotOrderResponse);

                /**
                 * Encodes the specified MsgCancelSpotOrderResponse message. Does not implicitly {@link injective.exchange.v1beta1.MsgCancelSpotOrderResponse.verify|verify} messages.
                 * @param message MsgCancelSpotOrderResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IMsgCancelSpotOrderResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgCancelSpotOrderResponse message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.MsgCancelSpotOrderResponse.verify|verify} messages.
                 * @param message MsgCancelSpotOrderResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IMsgCancelSpotOrderResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgCancelSpotOrderResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgCancelSpotOrderResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.MsgCancelSpotOrderResponse;

                /**
                 * Decodes a MsgCancelSpotOrderResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgCancelSpotOrderResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.MsgCancelSpotOrderResponse;

                /**
                 * Verifies a MsgCancelSpotOrderResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgCancelSpotOrderResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgCancelSpotOrderResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.MsgCancelSpotOrderResponse;

                /**
                 * Creates a plain object from a MsgCancelSpotOrderResponse message. Also converts values to other types if specified.
                 * @param message MsgCancelSpotOrderResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.MsgCancelSpotOrderResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgCancelSpotOrderResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgBatchCancelSpotOrders. */
            interface IMsgBatchCancelSpotOrders {

                /** MsgBatchCancelSpotOrders sender */
                sender?: (string|null);

                /** MsgBatchCancelSpotOrders data */
                data?: (injective.exchange.v1beta1.IOrderData[]|null);
            }

            /** Represents a MsgBatchCancelSpotOrders. */
            class MsgBatchCancelSpotOrders implements IMsgBatchCancelSpotOrders {

                /**
                 * Constructs a new MsgBatchCancelSpotOrders.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IMsgBatchCancelSpotOrders);

                /** MsgBatchCancelSpotOrders sender. */
                public sender: string;

                /** MsgBatchCancelSpotOrders data. */
                public data: injective.exchange.v1beta1.IOrderData[];

                /**
                 * Encodes the specified MsgBatchCancelSpotOrders message. Does not implicitly {@link injective.exchange.v1beta1.MsgBatchCancelSpotOrders.verify|verify} messages.
                 * @param message MsgBatchCancelSpotOrders message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IMsgBatchCancelSpotOrders, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgBatchCancelSpotOrders message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.MsgBatchCancelSpotOrders.verify|verify} messages.
                 * @param message MsgBatchCancelSpotOrders message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IMsgBatchCancelSpotOrders, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgBatchCancelSpotOrders message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgBatchCancelSpotOrders
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.MsgBatchCancelSpotOrders;

                /**
                 * Decodes a MsgBatchCancelSpotOrders message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgBatchCancelSpotOrders
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.MsgBatchCancelSpotOrders;

                /**
                 * Verifies a MsgBatchCancelSpotOrders message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgBatchCancelSpotOrders message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgBatchCancelSpotOrders
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.MsgBatchCancelSpotOrders;

                /**
                 * Creates a plain object from a MsgBatchCancelSpotOrders message. Also converts values to other types if specified.
                 * @param message MsgBatchCancelSpotOrders
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.MsgBatchCancelSpotOrders, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgBatchCancelSpotOrders to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgBatchCancelSpotOrdersResponse. */
            interface IMsgBatchCancelSpotOrdersResponse {

                /** MsgBatchCancelSpotOrdersResponse success */
                success?: (boolean[]|null);
            }

            /** Represents a MsgBatchCancelSpotOrdersResponse. */
            class MsgBatchCancelSpotOrdersResponse implements IMsgBatchCancelSpotOrdersResponse {

                /**
                 * Constructs a new MsgBatchCancelSpotOrdersResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IMsgBatchCancelSpotOrdersResponse);

                /** MsgBatchCancelSpotOrdersResponse success. */
                public success: boolean[];

                /**
                 * Encodes the specified MsgBatchCancelSpotOrdersResponse message. Does not implicitly {@link injective.exchange.v1beta1.MsgBatchCancelSpotOrdersResponse.verify|verify} messages.
                 * @param message MsgBatchCancelSpotOrdersResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IMsgBatchCancelSpotOrdersResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgBatchCancelSpotOrdersResponse message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.MsgBatchCancelSpotOrdersResponse.verify|verify} messages.
                 * @param message MsgBatchCancelSpotOrdersResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IMsgBatchCancelSpotOrdersResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgBatchCancelSpotOrdersResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgBatchCancelSpotOrdersResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.MsgBatchCancelSpotOrdersResponse;

                /**
                 * Decodes a MsgBatchCancelSpotOrdersResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgBatchCancelSpotOrdersResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.MsgBatchCancelSpotOrdersResponse;

                /**
                 * Verifies a MsgBatchCancelSpotOrdersResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgBatchCancelSpotOrdersResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgBatchCancelSpotOrdersResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.MsgBatchCancelSpotOrdersResponse;

                /**
                 * Creates a plain object from a MsgBatchCancelSpotOrdersResponse message. Also converts values to other types if specified.
                 * @param message MsgBatchCancelSpotOrdersResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.MsgBatchCancelSpotOrdersResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgBatchCancelSpotOrdersResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgBatchCancelBinaryOptionsOrders. */
            interface IMsgBatchCancelBinaryOptionsOrders {

                /** MsgBatchCancelBinaryOptionsOrders sender */
                sender?: (string|null);

                /** MsgBatchCancelBinaryOptionsOrders data */
                data?: (injective.exchange.v1beta1.IOrderData[]|null);
            }

            /** Represents a MsgBatchCancelBinaryOptionsOrders. */
            class MsgBatchCancelBinaryOptionsOrders implements IMsgBatchCancelBinaryOptionsOrders {

                /**
                 * Constructs a new MsgBatchCancelBinaryOptionsOrders.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IMsgBatchCancelBinaryOptionsOrders);

                /** MsgBatchCancelBinaryOptionsOrders sender. */
                public sender: string;

                /** MsgBatchCancelBinaryOptionsOrders data. */
                public data: injective.exchange.v1beta1.IOrderData[];

                /**
                 * Encodes the specified MsgBatchCancelBinaryOptionsOrders message. Does not implicitly {@link injective.exchange.v1beta1.MsgBatchCancelBinaryOptionsOrders.verify|verify} messages.
                 * @param message MsgBatchCancelBinaryOptionsOrders message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IMsgBatchCancelBinaryOptionsOrders, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgBatchCancelBinaryOptionsOrders message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.MsgBatchCancelBinaryOptionsOrders.verify|verify} messages.
                 * @param message MsgBatchCancelBinaryOptionsOrders message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IMsgBatchCancelBinaryOptionsOrders, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgBatchCancelBinaryOptionsOrders message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgBatchCancelBinaryOptionsOrders
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.MsgBatchCancelBinaryOptionsOrders;

                /**
                 * Decodes a MsgBatchCancelBinaryOptionsOrders message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgBatchCancelBinaryOptionsOrders
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.MsgBatchCancelBinaryOptionsOrders;

                /**
                 * Verifies a MsgBatchCancelBinaryOptionsOrders message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgBatchCancelBinaryOptionsOrders message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgBatchCancelBinaryOptionsOrders
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.MsgBatchCancelBinaryOptionsOrders;

                /**
                 * Creates a plain object from a MsgBatchCancelBinaryOptionsOrders message. Also converts values to other types if specified.
                 * @param message MsgBatchCancelBinaryOptionsOrders
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.MsgBatchCancelBinaryOptionsOrders, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgBatchCancelBinaryOptionsOrders to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgBatchCancelBinaryOptionsOrdersResponse. */
            interface IMsgBatchCancelBinaryOptionsOrdersResponse {

                /** MsgBatchCancelBinaryOptionsOrdersResponse success */
                success?: (boolean[]|null);
            }

            /** Represents a MsgBatchCancelBinaryOptionsOrdersResponse. */
            class MsgBatchCancelBinaryOptionsOrdersResponse implements IMsgBatchCancelBinaryOptionsOrdersResponse {

                /**
                 * Constructs a new MsgBatchCancelBinaryOptionsOrdersResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IMsgBatchCancelBinaryOptionsOrdersResponse);

                /** MsgBatchCancelBinaryOptionsOrdersResponse success. */
                public success: boolean[];

                /**
                 * Encodes the specified MsgBatchCancelBinaryOptionsOrdersResponse message. Does not implicitly {@link injective.exchange.v1beta1.MsgBatchCancelBinaryOptionsOrdersResponse.verify|verify} messages.
                 * @param message MsgBatchCancelBinaryOptionsOrdersResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IMsgBatchCancelBinaryOptionsOrdersResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgBatchCancelBinaryOptionsOrdersResponse message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.MsgBatchCancelBinaryOptionsOrdersResponse.verify|verify} messages.
                 * @param message MsgBatchCancelBinaryOptionsOrdersResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IMsgBatchCancelBinaryOptionsOrdersResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgBatchCancelBinaryOptionsOrdersResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgBatchCancelBinaryOptionsOrdersResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.MsgBatchCancelBinaryOptionsOrdersResponse;

                /**
                 * Decodes a MsgBatchCancelBinaryOptionsOrdersResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgBatchCancelBinaryOptionsOrdersResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.MsgBatchCancelBinaryOptionsOrdersResponse;

                /**
                 * Verifies a MsgBatchCancelBinaryOptionsOrdersResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgBatchCancelBinaryOptionsOrdersResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgBatchCancelBinaryOptionsOrdersResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.MsgBatchCancelBinaryOptionsOrdersResponse;

                /**
                 * Creates a plain object from a MsgBatchCancelBinaryOptionsOrdersResponse message. Also converts values to other types if specified.
                 * @param message MsgBatchCancelBinaryOptionsOrdersResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.MsgBatchCancelBinaryOptionsOrdersResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgBatchCancelBinaryOptionsOrdersResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgBatchUpdateOrders. */
            interface IMsgBatchUpdateOrders {

                /** MsgBatchUpdateOrders sender */
                sender?: (string|null);

                /** MsgBatchUpdateOrders subaccount_id */
                subaccount_id?: (string|null);

                /** MsgBatchUpdateOrders spot_market_ids_to_cancel_all */
                spot_market_ids_to_cancel_all?: (string[]|null);

                /** MsgBatchUpdateOrders derivative_market_ids_to_cancel_all */
                derivative_market_ids_to_cancel_all?: (string[]|null);

                /** MsgBatchUpdateOrders spot_orders_to_cancel */
                spot_orders_to_cancel?: (injective.exchange.v1beta1.IOrderData[]|null);

                /** MsgBatchUpdateOrders derivative_orders_to_cancel */
                derivative_orders_to_cancel?: (injective.exchange.v1beta1.IOrderData[]|null);

                /** MsgBatchUpdateOrders spot_orders_to_create */
                spot_orders_to_create?: (injective.exchange.v1beta1.ISpotOrder[]|null);

                /** MsgBatchUpdateOrders derivative_orders_to_create */
                derivative_orders_to_create?: (injective.exchange.v1beta1.IDerivativeOrder[]|null);

                /** MsgBatchUpdateOrders binary_options_orders_to_cancel */
                binary_options_orders_to_cancel?: (injective.exchange.v1beta1.IOrderData[]|null);

                /** MsgBatchUpdateOrders binary_options_market_ids_to_cancel_all */
                binary_options_market_ids_to_cancel_all?: (string[]|null);

                /** MsgBatchUpdateOrders binary_options_orders_to_create */
                binary_options_orders_to_create?: (injective.exchange.v1beta1.IDerivativeOrder[]|null);
            }

            /** Represents a MsgBatchUpdateOrders. */
            class MsgBatchUpdateOrders implements IMsgBatchUpdateOrders {

                /**
                 * Constructs a new MsgBatchUpdateOrders.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IMsgBatchUpdateOrders);

                /** MsgBatchUpdateOrders sender. */
                public sender: string;

                /** MsgBatchUpdateOrders subaccount_id. */
                public subaccount_id: string;

                /** MsgBatchUpdateOrders spot_market_ids_to_cancel_all. */
                public spot_market_ids_to_cancel_all: string[];

                /** MsgBatchUpdateOrders derivative_market_ids_to_cancel_all. */
                public derivative_market_ids_to_cancel_all: string[];

                /** MsgBatchUpdateOrders spot_orders_to_cancel. */
                public spot_orders_to_cancel: injective.exchange.v1beta1.IOrderData[];

                /** MsgBatchUpdateOrders derivative_orders_to_cancel. */
                public derivative_orders_to_cancel: injective.exchange.v1beta1.IOrderData[];

                /** MsgBatchUpdateOrders spot_orders_to_create. */
                public spot_orders_to_create: injective.exchange.v1beta1.ISpotOrder[];

                /** MsgBatchUpdateOrders derivative_orders_to_create. */
                public derivative_orders_to_create: injective.exchange.v1beta1.IDerivativeOrder[];

                /** MsgBatchUpdateOrders binary_options_orders_to_cancel. */
                public binary_options_orders_to_cancel: injective.exchange.v1beta1.IOrderData[];

                /** MsgBatchUpdateOrders binary_options_market_ids_to_cancel_all. */
                public binary_options_market_ids_to_cancel_all: string[];

                /** MsgBatchUpdateOrders binary_options_orders_to_create. */
                public binary_options_orders_to_create: injective.exchange.v1beta1.IDerivativeOrder[];

                /**
                 * Encodes the specified MsgBatchUpdateOrders message. Does not implicitly {@link injective.exchange.v1beta1.MsgBatchUpdateOrders.verify|verify} messages.
                 * @param message MsgBatchUpdateOrders message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IMsgBatchUpdateOrders, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgBatchUpdateOrders message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.MsgBatchUpdateOrders.verify|verify} messages.
                 * @param message MsgBatchUpdateOrders message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IMsgBatchUpdateOrders, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgBatchUpdateOrders message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgBatchUpdateOrders
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.MsgBatchUpdateOrders;

                /**
                 * Decodes a MsgBatchUpdateOrders message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgBatchUpdateOrders
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.MsgBatchUpdateOrders;

                /**
                 * Verifies a MsgBatchUpdateOrders message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgBatchUpdateOrders message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgBatchUpdateOrders
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.MsgBatchUpdateOrders;

                /**
                 * Creates a plain object from a MsgBatchUpdateOrders message. Also converts values to other types if specified.
                 * @param message MsgBatchUpdateOrders
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.MsgBatchUpdateOrders, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgBatchUpdateOrders to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgBatchUpdateOrdersResponse. */
            interface IMsgBatchUpdateOrdersResponse {

                /** MsgBatchUpdateOrdersResponse spot_cancel_success */
                spot_cancel_success?: (boolean[]|null);

                /** MsgBatchUpdateOrdersResponse derivative_cancel_success */
                derivative_cancel_success?: (boolean[]|null);

                /** MsgBatchUpdateOrdersResponse spot_order_hashes */
                spot_order_hashes?: (string[]|null);

                /** MsgBatchUpdateOrdersResponse derivative_order_hashes */
                derivative_order_hashes?: (string[]|null);

                /** MsgBatchUpdateOrdersResponse binary_options_cancel_success */
                binary_options_cancel_success?: (boolean[]|null);

                /** MsgBatchUpdateOrdersResponse binary_options_order_hashes */
                binary_options_order_hashes?: (string[]|null);
            }

            /** Represents a MsgBatchUpdateOrdersResponse. */
            class MsgBatchUpdateOrdersResponse implements IMsgBatchUpdateOrdersResponse {

                /**
                 * Constructs a new MsgBatchUpdateOrdersResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IMsgBatchUpdateOrdersResponse);

                /** MsgBatchUpdateOrdersResponse spot_cancel_success. */
                public spot_cancel_success: boolean[];

                /** MsgBatchUpdateOrdersResponse derivative_cancel_success. */
                public derivative_cancel_success: boolean[];

                /** MsgBatchUpdateOrdersResponse spot_order_hashes. */
                public spot_order_hashes: string[];

                /** MsgBatchUpdateOrdersResponse derivative_order_hashes. */
                public derivative_order_hashes: string[];

                /** MsgBatchUpdateOrdersResponse binary_options_cancel_success. */
                public binary_options_cancel_success: boolean[];

                /** MsgBatchUpdateOrdersResponse binary_options_order_hashes. */
                public binary_options_order_hashes: string[];

                /**
                 * Encodes the specified MsgBatchUpdateOrdersResponse message. Does not implicitly {@link injective.exchange.v1beta1.MsgBatchUpdateOrdersResponse.verify|verify} messages.
                 * @param message MsgBatchUpdateOrdersResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IMsgBatchUpdateOrdersResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgBatchUpdateOrdersResponse message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.MsgBatchUpdateOrdersResponse.verify|verify} messages.
                 * @param message MsgBatchUpdateOrdersResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IMsgBatchUpdateOrdersResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgBatchUpdateOrdersResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgBatchUpdateOrdersResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.MsgBatchUpdateOrdersResponse;

                /**
                 * Decodes a MsgBatchUpdateOrdersResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgBatchUpdateOrdersResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.MsgBatchUpdateOrdersResponse;

                /**
                 * Verifies a MsgBatchUpdateOrdersResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgBatchUpdateOrdersResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgBatchUpdateOrdersResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.MsgBatchUpdateOrdersResponse;

                /**
                 * Creates a plain object from a MsgBatchUpdateOrdersResponse message. Also converts values to other types if specified.
                 * @param message MsgBatchUpdateOrdersResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.MsgBatchUpdateOrdersResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgBatchUpdateOrdersResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgCreateDerivativeMarketOrder. */
            interface IMsgCreateDerivativeMarketOrder {

                /** MsgCreateDerivativeMarketOrder sender */
                sender?: (string|null);

                /** MsgCreateDerivativeMarketOrder order */
                order?: (injective.exchange.v1beta1.IDerivativeOrder|null);
            }

            /** Represents a MsgCreateDerivativeMarketOrder. */
            class MsgCreateDerivativeMarketOrder implements IMsgCreateDerivativeMarketOrder {

                /**
                 * Constructs a new MsgCreateDerivativeMarketOrder.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IMsgCreateDerivativeMarketOrder);

                /** MsgCreateDerivativeMarketOrder sender. */
                public sender: string;

                /** MsgCreateDerivativeMarketOrder order. */
                public order?: (injective.exchange.v1beta1.IDerivativeOrder|null);

                /**
                 * Encodes the specified MsgCreateDerivativeMarketOrder message. Does not implicitly {@link injective.exchange.v1beta1.MsgCreateDerivativeMarketOrder.verify|verify} messages.
                 * @param message MsgCreateDerivativeMarketOrder message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IMsgCreateDerivativeMarketOrder, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgCreateDerivativeMarketOrder message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.MsgCreateDerivativeMarketOrder.verify|verify} messages.
                 * @param message MsgCreateDerivativeMarketOrder message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IMsgCreateDerivativeMarketOrder, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgCreateDerivativeMarketOrder message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgCreateDerivativeMarketOrder
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.MsgCreateDerivativeMarketOrder;

                /**
                 * Decodes a MsgCreateDerivativeMarketOrder message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgCreateDerivativeMarketOrder
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.MsgCreateDerivativeMarketOrder;

                /**
                 * Verifies a MsgCreateDerivativeMarketOrder message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgCreateDerivativeMarketOrder message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgCreateDerivativeMarketOrder
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.MsgCreateDerivativeMarketOrder;

                /**
                 * Creates a plain object from a MsgCreateDerivativeMarketOrder message. Also converts values to other types if specified.
                 * @param message MsgCreateDerivativeMarketOrder
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.MsgCreateDerivativeMarketOrder, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgCreateDerivativeMarketOrder to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgCreateDerivativeMarketOrderResponse. */
            interface IMsgCreateDerivativeMarketOrderResponse {

                /** MsgCreateDerivativeMarketOrderResponse order_hash */
                order_hash?: (string|null);

                /** MsgCreateDerivativeMarketOrderResponse results */
                results?: (injective.exchange.v1beta1.IDerivativeMarketOrderResults|null);
            }

            /** Represents a MsgCreateDerivativeMarketOrderResponse. */
            class MsgCreateDerivativeMarketOrderResponse implements IMsgCreateDerivativeMarketOrderResponse {

                /**
                 * Constructs a new MsgCreateDerivativeMarketOrderResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IMsgCreateDerivativeMarketOrderResponse);

                /** MsgCreateDerivativeMarketOrderResponse order_hash. */
                public order_hash: string;

                /** MsgCreateDerivativeMarketOrderResponse results. */
                public results?: (injective.exchange.v1beta1.IDerivativeMarketOrderResults|null);

                /**
                 * Encodes the specified MsgCreateDerivativeMarketOrderResponse message. Does not implicitly {@link injective.exchange.v1beta1.MsgCreateDerivativeMarketOrderResponse.verify|verify} messages.
                 * @param message MsgCreateDerivativeMarketOrderResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IMsgCreateDerivativeMarketOrderResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgCreateDerivativeMarketOrderResponse message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.MsgCreateDerivativeMarketOrderResponse.verify|verify} messages.
                 * @param message MsgCreateDerivativeMarketOrderResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IMsgCreateDerivativeMarketOrderResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgCreateDerivativeMarketOrderResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgCreateDerivativeMarketOrderResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.MsgCreateDerivativeMarketOrderResponse;

                /**
                 * Decodes a MsgCreateDerivativeMarketOrderResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgCreateDerivativeMarketOrderResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.MsgCreateDerivativeMarketOrderResponse;

                /**
                 * Verifies a MsgCreateDerivativeMarketOrderResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgCreateDerivativeMarketOrderResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgCreateDerivativeMarketOrderResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.MsgCreateDerivativeMarketOrderResponse;

                /**
                 * Creates a plain object from a MsgCreateDerivativeMarketOrderResponse message. Also converts values to other types if specified.
                 * @param message MsgCreateDerivativeMarketOrderResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.MsgCreateDerivativeMarketOrderResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgCreateDerivativeMarketOrderResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a DerivativeMarketOrderResults. */
            interface IDerivativeMarketOrderResults {

                /** DerivativeMarketOrderResults quantity */
                quantity?: (string|null);

                /** DerivativeMarketOrderResults price */
                price?: (string|null);

                /** DerivativeMarketOrderResults fee */
                fee?: (string|null);

                /** DerivativeMarketOrderResults position_delta */
                position_delta?: (injective.exchange.v1beta1.IPositionDelta|null);

                /** DerivativeMarketOrderResults payout */
                payout?: (string|null);
            }

            /** Represents a DerivativeMarketOrderResults. */
            class DerivativeMarketOrderResults implements IDerivativeMarketOrderResults {

                /**
                 * Constructs a new DerivativeMarketOrderResults.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IDerivativeMarketOrderResults);

                /** DerivativeMarketOrderResults quantity. */
                public quantity: string;

                /** DerivativeMarketOrderResults price. */
                public price: string;

                /** DerivativeMarketOrderResults fee. */
                public fee: string;

                /** DerivativeMarketOrderResults position_delta. */
                public position_delta?: (injective.exchange.v1beta1.IPositionDelta|null);

                /** DerivativeMarketOrderResults payout. */
                public payout: string;

                /**
                 * Encodes the specified DerivativeMarketOrderResults message. Does not implicitly {@link injective.exchange.v1beta1.DerivativeMarketOrderResults.verify|verify} messages.
                 * @param message DerivativeMarketOrderResults message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IDerivativeMarketOrderResults, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DerivativeMarketOrderResults message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.DerivativeMarketOrderResults.verify|verify} messages.
                 * @param message DerivativeMarketOrderResults message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IDerivativeMarketOrderResults, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DerivativeMarketOrderResults message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DerivativeMarketOrderResults
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.DerivativeMarketOrderResults;

                /**
                 * Decodes a DerivativeMarketOrderResults message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DerivativeMarketOrderResults
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.DerivativeMarketOrderResults;

                /**
                 * Verifies a DerivativeMarketOrderResults message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DerivativeMarketOrderResults message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DerivativeMarketOrderResults
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.DerivativeMarketOrderResults;

                /**
                 * Creates a plain object from a DerivativeMarketOrderResults message. Also converts values to other types if specified.
                 * @param message DerivativeMarketOrderResults
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.DerivativeMarketOrderResults, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DerivativeMarketOrderResults to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgCreateBinaryOptionsMarketOrder. */
            interface IMsgCreateBinaryOptionsMarketOrder {

                /** MsgCreateBinaryOptionsMarketOrder sender */
                sender?: (string|null);

                /** MsgCreateBinaryOptionsMarketOrder order */
                order?: (injective.exchange.v1beta1.IDerivativeOrder|null);
            }

            /** Represents a MsgCreateBinaryOptionsMarketOrder. */
            class MsgCreateBinaryOptionsMarketOrder implements IMsgCreateBinaryOptionsMarketOrder {

                /**
                 * Constructs a new MsgCreateBinaryOptionsMarketOrder.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IMsgCreateBinaryOptionsMarketOrder);

                /** MsgCreateBinaryOptionsMarketOrder sender. */
                public sender: string;

                /** MsgCreateBinaryOptionsMarketOrder order. */
                public order?: (injective.exchange.v1beta1.IDerivativeOrder|null);

                /**
                 * Encodes the specified MsgCreateBinaryOptionsMarketOrder message. Does not implicitly {@link injective.exchange.v1beta1.MsgCreateBinaryOptionsMarketOrder.verify|verify} messages.
                 * @param message MsgCreateBinaryOptionsMarketOrder message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IMsgCreateBinaryOptionsMarketOrder, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgCreateBinaryOptionsMarketOrder message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.MsgCreateBinaryOptionsMarketOrder.verify|verify} messages.
                 * @param message MsgCreateBinaryOptionsMarketOrder message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IMsgCreateBinaryOptionsMarketOrder, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgCreateBinaryOptionsMarketOrder message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgCreateBinaryOptionsMarketOrder
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.MsgCreateBinaryOptionsMarketOrder;

                /**
                 * Decodes a MsgCreateBinaryOptionsMarketOrder message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgCreateBinaryOptionsMarketOrder
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.MsgCreateBinaryOptionsMarketOrder;

                /**
                 * Verifies a MsgCreateBinaryOptionsMarketOrder message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgCreateBinaryOptionsMarketOrder message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgCreateBinaryOptionsMarketOrder
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.MsgCreateBinaryOptionsMarketOrder;

                /**
                 * Creates a plain object from a MsgCreateBinaryOptionsMarketOrder message. Also converts values to other types if specified.
                 * @param message MsgCreateBinaryOptionsMarketOrder
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.MsgCreateBinaryOptionsMarketOrder, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgCreateBinaryOptionsMarketOrder to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgCreateBinaryOptionsMarketOrderResponse. */
            interface IMsgCreateBinaryOptionsMarketOrderResponse {

                /** MsgCreateBinaryOptionsMarketOrderResponse order_hash */
                order_hash?: (string|null);

                /** MsgCreateBinaryOptionsMarketOrderResponse results */
                results?: (injective.exchange.v1beta1.IDerivativeMarketOrderResults|null);
            }

            /** Represents a MsgCreateBinaryOptionsMarketOrderResponse. */
            class MsgCreateBinaryOptionsMarketOrderResponse implements IMsgCreateBinaryOptionsMarketOrderResponse {

                /**
                 * Constructs a new MsgCreateBinaryOptionsMarketOrderResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IMsgCreateBinaryOptionsMarketOrderResponse);

                /** MsgCreateBinaryOptionsMarketOrderResponse order_hash. */
                public order_hash: string;

                /** MsgCreateBinaryOptionsMarketOrderResponse results. */
                public results?: (injective.exchange.v1beta1.IDerivativeMarketOrderResults|null);

                /**
                 * Encodes the specified MsgCreateBinaryOptionsMarketOrderResponse message. Does not implicitly {@link injective.exchange.v1beta1.MsgCreateBinaryOptionsMarketOrderResponse.verify|verify} messages.
                 * @param message MsgCreateBinaryOptionsMarketOrderResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IMsgCreateBinaryOptionsMarketOrderResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgCreateBinaryOptionsMarketOrderResponse message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.MsgCreateBinaryOptionsMarketOrderResponse.verify|verify} messages.
                 * @param message MsgCreateBinaryOptionsMarketOrderResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IMsgCreateBinaryOptionsMarketOrderResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgCreateBinaryOptionsMarketOrderResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgCreateBinaryOptionsMarketOrderResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.MsgCreateBinaryOptionsMarketOrderResponse;

                /**
                 * Decodes a MsgCreateBinaryOptionsMarketOrderResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgCreateBinaryOptionsMarketOrderResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.MsgCreateBinaryOptionsMarketOrderResponse;

                /**
                 * Verifies a MsgCreateBinaryOptionsMarketOrderResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgCreateBinaryOptionsMarketOrderResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgCreateBinaryOptionsMarketOrderResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.MsgCreateBinaryOptionsMarketOrderResponse;

                /**
                 * Creates a plain object from a MsgCreateBinaryOptionsMarketOrderResponse message. Also converts values to other types if specified.
                 * @param message MsgCreateBinaryOptionsMarketOrderResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.MsgCreateBinaryOptionsMarketOrderResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgCreateBinaryOptionsMarketOrderResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgCancelDerivativeOrder. */
            interface IMsgCancelDerivativeOrder {

                /** MsgCancelDerivativeOrder sender */
                sender?: (string|null);

                /** MsgCancelDerivativeOrder market_id */
                market_id?: (string|null);

                /** MsgCancelDerivativeOrder subaccount_id */
                subaccount_id?: (string|null);

                /** MsgCancelDerivativeOrder order_hash */
                order_hash?: (string|null);

                /** MsgCancelDerivativeOrder order_mask */
                order_mask?: (number|null);
            }

            /** Represents a MsgCancelDerivativeOrder. */
            class MsgCancelDerivativeOrder implements IMsgCancelDerivativeOrder {

                /**
                 * Constructs a new MsgCancelDerivativeOrder.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IMsgCancelDerivativeOrder);

                /** MsgCancelDerivativeOrder sender. */
                public sender: string;

                /** MsgCancelDerivativeOrder market_id. */
                public market_id: string;

                /** MsgCancelDerivativeOrder subaccount_id. */
                public subaccount_id: string;

                /** MsgCancelDerivativeOrder order_hash. */
                public order_hash: string;

                /** MsgCancelDerivativeOrder order_mask. */
                public order_mask: number;

                /**
                 * Encodes the specified MsgCancelDerivativeOrder message. Does not implicitly {@link injective.exchange.v1beta1.MsgCancelDerivativeOrder.verify|verify} messages.
                 * @param message MsgCancelDerivativeOrder message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IMsgCancelDerivativeOrder, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgCancelDerivativeOrder message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.MsgCancelDerivativeOrder.verify|verify} messages.
                 * @param message MsgCancelDerivativeOrder message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IMsgCancelDerivativeOrder, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgCancelDerivativeOrder message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgCancelDerivativeOrder
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.MsgCancelDerivativeOrder;

                /**
                 * Decodes a MsgCancelDerivativeOrder message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgCancelDerivativeOrder
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.MsgCancelDerivativeOrder;

                /**
                 * Verifies a MsgCancelDerivativeOrder message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgCancelDerivativeOrder message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgCancelDerivativeOrder
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.MsgCancelDerivativeOrder;

                /**
                 * Creates a plain object from a MsgCancelDerivativeOrder message. Also converts values to other types if specified.
                 * @param message MsgCancelDerivativeOrder
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.MsgCancelDerivativeOrder, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgCancelDerivativeOrder to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgCancelDerivativeOrderResponse. */
            interface IMsgCancelDerivativeOrderResponse {
            }

            /** Represents a MsgCancelDerivativeOrderResponse. */
            class MsgCancelDerivativeOrderResponse implements IMsgCancelDerivativeOrderResponse {

                /**
                 * Constructs a new MsgCancelDerivativeOrderResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IMsgCancelDerivativeOrderResponse);

                /**
                 * Encodes the specified MsgCancelDerivativeOrderResponse message. Does not implicitly {@link injective.exchange.v1beta1.MsgCancelDerivativeOrderResponse.verify|verify} messages.
                 * @param message MsgCancelDerivativeOrderResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IMsgCancelDerivativeOrderResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgCancelDerivativeOrderResponse message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.MsgCancelDerivativeOrderResponse.verify|verify} messages.
                 * @param message MsgCancelDerivativeOrderResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IMsgCancelDerivativeOrderResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgCancelDerivativeOrderResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgCancelDerivativeOrderResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.MsgCancelDerivativeOrderResponse;

                /**
                 * Decodes a MsgCancelDerivativeOrderResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgCancelDerivativeOrderResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.MsgCancelDerivativeOrderResponse;

                /**
                 * Verifies a MsgCancelDerivativeOrderResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgCancelDerivativeOrderResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgCancelDerivativeOrderResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.MsgCancelDerivativeOrderResponse;

                /**
                 * Creates a plain object from a MsgCancelDerivativeOrderResponse message. Also converts values to other types if specified.
                 * @param message MsgCancelDerivativeOrderResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.MsgCancelDerivativeOrderResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgCancelDerivativeOrderResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgCancelBinaryOptionsOrder. */
            interface IMsgCancelBinaryOptionsOrder {

                /** MsgCancelBinaryOptionsOrder sender */
                sender?: (string|null);

                /** MsgCancelBinaryOptionsOrder market_id */
                market_id?: (string|null);

                /** MsgCancelBinaryOptionsOrder subaccount_id */
                subaccount_id?: (string|null);

                /** MsgCancelBinaryOptionsOrder order_hash */
                order_hash?: (string|null);

                /** MsgCancelBinaryOptionsOrder order_mask */
                order_mask?: (number|null);
            }

            /** Represents a MsgCancelBinaryOptionsOrder. */
            class MsgCancelBinaryOptionsOrder implements IMsgCancelBinaryOptionsOrder {

                /**
                 * Constructs a new MsgCancelBinaryOptionsOrder.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IMsgCancelBinaryOptionsOrder);

                /** MsgCancelBinaryOptionsOrder sender. */
                public sender: string;

                /** MsgCancelBinaryOptionsOrder market_id. */
                public market_id: string;

                /** MsgCancelBinaryOptionsOrder subaccount_id. */
                public subaccount_id: string;

                /** MsgCancelBinaryOptionsOrder order_hash. */
                public order_hash: string;

                /** MsgCancelBinaryOptionsOrder order_mask. */
                public order_mask: number;

                /**
                 * Encodes the specified MsgCancelBinaryOptionsOrder message. Does not implicitly {@link injective.exchange.v1beta1.MsgCancelBinaryOptionsOrder.verify|verify} messages.
                 * @param message MsgCancelBinaryOptionsOrder message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IMsgCancelBinaryOptionsOrder, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgCancelBinaryOptionsOrder message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.MsgCancelBinaryOptionsOrder.verify|verify} messages.
                 * @param message MsgCancelBinaryOptionsOrder message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IMsgCancelBinaryOptionsOrder, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgCancelBinaryOptionsOrder message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgCancelBinaryOptionsOrder
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.MsgCancelBinaryOptionsOrder;

                /**
                 * Decodes a MsgCancelBinaryOptionsOrder message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgCancelBinaryOptionsOrder
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.MsgCancelBinaryOptionsOrder;

                /**
                 * Verifies a MsgCancelBinaryOptionsOrder message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgCancelBinaryOptionsOrder message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgCancelBinaryOptionsOrder
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.MsgCancelBinaryOptionsOrder;

                /**
                 * Creates a plain object from a MsgCancelBinaryOptionsOrder message. Also converts values to other types if specified.
                 * @param message MsgCancelBinaryOptionsOrder
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.MsgCancelBinaryOptionsOrder, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgCancelBinaryOptionsOrder to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgCancelBinaryOptionsOrderResponse. */
            interface IMsgCancelBinaryOptionsOrderResponse {
            }

            /** Represents a MsgCancelBinaryOptionsOrderResponse. */
            class MsgCancelBinaryOptionsOrderResponse implements IMsgCancelBinaryOptionsOrderResponse {

                /**
                 * Constructs a new MsgCancelBinaryOptionsOrderResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IMsgCancelBinaryOptionsOrderResponse);

                /**
                 * Encodes the specified MsgCancelBinaryOptionsOrderResponse message. Does not implicitly {@link injective.exchange.v1beta1.MsgCancelBinaryOptionsOrderResponse.verify|verify} messages.
                 * @param message MsgCancelBinaryOptionsOrderResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IMsgCancelBinaryOptionsOrderResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgCancelBinaryOptionsOrderResponse message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.MsgCancelBinaryOptionsOrderResponse.verify|verify} messages.
                 * @param message MsgCancelBinaryOptionsOrderResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IMsgCancelBinaryOptionsOrderResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgCancelBinaryOptionsOrderResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgCancelBinaryOptionsOrderResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.MsgCancelBinaryOptionsOrderResponse;

                /**
                 * Decodes a MsgCancelBinaryOptionsOrderResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgCancelBinaryOptionsOrderResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.MsgCancelBinaryOptionsOrderResponse;

                /**
                 * Verifies a MsgCancelBinaryOptionsOrderResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgCancelBinaryOptionsOrderResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgCancelBinaryOptionsOrderResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.MsgCancelBinaryOptionsOrderResponse;

                /**
                 * Creates a plain object from a MsgCancelBinaryOptionsOrderResponse message. Also converts values to other types if specified.
                 * @param message MsgCancelBinaryOptionsOrderResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.MsgCancelBinaryOptionsOrderResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgCancelBinaryOptionsOrderResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an OrderData. */
            interface IOrderData {

                /** OrderData market_id */
                market_id?: (string|null);

                /** OrderData subaccount_id */
                subaccount_id?: (string|null);

                /** OrderData order_hash */
                order_hash?: (string|null);

                /** OrderData order_mask */
                order_mask?: (number|null);
            }

            /** Represents an OrderData. */
            class OrderData implements IOrderData {

                /**
                 * Constructs a new OrderData.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IOrderData);

                /** OrderData market_id. */
                public market_id: string;

                /** OrderData subaccount_id. */
                public subaccount_id: string;

                /** OrderData order_hash. */
                public order_hash: string;

                /** OrderData order_mask. */
                public order_mask: number;

                /**
                 * Encodes the specified OrderData message. Does not implicitly {@link injective.exchange.v1beta1.OrderData.verify|verify} messages.
                 * @param message OrderData message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IOrderData, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified OrderData message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.OrderData.verify|verify} messages.
                 * @param message OrderData message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IOrderData, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an OrderData message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns OrderData
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.OrderData;

                /**
                 * Decodes an OrderData message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns OrderData
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.OrderData;

                /**
                 * Verifies an OrderData message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an OrderData message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns OrderData
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.OrderData;

                /**
                 * Creates a plain object from an OrderData message. Also converts values to other types if specified.
                 * @param message OrderData
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.OrderData, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this OrderData to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgBatchCancelDerivativeOrders. */
            interface IMsgBatchCancelDerivativeOrders {

                /** MsgBatchCancelDerivativeOrders sender */
                sender?: (string|null);

                /** MsgBatchCancelDerivativeOrders data */
                data?: (injective.exchange.v1beta1.IOrderData[]|null);
            }

            /** Represents a MsgBatchCancelDerivativeOrders. */
            class MsgBatchCancelDerivativeOrders implements IMsgBatchCancelDerivativeOrders {

                /**
                 * Constructs a new MsgBatchCancelDerivativeOrders.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IMsgBatchCancelDerivativeOrders);

                /** MsgBatchCancelDerivativeOrders sender. */
                public sender: string;

                /** MsgBatchCancelDerivativeOrders data. */
                public data: injective.exchange.v1beta1.IOrderData[];

                /**
                 * Encodes the specified MsgBatchCancelDerivativeOrders message. Does not implicitly {@link injective.exchange.v1beta1.MsgBatchCancelDerivativeOrders.verify|verify} messages.
                 * @param message MsgBatchCancelDerivativeOrders message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IMsgBatchCancelDerivativeOrders, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgBatchCancelDerivativeOrders message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.MsgBatchCancelDerivativeOrders.verify|verify} messages.
                 * @param message MsgBatchCancelDerivativeOrders message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IMsgBatchCancelDerivativeOrders, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgBatchCancelDerivativeOrders message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgBatchCancelDerivativeOrders
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.MsgBatchCancelDerivativeOrders;

                /**
                 * Decodes a MsgBatchCancelDerivativeOrders message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgBatchCancelDerivativeOrders
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.MsgBatchCancelDerivativeOrders;

                /**
                 * Verifies a MsgBatchCancelDerivativeOrders message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgBatchCancelDerivativeOrders message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgBatchCancelDerivativeOrders
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.MsgBatchCancelDerivativeOrders;

                /**
                 * Creates a plain object from a MsgBatchCancelDerivativeOrders message. Also converts values to other types if specified.
                 * @param message MsgBatchCancelDerivativeOrders
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.MsgBatchCancelDerivativeOrders, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgBatchCancelDerivativeOrders to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgBatchCancelDerivativeOrdersResponse. */
            interface IMsgBatchCancelDerivativeOrdersResponse {

                /** MsgBatchCancelDerivativeOrdersResponse success */
                success?: (boolean[]|null);
            }

            /** Represents a MsgBatchCancelDerivativeOrdersResponse. */
            class MsgBatchCancelDerivativeOrdersResponse implements IMsgBatchCancelDerivativeOrdersResponse {

                /**
                 * Constructs a new MsgBatchCancelDerivativeOrdersResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IMsgBatchCancelDerivativeOrdersResponse);

                /** MsgBatchCancelDerivativeOrdersResponse success. */
                public success: boolean[];

                /**
                 * Encodes the specified MsgBatchCancelDerivativeOrdersResponse message. Does not implicitly {@link injective.exchange.v1beta1.MsgBatchCancelDerivativeOrdersResponse.verify|verify} messages.
                 * @param message MsgBatchCancelDerivativeOrdersResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IMsgBatchCancelDerivativeOrdersResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgBatchCancelDerivativeOrdersResponse message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.MsgBatchCancelDerivativeOrdersResponse.verify|verify} messages.
                 * @param message MsgBatchCancelDerivativeOrdersResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IMsgBatchCancelDerivativeOrdersResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgBatchCancelDerivativeOrdersResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgBatchCancelDerivativeOrdersResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.MsgBatchCancelDerivativeOrdersResponse;

                /**
                 * Decodes a MsgBatchCancelDerivativeOrdersResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgBatchCancelDerivativeOrdersResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.MsgBatchCancelDerivativeOrdersResponse;

                /**
                 * Verifies a MsgBatchCancelDerivativeOrdersResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgBatchCancelDerivativeOrdersResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgBatchCancelDerivativeOrdersResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.MsgBatchCancelDerivativeOrdersResponse;

                /**
                 * Creates a plain object from a MsgBatchCancelDerivativeOrdersResponse message. Also converts values to other types if specified.
                 * @param message MsgBatchCancelDerivativeOrdersResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.MsgBatchCancelDerivativeOrdersResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgBatchCancelDerivativeOrdersResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgSubaccountTransfer. */
            interface IMsgSubaccountTransfer {

                /** MsgSubaccountTransfer sender */
                sender?: (string|null);

                /** MsgSubaccountTransfer source_subaccount_id */
                source_subaccount_id?: (string|null);

                /** MsgSubaccountTransfer destination_subaccount_id */
                destination_subaccount_id?: (string|null);

                /** MsgSubaccountTransfer amount */
                amount?: (cosmos.base.v1beta1.ICoin|null);
            }

            /** Represents a MsgSubaccountTransfer. */
            class MsgSubaccountTransfer implements IMsgSubaccountTransfer {

                /**
                 * Constructs a new MsgSubaccountTransfer.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IMsgSubaccountTransfer);

                /** MsgSubaccountTransfer sender. */
                public sender: string;

                /** MsgSubaccountTransfer source_subaccount_id. */
                public source_subaccount_id: string;

                /** MsgSubaccountTransfer destination_subaccount_id. */
                public destination_subaccount_id: string;

                /** MsgSubaccountTransfer amount. */
                public amount?: (cosmos.base.v1beta1.ICoin|null);

                /**
                 * Encodes the specified MsgSubaccountTransfer message. Does not implicitly {@link injective.exchange.v1beta1.MsgSubaccountTransfer.verify|verify} messages.
                 * @param message MsgSubaccountTransfer message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IMsgSubaccountTransfer, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgSubaccountTransfer message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.MsgSubaccountTransfer.verify|verify} messages.
                 * @param message MsgSubaccountTransfer message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IMsgSubaccountTransfer, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgSubaccountTransfer message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgSubaccountTransfer
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.MsgSubaccountTransfer;

                /**
                 * Decodes a MsgSubaccountTransfer message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgSubaccountTransfer
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.MsgSubaccountTransfer;

                /**
                 * Verifies a MsgSubaccountTransfer message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgSubaccountTransfer message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgSubaccountTransfer
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.MsgSubaccountTransfer;

                /**
                 * Creates a plain object from a MsgSubaccountTransfer message. Also converts values to other types if specified.
                 * @param message MsgSubaccountTransfer
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.MsgSubaccountTransfer, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgSubaccountTransfer to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgSubaccountTransferResponse. */
            interface IMsgSubaccountTransferResponse {
            }

            /** Represents a MsgSubaccountTransferResponse. */
            class MsgSubaccountTransferResponse implements IMsgSubaccountTransferResponse {

                /**
                 * Constructs a new MsgSubaccountTransferResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IMsgSubaccountTransferResponse);

                /**
                 * Encodes the specified MsgSubaccountTransferResponse message. Does not implicitly {@link injective.exchange.v1beta1.MsgSubaccountTransferResponse.verify|verify} messages.
                 * @param message MsgSubaccountTransferResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IMsgSubaccountTransferResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgSubaccountTransferResponse message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.MsgSubaccountTransferResponse.verify|verify} messages.
                 * @param message MsgSubaccountTransferResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IMsgSubaccountTransferResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgSubaccountTransferResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgSubaccountTransferResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.MsgSubaccountTransferResponse;

                /**
                 * Decodes a MsgSubaccountTransferResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgSubaccountTransferResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.MsgSubaccountTransferResponse;

                /**
                 * Verifies a MsgSubaccountTransferResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgSubaccountTransferResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgSubaccountTransferResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.MsgSubaccountTransferResponse;

                /**
                 * Creates a plain object from a MsgSubaccountTransferResponse message. Also converts values to other types if specified.
                 * @param message MsgSubaccountTransferResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.MsgSubaccountTransferResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgSubaccountTransferResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgExternalTransfer. */
            interface IMsgExternalTransfer {

                /** MsgExternalTransfer sender */
                sender?: (string|null);

                /** MsgExternalTransfer source_subaccount_id */
                source_subaccount_id?: (string|null);

                /** MsgExternalTransfer destination_subaccount_id */
                destination_subaccount_id?: (string|null);

                /** MsgExternalTransfer amount */
                amount?: (cosmos.base.v1beta1.ICoin|null);
            }

            /** Represents a MsgExternalTransfer. */
            class MsgExternalTransfer implements IMsgExternalTransfer {

                /**
                 * Constructs a new MsgExternalTransfer.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IMsgExternalTransfer);

                /** MsgExternalTransfer sender. */
                public sender: string;

                /** MsgExternalTransfer source_subaccount_id. */
                public source_subaccount_id: string;

                /** MsgExternalTransfer destination_subaccount_id. */
                public destination_subaccount_id: string;

                /** MsgExternalTransfer amount. */
                public amount?: (cosmos.base.v1beta1.ICoin|null);

                /**
                 * Encodes the specified MsgExternalTransfer message. Does not implicitly {@link injective.exchange.v1beta1.MsgExternalTransfer.verify|verify} messages.
                 * @param message MsgExternalTransfer message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IMsgExternalTransfer, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgExternalTransfer message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.MsgExternalTransfer.verify|verify} messages.
                 * @param message MsgExternalTransfer message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IMsgExternalTransfer, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgExternalTransfer message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgExternalTransfer
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.MsgExternalTransfer;

                /**
                 * Decodes a MsgExternalTransfer message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgExternalTransfer
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.MsgExternalTransfer;

                /**
                 * Verifies a MsgExternalTransfer message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgExternalTransfer message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgExternalTransfer
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.MsgExternalTransfer;

                /**
                 * Creates a plain object from a MsgExternalTransfer message. Also converts values to other types if specified.
                 * @param message MsgExternalTransfer
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.MsgExternalTransfer, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgExternalTransfer to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgExternalTransferResponse. */
            interface IMsgExternalTransferResponse {
            }

            /** Represents a MsgExternalTransferResponse. */
            class MsgExternalTransferResponse implements IMsgExternalTransferResponse {

                /**
                 * Constructs a new MsgExternalTransferResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IMsgExternalTransferResponse);

                /**
                 * Encodes the specified MsgExternalTransferResponse message. Does not implicitly {@link injective.exchange.v1beta1.MsgExternalTransferResponse.verify|verify} messages.
                 * @param message MsgExternalTransferResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IMsgExternalTransferResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgExternalTransferResponse message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.MsgExternalTransferResponse.verify|verify} messages.
                 * @param message MsgExternalTransferResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IMsgExternalTransferResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgExternalTransferResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgExternalTransferResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.MsgExternalTransferResponse;

                /**
                 * Decodes a MsgExternalTransferResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgExternalTransferResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.MsgExternalTransferResponse;

                /**
                 * Verifies a MsgExternalTransferResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgExternalTransferResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgExternalTransferResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.MsgExternalTransferResponse;

                /**
                 * Creates a plain object from a MsgExternalTransferResponse message. Also converts values to other types if specified.
                 * @param message MsgExternalTransferResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.MsgExternalTransferResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgExternalTransferResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgLiquidatePosition. */
            interface IMsgLiquidatePosition {

                /** MsgLiquidatePosition sender */
                sender?: (string|null);

                /** MsgLiquidatePosition subaccount_id */
                subaccount_id?: (string|null);

                /** MsgLiquidatePosition market_id */
                market_id?: (string|null);

                /** MsgLiquidatePosition order */
                order?: (injective.exchange.v1beta1.IDerivativeOrder|null);
            }

            /** Represents a MsgLiquidatePosition. */
            class MsgLiquidatePosition implements IMsgLiquidatePosition {

                /**
                 * Constructs a new MsgLiquidatePosition.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IMsgLiquidatePosition);

                /** MsgLiquidatePosition sender. */
                public sender: string;

                /** MsgLiquidatePosition subaccount_id. */
                public subaccount_id: string;

                /** MsgLiquidatePosition market_id. */
                public market_id: string;

                /** MsgLiquidatePosition order. */
                public order?: (injective.exchange.v1beta1.IDerivativeOrder|null);

                /**
                 * Encodes the specified MsgLiquidatePosition message. Does not implicitly {@link injective.exchange.v1beta1.MsgLiquidatePosition.verify|verify} messages.
                 * @param message MsgLiquidatePosition message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IMsgLiquidatePosition, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgLiquidatePosition message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.MsgLiquidatePosition.verify|verify} messages.
                 * @param message MsgLiquidatePosition message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IMsgLiquidatePosition, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgLiquidatePosition message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgLiquidatePosition
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.MsgLiquidatePosition;

                /**
                 * Decodes a MsgLiquidatePosition message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgLiquidatePosition
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.MsgLiquidatePosition;

                /**
                 * Verifies a MsgLiquidatePosition message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgLiquidatePosition message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgLiquidatePosition
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.MsgLiquidatePosition;

                /**
                 * Creates a plain object from a MsgLiquidatePosition message. Also converts values to other types if specified.
                 * @param message MsgLiquidatePosition
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.MsgLiquidatePosition, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgLiquidatePosition to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgLiquidatePositionResponse. */
            interface IMsgLiquidatePositionResponse {
            }

            /** Represents a MsgLiquidatePositionResponse. */
            class MsgLiquidatePositionResponse implements IMsgLiquidatePositionResponse {

                /**
                 * Constructs a new MsgLiquidatePositionResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IMsgLiquidatePositionResponse);

                /**
                 * Encodes the specified MsgLiquidatePositionResponse message. Does not implicitly {@link injective.exchange.v1beta1.MsgLiquidatePositionResponse.verify|verify} messages.
                 * @param message MsgLiquidatePositionResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IMsgLiquidatePositionResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgLiquidatePositionResponse message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.MsgLiquidatePositionResponse.verify|verify} messages.
                 * @param message MsgLiquidatePositionResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IMsgLiquidatePositionResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgLiquidatePositionResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgLiquidatePositionResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.MsgLiquidatePositionResponse;

                /**
                 * Decodes a MsgLiquidatePositionResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgLiquidatePositionResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.MsgLiquidatePositionResponse;

                /**
                 * Verifies a MsgLiquidatePositionResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgLiquidatePositionResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgLiquidatePositionResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.MsgLiquidatePositionResponse;

                /**
                 * Creates a plain object from a MsgLiquidatePositionResponse message. Also converts values to other types if specified.
                 * @param message MsgLiquidatePositionResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.MsgLiquidatePositionResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgLiquidatePositionResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgIncreasePositionMargin. */
            interface IMsgIncreasePositionMargin {

                /** MsgIncreasePositionMargin sender */
                sender?: (string|null);

                /** MsgIncreasePositionMargin source_subaccount_id */
                source_subaccount_id?: (string|null);

                /** MsgIncreasePositionMargin destination_subaccount_id */
                destination_subaccount_id?: (string|null);

                /** MsgIncreasePositionMargin market_id */
                market_id?: (string|null);

                /** MsgIncreasePositionMargin amount */
                amount?: (string|null);
            }

            /** Represents a MsgIncreasePositionMargin. */
            class MsgIncreasePositionMargin implements IMsgIncreasePositionMargin {

                /**
                 * Constructs a new MsgIncreasePositionMargin.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IMsgIncreasePositionMargin);

                /** MsgIncreasePositionMargin sender. */
                public sender: string;

                /** MsgIncreasePositionMargin source_subaccount_id. */
                public source_subaccount_id: string;

                /** MsgIncreasePositionMargin destination_subaccount_id. */
                public destination_subaccount_id: string;

                /** MsgIncreasePositionMargin market_id. */
                public market_id: string;

                /** MsgIncreasePositionMargin amount. */
                public amount: string;

                /**
                 * Encodes the specified MsgIncreasePositionMargin message. Does not implicitly {@link injective.exchange.v1beta1.MsgIncreasePositionMargin.verify|verify} messages.
                 * @param message MsgIncreasePositionMargin message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IMsgIncreasePositionMargin, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgIncreasePositionMargin message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.MsgIncreasePositionMargin.verify|verify} messages.
                 * @param message MsgIncreasePositionMargin message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IMsgIncreasePositionMargin, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgIncreasePositionMargin message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgIncreasePositionMargin
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.MsgIncreasePositionMargin;

                /**
                 * Decodes a MsgIncreasePositionMargin message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgIncreasePositionMargin
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.MsgIncreasePositionMargin;

                /**
                 * Verifies a MsgIncreasePositionMargin message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgIncreasePositionMargin message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgIncreasePositionMargin
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.MsgIncreasePositionMargin;

                /**
                 * Creates a plain object from a MsgIncreasePositionMargin message. Also converts values to other types if specified.
                 * @param message MsgIncreasePositionMargin
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.MsgIncreasePositionMargin, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgIncreasePositionMargin to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgIncreasePositionMarginResponse. */
            interface IMsgIncreasePositionMarginResponse {
            }

            /** Represents a MsgIncreasePositionMarginResponse. */
            class MsgIncreasePositionMarginResponse implements IMsgIncreasePositionMarginResponse {

                /**
                 * Constructs a new MsgIncreasePositionMarginResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IMsgIncreasePositionMarginResponse);

                /**
                 * Encodes the specified MsgIncreasePositionMarginResponse message. Does not implicitly {@link injective.exchange.v1beta1.MsgIncreasePositionMarginResponse.verify|verify} messages.
                 * @param message MsgIncreasePositionMarginResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IMsgIncreasePositionMarginResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgIncreasePositionMarginResponse message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.MsgIncreasePositionMarginResponse.verify|verify} messages.
                 * @param message MsgIncreasePositionMarginResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IMsgIncreasePositionMarginResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgIncreasePositionMarginResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgIncreasePositionMarginResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.MsgIncreasePositionMarginResponse;

                /**
                 * Decodes a MsgIncreasePositionMarginResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgIncreasePositionMarginResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.MsgIncreasePositionMarginResponse;

                /**
                 * Verifies a MsgIncreasePositionMarginResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgIncreasePositionMarginResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgIncreasePositionMarginResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.MsgIncreasePositionMarginResponse;

                /**
                 * Creates a plain object from a MsgIncreasePositionMarginResponse message. Also converts values to other types if specified.
                 * @param message MsgIncreasePositionMarginResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.MsgIncreasePositionMarginResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgIncreasePositionMarginResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgPrivilegedExecuteContract. */
            interface IMsgPrivilegedExecuteContract {

                /** MsgPrivilegedExecuteContract sender */
                sender?: (string|null);

                /** MsgPrivilegedExecuteContract funds */
                funds?: (string|null);

                /** MsgPrivilegedExecuteContract contract_address */
                contract_address?: (string|null);

                /** MsgPrivilegedExecuteContract data */
                data?: (string|null);
            }

            /** Represents a MsgPrivilegedExecuteContract. */
            class MsgPrivilegedExecuteContract implements IMsgPrivilegedExecuteContract {

                /**
                 * Constructs a new MsgPrivilegedExecuteContract.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IMsgPrivilegedExecuteContract);

                /** MsgPrivilegedExecuteContract sender. */
                public sender: string;

                /** MsgPrivilegedExecuteContract funds. */
                public funds: string;

                /** MsgPrivilegedExecuteContract contract_address. */
                public contract_address: string;

                /** MsgPrivilegedExecuteContract data. */
                public data: string;

                /**
                 * Encodes the specified MsgPrivilegedExecuteContract message. Does not implicitly {@link injective.exchange.v1beta1.MsgPrivilegedExecuteContract.verify|verify} messages.
                 * @param message MsgPrivilegedExecuteContract message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IMsgPrivilegedExecuteContract, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgPrivilegedExecuteContract message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.MsgPrivilegedExecuteContract.verify|verify} messages.
                 * @param message MsgPrivilegedExecuteContract message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IMsgPrivilegedExecuteContract, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgPrivilegedExecuteContract message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgPrivilegedExecuteContract
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.MsgPrivilegedExecuteContract;

                /**
                 * Decodes a MsgPrivilegedExecuteContract message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgPrivilegedExecuteContract
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.MsgPrivilegedExecuteContract;

                /**
                 * Verifies a MsgPrivilegedExecuteContract message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgPrivilegedExecuteContract message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgPrivilegedExecuteContract
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.MsgPrivilegedExecuteContract;

                /**
                 * Creates a plain object from a MsgPrivilegedExecuteContract message. Also converts values to other types if specified.
                 * @param message MsgPrivilegedExecuteContract
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.MsgPrivilegedExecuteContract, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgPrivilegedExecuteContract to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgPrivilegedExecuteContractResponse. */
            interface IMsgPrivilegedExecuteContractResponse {

                /** MsgPrivilegedExecuteContractResponse funds_diff */
                funds_diff?: (cosmos.base.v1beta1.ICoin[]|null);
            }

            /** Represents a MsgPrivilegedExecuteContractResponse. */
            class MsgPrivilegedExecuteContractResponse implements IMsgPrivilegedExecuteContractResponse {

                /**
                 * Constructs a new MsgPrivilegedExecuteContractResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IMsgPrivilegedExecuteContractResponse);

                /** MsgPrivilegedExecuteContractResponse funds_diff. */
                public funds_diff: cosmos.base.v1beta1.ICoin[];

                /**
                 * Encodes the specified MsgPrivilegedExecuteContractResponse message. Does not implicitly {@link injective.exchange.v1beta1.MsgPrivilegedExecuteContractResponse.verify|verify} messages.
                 * @param message MsgPrivilegedExecuteContractResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IMsgPrivilegedExecuteContractResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgPrivilegedExecuteContractResponse message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.MsgPrivilegedExecuteContractResponse.verify|verify} messages.
                 * @param message MsgPrivilegedExecuteContractResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IMsgPrivilegedExecuteContractResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgPrivilegedExecuteContractResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgPrivilegedExecuteContractResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.MsgPrivilegedExecuteContractResponse;

                /**
                 * Decodes a MsgPrivilegedExecuteContractResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgPrivilegedExecuteContractResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.MsgPrivilegedExecuteContractResponse;

                /**
                 * Verifies a MsgPrivilegedExecuteContractResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgPrivilegedExecuteContractResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgPrivilegedExecuteContractResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.MsgPrivilegedExecuteContractResponse;

                /**
                 * Creates a plain object from a MsgPrivilegedExecuteContractResponse message. Also converts values to other types if specified.
                 * @param message MsgPrivilegedExecuteContractResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.MsgPrivilegedExecuteContractResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgPrivilegedExecuteContractResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a SpotMarketParamUpdateProposal. */
            interface ISpotMarketParamUpdateProposal {

                /** SpotMarketParamUpdateProposal title */
                title?: (string|null);

                /** SpotMarketParamUpdateProposal description */
                description?: (string|null);

                /** SpotMarketParamUpdateProposal market_id */
                market_id?: (string|null);

                /** SpotMarketParamUpdateProposal maker_fee_rate */
                maker_fee_rate?: (string|null);

                /** SpotMarketParamUpdateProposal taker_fee_rate */
                taker_fee_rate?: (string|null);

                /** SpotMarketParamUpdateProposal relayer_fee_share_rate */
                relayer_fee_share_rate?: (string|null);

                /** SpotMarketParamUpdateProposal min_price_tick_size */
                min_price_tick_size?: (string|null);

                /** SpotMarketParamUpdateProposal min_quantity_tick_size */
                min_quantity_tick_size?: (string|null);

                /** SpotMarketParamUpdateProposal status */
                status?: (injective.exchange.v1beta1.MarketStatus|null);
            }

            /** Represents a SpotMarketParamUpdateProposal. */
            class SpotMarketParamUpdateProposal implements ISpotMarketParamUpdateProposal {

                /**
                 * Constructs a new SpotMarketParamUpdateProposal.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.ISpotMarketParamUpdateProposal);

                /** SpotMarketParamUpdateProposal title. */
                public title: string;

                /** SpotMarketParamUpdateProposal description. */
                public description: string;

                /** SpotMarketParamUpdateProposal market_id. */
                public market_id: string;

                /** SpotMarketParamUpdateProposal maker_fee_rate. */
                public maker_fee_rate: string;

                /** SpotMarketParamUpdateProposal taker_fee_rate. */
                public taker_fee_rate: string;

                /** SpotMarketParamUpdateProposal relayer_fee_share_rate. */
                public relayer_fee_share_rate: string;

                /** SpotMarketParamUpdateProposal min_price_tick_size. */
                public min_price_tick_size: string;

                /** SpotMarketParamUpdateProposal min_quantity_tick_size. */
                public min_quantity_tick_size: string;

                /** SpotMarketParamUpdateProposal status. */
                public status: injective.exchange.v1beta1.MarketStatus;

                /**
                 * Encodes the specified SpotMarketParamUpdateProposal message. Does not implicitly {@link injective.exchange.v1beta1.SpotMarketParamUpdateProposal.verify|verify} messages.
                 * @param message SpotMarketParamUpdateProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.ISpotMarketParamUpdateProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified SpotMarketParamUpdateProposal message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.SpotMarketParamUpdateProposal.verify|verify} messages.
                 * @param message SpotMarketParamUpdateProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.ISpotMarketParamUpdateProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a SpotMarketParamUpdateProposal message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns SpotMarketParamUpdateProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.SpotMarketParamUpdateProposal;

                /**
                 * Decodes a SpotMarketParamUpdateProposal message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns SpotMarketParamUpdateProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.SpotMarketParamUpdateProposal;

                /**
                 * Verifies a SpotMarketParamUpdateProposal message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a SpotMarketParamUpdateProposal message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns SpotMarketParamUpdateProposal
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.SpotMarketParamUpdateProposal;

                /**
                 * Creates a plain object from a SpotMarketParamUpdateProposal message. Also converts values to other types if specified.
                 * @param message SpotMarketParamUpdateProposal
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.SpotMarketParamUpdateProposal, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this SpotMarketParamUpdateProposal to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** ExchangeType enum. */
            enum ExchangeType {
                EXCHANGE_UNSPECIFIED = 0,
                SPOT = 1,
                DERIVATIVES = 2
            }

            /** Properties of an ExchangeEnableProposal. */
            interface IExchangeEnableProposal {

                /** ExchangeEnableProposal title */
                title?: (string|null);

                /** ExchangeEnableProposal description */
                description?: (string|null);

                /** ExchangeEnableProposal exchangeType */
                exchangeType?: (injective.exchange.v1beta1.ExchangeType|null);
            }

            /** Represents an ExchangeEnableProposal. */
            class ExchangeEnableProposal implements IExchangeEnableProposal {

                /**
                 * Constructs a new ExchangeEnableProposal.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IExchangeEnableProposal);

                /** ExchangeEnableProposal title. */
                public title: string;

                /** ExchangeEnableProposal description. */
                public description: string;

                /** ExchangeEnableProposal exchangeType. */
                public exchangeType: injective.exchange.v1beta1.ExchangeType;

                /**
                 * Encodes the specified ExchangeEnableProposal message. Does not implicitly {@link injective.exchange.v1beta1.ExchangeEnableProposal.verify|verify} messages.
                 * @param message ExchangeEnableProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IExchangeEnableProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ExchangeEnableProposal message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.ExchangeEnableProposal.verify|verify} messages.
                 * @param message ExchangeEnableProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IExchangeEnableProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an ExchangeEnableProposal message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ExchangeEnableProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.ExchangeEnableProposal;

                /**
                 * Decodes an ExchangeEnableProposal message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ExchangeEnableProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.ExchangeEnableProposal;

                /**
                 * Verifies an ExchangeEnableProposal message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an ExchangeEnableProposal message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ExchangeEnableProposal
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.ExchangeEnableProposal;

                /**
                 * Creates a plain object from an ExchangeEnableProposal message. Also converts values to other types if specified.
                 * @param message ExchangeEnableProposal
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.ExchangeEnableProposal, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ExchangeEnableProposal to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a BatchExchangeModificationProposal. */
            interface IBatchExchangeModificationProposal {

                /** BatchExchangeModificationProposal title */
                title?: (string|null);

                /** BatchExchangeModificationProposal description */
                description?: (string|null);

                /** BatchExchangeModificationProposal spot_market_param_update_proposals */
                spot_market_param_update_proposals?: (injective.exchange.v1beta1.ISpotMarketParamUpdateProposal[]|null);

                /** BatchExchangeModificationProposal derivative_market_param_update_proposals */
                derivative_market_param_update_proposals?: (injective.exchange.v1beta1.IDerivativeMarketParamUpdateProposal[]|null);

                /** BatchExchangeModificationProposal spot_market_launch_proposals */
                spot_market_launch_proposals?: (injective.exchange.v1beta1.ISpotMarketLaunchProposal[]|null);

                /** BatchExchangeModificationProposal perpetual_market_launch_proposals */
                perpetual_market_launch_proposals?: (injective.exchange.v1beta1.IPerpetualMarketLaunchProposal[]|null);

                /** BatchExchangeModificationProposal expiry_futures_market_launch_proposals */
                expiry_futures_market_launch_proposals?: (injective.exchange.v1beta1.IExpiryFuturesMarketLaunchProposal[]|null);

                /** BatchExchangeModificationProposal trading_reward_campaign_update_proposal */
                trading_reward_campaign_update_proposal?: (injective.exchange.v1beta1.ITradingRewardCampaignUpdateProposal|null);

                /** BatchExchangeModificationProposal binary_options_market_launch_proposals */
                binary_options_market_launch_proposals?: (injective.exchange.v1beta1.IBinaryOptionsMarketLaunchProposal[]|null);

                /** BatchExchangeModificationProposal binary_options_param_update_proposals */
                binary_options_param_update_proposals?: (injective.exchange.v1beta1.IBinaryOptionsMarketParamUpdateProposal[]|null);

                /** BatchExchangeModificationProposal denom_decimals_update_proposal */
                denom_decimals_update_proposal?: (injective.exchange.v1beta1.IUpdateDenomDecimalsProposal|null);
            }

            /** Represents a BatchExchangeModificationProposal. */
            class BatchExchangeModificationProposal implements IBatchExchangeModificationProposal {

                /**
                 * Constructs a new BatchExchangeModificationProposal.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IBatchExchangeModificationProposal);

                /** BatchExchangeModificationProposal title. */
                public title: string;

                /** BatchExchangeModificationProposal description. */
                public description: string;

                /** BatchExchangeModificationProposal spot_market_param_update_proposals. */
                public spot_market_param_update_proposals: injective.exchange.v1beta1.ISpotMarketParamUpdateProposal[];

                /** BatchExchangeModificationProposal derivative_market_param_update_proposals. */
                public derivative_market_param_update_proposals: injective.exchange.v1beta1.IDerivativeMarketParamUpdateProposal[];

                /** BatchExchangeModificationProposal spot_market_launch_proposals. */
                public spot_market_launch_proposals: injective.exchange.v1beta1.ISpotMarketLaunchProposal[];

                /** BatchExchangeModificationProposal perpetual_market_launch_proposals. */
                public perpetual_market_launch_proposals: injective.exchange.v1beta1.IPerpetualMarketLaunchProposal[];

                /** BatchExchangeModificationProposal expiry_futures_market_launch_proposals. */
                public expiry_futures_market_launch_proposals: injective.exchange.v1beta1.IExpiryFuturesMarketLaunchProposal[];

                /** BatchExchangeModificationProposal trading_reward_campaign_update_proposal. */
                public trading_reward_campaign_update_proposal?: (injective.exchange.v1beta1.ITradingRewardCampaignUpdateProposal|null);

                /** BatchExchangeModificationProposal binary_options_market_launch_proposals. */
                public binary_options_market_launch_proposals: injective.exchange.v1beta1.IBinaryOptionsMarketLaunchProposal[];

                /** BatchExchangeModificationProposal binary_options_param_update_proposals. */
                public binary_options_param_update_proposals: injective.exchange.v1beta1.IBinaryOptionsMarketParamUpdateProposal[];

                /** BatchExchangeModificationProposal denom_decimals_update_proposal. */
                public denom_decimals_update_proposal?: (injective.exchange.v1beta1.IUpdateDenomDecimalsProposal|null);

                /**
                 * Encodes the specified BatchExchangeModificationProposal message. Does not implicitly {@link injective.exchange.v1beta1.BatchExchangeModificationProposal.verify|verify} messages.
                 * @param message BatchExchangeModificationProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IBatchExchangeModificationProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified BatchExchangeModificationProposal message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.BatchExchangeModificationProposal.verify|verify} messages.
                 * @param message BatchExchangeModificationProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IBatchExchangeModificationProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a BatchExchangeModificationProposal message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns BatchExchangeModificationProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.BatchExchangeModificationProposal;

                /**
                 * Decodes a BatchExchangeModificationProposal message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns BatchExchangeModificationProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.BatchExchangeModificationProposal;

                /**
                 * Verifies a BatchExchangeModificationProposal message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a BatchExchangeModificationProposal message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns BatchExchangeModificationProposal
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.BatchExchangeModificationProposal;

                /**
                 * Creates a plain object from a BatchExchangeModificationProposal message. Also converts values to other types if specified.
                 * @param message BatchExchangeModificationProposal
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.BatchExchangeModificationProposal, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this BatchExchangeModificationProposal to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a SpotMarketLaunchProposal. */
            interface ISpotMarketLaunchProposal {

                /** SpotMarketLaunchProposal title */
                title?: (string|null);

                /** SpotMarketLaunchProposal description */
                description?: (string|null);

                /** SpotMarketLaunchProposal ticker */
                ticker?: (string|null);

                /** SpotMarketLaunchProposal base_denom */
                base_denom?: (string|null);

                /** SpotMarketLaunchProposal quote_denom */
                quote_denom?: (string|null);

                /** SpotMarketLaunchProposal min_price_tick_size */
                min_price_tick_size?: (string|null);

                /** SpotMarketLaunchProposal min_quantity_tick_size */
                min_quantity_tick_size?: (string|null);

                /** SpotMarketLaunchProposal maker_fee_rate */
                maker_fee_rate?: (string|null);

                /** SpotMarketLaunchProposal taker_fee_rate */
                taker_fee_rate?: (string|null);
            }

            /** Represents a SpotMarketLaunchProposal. */
            class SpotMarketLaunchProposal implements ISpotMarketLaunchProposal {

                /**
                 * Constructs a new SpotMarketLaunchProposal.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.ISpotMarketLaunchProposal);

                /** SpotMarketLaunchProposal title. */
                public title: string;

                /** SpotMarketLaunchProposal description. */
                public description: string;

                /** SpotMarketLaunchProposal ticker. */
                public ticker: string;

                /** SpotMarketLaunchProposal base_denom. */
                public base_denom: string;

                /** SpotMarketLaunchProposal quote_denom. */
                public quote_denom: string;

                /** SpotMarketLaunchProposal min_price_tick_size. */
                public min_price_tick_size: string;

                /** SpotMarketLaunchProposal min_quantity_tick_size. */
                public min_quantity_tick_size: string;

                /** SpotMarketLaunchProposal maker_fee_rate. */
                public maker_fee_rate: string;

                /** SpotMarketLaunchProposal taker_fee_rate. */
                public taker_fee_rate: string;

                /**
                 * Encodes the specified SpotMarketLaunchProposal message. Does not implicitly {@link injective.exchange.v1beta1.SpotMarketLaunchProposal.verify|verify} messages.
                 * @param message SpotMarketLaunchProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.ISpotMarketLaunchProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified SpotMarketLaunchProposal message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.SpotMarketLaunchProposal.verify|verify} messages.
                 * @param message SpotMarketLaunchProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.ISpotMarketLaunchProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a SpotMarketLaunchProposal message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns SpotMarketLaunchProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.SpotMarketLaunchProposal;

                /**
                 * Decodes a SpotMarketLaunchProposal message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns SpotMarketLaunchProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.SpotMarketLaunchProposal;

                /**
                 * Verifies a SpotMarketLaunchProposal message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a SpotMarketLaunchProposal message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns SpotMarketLaunchProposal
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.SpotMarketLaunchProposal;

                /**
                 * Creates a plain object from a SpotMarketLaunchProposal message. Also converts values to other types if specified.
                 * @param message SpotMarketLaunchProposal
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.SpotMarketLaunchProposal, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this SpotMarketLaunchProposal to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a PerpetualMarketLaunchProposal. */
            interface IPerpetualMarketLaunchProposal {

                /** PerpetualMarketLaunchProposal title */
                title?: (string|null);

                /** PerpetualMarketLaunchProposal description */
                description?: (string|null);

                /** PerpetualMarketLaunchProposal ticker */
                ticker?: (string|null);

                /** PerpetualMarketLaunchProposal quote_denom */
                quote_denom?: (string|null);

                /** PerpetualMarketLaunchProposal oracle_base */
                oracle_base?: (string|null);

                /** PerpetualMarketLaunchProposal oracle_quote */
                oracle_quote?: (string|null);

                /** PerpetualMarketLaunchProposal oracle_scale_factor */
                oracle_scale_factor?: (number|null);

                /** PerpetualMarketLaunchProposal oracle_type */
                oracle_type?: (injective.oracle.v1beta1.OracleType|null);

                /** PerpetualMarketLaunchProposal initial_margin_ratio */
                initial_margin_ratio?: (string|null);

                /** PerpetualMarketLaunchProposal maintenance_margin_ratio */
                maintenance_margin_ratio?: (string|null);

                /** PerpetualMarketLaunchProposal maker_fee_rate */
                maker_fee_rate?: (string|null);

                /** PerpetualMarketLaunchProposal taker_fee_rate */
                taker_fee_rate?: (string|null);

                /** PerpetualMarketLaunchProposal min_price_tick_size */
                min_price_tick_size?: (string|null);

                /** PerpetualMarketLaunchProposal min_quantity_tick_size */
                min_quantity_tick_size?: (string|null);
            }

            /** Represents a PerpetualMarketLaunchProposal. */
            class PerpetualMarketLaunchProposal implements IPerpetualMarketLaunchProposal {

                /**
                 * Constructs a new PerpetualMarketLaunchProposal.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IPerpetualMarketLaunchProposal);

                /** PerpetualMarketLaunchProposal title. */
                public title: string;

                /** PerpetualMarketLaunchProposal description. */
                public description: string;

                /** PerpetualMarketLaunchProposal ticker. */
                public ticker: string;

                /** PerpetualMarketLaunchProposal quote_denom. */
                public quote_denom: string;

                /** PerpetualMarketLaunchProposal oracle_base. */
                public oracle_base: string;

                /** PerpetualMarketLaunchProposal oracle_quote. */
                public oracle_quote: string;

                /** PerpetualMarketLaunchProposal oracle_scale_factor. */
                public oracle_scale_factor: number;

                /** PerpetualMarketLaunchProposal oracle_type. */
                public oracle_type: injective.oracle.v1beta1.OracleType;

                /** PerpetualMarketLaunchProposal initial_margin_ratio. */
                public initial_margin_ratio: string;

                /** PerpetualMarketLaunchProposal maintenance_margin_ratio. */
                public maintenance_margin_ratio: string;

                /** PerpetualMarketLaunchProposal maker_fee_rate. */
                public maker_fee_rate: string;

                /** PerpetualMarketLaunchProposal taker_fee_rate. */
                public taker_fee_rate: string;

                /** PerpetualMarketLaunchProposal min_price_tick_size. */
                public min_price_tick_size: string;

                /** PerpetualMarketLaunchProposal min_quantity_tick_size. */
                public min_quantity_tick_size: string;

                /**
                 * Encodes the specified PerpetualMarketLaunchProposal message. Does not implicitly {@link injective.exchange.v1beta1.PerpetualMarketLaunchProposal.verify|verify} messages.
                 * @param message PerpetualMarketLaunchProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IPerpetualMarketLaunchProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified PerpetualMarketLaunchProposal message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.PerpetualMarketLaunchProposal.verify|verify} messages.
                 * @param message PerpetualMarketLaunchProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IPerpetualMarketLaunchProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a PerpetualMarketLaunchProposal message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns PerpetualMarketLaunchProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.PerpetualMarketLaunchProposal;

                /**
                 * Decodes a PerpetualMarketLaunchProposal message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns PerpetualMarketLaunchProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.PerpetualMarketLaunchProposal;

                /**
                 * Verifies a PerpetualMarketLaunchProposal message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a PerpetualMarketLaunchProposal message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns PerpetualMarketLaunchProposal
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.PerpetualMarketLaunchProposal;

                /**
                 * Creates a plain object from a PerpetualMarketLaunchProposal message. Also converts values to other types if specified.
                 * @param message PerpetualMarketLaunchProposal
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.PerpetualMarketLaunchProposal, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this PerpetualMarketLaunchProposal to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a BinaryOptionsMarketLaunchProposal. */
            interface IBinaryOptionsMarketLaunchProposal {

                /** BinaryOptionsMarketLaunchProposal title */
                title?: (string|null);

                /** BinaryOptionsMarketLaunchProposal description */
                description?: (string|null);

                /** BinaryOptionsMarketLaunchProposal ticker */
                ticker?: (string|null);

                /** BinaryOptionsMarketLaunchProposal oracle_symbol */
                oracle_symbol?: (string|null);

                /** BinaryOptionsMarketLaunchProposal oracle_provider */
                oracle_provider?: (string|null);

                /** BinaryOptionsMarketLaunchProposal oracle_type */
                oracle_type?: (injective.oracle.v1beta1.OracleType|null);

                /** BinaryOptionsMarketLaunchProposal oracle_scale_factor */
                oracle_scale_factor?: (number|null);

                /** BinaryOptionsMarketLaunchProposal expiration_timestamp */
                expiration_timestamp?: (number|null);

                /** BinaryOptionsMarketLaunchProposal settlement_timestamp */
                settlement_timestamp?: (number|null);

                /** BinaryOptionsMarketLaunchProposal admin */
                admin?: (string|null);

                /** BinaryOptionsMarketLaunchProposal quote_denom */
                quote_denom?: (string|null);

                /** BinaryOptionsMarketLaunchProposal maker_fee_rate */
                maker_fee_rate?: (string|null);

                /** BinaryOptionsMarketLaunchProposal taker_fee_rate */
                taker_fee_rate?: (string|null);

                /** BinaryOptionsMarketLaunchProposal min_price_tick_size */
                min_price_tick_size?: (string|null);

                /** BinaryOptionsMarketLaunchProposal min_quantity_tick_size */
                min_quantity_tick_size?: (string|null);
            }

            /** Represents a BinaryOptionsMarketLaunchProposal. */
            class BinaryOptionsMarketLaunchProposal implements IBinaryOptionsMarketLaunchProposal {

                /**
                 * Constructs a new BinaryOptionsMarketLaunchProposal.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IBinaryOptionsMarketLaunchProposal);

                /** BinaryOptionsMarketLaunchProposal title. */
                public title: string;

                /** BinaryOptionsMarketLaunchProposal description. */
                public description: string;

                /** BinaryOptionsMarketLaunchProposal ticker. */
                public ticker: string;

                /** BinaryOptionsMarketLaunchProposal oracle_symbol. */
                public oracle_symbol: string;

                /** BinaryOptionsMarketLaunchProposal oracle_provider. */
                public oracle_provider: string;

                /** BinaryOptionsMarketLaunchProposal oracle_type. */
                public oracle_type: injective.oracle.v1beta1.OracleType;

                /** BinaryOptionsMarketLaunchProposal oracle_scale_factor. */
                public oracle_scale_factor: number;

                /** BinaryOptionsMarketLaunchProposal expiration_timestamp. */
                public expiration_timestamp: number;

                /** BinaryOptionsMarketLaunchProposal settlement_timestamp. */
                public settlement_timestamp: number;

                /** BinaryOptionsMarketLaunchProposal admin. */
                public admin: string;

                /** BinaryOptionsMarketLaunchProposal quote_denom. */
                public quote_denom: string;

                /** BinaryOptionsMarketLaunchProposal maker_fee_rate. */
                public maker_fee_rate: string;

                /** BinaryOptionsMarketLaunchProposal taker_fee_rate. */
                public taker_fee_rate: string;

                /** BinaryOptionsMarketLaunchProposal min_price_tick_size. */
                public min_price_tick_size: string;

                /** BinaryOptionsMarketLaunchProposal min_quantity_tick_size. */
                public min_quantity_tick_size: string;

                /**
                 * Encodes the specified BinaryOptionsMarketLaunchProposal message. Does not implicitly {@link injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal.verify|verify} messages.
                 * @param message BinaryOptionsMarketLaunchProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IBinaryOptionsMarketLaunchProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified BinaryOptionsMarketLaunchProposal message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal.verify|verify} messages.
                 * @param message BinaryOptionsMarketLaunchProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IBinaryOptionsMarketLaunchProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a BinaryOptionsMarketLaunchProposal message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns BinaryOptionsMarketLaunchProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal;

                /**
                 * Decodes a BinaryOptionsMarketLaunchProposal message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns BinaryOptionsMarketLaunchProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal;

                /**
                 * Verifies a BinaryOptionsMarketLaunchProposal message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a BinaryOptionsMarketLaunchProposal message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns BinaryOptionsMarketLaunchProposal
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal;

                /**
                 * Creates a plain object from a BinaryOptionsMarketLaunchProposal message. Also converts values to other types if specified.
                 * @param message BinaryOptionsMarketLaunchProposal
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this BinaryOptionsMarketLaunchProposal to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an ExpiryFuturesMarketLaunchProposal. */
            interface IExpiryFuturesMarketLaunchProposal {

                /** ExpiryFuturesMarketLaunchProposal title */
                title?: (string|null);

                /** ExpiryFuturesMarketLaunchProposal description */
                description?: (string|null);

                /** ExpiryFuturesMarketLaunchProposal ticker */
                ticker?: (string|null);

                /** ExpiryFuturesMarketLaunchProposal quote_denom */
                quote_denom?: (string|null);

                /** ExpiryFuturesMarketLaunchProposal oracle_base */
                oracle_base?: (string|null);

                /** ExpiryFuturesMarketLaunchProposal oracle_quote */
                oracle_quote?: (string|null);

                /** ExpiryFuturesMarketLaunchProposal oracle_scale_factor */
                oracle_scale_factor?: (number|null);

                /** ExpiryFuturesMarketLaunchProposal oracle_type */
                oracle_type?: (injective.oracle.v1beta1.OracleType|null);

                /** ExpiryFuturesMarketLaunchProposal expiry */
                expiry?: (number|null);

                /** ExpiryFuturesMarketLaunchProposal initial_margin_ratio */
                initial_margin_ratio?: (string|null);

                /** ExpiryFuturesMarketLaunchProposal maintenance_margin_ratio */
                maintenance_margin_ratio?: (string|null);

                /** ExpiryFuturesMarketLaunchProposal maker_fee_rate */
                maker_fee_rate?: (string|null);

                /** ExpiryFuturesMarketLaunchProposal taker_fee_rate */
                taker_fee_rate?: (string|null);

                /** ExpiryFuturesMarketLaunchProposal min_price_tick_size */
                min_price_tick_size?: (string|null);

                /** ExpiryFuturesMarketLaunchProposal min_quantity_tick_size */
                min_quantity_tick_size?: (string|null);
            }

            /** Represents an ExpiryFuturesMarketLaunchProposal. */
            class ExpiryFuturesMarketLaunchProposal implements IExpiryFuturesMarketLaunchProposal {

                /**
                 * Constructs a new ExpiryFuturesMarketLaunchProposal.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IExpiryFuturesMarketLaunchProposal);

                /** ExpiryFuturesMarketLaunchProposal title. */
                public title: string;

                /** ExpiryFuturesMarketLaunchProposal description. */
                public description: string;

                /** ExpiryFuturesMarketLaunchProposal ticker. */
                public ticker: string;

                /** ExpiryFuturesMarketLaunchProposal quote_denom. */
                public quote_denom: string;

                /** ExpiryFuturesMarketLaunchProposal oracle_base. */
                public oracle_base: string;

                /** ExpiryFuturesMarketLaunchProposal oracle_quote. */
                public oracle_quote: string;

                /** ExpiryFuturesMarketLaunchProposal oracle_scale_factor. */
                public oracle_scale_factor: number;

                /** ExpiryFuturesMarketLaunchProposal oracle_type. */
                public oracle_type: injective.oracle.v1beta1.OracleType;

                /** ExpiryFuturesMarketLaunchProposal expiry. */
                public expiry: number;

                /** ExpiryFuturesMarketLaunchProposal initial_margin_ratio. */
                public initial_margin_ratio: string;

                /** ExpiryFuturesMarketLaunchProposal maintenance_margin_ratio. */
                public maintenance_margin_ratio: string;

                /** ExpiryFuturesMarketLaunchProposal maker_fee_rate. */
                public maker_fee_rate: string;

                /** ExpiryFuturesMarketLaunchProposal taker_fee_rate. */
                public taker_fee_rate: string;

                /** ExpiryFuturesMarketLaunchProposal min_price_tick_size. */
                public min_price_tick_size: string;

                /** ExpiryFuturesMarketLaunchProposal min_quantity_tick_size. */
                public min_quantity_tick_size: string;

                /**
                 * Encodes the specified ExpiryFuturesMarketLaunchProposal message. Does not implicitly {@link injective.exchange.v1beta1.ExpiryFuturesMarketLaunchProposal.verify|verify} messages.
                 * @param message ExpiryFuturesMarketLaunchProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IExpiryFuturesMarketLaunchProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ExpiryFuturesMarketLaunchProposal message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.ExpiryFuturesMarketLaunchProposal.verify|verify} messages.
                 * @param message ExpiryFuturesMarketLaunchProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IExpiryFuturesMarketLaunchProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an ExpiryFuturesMarketLaunchProposal message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ExpiryFuturesMarketLaunchProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.ExpiryFuturesMarketLaunchProposal;

                /**
                 * Decodes an ExpiryFuturesMarketLaunchProposal message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ExpiryFuturesMarketLaunchProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.ExpiryFuturesMarketLaunchProposal;

                /**
                 * Verifies an ExpiryFuturesMarketLaunchProposal message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an ExpiryFuturesMarketLaunchProposal message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ExpiryFuturesMarketLaunchProposal
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.ExpiryFuturesMarketLaunchProposal;

                /**
                 * Creates a plain object from an ExpiryFuturesMarketLaunchProposal message. Also converts values to other types if specified.
                 * @param message ExpiryFuturesMarketLaunchProposal
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.ExpiryFuturesMarketLaunchProposal, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ExpiryFuturesMarketLaunchProposal to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a DerivativeMarketParamUpdateProposal. */
            interface IDerivativeMarketParamUpdateProposal {

                /** DerivativeMarketParamUpdateProposal title */
                title?: (string|null);

                /** DerivativeMarketParamUpdateProposal description */
                description?: (string|null);

                /** DerivativeMarketParamUpdateProposal market_id */
                market_id?: (string|null);

                /** DerivativeMarketParamUpdateProposal initial_margin_ratio */
                initial_margin_ratio?: (string|null);

                /** DerivativeMarketParamUpdateProposal maintenance_margin_ratio */
                maintenance_margin_ratio?: (string|null);

                /** DerivativeMarketParamUpdateProposal maker_fee_rate */
                maker_fee_rate?: (string|null);

                /** DerivativeMarketParamUpdateProposal taker_fee_rate */
                taker_fee_rate?: (string|null);

                /** DerivativeMarketParamUpdateProposal relayer_fee_share_rate */
                relayer_fee_share_rate?: (string|null);

                /** DerivativeMarketParamUpdateProposal min_price_tick_size */
                min_price_tick_size?: (string|null);

                /** DerivativeMarketParamUpdateProposal min_quantity_tick_size */
                min_quantity_tick_size?: (string|null);

                /** DerivativeMarketParamUpdateProposal HourlyInterestRate */
                HourlyInterestRate?: (string|null);

                /** DerivativeMarketParamUpdateProposal HourlyFundingRateCap */
                HourlyFundingRateCap?: (string|null);

                /** DerivativeMarketParamUpdateProposal status */
                status?: (injective.exchange.v1beta1.MarketStatus|null);

                /** DerivativeMarketParamUpdateProposal oracle_params */
                oracle_params?: (injective.exchange.v1beta1.IOracleParams|null);
            }

            /** Represents a DerivativeMarketParamUpdateProposal. */
            class DerivativeMarketParamUpdateProposal implements IDerivativeMarketParamUpdateProposal {

                /**
                 * Constructs a new DerivativeMarketParamUpdateProposal.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IDerivativeMarketParamUpdateProposal);

                /** DerivativeMarketParamUpdateProposal title. */
                public title: string;

                /** DerivativeMarketParamUpdateProposal description. */
                public description: string;

                /** DerivativeMarketParamUpdateProposal market_id. */
                public market_id: string;

                /** DerivativeMarketParamUpdateProposal initial_margin_ratio. */
                public initial_margin_ratio: string;

                /** DerivativeMarketParamUpdateProposal maintenance_margin_ratio. */
                public maintenance_margin_ratio: string;

                /** DerivativeMarketParamUpdateProposal maker_fee_rate. */
                public maker_fee_rate: string;

                /** DerivativeMarketParamUpdateProposal taker_fee_rate. */
                public taker_fee_rate: string;

                /** DerivativeMarketParamUpdateProposal relayer_fee_share_rate. */
                public relayer_fee_share_rate: string;

                /** DerivativeMarketParamUpdateProposal min_price_tick_size. */
                public min_price_tick_size: string;

                /** DerivativeMarketParamUpdateProposal min_quantity_tick_size. */
                public min_quantity_tick_size: string;

                /** DerivativeMarketParamUpdateProposal HourlyInterestRate. */
                public HourlyInterestRate: string;

                /** DerivativeMarketParamUpdateProposal HourlyFundingRateCap. */
                public HourlyFundingRateCap: string;

                /** DerivativeMarketParamUpdateProposal status. */
                public status: injective.exchange.v1beta1.MarketStatus;

                /** DerivativeMarketParamUpdateProposal oracle_params. */
                public oracle_params?: (injective.exchange.v1beta1.IOracleParams|null);

                /**
                 * Encodes the specified DerivativeMarketParamUpdateProposal message. Does not implicitly {@link injective.exchange.v1beta1.DerivativeMarketParamUpdateProposal.verify|verify} messages.
                 * @param message DerivativeMarketParamUpdateProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IDerivativeMarketParamUpdateProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DerivativeMarketParamUpdateProposal message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.DerivativeMarketParamUpdateProposal.verify|verify} messages.
                 * @param message DerivativeMarketParamUpdateProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IDerivativeMarketParamUpdateProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DerivativeMarketParamUpdateProposal message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DerivativeMarketParamUpdateProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.DerivativeMarketParamUpdateProposal;

                /**
                 * Decodes a DerivativeMarketParamUpdateProposal message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DerivativeMarketParamUpdateProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.DerivativeMarketParamUpdateProposal;

                /**
                 * Verifies a DerivativeMarketParamUpdateProposal message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DerivativeMarketParamUpdateProposal message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DerivativeMarketParamUpdateProposal
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.DerivativeMarketParamUpdateProposal;

                /**
                 * Creates a plain object from a DerivativeMarketParamUpdateProposal message. Also converts values to other types if specified.
                 * @param message DerivativeMarketParamUpdateProposal
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.DerivativeMarketParamUpdateProposal, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DerivativeMarketParamUpdateProposal to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MarketForcedSettlementProposal. */
            interface IMarketForcedSettlementProposal {

                /** MarketForcedSettlementProposal title */
                title?: (string|null);

                /** MarketForcedSettlementProposal description */
                description?: (string|null);

                /** MarketForcedSettlementProposal market_id */
                market_id?: (string|null);

                /** MarketForcedSettlementProposal settlement_price */
                settlement_price?: (string|null);
            }

            /** Represents a MarketForcedSettlementProposal. */
            class MarketForcedSettlementProposal implements IMarketForcedSettlementProposal {

                /**
                 * Constructs a new MarketForcedSettlementProposal.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IMarketForcedSettlementProposal);

                /** MarketForcedSettlementProposal title. */
                public title: string;

                /** MarketForcedSettlementProposal description. */
                public description: string;

                /** MarketForcedSettlementProposal market_id. */
                public market_id: string;

                /** MarketForcedSettlementProposal settlement_price. */
                public settlement_price: string;

                /**
                 * Encodes the specified MarketForcedSettlementProposal message. Does not implicitly {@link injective.exchange.v1beta1.MarketForcedSettlementProposal.verify|verify} messages.
                 * @param message MarketForcedSettlementProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IMarketForcedSettlementProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MarketForcedSettlementProposal message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.MarketForcedSettlementProposal.verify|verify} messages.
                 * @param message MarketForcedSettlementProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IMarketForcedSettlementProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MarketForcedSettlementProposal message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MarketForcedSettlementProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.MarketForcedSettlementProposal;

                /**
                 * Decodes a MarketForcedSettlementProposal message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MarketForcedSettlementProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.MarketForcedSettlementProposal;

                /**
                 * Verifies a MarketForcedSettlementProposal message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MarketForcedSettlementProposal message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MarketForcedSettlementProposal
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.MarketForcedSettlementProposal;

                /**
                 * Creates a plain object from a MarketForcedSettlementProposal message. Also converts values to other types if specified.
                 * @param message MarketForcedSettlementProposal
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.MarketForcedSettlementProposal, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MarketForcedSettlementProposal to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an UpdateDenomDecimalsProposal. */
            interface IUpdateDenomDecimalsProposal {

                /** UpdateDenomDecimalsProposal title */
                title?: (string|null);

                /** UpdateDenomDecimalsProposal description */
                description?: (string|null);

                /** UpdateDenomDecimalsProposal denom_decimals */
                denom_decimals?: (injective.exchange.v1beta1.IDenomDecimals[]|null);
            }

            /** Represents an UpdateDenomDecimalsProposal. */
            class UpdateDenomDecimalsProposal implements IUpdateDenomDecimalsProposal {

                /**
                 * Constructs a new UpdateDenomDecimalsProposal.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IUpdateDenomDecimalsProposal);

                /** UpdateDenomDecimalsProposal title. */
                public title: string;

                /** UpdateDenomDecimalsProposal description. */
                public description: string;

                /** UpdateDenomDecimalsProposal denom_decimals. */
                public denom_decimals: injective.exchange.v1beta1.IDenomDecimals[];

                /**
                 * Encodes the specified UpdateDenomDecimalsProposal message. Does not implicitly {@link injective.exchange.v1beta1.UpdateDenomDecimalsProposal.verify|verify} messages.
                 * @param message UpdateDenomDecimalsProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IUpdateDenomDecimalsProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified UpdateDenomDecimalsProposal message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.UpdateDenomDecimalsProposal.verify|verify} messages.
                 * @param message UpdateDenomDecimalsProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IUpdateDenomDecimalsProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an UpdateDenomDecimalsProposal message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns UpdateDenomDecimalsProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.UpdateDenomDecimalsProposal;

                /**
                 * Decodes an UpdateDenomDecimalsProposal message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns UpdateDenomDecimalsProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.UpdateDenomDecimalsProposal;

                /**
                 * Verifies an UpdateDenomDecimalsProposal message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an UpdateDenomDecimalsProposal message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns UpdateDenomDecimalsProposal
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.UpdateDenomDecimalsProposal;

                /**
                 * Creates a plain object from an UpdateDenomDecimalsProposal message. Also converts values to other types if specified.
                 * @param message UpdateDenomDecimalsProposal
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.UpdateDenomDecimalsProposal, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this UpdateDenomDecimalsProposal to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a BinaryOptionsMarketParamUpdateProposal. */
            interface IBinaryOptionsMarketParamUpdateProposal {

                /** BinaryOptionsMarketParamUpdateProposal title */
                title?: (string|null);

                /** BinaryOptionsMarketParamUpdateProposal description */
                description?: (string|null);

                /** BinaryOptionsMarketParamUpdateProposal market_id */
                market_id?: (string|null);

                /** BinaryOptionsMarketParamUpdateProposal maker_fee_rate */
                maker_fee_rate?: (string|null);

                /** BinaryOptionsMarketParamUpdateProposal taker_fee_rate */
                taker_fee_rate?: (string|null);

                /** BinaryOptionsMarketParamUpdateProposal relayer_fee_share_rate */
                relayer_fee_share_rate?: (string|null);

                /** BinaryOptionsMarketParamUpdateProposal min_price_tick_size */
                min_price_tick_size?: (string|null);

                /** BinaryOptionsMarketParamUpdateProposal min_quantity_tick_size */
                min_quantity_tick_size?: (string|null);

                /** BinaryOptionsMarketParamUpdateProposal expiration_timestamp */
                expiration_timestamp?: (number|null);

                /** BinaryOptionsMarketParamUpdateProposal settlement_timestamp */
                settlement_timestamp?: (number|null);

                /** BinaryOptionsMarketParamUpdateProposal settlement_price */
                settlement_price?: (string|null);

                /** BinaryOptionsMarketParamUpdateProposal admin */
                admin?: (string|null);

                /** BinaryOptionsMarketParamUpdateProposal status */
                status?: (injective.exchange.v1beta1.MarketStatus|null);

                /** BinaryOptionsMarketParamUpdateProposal oracle_params */
                oracle_params?: (injective.exchange.v1beta1.IProviderOracleParams|null);
            }

            /** Represents a BinaryOptionsMarketParamUpdateProposal. */
            class BinaryOptionsMarketParamUpdateProposal implements IBinaryOptionsMarketParamUpdateProposal {

                /**
                 * Constructs a new BinaryOptionsMarketParamUpdateProposal.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IBinaryOptionsMarketParamUpdateProposal);

                /** BinaryOptionsMarketParamUpdateProposal title. */
                public title: string;

                /** BinaryOptionsMarketParamUpdateProposal description. */
                public description: string;

                /** BinaryOptionsMarketParamUpdateProposal market_id. */
                public market_id: string;

                /** BinaryOptionsMarketParamUpdateProposal maker_fee_rate. */
                public maker_fee_rate: string;

                /** BinaryOptionsMarketParamUpdateProposal taker_fee_rate. */
                public taker_fee_rate: string;

                /** BinaryOptionsMarketParamUpdateProposal relayer_fee_share_rate. */
                public relayer_fee_share_rate: string;

                /** BinaryOptionsMarketParamUpdateProposal min_price_tick_size. */
                public min_price_tick_size: string;

                /** BinaryOptionsMarketParamUpdateProposal min_quantity_tick_size. */
                public min_quantity_tick_size: string;

                /** BinaryOptionsMarketParamUpdateProposal expiration_timestamp. */
                public expiration_timestamp: number;

                /** BinaryOptionsMarketParamUpdateProposal settlement_timestamp. */
                public settlement_timestamp: number;

                /** BinaryOptionsMarketParamUpdateProposal settlement_price. */
                public settlement_price: string;

                /** BinaryOptionsMarketParamUpdateProposal admin. */
                public admin: string;

                /** BinaryOptionsMarketParamUpdateProposal status. */
                public status: injective.exchange.v1beta1.MarketStatus;

                /** BinaryOptionsMarketParamUpdateProposal oracle_params. */
                public oracle_params?: (injective.exchange.v1beta1.IProviderOracleParams|null);

                /**
                 * Encodes the specified BinaryOptionsMarketParamUpdateProposal message. Does not implicitly {@link injective.exchange.v1beta1.BinaryOptionsMarketParamUpdateProposal.verify|verify} messages.
                 * @param message BinaryOptionsMarketParamUpdateProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IBinaryOptionsMarketParamUpdateProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified BinaryOptionsMarketParamUpdateProposal message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.BinaryOptionsMarketParamUpdateProposal.verify|verify} messages.
                 * @param message BinaryOptionsMarketParamUpdateProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IBinaryOptionsMarketParamUpdateProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a BinaryOptionsMarketParamUpdateProposal message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns BinaryOptionsMarketParamUpdateProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.BinaryOptionsMarketParamUpdateProposal;

                /**
                 * Decodes a BinaryOptionsMarketParamUpdateProposal message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns BinaryOptionsMarketParamUpdateProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.BinaryOptionsMarketParamUpdateProposal;

                /**
                 * Verifies a BinaryOptionsMarketParamUpdateProposal message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a BinaryOptionsMarketParamUpdateProposal message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns BinaryOptionsMarketParamUpdateProposal
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.BinaryOptionsMarketParamUpdateProposal;

                /**
                 * Creates a plain object from a BinaryOptionsMarketParamUpdateProposal message. Also converts values to other types if specified.
                 * @param message BinaryOptionsMarketParamUpdateProposal
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.BinaryOptionsMarketParamUpdateProposal, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this BinaryOptionsMarketParamUpdateProposal to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a ProviderOracleParams. */
            interface IProviderOracleParams {

                /** ProviderOracleParams symbol */
                symbol?: (string|null);

                /** ProviderOracleParams provider */
                provider?: (string|null);

                /** ProviderOracleParams oracle_scale_factor */
                oracle_scale_factor?: (number|null);

                /** ProviderOracleParams oracle_type */
                oracle_type?: (injective.oracle.v1beta1.OracleType|null);
            }

            /** Represents a ProviderOracleParams. */
            class ProviderOracleParams implements IProviderOracleParams {

                /**
                 * Constructs a new ProviderOracleParams.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IProviderOracleParams);

                /** ProviderOracleParams symbol. */
                public symbol: string;

                /** ProviderOracleParams provider. */
                public provider: string;

                /** ProviderOracleParams oracle_scale_factor. */
                public oracle_scale_factor: number;

                /** ProviderOracleParams oracle_type. */
                public oracle_type: injective.oracle.v1beta1.OracleType;

                /**
                 * Encodes the specified ProviderOracleParams message. Does not implicitly {@link injective.exchange.v1beta1.ProviderOracleParams.verify|verify} messages.
                 * @param message ProviderOracleParams message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IProviderOracleParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ProviderOracleParams message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.ProviderOracleParams.verify|verify} messages.
                 * @param message ProviderOracleParams message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IProviderOracleParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ProviderOracleParams message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ProviderOracleParams
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.ProviderOracleParams;

                /**
                 * Decodes a ProviderOracleParams message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ProviderOracleParams
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.ProviderOracleParams;

                /**
                 * Verifies a ProviderOracleParams message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ProviderOracleParams message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ProviderOracleParams
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.ProviderOracleParams;

                /**
                 * Creates a plain object from a ProviderOracleParams message. Also converts values to other types if specified.
                 * @param message ProviderOracleParams
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.ProviderOracleParams, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ProviderOracleParams to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an OracleParams. */
            interface IOracleParams {

                /** OracleParams oracle_base */
                oracle_base?: (string|null);

                /** OracleParams oracle_quote */
                oracle_quote?: (string|null);

                /** OracleParams oracle_scale_factor */
                oracle_scale_factor?: (number|null);

                /** OracleParams oracle_type */
                oracle_type?: (injective.oracle.v1beta1.OracleType|null);
            }

            /** Represents an OracleParams. */
            class OracleParams implements IOracleParams {

                /**
                 * Constructs a new OracleParams.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IOracleParams);

                /** OracleParams oracle_base. */
                public oracle_base: string;

                /** OracleParams oracle_quote. */
                public oracle_quote: string;

                /** OracleParams oracle_scale_factor. */
                public oracle_scale_factor: number;

                /** OracleParams oracle_type. */
                public oracle_type: injective.oracle.v1beta1.OracleType;

                /**
                 * Encodes the specified OracleParams message. Does not implicitly {@link injective.exchange.v1beta1.OracleParams.verify|verify} messages.
                 * @param message OracleParams message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IOracleParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified OracleParams message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.OracleParams.verify|verify} messages.
                 * @param message OracleParams message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IOracleParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an OracleParams message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns OracleParams
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.OracleParams;

                /**
                 * Decodes an OracleParams message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns OracleParams
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.OracleParams;

                /**
                 * Verifies an OracleParams message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an OracleParams message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns OracleParams
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.OracleParams;

                /**
                 * Creates a plain object from an OracleParams message. Also converts values to other types if specified.
                 * @param message OracleParams
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.OracleParams, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this OracleParams to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a TradingRewardCampaignLaunchProposal. */
            interface ITradingRewardCampaignLaunchProposal {

                /** TradingRewardCampaignLaunchProposal title */
                title?: (string|null);

                /** TradingRewardCampaignLaunchProposal description */
                description?: (string|null);

                /** TradingRewardCampaignLaunchProposal campaign_info */
                campaign_info?: (injective.exchange.v1beta1.ITradingRewardCampaignInfo|null);

                /** TradingRewardCampaignLaunchProposal campaign_reward_pools */
                campaign_reward_pools?: (injective.exchange.v1beta1.ICampaignRewardPool[]|null);
            }

            /** Represents a TradingRewardCampaignLaunchProposal. */
            class TradingRewardCampaignLaunchProposal implements ITradingRewardCampaignLaunchProposal {

                /**
                 * Constructs a new TradingRewardCampaignLaunchProposal.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.ITradingRewardCampaignLaunchProposal);

                /** TradingRewardCampaignLaunchProposal title. */
                public title: string;

                /** TradingRewardCampaignLaunchProposal description. */
                public description: string;

                /** TradingRewardCampaignLaunchProposal campaign_info. */
                public campaign_info?: (injective.exchange.v1beta1.ITradingRewardCampaignInfo|null);

                /** TradingRewardCampaignLaunchProposal campaign_reward_pools. */
                public campaign_reward_pools: injective.exchange.v1beta1.ICampaignRewardPool[];

                /**
                 * Encodes the specified TradingRewardCampaignLaunchProposal message. Does not implicitly {@link injective.exchange.v1beta1.TradingRewardCampaignLaunchProposal.verify|verify} messages.
                 * @param message TradingRewardCampaignLaunchProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.ITradingRewardCampaignLaunchProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified TradingRewardCampaignLaunchProposal message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.TradingRewardCampaignLaunchProposal.verify|verify} messages.
                 * @param message TradingRewardCampaignLaunchProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.ITradingRewardCampaignLaunchProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a TradingRewardCampaignLaunchProposal message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns TradingRewardCampaignLaunchProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.TradingRewardCampaignLaunchProposal;

                /**
                 * Decodes a TradingRewardCampaignLaunchProposal message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns TradingRewardCampaignLaunchProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.TradingRewardCampaignLaunchProposal;

                /**
                 * Verifies a TradingRewardCampaignLaunchProposal message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a TradingRewardCampaignLaunchProposal message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns TradingRewardCampaignLaunchProposal
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.TradingRewardCampaignLaunchProposal;

                /**
                 * Creates a plain object from a TradingRewardCampaignLaunchProposal message. Also converts values to other types if specified.
                 * @param message TradingRewardCampaignLaunchProposal
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.TradingRewardCampaignLaunchProposal, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this TradingRewardCampaignLaunchProposal to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a TradingRewardCampaignUpdateProposal. */
            interface ITradingRewardCampaignUpdateProposal {

                /** TradingRewardCampaignUpdateProposal title */
                title?: (string|null);

                /** TradingRewardCampaignUpdateProposal description */
                description?: (string|null);

                /** TradingRewardCampaignUpdateProposal campaign_info */
                campaign_info?: (injective.exchange.v1beta1.ITradingRewardCampaignInfo|null);

                /** TradingRewardCampaignUpdateProposal campaign_reward_pools_additions */
                campaign_reward_pools_additions?: (injective.exchange.v1beta1.ICampaignRewardPool[]|null);

                /** TradingRewardCampaignUpdateProposal campaign_reward_pools_updates */
                campaign_reward_pools_updates?: (injective.exchange.v1beta1.ICampaignRewardPool[]|null);
            }

            /** Represents a TradingRewardCampaignUpdateProposal. */
            class TradingRewardCampaignUpdateProposal implements ITradingRewardCampaignUpdateProposal {

                /**
                 * Constructs a new TradingRewardCampaignUpdateProposal.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.ITradingRewardCampaignUpdateProposal);

                /** TradingRewardCampaignUpdateProposal title. */
                public title: string;

                /** TradingRewardCampaignUpdateProposal description. */
                public description: string;

                /** TradingRewardCampaignUpdateProposal campaign_info. */
                public campaign_info?: (injective.exchange.v1beta1.ITradingRewardCampaignInfo|null);

                /** TradingRewardCampaignUpdateProposal campaign_reward_pools_additions. */
                public campaign_reward_pools_additions: injective.exchange.v1beta1.ICampaignRewardPool[];

                /** TradingRewardCampaignUpdateProposal campaign_reward_pools_updates. */
                public campaign_reward_pools_updates: injective.exchange.v1beta1.ICampaignRewardPool[];

                /**
                 * Encodes the specified TradingRewardCampaignUpdateProposal message. Does not implicitly {@link injective.exchange.v1beta1.TradingRewardCampaignUpdateProposal.verify|verify} messages.
                 * @param message TradingRewardCampaignUpdateProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.ITradingRewardCampaignUpdateProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified TradingRewardCampaignUpdateProposal message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.TradingRewardCampaignUpdateProposal.verify|verify} messages.
                 * @param message TradingRewardCampaignUpdateProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.ITradingRewardCampaignUpdateProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a TradingRewardCampaignUpdateProposal message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns TradingRewardCampaignUpdateProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.TradingRewardCampaignUpdateProposal;

                /**
                 * Decodes a TradingRewardCampaignUpdateProposal message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns TradingRewardCampaignUpdateProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.TradingRewardCampaignUpdateProposal;

                /**
                 * Verifies a TradingRewardCampaignUpdateProposal message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a TradingRewardCampaignUpdateProposal message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns TradingRewardCampaignUpdateProposal
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.TradingRewardCampaignUpdateProposal;

                /**
                 * Creates a plain object from a TradingRewardCampaignUpdateProposal message. Also converts values to other types if specified.
                 * @param message TradingRewardCampaignUpdateProposal
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.TradingRewardCampaignUpdateProposal, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this TradingRewardCampaignUpdateProposal to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a RewardPointUpdate. */
            interface IRewardPointUpdate {

                /** RewardPointUpdate account_address */
                account_address?: (string|null);

                /** RewardPointUpdate new_points */
                new_points?: (string|null);
            }

            /** Represents a RewardPointUpdate. */
            class RewardPointUpdate implements IRewardPointUpdate {

                /**
                 * Constructs a new RewardPointUpdate.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IRewardPointUpdate);

                /** RewardPointUpdate account_address. */
                public account_address: string;

                /** RewardPointUpdate new_points. */
                public new_points: string;

                /**
                 * Encodes the specified RewardPointUpdate message. Does not implicitly {@link injective.exchange.v1beta1.RewardPointUpdate.verify|verify} messages.
                 * @param message RewardPointUpdate message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IRewardPointUpdate, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified RewardPointUpdate message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.RewardPointUpdate.verify|verify} messages.
                 * @param message RewardPointUpdate message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IRewardPointUpdate, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a RewardPointUpdate message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns RewardPointUpdate
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.RewardPointUpdate;

                /**
                 * Decodes a RewardPointUpdate message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns RewardPointUpdate
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.RewardPointUpdate;

                /**
                 * Verifies a RewardPointUpdate message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a RewardPointUpdate message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns RewardPointUpdate
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.RewardPointUpdate;

                /**
                 * Creates a plain object from a RewardPointUpdate message. Also converts values to other types if specified.
                 * @param message RewardPointUpdate
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.RewardPointUpdate, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this RewardPointUpdate to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a TradingRewardPendingPointsUpdateProposal. */
            interface ITradingRewardPendingPointsUpdateProposal {

                /** TradingRewardPendingPointsUpdateProposal title */
                title?: (string|null);

                /** TradingRewardPendingPointsUpdateProposal description */
                description?: (string|null);

                /** TradingRewardPendingPointsUpdateProposal pending_pool_timestamp */
                pending_pool_timestamp?: (number|null);

                /** TradingRewardPendingPointsUpdateProposal reward_point_updates */
                reward_point_updates?: (injective.exchange.v1beta1.IRewardPointUpdate[]|null);
            }

            /** Represents a TradingRewardPendingPointsUpdateProposal. */
            class TradingRewardPendingPointsUpdateProposal implements ITradingRewardPendingPointsUpdateProposal {

                /**
                 * Constructs a new TradingRewardPendingPointsUpdateProposal.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.ITradingRewardPendingPointsUpdateProposal);

                /** TradingRewardPendingPointsUpdateProposal title. */
                public title: string;

                /** TradingRewardPendingPointsUpdateProposal description. */
                public description: string;

                /** TradingRewardPendingPointsUpdateProposal pending_pool_timestamp. */
                public pending_pool_timestamp: number;

                /** TradingRewardPendingPointsUpdateProposal reward_point_updates. */
                public reward_point_updates: injective.exchange.v1beta1.IRewardPointUpdate[];

                /**
                 * Encodes the specified TradingRewardPendingPointsUpdateProposal message. Does not implicitly {@link injective.exchange.v1beta1.TradingRewardPendingPointsUpdateProposal.verify|verify} messages.
                 * @param message TradingRewardPendingPointsUpdateProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.ITradingRewardPendingPointsUpdateProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified TradingRewardPendingPointsUpdateProposal message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.TradingRewardPendingPointsUpdateProposal.verify|verify} messages.
                 * @param message TradingRewardPendingPointsUpdateProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.ITradingRewardPendingPointsUpdateProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a TradingRewardPendingPointsUpdateProposal message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns TradingRewardPendingPointsUpdateProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.TradingRewardPendingPointsUpdateProposal;

                /**
                 * Decodes a TradingRewardPendingPointsUpdateProposal message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns TradingRewardPendingPointsUpdateProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.TradingRewardPendingPointsUpdateProposal;

                /**
                 * Verifies a TradingRewardPendingPointsUpdateProposal message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a TradingRewardPendingPointsUpdateProposal message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns TradingRewardPendingPointsUpdateProposal
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.TradingRewardPendingPointsUpdateProposal;

                /**
                 * Creates a plain object from a TradingRewardPendingPointsUpdateProposal message. Also converts values to other types if specified.
                 * @param message TradingRewardPendingPointsUpdateProposal
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.TradingRewardPendingPointsUpdateProposal, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this TradingRewardPendingPointsUpdateProposal to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a FeeDiscountProposal. */
            interface IFeeDiscountProposal {

                /** FeeDiscountProposal title */
                title?: (string|null);

                /** FeeDiscountProposal description */
                description?: (string|null);

                /** FeeDiscountProposal schedule */
                schedule?: (injective.exchange.v1beta1.IFeeDiscountSchedule|null);
            }

            /** Represents a FeeDiscountProposal. */
            class FeeDiscountProposal implements IFeeDiscountProposal {

                /**
                 * Constructs a new FeeDiscountProposal.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IFeeDiscountProposal);

                /** FeeDiscountProposal title. */
                public title: string;

                /** FeeDiscountProposal description. */
                public description: string;

                /** FeeDiscountProposal schedule. */
                public schedule?: (injective.exchange.v1beta1.IFeeDiscountSchedule|null);

                /**
                 * Encodes the specified FeeDiscountProposal message. Does not implicitly {@link injective.exchange.v1beta1.FeeDiscountProposal.verify|verify} messages.
                 * @param message FeeDiscountProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IFeeDiscountProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified FeeDiscountProposal message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.FeeDiscountProposal.verify|verify} messages.
                 * @param message FeeDiscountProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IFeeDiscountProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a FeeDiscountProposal message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns FeeDiscountProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.FeeDiscountProposal;

                /**
                 * Decodes a FeeDiscountProposal message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns FeeDiscountProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.FeeDiscountProposal;

                /**
                 * Verifies a FeeDiscountProposal message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a FeeDiscountProposal message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns FeeDiscountProposal
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.FeeDiscountProposal;

                /**
                 * Creates a plain object from a FeeDiscountProposal message. Also converts values to other types if specified.
                 * @param message FeeDiscountProposal
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.FeeDiscountProposal, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this FeeDiscountProposal to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a BatchCommunityPoolSpendProposal. */
            interface IBatchCommunityPoolSpendProposal {

                /** BatchCommunityPoolSpendProposal title */
                title?: (string|null);

                /** BatchCommunityPoolSpendProposal description */
                description?: (string|null);

                /** BatchCommunityPoolSpendProposal proposals */
                proposals?: (cosmos.distribution.v1beta1.ICommunityPoolSpendProposal[]|null);
            }

            /** Represents a BatchCommunityPoolSpendProposal. */
            class BatchCommunityPoolSpendProposal implements IBatchCommunityPoolSpendProposal {

                /**
                 * Constructs a new BatchCommunityPoolSpendProposal.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IBatchCommunityPoolSpendProposal);

                /** BatchCommunityPoolSpendProposal title. */
                public title: string;

                /** BatchCommunityPoolSpendProposal description. */
                public description: string;

                /** BatchCommunityPoolSpendProposal proposals. */
                public proposals: cosmos.distribution.v1beta1.ICommunityPoolSpendProposal[];

                /**
                 * Encodes the specified BatchCommunityPoolSpendProposal message. Does not implicitly {@link injective.exchange.v1beta1.BatchCommunityPoolSpendProposal.verify|verify} messages.
                 * @param message BatchCommunityPoolSpendProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IBatchCommunityPoolSpendProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified BatchCommunityPoolSpendProposal message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.BatchCommunityPoolSpendProposal.verify|verify} messages.
                 * @param message BatchCommunityPoolSpendProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IBatchCommunityPoolSpendProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a BatchCommunityPoolSpendProposal message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns BatchCommunityPoolSpendProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.BatchCommunityPoolSpendProposal;

                /**
                 * Decodes a BatchCommunityPoolSpendProposal message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns BatchCommunityPoolSpendProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.BatchCommunityPoolSpendProposal;

                /**
                 * Verifies a BatchCommunityPoolSpendProposal message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a BatchCommunityPoolSpendProposal message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns BatchCommunityPoolSpendProposal
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.BatchCommunityPoolSpendProposal;

                /**
                 * Creates a plain object from a BatchCommunityPoolSpendProposal message. Also converts values to other types if specified.
                 * @param message BatchCommunityPoolSpendProposal
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.BatchCommunityPoolSpendProposal, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this BatchCommunityPoolSpendProposal to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgRewardsOptOut. */
            interface IMsgRewardsOptOut {

                /** MsgRewardsOptOut sender */
                sender?: (string|null);
            }

            /** Represents a MsgRewardsOptOut. */
            class MsgRewardsOptOut implements IMsgRewardsOptOut {

                /**
                 * Constructs a new MsgRewardsOptOut.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IMsgRewardsOptOut);

                /** MsgRewardsOptOut sender. */
                public sender: string;

                /**
                 * Encodes the specified MsgRewardsOptOut message. Does not implicitly {@link injective.exchange.v1beta1.MsgRewardsOptOut.verify|verify} messages.
                 * @param message MsgRewardsOptOut message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IMsgRewardsOptOut, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgRewardsOptOut message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.MsgRewardsOptOut.verify|verify} messages.
                 * @param message MsgRewardsOptOut message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IMsgRewardsOptOut, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgRewardsOptOut message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgRewardsOptOut
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.MsgRewardsOptOut;

                /**
                 * Decodes a MsgRewardsOptOut message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgRewardsOptOut
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.MsgRewardsOptOut;

                /**
                 * Verifies a MsgRewardsOptOut message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgRewardsOptOut message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgRewardsOptOut
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.MsgRewardsOptOut;

                /**
                 * Creates a plain object from a MsgRewardsOptOut message. Also converts values to other types if specified.
                 * @param message MsgRewardsOptOut
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.MsgRewardsOptOut, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgRewardsOptOut to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgRewardsOptOutResponse. */
            interface IMsgRewardsOptOutResponse {
            }

            /** Represents a MsgRewardsOptOutResponse. */
            class MsgRewardsOptOutResponse implements IMsgRewardsOptOutResponse {

                /**
                 * Constructs a new MsgRewardsOptOutResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IMsgRewardsOptOutResponse);

                /**
                 * Encodes the specified MsgRewardsOptOutResponse message. Does not implicitly {@link injective.exchange.v1beta1.MsgRewardsOptOutResponse.verify|verify} messages.
                 * @param message MsgRewardsOptOutResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IMsgRewardsOptOutResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgRewardsOptOutResponse message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.MsgRewardsOptOutResponse.verify|verify} messages.
                 * @param message MsgRewardsOptOutResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IMsgRewardsOptOutResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgRewardsOptOutResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgRewardsOptOutResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.MsgRewardsOptOutResponse;

                /**
                 * Decodes a MsgRewardsOptOutResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgRewardsOptOutResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.MsgRewardsOptOutResponse;

                /**
                 * Verifies a MsgRewardsOptOutResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgRewardsOptOutResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgRewardsOptOutResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.MsgRewardsOptOutResponse;

                /**
                 * Creates a plain object from a MsgRewardsOptOutResponse message. Also converts values to other types if specified.
                 * @param message MsgRewardsOptOutResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.MsgRewardsOptOutResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgRewardsOptOutResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgReclaimLockedFunds. */
            interface IMsgReclaimLockedFunds {

                /** MsgReclaimLockedFunds sender */
                sender?: (string|null);

                /** MsgReclaimLockedFunds lockedAccountPubKey */
                lockedAccountPubKey?: (Uint8Array|null);

                /** MsgReclaimLockedFunds signature */
                signature?: (Uint8Array|null);
            }

            /** Represents a MsgReclaimLockedFunds. */
            class MsgReclaimLockedFunds implements IMsgReclaimLockedFunds {

                /**
                 * Constructs a new MsgReclaimLockedFunds.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IMsgReclaimLockedFunds);

                /** MsgReclaimLockedFunds sender. */
                public sender: string;

                /** MsgReclaimLockedFunds lockedAccountPubKey. */
                public lockedAccountPubKey: Uint8Array;

                /** MsgReclaimLockedFunds signature. */
                public signature: Uint8Array;

                /**
                 * Encodes the specified MsgReclaimLockedFunds message. Does not implicitly {@link injective.exchange.v1beta1.MsgReclaimLockedFunds.verify|verify} messages.
                 * @param message MsgReclaimLockedFunds message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IMsgReclaimLockedFunds, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgReclaimLockedFunds message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.MsgReclaimLockedFunds.verify|verify} messages.
                 * @param message MsgReclaimLockedFunds message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IMsgReclaimLockedFunds, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgReclaimLockedFunds message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgReclaimLockedFunds
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.MsgReclaimLockedFunds;

                /**
                 * Decodes a MsgReclaimLockedFunds message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgReclaimLockedFunds
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.MsgReclaimLockedFunds;

                /**
                 * Verifies a MsgReclaimLockedFunds message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgReclaimLockedFunds message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgReclaimLockedFunds
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.MsgReclaimLockedFunds;

                /**
                 * Creates a plain object from a MsgReclaimLockedFunds message. Also converts values to other types if specified.
                 * @param message MsgReclaimLockedFunds
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.MsgReclaimLockedFunds, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgReclaimLockedFunds to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgReclaimLockedFundsResponse. */
            interface IMsgReclaimLockedFundsResponse {
            }

            /** Represents a MsgReclaimLockedFundsResponse. */
            class MsgReclaimLockedFundsResponse implements IMsgReclaimLockedFundsResponse {

                /**
                 * Constructs a new MsgReclaimLockedFundsResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IMsgReclaimLockedFundsResponse);

                /**
                 * Encodes the specified MsgReclaimLockedFundsResponse message. Does not implicitly {@link injective.exchange.v1beta1.MsgReclaimLockedFundsResponse.verify|verify} messages.
                 * @param message MsgReclaimLockedFundsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IMsgReclaimLockedFundsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgReclaimLockedFundsResponse message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.MsgReclaimLockedFundsResponse.verify|verify} messages.
                 * @param message MsgReclaimLockedFundsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IMsgReclaimLockedFundsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgReclaimLockedFundsResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgReclaimLockedFundsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.MsgReclaimLockedFundsResponse;

                /**
                 * Decodes a MsgReclaimLockedFundsResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgReclaimLockedFundsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.MsgReclaimLockedFundsResponse;

                /**
                 * Verifies a MsgReclaimLockedFundsResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgReclaimLockedFundsResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgReclaimLockedFundsResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.MsgReclaimLockedFundsResponse;

                /**
                 * Creates a plain object from a MsgReclaimLockedFundsResponse message. Also converts values to other types if specified.
                 * @param message MsgReclaimLockedFundsResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.MsgReclaimLockedFundsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgReclaimLockedFundsResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgSignData. */
            interface IMsgSignData {

                /** MsgSignData Signer */
                Signer?: (Uint8Array|null);

                /** MsgSignData Data */
                Data?: (Uint8Array|null);
            }

            /** Represents a MsgSignData. */
            class MsgSignData implements IMsgSignData {

                /**
                 * Constructs a new MsgSignData.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IMsgSignData);

                /** MsgSignData Signer. */
                public Signer: Uint8Array;

                /** MsgSignData Data. */
                public Data: Uint8Array;

                /**
                 * Encodes the specified MsgSignData message. Does not implicitly {@link injective.exchange.v1beta1.MsgSignData.verify|verify} messages.
                 * @param message MsgSignData message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IMsgSignData, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgSignData message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.MsgSignData.verify|verify} messages.
                 * @param message MsgSignData message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IMsgSignData, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgSignData message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgSignData
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.MsgSignData;

                /**
                 * Decodes a MsgSignData message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgSignData
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.MsgSignData;

                /**
                 * Verifies a MsgSignData message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgSignData message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgSignData
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.MsgSignData;

                /**
                 * Creates a plain object from a MsgSignData message. Also converts values to other types if specified.
                 * @param message MsgSignData
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.MsgSignData, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgSignData to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgSignDoc. */
            interface IMsgSignDoc {

                /** MsgSignDoc sign_type */
                sign_type?: (string|null);

                /** MsgSignDoc value */
                value?: (injective.exchange.v1beta1.IMsgSignData|null);
            }

            /** Represents a MsgSignDoc. */
            class MsgSignDoc implements IMsgSignDoc {

                /**
                 * Constructs a new MsgSignDoc.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IMsgSignDoc);

                /** MsgSignDoc sign_type. */
                public sign_type: string;

                /** MsgSignDoc value. */
                public value?: (injective.exchange.v1beta1.IMsgSignData|null);

                /**
                 * Encodes the specified MsgSignDoc message. Does not implicitly {@link injective.exchange.v1beta1.MsgSignDoc.verify|verify} messages.
                 * @param message MsgSignDoc message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IMsgSignDoc, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgSignDoc message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.MsgSignDoc.verify|verify} messages.
                 * @param message MsgSignDoc message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IMsgSignDoc, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgSignDoc message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgSignDoc
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.MsgSignDoc;

                /**
                 * Decodes a MsgSignDoc message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgSignDoc
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.MsgSignDoc;

                /**
                 * Verifies a MsgSignDoc message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgSignDoc message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgSignDoc
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.MsgSignDoc;

                /**
                 * Creates a plain object from a MsgSignDoc message. Also converts values to other types if specified.
                 * @param message MsgSignDoc
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.MsgSignDoc, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgSignDoc to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgAdminUpdateBinaryOptionsMarket. */
            interface IMsgAdminUpdateBinaryOptionsMarket {

                /** MsgAdminUpdateBinaryOptionsMarket sender */
                sender?: (string|null);

                /** MsgAdminUpdateBinaryOptionsMarket market_id */
                market_id?: (string|null);

                /** MsgAdminUpdateBinaryOptionsMarket settlement_price */
                settlement_price?: (string|null);

                /** MsgAdminUpdateBinaryOptionsMarket expiration_timestamp */
                expiration_timestamp?: (number|null);

                /** MsgAdminUpdateBinaryOptionsMarket settlement_timestamp */
                settlement_timestamp?: (number|null);

                /** MsgAdminUpdateBinaryOptionsMarket status */
                status?: (injective.exchange.v1beta1.MarketStatus|null);
            }

            /** Represents a MsgAdminUpdateBinaryOptionsMarket. */
            class MsgAdminUpdateBinaryOptionsMarket implements IMsgAdminUpdateBinaryOptionsMarket {

                /**
                 * Constructs a new MsgAdminUpdateBinaryOptionsMarket.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IMsgAdminUpdateBinaryOptionsMarket);

                /** MsgAdminUpdateBinaryOptionsMarket sender. */
                public sender: string;

                /** MsgAdminUpdateBinaryOptionsMarket market_id. */
                public market_id: string;

                /** MsgAdminUpdateBinaryOptionsMarket settlement_price. */
                public settlement_price: string;

                /** MsgAdminUpdateBinaryOptionsMarket expiration_timestamp. */
                public expiration_timestamp: number;

                /** MsgAdminUpdateBinaryOptionsMarket settlement_timestamp. */
                public settlement_timestamp: number;

                /** MsgAdminUpdateBinaryOptionsMarket status. */
                public status: injective.exchange.v1beta1.MarketStatus;

                /**
                 * Encodes the specified MsgAdminUpdateBinaryOptionsMarket message. Does not implicitly {@link injective.exchange.v1beta1.MsgAdminUpdateBinaryOptionsMarket.verify|verify} messages.
                 * @param message MsgAdminUpdateBinaryOptionsMarket message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IMsgAdminUpdateBinaryOptionsMarket, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgAdminUpdateBinaryOptionsMarket message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.MsgAdminUpdateBinaryOptionsMarket.verify|verify} messages.
                 * @param message MsgAdminUpdateBinaryOptionsMarket message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IMsgAdminUpdateBinaryOptionsMarket, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgAdminUpdateBinaryOptionsMarket message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgAdminUpdateBinaryOptionsMarket
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.MsgAdminUpdateBinaryOptionsMarket;

                /**
                 * Decodes a MsgAdminUpdateBinaryOptionsMarket message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgAdminUpdateBinaryOptionsMarket
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.MsgAdminUpdateBinaryOptionsMarket;

                /**
                 * Verifies a MsgAdminUpdateBinaryOptionsMarket message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgAdminUpdateBinaryOptionsMarket message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgAdminUpdateBinaryOptionsMarket
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.MsgAdminUpdateBinaryOptionsMarket;

                /**
                 * Creates a plain object from a MsgAdminUpdateBinaryOptionsMarket message. Also converts values to other types if specified.
                 * @param message MsgAdminUpdateBinaryOptionsMarket
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.MsgAdminUpdateBinaryOptionsMarket, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgAdminUpdateBinaryOptionsMarket to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgAdminUpdateBinaryOptionsMarketResponse. */
            interface IMsgAdminUpdateBinaryOptionsMarketResponse {
            }

            /** Represents a MsgAdminUpdateBinaryOptionsMarketResponse. */
            class MsgAdminUpdateBinaryOptionsMarketResponse implements IMsgAdminUpdateBinaryOptionsMarketResponse {

                /**
                 * Constructs a new MsgAdminUpdateBinaryOptionsMarketResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IMsgAdminUpdateBinaryOptionsMarketResponse);

                /**
                 * Encodes the specified MsgAdminUpdateBinaryOptionsMarketResponse message. Does not implicitly {@link injective.exchange.v1beta1.MsgAdminUpdateBinaryOptionsMarketResponse.verify|verify} messages.
                 * @param message MsgAdminUpdateBinaryOptionsMarketResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IMsgAdminUpdateBinaryOptionsMarketResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgAdminUpdateBinaryOptionsMarketResponse message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.MsgAdminUpdateBinaryOptionsMarketResponse.verify|verify} messages.
                 * @param message MsgAdminUpdateBinaryOptionsMarketResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IMsgAdminUpdateBinaryOptionsMarketResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgAdminUpdateBinaryOptionsMarketResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgAdminUpdateBinaryOptionsMarketResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.MsgAdminUpdateBinaryOptionsMarketResponse;

                /**
                 * Decodes a MsgAdminUpdateBinaryOptionsMarketResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgAdminUpdateBinaryOptionsMarketResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.MsgAdminUpdateBinaryOptionsMarketResponse;

                /**
                 * Verifies a MsgAdminUpdateBinaryOptionsMarketResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgAdminUpdateBinaryOptionsMarketResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgAdminUpdateBinaryOptionsMarketResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.MsgAdminUpdateBinaryOptionsMarketResponse;

                /**
                 * Creates a plain object from a MsgAdminUpdateBinaryOptionsMarketResponse message. Also converts values to other types if specified.
                 * @param message MsgAdminUpdateBinaryOptionsMarketResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.MsgAdminUpdateBinaryOptionsMarketResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgAdminUpdateBinaryOptionsMarketResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an AtomicMarketOrderFeeMultiplierScheduleProposal. */
            interface IAtomicMarketOrderFeeMultiplierScheduleProposal {

                /** AtomicMarketOrderFeeMultiplierScheduleProposal title */
                title?: (string|null);

                /** AtomicMarketOrderFeeMultiplierScheduleProposal description */
                description?: (string|null);

                /** AtomicMarketOrderFeeMultiplierScheduleProposal market_fee_multipliers */
                market_fee_multipliers?: (injective.exchange.v1beta1.IMarketFeeMultiplier[]|null);
            }

            /** Represents an AtomicMarketOrderFeeMultiplierScheduleProposal. */
            class AtomicMarketOrderFeeMultiplierScheduleProposal implements IAtomicMarketOrderFeeMultiplierScheduleProposal {

                /**
                 * Constructs a new AtomicMarketOrderFeeMultiplierScheduleProposal.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IAtomicMarketOrderFeeMultiplierScheduleProposal);

                /** AtomicMarketOrderFeeMultiplierScheduleProposal title. */
                public title: string;

                /** AtomicMarketOrderFeeMultiplierScheduleProposal description. */
                public description: string;

                /** AtomicMarketOrderFeeMultiplierScheduleProposal market_fee_multipliers. */
                public market_fee_multipliers: injective.exchange.v1beta1.IMarketFeeMultiplier[];

                /**
                 * Encodes the specified AtomicMarketOrderFeeMultiplierScheduleProposal message. Does not implicitly {@link injective.exchange.v1beta1.AtomicMarketOrderFeeMultiplierScheduleProposal.verify|verify} messages.
                 * @param message AtomicMarketOrderFeeMultiplierScheduleProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IAtomicMarketOrderFeeMultiplierScheduleProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified AtomicMarketOrderFeeMultiplierScheduleProposal message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.AtomicMarketOrderFeeMultiplierScheduleProposal.verify|verify} messages.
                 * @param message AtomicMarketOrderFeeMultiplierScheduleProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IAtomicMarketOrderFeeMultiplierScheduleProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an AtomicMarketOrderFeeMultiplierScheduleProposal message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns AtomicMarketOrderFeeMultiplierScheduleProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.AtomicMarketOrderFeeMultiplierScheduleProposal;

                /**
                 * Decodes an AtomicMarketOrderFeeMultiplierScheduleProposal message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns AtomicMarketOrderFeeMultiplierScheduleProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.AtomicMarketOrderFeeMultiplierScheduleProposal;

                /**
                 * Verifies an AtomicMarketOrderFeeMultiplierScheduleProposal message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an AtomicMarketOrderFeeMultiplierScheduleProposal message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns AtomicMarketOrderFeeMultiplierScheduleProposal
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.AtomicMarketOrderFeeMultiplierScheduleProposal;

                /**
                 * Creates a plain object from an AtomicMarketOrderFeeMultiplierScheduleProposal message. Also converts values to other types if specified.
                 * @param message AtomicMarketOrderFeeMultiplierScheduleProposal
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.AtomicMarketOrderFeeMultiplierScheduleProposal, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this AtomicMarketOrderFeeMultiplierScheduleProposal to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** AtomicMarketOrderAccessLevel enum. */
            enum AtomicMarketOrderAccessLevel {
                Nobody = 0,
                BeginBlockerSmartContractsOnly = 1,
                SmartContractsOnly = 2,
                Everyone = 3
            }

            /** Properties of a Params. */
            interface IParams {

                /** Params spot_market_instant_listing_fee */
                spot_market_instant_listing_fee?: (cosmos.base.v1beta1.ICoin|null);

                /** Params derivative_market_instant_listing_fee */
                derivative_market_instant_listing_fee?: (cosmos.base.v1beta1.ICoin|null);

                /** Params default_spot_maker_fee_rate */
                default_spot_maker_fee_rate?: (string|null);

                /** Params default_spot_taker_fee_rate */
                default_spot_taker_fee_rate?: (string|null);

                /** Params default_derivative_maker_fee_rate */
                default_derivative_maker_fee_rate?: (string|null);

                /** Params default_derivative_taker_fee_rate */
                default_derivative_taker_fee_rate?: (string|null);

                /** Params default_initial_margin_ratio */
                default_initial_margin_ratio?: (string|null);

                /** Params default_maintenance_margin_ratio */
                default_maintenance_margin_ratio?: (string|null);

                /** Params default_funding_interval */
                default_funding_interval?: (number|null);

                /** Params funding_multiple */
                funding_multiple?: (number|null);

                /** Params relayer_fee_share_rate */
                relayer_fee_share_rate?: (string|null);

                /** Params default_hourly_funding_rate_cap */
                default_hourly_funding_rate_cap?: (string|null);

                /** Params default_hourly_interest_rate */
                default_hourly_interest_rate?: (string|null);

                /** Params max_derivative_order_side_count */
                max_derivative_order_side_count?: (number|null);

                /** Params inj_reward_staked_requirement_threshold */
                inj_reward_staked_requirement_threshold?: (string|null);

                /** Params trading_rewards_vesting_duration */
                trading_rewards_vesting_duration?: (number|null);

                /** Params liquidator_reward_share_rate */
                liquidator_reward_share_rate?: (string|null);

                /** Params binary_options_market_instant_listing_fee */
                binary_options_market_instant_listing_fee?: (cosmos.base.v1beta1.ICoin|null);

                /** Params atomic_market_order_access_level */
                atomic_market_order_access_level?: (injective.exchange.v1beta1.AtomicMarketOrderAccessLevel|null);

                /** Params spot_atomic_market_order_fee_multiplier */
                spot_atomic_market_order_fee_multiplier?: (string|null);

                /** Params derivative_atomic_market_order_fee_multiplier */
                derivative_atomic_market_order_fee_multiplier?: (string|null);

                /** Params binary_options_atomic_market_order_fee_multiplier */
                binary_options_atomic_market_order_fee_multiplier?: (string|null);

                /** Params minimal_protocol_fee_rate */
                minimal_protocol_fee_rate?: (string|null);

                /** Params is_instant_derivative_market_launch_enabled */
                is_instant_derivative_market_launch_enabled?: (boolean|null);
            }

            /** Represents a Params. */
            class Params implements IParams {

                /**
                 * Constructs a new Params.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IParams);

                /** Params spot_market_instant_listing_fee. */
                public spot_market_instant_listing_fee?: (cosmos.base.v1beta1.ICoin|null);

                /** Params derivative_market_instant_listing_fee. */
                public derivative_market_instant_listing_fee?: (cosmos.base.v1beta1.ICoin|null);

                /** Params default_spot_maker_fee_rate. */
                public default_spot_maker_fee_rate: string;

                /** Params default_spot_taker_fee_rate. */
                public default_spot_taker_fee_rate: string;

                /** Params default_derivative_maker_fee_rate. */
                public default_derivative_maker_fee_rate: string;

                /** Params default_derivative_taker_fee_rate. */
                public default_derivative_taker_fee_rate: string;

                /** Params default_initial_margin_ratio. */
                public default_initial_margin_ratio: string;

                /** Params default_maintenance_margin_ratio. */
                public default_maintenance_margin_ratio: string;

                /** Params default_funding_interval. */
                public default_funding_interval: number;

                /** Params funding_multiple. */
                public funding_multiple: number;

                /** Params relayer_fee_share_rate. */
                public relayer_fee_share_rate: string;

                /** Params default_hourly_funding_rate_cap. */
                public default_hourly_funding_rate_cap: string;

                /** Params default_hourly_interest_rate. */
                public default_hourly_interest_rate: string;

                /** Params max_derivative_order_side_count. */
                public max_derivative_order_side_count: number;

                /** Params inj_reward_staked_requirement_threshold. */
                public inj_reward_staked_requirement_threshold: string;

                /** Params trading_rewards_vesting_duration. */
                public trading_rewards_vesting_duration: number;

                /** Params liquidator_reward_share_rate. */
                public liquidator_reward_share_rate: string;

                /** Params binary_options_market_instant_listing_fee. */
                public binary_options_market_instant_listing_fee?: (cosmos.base.v1beta1.ICoin|null);

                /** Params atomic_market_order_access_level. */
                public atomic_market_order_access_level: injective.exchange.v1beta1.AtomicMarketOrderAccessLevel;

                /** Params spot_atomic_market_order_fee_multiplier. */
                public spot_atomic_market_order_fee_multiplier: string;

                /** Params derivative_atomic_market_order_fee_multiplier. */
                public derivative_atomic_market_order_fee_multiplier: string;

                /** Params binary_options_atomic_market_order_fee_multiplier. */
                public binary_options_atomic_market_order_fee_multiplier: string;

                /** Params minimal_protocol_fee_rate. */
                public minimal_protocol_fee_rate: string;

                /** Params is_instant_derivative_market_launch_enabled. */
                public is_instant_derivative_market_launch_enabled: boolean;

                /**
                 * Encodes the specified Params message. Does not implicitly {@link injective.exchange.v1beta1.Params.verify|verify} messages.
                 * @param message Params message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Params message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.Params.verify|verify} messages.
                 * @param message Params message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Params message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Params
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.Params;

                /**
                 * Decodes a Params message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Params
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.Params;

                /**
                 * Verifies a Params message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Params message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Params
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.Params;

                /**
                 * Creates a plain object from a Params message. Also converts values to other types if specified.
                 * @param message Params
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.Params, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Params to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** MarketStatus enum. */
            enum MarketStatus {
                Unspecified = 0,
                Active = 1,
                Paused = 2,
                Demolished = 3,
                Expired = 4
            }

            /** Properties of a MarketFeeMultiplier. */
            interface IMarketFeeMultiplier {

                /** MarketFeeMultiplier market_id */
                market_id?: (string|null);

                /** MarketFeeMultiplier fee_multiplier */
                fee_multiplier?: (string|null);
            }

            /** Represents a MarketFeeMultiplier. */
            class MarketFeeMultiplier implements IMarketFeeMultiplier {

                /**
                 * Constructs a new MarketFeeMultiplier.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IMarketFeeMultiplier);

                /** MarketFeeMultiplier market_id. */
                public market_id: string;

                /** MarketFeeMultiplier fee_multiplier. */
                public fee_multiplier: string;

                /**
                 * Encodes the specified MarketFeeMultiplier message. Does not implicitly {@link injective.exchange.v1beta1.MarketFeeMultiplier.verify|verify} messages.
                 * @param message MarketFeeMultiplier message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IMarketFeeMultiplier, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MarketFeeMultiplier message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.MarketFeeMultiplier.verify|verify} messages.
                 * @param message MarketFeeMultiplier message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IMarketFeeMultiplier, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MarketFeeMultiplier message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MarketFeeMultiplier
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.MarketFeeMultiplier;

                /**
                 * Decodes a MarketFeeMultiplier message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MarketFeeMultiplier
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.MarketFeeMultiplier;

                /**
                 * Verifies a MarketFeeMultiplier message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MarketFeeMultiplier message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MarketFeeMultiplier
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.MarketFeeMultiplier;

                /**
                 * Creates a plain object from a MarketFeeMultiplier message. Also converts values to other types if specified.
                 * @param message MarketFeeMultiplier
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.MarketFeeMultiplier, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MarketFeeMultiplier to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a DerivativeMarket. */
            interface IDerivativeMarket {

                /** DerivativeMarket ticker */
                ticker?: (string|null);

                /** DerivativeMarket oracle_base */
                oracle_base?: (string|null);

                /** DerivativeMarket oracle_quote */
                oracle_quote?: (string|null);

                /** DerivativeMarket oracle_type */
                oracle_type?: (injective.oracle.v1beta1.OracleType|null);

                /** DerivativeMarket oracle_scale_factor */
                oracle_scale_factor?: (number|null);

                /** DerivativeMarket quote_denom */
                quote_denom?: (string|null);

                /** DerivativeMarket market_id */
                market_id?: (string|null);

                /** DerivativeMarket initial_margin_ratio */
                initial_margin_ratio?: (string|null);

                /** DerivativeMarket maintenance_margin_ratio */
                maintenance_margin_ratio?: (string|null);

                /** DerivativeMarket maker_fee_rate */
                maker_fee_rate?: (string|null);

                /** DerivativeMarket taker_fee_rate */
                taker_fee_rate?: (string|null);

                /** DerivativeMarket relayer_fee_share_rate */
                relayer_fee_share_rate?: (string|null);

                /** DerivativeMarket isPerpetual */
                isPerpetual?: (boolean|null);

                /** DerivativeMarket status */
                status?: (injective.exchange.v1beta1.MarketStatus|null);

                /** DerivativeMarket min_price_tick_size */
                min_price_tick_size?: (string|null);

                /** DerivativeMarket min_quantity_tick_size */
                min_quantity_tick_size?: (string|null);
            }

            /** Represents a DerivativeMarket. */
            class DerivativeMarket implements IDerivativeMarket {

                /**
                 * Constructs a new DerivativeMarket.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IDerivativeMarket);

                /** DerivativeMarket ticker. */
                public ticker: string;

                /** DerivativeMarket oracle_base. */
                public oracle_base: string;

                /** DerivativeMarket oracle_quote. */
                public oracle_quote: string;

                /** DerivativeMarket oracle_type. */
                public oracle_type: injective.oracle.v1beta1.OracleType;

                /** DerivativeMarket oracle_scale_factor. */
                public oracle_scale_factor: number;

                /** DerivativeMarket quote_denom. */
                public quote_denom: string;

                /** DerivativeMarket market_id. */
                public market_id: string;

                /** DerivativeMarket initial_margin_ratio. */
                public initial_margin_ratio: string;

                /** DerivativeMarket maintenance_margin_ratio. */
                public maintenance_margin_ratio: string;

                /** DerivativeMarket maker_fee_rate. */
                public maker_fee_rate: string;

                /** DerivativeMarket taker_fee_rate. */
                public taker_fee_rate: string;

                /** DerivativeMarket relayer_fee_share_rate. */
                public relayer_fee_share_rate: string;

                /** DerivativeMarket isPerpetual. */
                public isPerpetual: boolean;

                /** DerivativeMarket status. */
                public status: injective.exchange.v1beta1.MarketStatus;

                /** DerivativeMarket min_price_tick_size. */
                public min_price_tick_size: string;

                /** DerivativeMarket min_quantity_tick_size. */
                public min_quantity_tick_size: string;

                /**
                 * Encodes the specified DerivativeMarket message. Does not implicitly {@link injective.exchange.v1beta1.DerivativeMarket.verify|verify} messages.
                 * @param message DerivativeMarket message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IDerivativeMarket, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DerivativeMarket message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.DerivativeMarket.verify|verify} messages.
                 * @param message DerivativeMarket message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IDerivativeMarket, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DerivativeMarket message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DerivativeMarket
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.DerivativeMarket;

                /**
                 * Decodes a DerivativeMarket message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DerivativeMarket
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.DerivativeMarket;

                /**
                 * Verifies a DerivativeMarket message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DerivativeMarket message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DerivativeMarket
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.DerivativeMarket;

                /**
                 * Creates a plain object from a DerivativeMarket message. Also converts values to other types if specified.
                 * @param message DerivativeMarket
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.DerivativeMarket, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DerivativeMarket to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a BinaryOptionsMarket. */
            interface IBinaryOptionsMarket {

                /** BinaryOptionsMarket ticker */
                ticker?: (string|null);

                /** BinaryOptionsMarket oracle_symbol */
                oracle_symbol?: (string|null);

                /** BinaryOptionsMarket oracle_provider */
                oracle_provider?: (string|null);

                /** BinaryOptionsMarket oracle_type */
                oracle_type?: (injective.oracle.v1beta1.OracleType|null);

                /** BinaryOptionsMarket oracle_scale_factor */
                oracle_scale_factor?: (number|null);

                /** BinaryOptionsMarket expiration_timestamp */
                expiration_timestamp?: (number|null);

                /** BinaryOptionsMarket settlement_timestamp */
                settlement_timestamp?: (number|null);

                /** BinaryOptionsMarket admin */
                admin?: (string|null);

                /** BinaryOptionsMarket quote_denom */
                quote_denom?: (string|null);

                /** BinaryOptionsMarket market_id */
                market_id?: (string|null);

                /** BinaryOptionsMarket maker_fee_rate */
                maker_fee_rate?: (string|null);

                /** BinaryOptionsMarket taker_fee_rate */
                taker_fee_rate?: (string|null);

                /** BinaryOptionsMarket relayer_fee_share_rate */
                relayer_fee_share_rate?: (string|null);

                /** BinaryOptionsMarket status */
                status?: (injective.exchange.v1beta1.MarketStatus|null);

                /** BinaryOptionsMarket min_price_tick_size */
                min_price_tick_size?: (string|null);

                /** BinaryOptionsMarket min_quantity_tick_size */
                min_quantity_tick_size?: (string|null);

                /** BinaryOptionsMarket settlement_price */
                settlement_price?: (string|null);
            }

            /** Represents a BinaryOptionsMarket. */
            class BinaryOptionsMarket implements IBinaryOptionsMarket {

                /**
                 * Constructs a new BinaryOptionsMarket.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IBinaryOptionsMarket);

                /** BinaryOptionsMarket ticker. */
                public ticker: string;

                /** BinaryOptionsMarket oracle_symbol. */
                public oracle_symbol: string;

                /** BinaryOptionsMarket oracle_provider. */
                public oracle_provider: string;

                /** BinaryOptionsMarket oracle_type. */
                public oracle_type: injective.oracle.v1beta1.OracleType;

                /** BinaryOptionsMarket oracle_scale_factor. */
                public oracle_scale_factor: number;

                /** BinaryOptionsMarket expiration_timestamp. */
                public expiration_timestamp: number;

                /** BinaryOptionsMarket settlement_timestamp. */
                public settlement_timestamp: number;

                /** BinaryOptionsMarket admin. */
                public admin: string;

                /** BinaryOptionsMarket quote_denom. */
                public quote_denom: string;

                /** BinaryOptionsMarket market_id. */
                public market_id: string;

                /** BinaryOptionsMarket maker_fee_rate. */
                public maker_fee_rate: string;

                /** BinaryOptionsMarket taker_fee_rate. */
                public taker_fee_rate: string;

                /** BinaryOptionsMarket relayer_fee_share_rate. */
                public relayer_fee_share_rate: string;

                /** BinaryOptionsMarket status. */
                public status: injective.exchange.v1beta1.MarketStatus;

                /** BinaryOptionsMarket min_price_tick_size. */
                public min_price_tick_size: string;

                /** BinaryOptionsMarket min_quantity_tick_size. */
                public min_quantity_tick_size: string;

                /** BinaryOptionsMarket settlement_price. */
                public settlement_price: string;

                /**
                 * Encodes the specified BinaryOptionsMarket message. Does not implicitly {@link injective.exchange.v1beta1.BinaryOptionsMarket.verify|verify} messages.
                 * @param message BinaryOptionsMarket message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IBinaryOptionsMarket, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified BinaryOptionsMarket message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.BinaryOptionsMarket.verify|verify} messages.
                 * @param message BinaryOptionsMarket message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IBinaryOptionsMarket, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a BinaryOptionsMarket message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns BinaryOptionsMarket
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.BinaryOptionsMarket;

                /**
                 * Decodes a BinaryOptionsMarket message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns BinaryOptionsMarket
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.BinaryOptionsMarket;

                /**
                 * Verifies a BinaryOptionsMarket message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a BinaryOptionsMarket message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns BinaryOptionsMarket
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.BinaryOptionsMarket;

                /**
                 * Creates a plain object from a BinaryOptionsMarket message. Also converts values to other types if specified.
                 * @param message BinaryOptionsMarket
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.BinaryOptionsMarket, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this BinaryOptionsMarket to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an ExpiryFuturesMarketInfo. */
            interface IExpiryFuturesMarketInfo {

                /** ExpiryFuturesMarketInfo market_id */
                market_id?: (string|null);

                /** ExpiryFuturesMarketInfo expiration_timestamp */
                expiration_timestamp?: (number|null);

                /** ExpiryFuturesMarketInfo twap_start_timestamp */
                twap_start_timestamp?: (number|null);

                /** ExpiryFuturesMarketInfo expiration_twap_start_price_cumulative */
                expiration_twap_start_price_cumulative?: (string|null);

                /** ExpiryFuturesMarketInfo settlement_price */
                settlement_price?: (string|null);
            }

            /** Represents an ExpiryFuturesMarketInfo. */
            class ExpiryFuturesMarketInfo implements IExpiryFuturesMarketInfo {

                /**
                 * Constructs a new ExpiryFuturesMarketInfo.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IExpiryFuturesMarketInfo);

                /** ExpiryFuturesMarketInfo market_id. */
                public market_id: string;

                /** ExpiryFuturesMarketInfo expiration_timestamp. */
                public expiration_timestamp: number;

                /** ExpiryFuturesMarketInfo twap_start_timestamp. */
                public twap_start_timestamp: number;

                /** ExpiryFuturesMarketInfo expiration_twap_start_price_cumulative. */
                public expiration_twap_start_price_cumulative: string;

                /** ExpiryFuturesMarketInfo settlement_price. */
                public settlement_price: string;

                /**
                 * Encodes the specified ExpiryFuturesMarketInfo message. Does not implicitly {@link injective.exchange.v1beta1.ExpiryFuturesMarketInfo.verify|verify} messages.
                 * @param message ExpiryFuturesMarketInfo message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IExpiryFuturesMarketInfo, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ExpiryFuturesMarketInfo message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.ExpiryFuturesMarketInfo.verify|verify} messages.
                 * @param message ExpiryFuturesMarketInfo message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IExpiryFuturesMarketInfo, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an ExpiryFuturesMarketInfo message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ExpiryFuturesMarketInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.ExpiryFuturesMarketInfo;

                /**
                 * Decodes an ExpiryFuturesMarketInfo message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ExpiryFuturesMarketInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.ExpiryFuturesMarketInfo;

                /**
                 * Verifies an ExpiryFuturesMarketInfo message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an ExpiryFuturesMarketInfo message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ExpiryFuturesMarketInfo
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.ExpiryFuturesMarketInfo;

                /**
                 * Creates a plain object from an ExpiryFuturesMarketInfo message. Also converts values to other types if specified.
                 * @param message ExpiryFuturesMarketInfo
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.ExpiryFuturesMarketInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ExpiryFuturesMarketInfo to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a PerpetualMarketInfo. */
            interface IPerpetualMarketInfo {

                /** PerpetualMarketInfo market_id */
                market_id?: (string|null);

                /** PerpetualMarketInfo hourly_funding_rate_cap */
                hourly_funding_rate_cap?: (string|null);

                /** PerpetualMarketInfo hourly_interest_rate */
                hourly_interest_rate?: (string|null);

                /** PerpetualMarketInfo next_funding_timestamp */
                next_funding_timestamp?: (number|null);

                /** PerpetualMarketInfo funding_interval */
                funding_interval?: (number|null);
            }

            /** Represents a PerpetualMarketInfo. */
            class PerpetualMarketInfo implements IPerpetualMarketInfo {

                /**
                 * Constructs a new PerpetualMarketInfo.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IPerpetualMarketInfo);

                /** PerpetualMarketInfo market_id. */
                public market_id: string;

                /** PerpetualMarketInfo hourly_funding_rate_cap. */
                public hourly_funding_rate_cap: string;

                /** PerpetualMarketInfo hourly_interest_rate. */
                public hourly_interest_rate: string;

                /** PerpetualMarketInfo next_funding_timestamp. */
                public next_funding_timestamp: number;

                /** PerpetualMarketInfo funding_interval. */
                public funding_interval: number;

                /**
                 * Encodes the specified PerpetualMarketInfo message. Does not implicitly {@link injective.exchange.v1beta1.PerpetualMarketInfo.verify|verify} messages.
                 * @param message PerpetualMarketInfo message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IPerpetualMarketInfo, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified PerpetualMarketInfo message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.PerpetualMarketInfo.verify|verify} messages.
                 * @param message PerpetualMarketInfo message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IPerpetualMarketInfo, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a PerpetualMarketInfo message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns PerpetualMarketInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.PerpetualMarketInfo;

                /**
                 * Decodes a PerpetualMarketInfo message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns PerpetualMarketInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.PerpetualMarketInfo;

                /**
                 * Verifies a PerpetualMarketInfo message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a PerpetualMarketInfo message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns PerpetualMarketInfo
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.PerpetualMarketInfo;

                /**
                 * Creates a plain object from a PerpetualMarketInfo message. Also converts values to other types if specified.
                 * @param message PerpetualMarketInfo
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.PerpetualMarketInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this PerpetualMarketInfo to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a PerpetualMarketFunding. */
            interface IPerpetualMarketFunding {

                /** PerpetualMarketFunding cumulative_funding */
                cumulative_funding?: (string|null);

                /** PerpetualMarketFunding cumulative_price */
                cumulative_price?: (string|null);

                /** PerpetualMarketFunding last_timestamp */
                last_timestamp?: (number|null);
            }

            /** Represents a PerpetualMarketFunding. */
            class PerpetualMarketFunding implements IPerpetualMarketFunding {

                /**
                 * Constructs a new PerpetualMarketFunding.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IPerpetualMarketFunding);

                /** PerpetualMarketFunding cumulative_funding. */
                public cumulative_funding: string;

                /** PerpetualMarketFunding cumulative_price. */
                public cumulative_price: string;

                /** PerpetualMarketFunding last_timestamp. */
                public last_timestamp: number;

                /**
                 * Encodes the specified PerpetualMarketFunding message. Does not implicitly {@link injective.exchange.v1beta1.PerpetualMarketFunding.verify|verify} messages.
                 * @param message PerpetualMarketFunding message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IPerpetualMarketFunding, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified PerpetualMarketFunding message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.PerpetualMarketFunding.verify|verify} messages.
                 * @param message PerpetualMarketFunding message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IPerpetualMarketFunding, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a PerpetualMarketFunding message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns PerpetualMarketFunding
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.PerpetualMarketFunding;

                /**
                 * Decodes a PerpetualMarketFunding message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns PerpetualMarketFunding
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.PerpetualMarketFunding;

                /**
                 * Verifies a PerpetualMarketFunding message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a PerpetualMarketFunding message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns PerpetualMarketFunding
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.PerpetualMarketFunding;

                /**
                 * Creates a plain object from a PerpetualMarketFunding message. Also converts values to other types if specified.
                 * @param message PerpetualMarketFunding
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.PerpetualMarketFunding, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this PerpetualMarketFunding to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a DerivativeMarketSettlementInfo. */
            interface IDerivativeMarketSettlementInfo {

                /** DerivativeMarketSettlementInfo market_id */
                market_id?: (string|null);

                /** DerivativeMarketSettlementInfo settlement_price */
                settlement_price?: (string|null);
            }

            /** Represents a DerivativeMarketSettlementInfo. */
            class DerivativeMarketSettlementInfo implements IDerivativeMarketSettlementInfo {

                /**
                 * Constructs a new DerivativeMarketSettlementInfo.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IDerivativeMarketSettlementInfo);

                /** DerivativeMarketSettlementInfo market_id. */
                public market_id: string;

                /** DerivativeMarketSettlementInfo settlement_price. */
                public settlement_price: string;

                /**
                 * Encodes the specified DerivativeMarketSettlementInfo message. Does not implicitly {@link injective.exchange.v1beta1.DerivativeMarketSettlementInfo.verify|verify} messages.
                 * @param message DerivativeMarketSettlementInfo message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IDerivativeMarketSettlementInfo, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DerivativeMarketSettlementInfo message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.DerivativeMarketSettlementInfo.verify|verify} messages.
                 * @param message DerivativeMarketSettlementInfo message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IDerivativeMarketSettlementInfo, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DerivativeMarketSettlementInfo message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DerivativeMarketSettlementInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.DerivativeMarketSettlementInfo;

                /**
                 * Decodes a DerivativeMarketSettlementInfo message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DerivativeMarketSettlementInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.DerivativeMarketSettlementInfo;

                /**
                 * Verifies a DerivativeMarketSettlementInfo message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DerivativeMarketSettlementInfo message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DerivativeMarketSettlementInfo
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.DerivativeMarketSettlementInfo;

                /**
                 * Creates a plain object from a DerivativeMarketSettlementInfo message. Also converts values to other types if specified.
                 * @param message DerivativeMarketSettlementInfo
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.DerivativeMarketSettlementInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DerivativeMarketSettlementInfo to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a NextFundingTimestamp. */
            interface INextFundingTimestamp {

                /** NextFundingTimestamp next_timestamp */
                next_timestamp?: (number|null);
            }

            /** Represents a NextFundingTimestamp. */
            class NextFundingTimestamp implements INextFundingTimestamp {

                /**
                 * Constructs a new NextFundingTimestamp.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.INextFundingTimestamp);

                /** NextFundingTimestamp next_timestamp. */
                public next_timestamp: number;

                /**
                 * Encodes the specified NextFundingTimestamp message. Does not implicitly {@link injective.exchange.v1beta1.NextFundingTimestamp.verify|verify} messages.
                 * @param message NextFundingTimestamp message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.INextFundingTimestamp, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified NextFundingTimestamp message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.NextFundingTimestamp.verify|verify} messages.
                 * @param message NextFundingTimestamp message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.INextFundingTimestamp, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a NextFundingTimestamp message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns NextFundingTimestamp
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.NextFundingTimestamp;

                /**
                 * Decodes a NextFundingTimestamp message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns NextFundingTimestamp
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.NextFundingTimestamp;

                /**
                 * Verifies a NextFundingTimestamp message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a NextFundingTimestamp message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns NextFundingTimestamp
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.NextFundingTimestamp;

                /**
                 * Creates a plain object from a NextFundingTimestamp message. Also converts values to other types if specified.
                 * @param message NextFundingTimestamp
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.NextFundingTimestamp, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this NextFundingTimestamp to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MidPriceAndTOB. */
            interface IMidPriceAndTOB {

                /** MidPriceAndTOB mid_price */
                mid_price?: (string|null);

                /** MidPriceAndTOB best_buy_price */
                best_buy_price?: (string|null);

                /** MidPriceAndTOB best_sell_price */
                best_sell_price?: (string|null);
            }

            /** Represents a MidPriceAndTOB. */
            class MidPriceAndTOB implements IMidPriceAndTOB {

                /**
                 * Constructs a new MidPriceAndTOB.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IMidPriceAndTOB);

                /** MidPriceAndTOB mid_price. */
                public mid_price: string;

                /** MidPriceAndTOB best_buy_price. */
                public best_buy_price: string;

                /** MidPriceAndTOB best_sell_price. */
                public best_sell_price: string;

                /**
                 * Encodes the specified MidPriceAndTOB message. Does not implicitly {@link injective.exchange.v1beta1.MidPriceAndTOB.verify|verify} messages.
                 * @param message MidPriceAndTOB message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IMidPriceAndTOB, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MidPriceAndTOB message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.MidPriceAndTOB.verify|verify} messages.
                 * @param message MidPriceAndTOB message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IMidPriceAndTOB, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MidPriceAndTOB message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MidPriceAndTOB
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.MidPriceAndTOB;

                /**
                 * Decodes a MidPriceAndTOB message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MidPriceAndTOB
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.MidPriceAndTOB;

                /**
                 * Verifies a MidPriceAndTOB message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MidPriceAndTOB message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MidPriceAndTOB
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.MidPriceAndTOB;

                /**
                 * Creates a plain object from a MidPriceAndTOB message. Also converts values to other types if specified.
                 * @param message MidPriceAndTOB
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.MidPriceAndTOB, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MidPriceAndTOB to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a SpotMarket. */
            interface ISpotMarket {

                /** SpotMarket ticker */
                ticker?: (string|null);

                /** SpotMarket base_denom */
                base_denom?: (string|null);

                /** SpotMarket quote_denom */
                quote_denom?: (string|null);

                /** SpotMarket maker_fee_rate */
                maker_fee_rate?: (string|null);

                /** SpotMarket taker_fee_rate */
                taker_fee_rate?: (string|null);

                /** SpotMarket relayer_fee_share_rate */
                relayer_fee_share_rate?: (string|null);

                /** SpotMarket market_id */
                market_id?: (string|null);

                /** SpotMarket status */
                status?: (injective.exchange.v1beta1.MarketStatus|null);

                /** SpotMarket min_price_tick_size */
                min_price_tick_size?: (string|null);

                /** SpotMarket min_quantity_tick_size */
                min_quantity_tick_size?: (string|null);
            }

            /** Represents a SpotMarket. */
            class SpotMarket implements ISpotMarket {

                /**
                 * Constructs a new SpotMarket.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.ISpotMarket);

                /** SpotMarket ticker. */
                public ticker: string;

                /** SpotMarket base_denom. */
                public base_denom: string;

                /** SpotMarket quote_denom. */
                public quote_denom: string;

                /** SpotMarket maker_fee_rate. */
                public maker_fee_rate: string;

                /** SpotMarket taker_fee_rate. */
                public taker_fee_rate: string;

                /** SpotMarket relayer_fee_share_rate. */
                public relayer_fee_share_rate: string;

                /** SpotMarket market_id. */
                public market_id: string;

                /** SpotMarket status. */
                public status: injective.exchange.v1beta1.MarketStatus;

                /** SpotMarket min_price_tick_size. */
                public min_price_tick_size: string;

                /** SpotMarket min_quantity_tick_size. */
                public min_quantity_tick_size: string;

                /**
                 * Encodes the specified SpotMarket message. Does not implicitly {@link injective.exchange.v1beta1.SpotMarket.verify|verify} messages.
                 * @param message SpotMarket message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.ISpotMarket, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified SpotMarket message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.SpotMarket.verify|verify} messages.
                 * @param message SpotMarket message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.ISpotMarket, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a SpotMarket message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns SpotMarket
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.SpotMarket;

                /**
                 * Decodes a SpotMarket message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns SpotMarket
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.SpotMarket;

                /**
                 * Verifies a SpotMarket message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a SpotMarket message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns SpotMarket
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.SpotMarket;

                /**
                 * Creates a plain object from a SpotMarket message. Also converts values to other types if specified.
                 * @param message SpotMarket
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.SpotMarket, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this SpotMarket to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a Deposit. */
            interface IDeposit {

                /** Deposit available_balance */
                available_balance?: (string|null);

                /** Deposit total_balance */
                total_balance?: (string|null);
            }

            /** Represents a Deposit. */
            class Deposit implements IDeposit {

                /**
                 * Constructs a new Deposit.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IDeposit);

                /** Deposit available_balance. */
                public available_balance: string;

                /** Deposit total_balance. */
                public total_balance: string;

                /**
                 * Encodes the specified Deposit message. Does not implicitly {@link injective.exchange.v1beta1.Deposit.verify|verify} messages.
                 * @param message Deposit message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IDeposit, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Deposit message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.Deposit.verify|verify} messages.
                 * @param message Deposit message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IDeposit, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Deposit message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Deposit
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.Deposit;

                /**
                 * Decodes a Deposit message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Deposit
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.Deposit;

                /**
                 * Verifies a Deposit message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Deposit message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Deposit
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.Deposit;

                /**
                 * Creates a plain object from a Deposit message. Also converts values to other types if specified.
                 * @param message Deposit
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.Deposit, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Deposit to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a SubaccountTradeNonce. */
            interface ISubaccountTradeNonce {

                /** SubaccountTradeNonce nonce */
                nonce?: (number|null);
            }

            /** Represents a SubaccountTradeNonce. */
            class SubaccountTradeNonce implements ISubaccountTradeNonce {

                /**
                 * Constructs a new SubaccountTradeNonce.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.ISubaccountTradeNonce);

                /** SubaccountTradeNonce nonce. */
                public nonce: number;

                /**
                 * Encodes the specified SubaccountTradeNonce message. Does not implicitly {@link injective.exchange.v1beta1.SubaccountTradeNonce.verify|verify} messages.
                 * @param message SubaccountTradeNonce message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.ISubaccountTradeNonce, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified SubaccountTradeNonce message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.SubaccountTradeNonce.verify|verify} messages.
                 * @param message SubaccountTradeNonce message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.ISubaccountTradeNonce, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a SubaccountTradeNonce message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns SubaccountTradeNonce
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.SubaccountTradeNonce;

                /**
                 * Decodes a SubaccountTradeNonce message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns SubaccountTradeNonce
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.SubaccountTradeNonce;

                /**
                 * Verifies a SubaccountTradeNonce message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a SubaccountTradeNonce message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns SubaccountTradeNonce
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.SubaccountTradeNonce;

                /**
                 * Creates a plain object from a SubaccountTradeNonce message. Also converts values to other types if specified.
                 * @param message SubaccountTradeNonce
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.SubaccountTradeNonce, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this SubaccountTradeNonce to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an OrderInfo. */
            interface IOrderInfo {

                /** OrderInfo subaccount_id */
                subaccount_id?: (string|null);

                /** OrderInfo fee_recipient */
                fee_recipient?: (string|null);

                /** OrderInfo price */
                price?: (string|null);

                /** OrderInfo quantity */
                quantity?: (string|null);
            }

            /** Represents an OrderInfo. */
            class OrderInfo implements IOrderInfo {

                /**
                 * Constructs a new OrderInfo.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IOrderInfo);

                /** OrderInfo subaccount_id. */
                public subaccount_id: string;

                /** OrderInfo fee_recipient. */
                public fee_recipient: string;

                /** OrderInfo price. */
                public price: string;

                /** OrderInfo quantity. */
                public quantity: string;

                /**
                 * Encodes the specified OrderInfo message. Does not implicitly {@link injective.exchange.v1beta1.OrderInfo.verify|verify} messages.
                 * @param message OrderInfo message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IOrderInfo, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified OrderInfo message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.OrderInfo.verify|verify} messages.
                 * @param message OrderInfo message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IOrderInfo, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an OrderInfo message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns OrderInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.OrderInfo;

                /**
                 * Decodes an OrderInfo message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns OrderInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.OrderInfo;

                /**
                 * Verifies an OrderInfo message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an OrderInfo message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns OrderInfo
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.OrderInfo;

                /**
                 * Creates a plain object from an OrderInfo message. Also converts values to other types if specified.
                 * @param message OrderInfo
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.OrderInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this OrderInfo to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** OrderType enum. */
            enum OrderType {
                UNSPECIFIED = 0,
                BUY = 1,
                SELL = 2,
                STOP_BUY = 3,
                STOP_SELL = 4,
                TAKE_BUY = 5,
                TAKE_SELL = 6,
                BUY_PO = 7,
                SELL_PO = 8,
                BUY_ATOMIC = 9,
                SELL_ATOMIC = 10
            }

            /** Properties of a SpotOrder. */
            interface ISpotOrder {

                /** SpotOrder market_id */
                market_id?: (string|null);

                /** SpotOrder order_info */
                order_info?: (injective.exchange.v1beta1.IOrderInfo|null);

                /** SpotOrder order_type */
                order_type?: (injective.exchange.v1beta1.OrderType|null);

                /** SpotOrder trigger_price */
                trigger_price?: (string|null);
            }

            /** Represents a SpotOrder. */
            class SpotOrder implements ISpotOrder {

                /**
                 * Constructs a new SpotOrder.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.ISpotOrder);

                /** SpotOrder market_id. */
                public market_id: string;

                /** SpotOrder order_info. */
                public order_info?: (injective.exchange.v1beta1.IOrderInfo|null);

                /** SpotOrder order_type. */
                public order_type: injective.exchange.v1beta1.OrderType;

                /** SpotOrder trigger_price. */
                public trigger_price: string;

                /**
                 * Encodes the specified SpotOrder message. Does not implicitly {@link injective.exchange.v1beta1.SpotOrder.verify|verify} messages.
                 * @param message SpotOrder message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.ISpotOrder, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified SpotOrder message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.SpotOrder.verify|verify} messages.
                 * @param message SpotOrder message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.ISpotOrder, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a SpotOrder message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns SpotOrder
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.SpotOrder;

                /**
                 * Decodes a SpotOrder message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns SpotOrder
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.SpotOrder;

                /**
                 * Verifies a SpotOrder message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a SpotOrder message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns SpotOrder
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.SpotOrder;

                /**
                 * Creates a plain object from a SpotOrder message. Also converts values to other types if specified.
                 * @param message SpotOrder
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.SpotOrder, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this SpotOrder to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a SpotLimitOrder. */
            interface ISpotLimitOrder {

                /** SpotLimitOrder order_info */
                order_info?: (injective.exchange.v1beta1.IOrderInfo|null);

                /** SpotLimitOrder order_type */
                order_type?: (injective.exchange.v1beta1.OrderType|null);

                /** SpotLimitOrder fillable */
                fillable?: (string|null);

                /** SpotLimitOrder trigger_price */
                trigger_price?: (string|null);

                /** SpotLimitOrder order_hash */
                order_hash?: (Uint8Array|null);
            }

            /** Represents a SpotLimitOrder. */
            class SpotLimitOrder implements ISpotLimitOrder {

                /**
                 * Constructs a new SpotLimitOrder.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.ISpotLimitOrder);

                /** SpotLimitOrder order_info. */
                public order_info?: (injective.exchange.v1beta1.IOrderInfo|null);

                /** SpotLimitOrder order_type. */
                public order_type: injective.exchange.v1beta1.OrderType;

                /** SpotLimitOrder fillable. */
                public fillable: string;

                /** SpotLimitOrder trigger_price. */
                public trigger_price: string;

                /** SpotLimitOrder order_hash. */
                public order_hash: Uint8Array;

                /**
                 * Encodes the specified SpotLimitOrder message. Does not implicitly {@link injective.exchange.v1beta1.SpotLimitOrder.verify|verify} messages.
                 * @param message SpotLimitOrder message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.ISpotLimitOrder, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified SpotLimitOrder message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.SpotLimitOrder.verify|verify} messages.
                 * @param message SpotLimitOrder message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.ISpotLimitOrder, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a SpotLimitOrder message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns SpotLimitOrder
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.SpotLimitOrder;

                /**
                 * Decodes a SpotLimitOrder message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns SpotLimitOrder
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.SpotLimitOrder;

                /**
                 * Verifies a SpotLimitOrder message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a SpotLimitOrder message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns SpotLimitOrder
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.SpotLimitOrder;

                /**
                 * Creates a plain object from a SpotLimitOrder message. Also converts values to other types if specified.
                 * @param message SpotLimitOrder
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.SpotLimitOrder, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this SpotLimitOrder to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a SpotMarketOrder. */
            interface ISpotMarketOrder {

                /** SpotMarketOrder order_info */
                order_info?: (injective.exchange.v1beta1.IOrderInfo|null);

                /** SpotMarketOrder balance_hold */
                balance_hold?: (string|null);

                /** SpotMarketOrder order_hash */
                order_hash?: (Uint8Array|null);

                /** SpotMarketOrder order_type */
                order_type?: (injective.exchange.v1beta1.OrderType|null);

                /** SpotMarketOrder trigger_price */
                trigger_price?: (string|null);
            }

            /** Represents a SpotMarketOrder. */
            class SpotMarketOrder implements ISpotMarketOrder {

                /**
                 * Constructs a new SpotMarketOrder.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.ISpotMarketOrder);

                /** SpotMarketOrder order_info. */
                public order_info?: (injective.exchange.v1beta1.IOrderInfo|null);

                /** SpotMarketOrder balance_hold. */
                public balance_hold: string;

                /** SpotMarketOrder order_hash. */
                public order_hash: Uint8Array;

                /** SpotMarketOrder order_type. */
                public order_type: injective.exchange.v1beta1.OrderType;

                /** SpotMarketOrder trigger_price. */
                public trigger_price: string;

                /**
                 * Encodes the specified SpotMarketOrder message. Does not implicitly {@link injective.exchange.v1beta1.SpotMarketOrder.verify|verify} messages.
                 * @param message SpotMarketOrder message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.ISpotMarketOrder, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified SpotMarketOrder message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.SpotMarketOrder.verify|verify} messages.
                 * @param message SpotMarketOrder message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.ISpotMarketOrder, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a SpotMarketOrder message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns SpotMarketOrder
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.SpotMarketOrder;

                /**
                 * Decodes a SpotMarketOrder message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns SpotMarketOrder
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.SpotMarketOrder;

                /**
                 * Verifies a SpotMarketOrder message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a SpotMarketOrder message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns SpotMarketOrder
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.SpotMarketOrder;

                /**
                 * Creates a plain object from a SpotMarketOrder message. Also converts values to other types if specified.
                 * @param message SpotMarketOrder
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.SpotMarketOrder, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this SpotMarketOrder to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a DerivativeOrder. */
            interface IDerivativeOrder {

                /** DerivativeOrder market_id */
                market_id?: (string|null);

                /** DerivativeOrder order_info */
                order_info?: (injective.exchange.v1beta1.IOrderInfo|null);

                /** DerivativeOrder order_type */
                order_type?: (injective.exchange.v1beta1.OrderType|null);

                /** DerivativeOrder margin */
                margin?: (string|null);

                /** DerivativeOrder trigger_price */
                trigger_price?: (string|null);
            }

            /** Represents a DerivativeOrder. */
            class DerivativeOrder implements IDerivativeOrder {

                /**
                 * Constructs a new DerivativeOrder.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IDerivativeOrder);

                /** DerivativeOrder market_id. */
                public market_id: string;

                /** DerivativeOrder order_info. */
                public order_info?: (injective.exchange.v1beta1.IOrderInfo|null);

                /** DerivativeOrder order_type. */
                public order_type: injective.exchange.v1beta1.OrderType;

                /** DerivativeOrder margin. */
                public margin: string;

                /** DerivativeOrder trigger_price. */
                public trigger_price: string;

                /**
                 * Encodes the specified DerivativeOrder message. Does not implicitly {@link injective.exchange.v1beta1.DerivativeOrder.verify|verify} messages.
                 * @param message DerivativeOrder message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IDerivativeOrder, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DerivativeOrder message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.DerivativeOrder.verify|verify} messages.
                 * @param message DerivativeOrder message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IDerivativeOrder, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DerivativeOrder message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DerivativeOrder
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.DerivativeOrder;

                /**
                 * Decodes a DerivativeOrder message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DerivativeOrder
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.DerivativeOrder;

                /**
                 * Verifies a DerivativeOrder message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DerivativeOrder message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DerivativeOrder
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.DerivativeOrder;

                /**
                 * Creates a plain object from a DerivativeOrder message. Also converts values to other types if specified.
                 * @param message DerivativeOrder
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.DerivativeOrder, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DerivativeOrder to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a SubaccountOrderbookMetadata. */
            interface ISubaccountOrderbookMetadata {

                /** SubaccountOrderbookMetadata vanilla_limit_order_count */
                vanilla_limit_order_count?: (number|null);

                /** SubaccountOrderbookMetadata reduce_only_limit_order_count */
                reduce_only_limit_order_count?: (number|null);

                /** SubaccountOrderbookMetadata aggregate_reduce_only_quantity */
                aggregate_reduce_only_quantity?: (string|null);

                /** SubaccountOrderbookMetadata aggregate_vanilla_quantity */
                aggregate_vanilla_quantity?: (string|null);

                /** SubaccountOrderbookMetadata vanilla_conditional_order_count */
                vanilla_conditional_order_count?: (number|null);

                /** SubaccountOrderbookMetadata reduce_only_conditional_order_count */
                reduce_only_conditional_order_count?: (number|null);
            }

            /** Represents a SubaccountOrderbookMetadata. */
            class SubaccountOrderbookMetadata implements ISubaccountOrderbookMetadata {

                /**
                 * Constructs a new SubaccountOrderbookMetadata.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.ISubaccountOrderbookMetadata);

                /** SubaccountOrderbookMetadata vanilla_limit_order_count. */
                public vanilla_limit_order_count: number;

                /** SubaccountOrderbookMetadata reduce_only_limit_order_count. */
                public reduce_only_limit_order_count: number;

                /** SubaccountOrderbookMetadata aggregate_reduce_only_quantity. */
                public aggregate_reduce_only_quantity: string;

                /** SubaccountOrderbookMetadata aggregate_vanilla_quantity. */
                public aggregate_vanilla_quantity: string;

                /** SubaccountOrderbookMetadata vanilla_conditional_order_count. */
                public vanilla_conditional_order_count: number;

                /** SubaccountOrderbookMetadata reduce_only_conditional_order_count. */
                public reduce_only_conditional_order_count: number;

                /**
                 * Encodes the specified SubaccountOrderbookMetadata message. Does not implicitly {@link injective.exchange.v1beta1.SubaccountOrderbookMetadata.verify|verify} messages.
                 * @param message SubaccountOrderbookMetadata message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.ISubaccountOrderbookMetadata, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified SubaccountOrderbookMetadata message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.SubaccountOrderbookMetadata.verify|verify} messages.
                 * @param message SubaccountOrderbookMetadata message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.ISubaccountOrderbookMetadata, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a SubaccountOrderbookMetadata message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns SubaccountOrderbookMetadata
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.SubaccountOrderbookMetadata;

                /**
                 * Decodes a SubaccountOrderbookMetadata message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns SubaccountOrderbookMetadata
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.SubaccountOrderbookMetadata;

                /**
                 * Verifies a SubaccountOrderbookMetadata message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a SubaccountOrderbookMetadata message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns SubaccountOrderbookMetadata
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.SubaccountOrderbookMetadata;

                /**
                 * Creates a plain object from a SubaccountOrderbookMetadata message. Also converts values to other types if specified.
                 * @param message SubaccountOrderbookMetadata
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.SubaccountOrderbookMetadata, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this SubaccountOrderbookMetadata to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a SubaccountOrder. */
            interface ISubaccountOrder {

                /** SubaccountOrder price */
                price?: (string|null);

                /** SubaccountOrder quantity */
                quantity?: (string|null);

                /** SubaccountOrder isReduceOnly */
                isReduceOnly?: (boolean|null);
            }

            /** Represents a SubaccountOrder. */
            class SubaccountOrder implements ISubaccountOrder {

                /**
                 * Constructs a new SubaccountOrder.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.ISubaccountOrder);

                /** SubaccountOrder price. */
                public price: string;

                /** SubaccountOrder quantity. */
                public quantity: string;

                /** SubaccountOrder isReduceOnly. */
                public isReduceOnly: boolean;

                /**
                 * Encodes the specified SubaccountOrder message. Does not implicitly {@link injective.exchange.v1beta1.SubaccountOrder.verify|verify} messages.
                 * @param message SubaccountOrder message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.ISubaccountOrder, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified SubaccountOrder message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.SubaccountOrder.verify|verify} messages.
                 * @param message SubaccountOrder message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.ISubaccountOrder, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a SubaccountOrder message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns SubaccountOrder
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.SubaccountOrder;

                /**
                 * Decodes a SubaccountOrder message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns SubaccountOrder
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.SubaccountOrder;

                /**
                 * Verifies a SubaccountOrder message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a SubaccountOrder message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns SubaccountOrder
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.SubaccountOrder;

                /**
                 * Creates a plain object from a SubaccountOrder message. Also converts values to other types if specified.
                 * @param message SubaccountOrder
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.SubaccountOrder, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this SubaccountOrder to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a SubaccountOrderData. */
            interface ISubaccountOrderData {

                /** SubaccountOrderData order */
                order?: (injective.exchange.v1beta1.ISubaccountOrder|null);

                /** SubaccountOrderData order_hash */
                order_hash?: (Uint8Array|null);
            }

            /** Represents a SubaccountOrderData. */
            class SubaccountOrderData implements ISubaccountOrderData {

                /**
                 * Constructs a new SubaccountOrderData.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.ISubaccountOrderData);

                /** SubaccountOrderData order. */
                public order?: (injective.exchange.v1beta1.ISubaccountOrder|null);

                /** SubaccountOrderData order_hash. */
                public order_hash: Uint8Array;

                /**
                 * Encodes the specified SubaccountOrderData message. Does not implicitly {@link injective.exchange.v1beta1.SubaccountOrderData.verify|verify} messages.
                 * @param message SubaccountOrderData message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.ISubaccountOrderData, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified SubaccountOrderData message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.SubaccountOrderData.verify|verify} messages.
                 * @param message SubaccountOrderData message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.ISubaccountOrderData, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a SubaccountOrderData message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns SubaccountOrderData
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.SubaccountOrderData;

                /**
                 * Decodes a SubaccountOrderData message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns SubaccountOrderData
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.SubaccountOrderData;

                /**
                 * Verifies a SubaccountOrderData message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a SubaccountOrderData message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns SubaccountOrderData
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.SubaccountOrderData;

                /**
                 * Creates a plain object from a SubaccountOrderData message. Also converts values to other types if specified.
                 * @param message SubaccountOrderData
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.SubaccountOrderData, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this SubaccountOrderData to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a DerivativeLimitOrder. */
            interface IDerivativeLimitOrder {

                /** DerivativeLimitOrder order_info */
                order_info?: (injective.exchange.v1beta1.IOrderInfo|null);

                /** DerivativeLimitOrder order_type */
                order_type?: (injective.exchange.v1beta1.OrderType|null);

                /** DerivativeLimitOrder margin */
                margin?: (string|null);

                /** DerivativeLimitOrder fillable */
                fillable?: (string|null);

                /** DerivativeLimitOrder trigger_price */
                trigger_price?: (string|null);

                /** DerivativeLimitOrder order_hash */
                order_hash?: (Uint8Array|null);
            }

            /** Represents a DerivativeLimitOrder. */
            class DerivativeLimitOrder implements IDerivativeLimitOrder {

                /**
                 * Constructs a new DerivativeLimitOrder.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IDerivativeLimitOrder);

                /** DerivativeLimitOrder order_info. */
                public order_info?: (injective.exchange.v1beta1.IOrderInfo|null);

                /** DerivativeLimitOrder order_type. */
                public order_type: injective.exchange.v1beta1.OrderType;

                /** DerivativeLimitOrder margin. */
                public margin: string;

                /** DerivativeLimitOrder fillable. */
                public fillable: string;

                /** DerivativeLimitOrder trigger_price. */
                public trigger_price: string;

                /** DerivativeLimitOrder order_hash. */
                public order_hash: Uint8Array;

                /**
                 * Encodes the specified DerivativeLimitOrder message. Does not implicitly {@link injective.exchange.v1beta1.DerivativeLimitOrder.verify|verify} messages.
                 * @param message DerivativeLimitOrder message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IDerivativeLimitOrder, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DerivativeLimitOrder message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.DerivativeLimitOrder.verify|verify} messages.
                 * @param message DerivativeLimitOrder message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IDerivativeLimitOrder, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DerivativeLimitOrder message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DerivativeLimitOrder
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.DerivativeLimitOrder;

                /**
                 * Decodes a DerivativeLimitOrder message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DerivativeLimitOrder
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.DerivativeLimitOrder;

                /**
                 * Verifies a DerivativeLimitOrder message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DerivativeLimitOrder message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DerivativeLimitOrder
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.DerivativeLimitOrder;

                /**
                 * Creates a plain object from a DerivativeLimitOrder message. Also converts values to other types if specified.
                 * @param message DerivativeLimitOrder
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.DerivativeLimitOrder, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DerivativeLimitOrder to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a DerivativeMarketOrder. */
            interface IDerivativeMarketOrder {

                /** DerivativeMarketOrder order_info */
                order_info?: (injective.exchange.v1beta1.IOrderInfo|null);

                /** DerivativeMarketOrder order_type */
                order_type?: (injective.exchange.v1beta1.OrderType|null);

                /** DerivativeMarketOrder margin */
                margin?: (string|null);

                /** DerivativeMarketOrder margin_hold */
                margin_hold?: (string|null);

                /** DerivativeMarketOrder trigger_price */
                trigger_price?: (string|null);

                /** DerivativeMarketOrder order_hash */
                order_hash?: (Uint8Array|null);
            }

            /** Represents a DerivativeMarketOrder. */
            class DerivativeMarketOrder implements IDerivativeMarketOrder {

                /**
                 * Constructs a new DerivativeMarketOrder.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IDerivativeMarketOrder);

                /** DerivativeMarketOrder order_info. */
                public order_info?: (injective.exchange.v1beta1.IOrderInfo|null);

                /** DerivativeMarketOrder order_type. */
                public order_type: injective.exchange.v1beta1.OrderType;

                /** DerivativeMarketOrder margin. */
                public margin: string;

                /** DerivativeMarketOrder margin_hold. */
                public margin_hold: string;

                /** DerivativeMarketOrder trigger_price. */
                public trigger_price: string;

                /** DerivativeMarketOrder order_hash. */
                public order_hash: Uint8Array;

                /**
                 * Encodes the specified DerivativeMarketOrder message. Does not implicitly {@link injective.exchange.v1beta1.DerivativeMarketOrder.verify|verify} messages.
                 * @param message DerivativeMarketOrder message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IDerivativeMarketOrder, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DerivativeMarketOrder message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.DerivativeMarketOrder.verify|verify} messages.
                 * @param message DerivativeMarketOrder message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IDerivativeMarketOrder, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DerivativeMarketOrder message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DerivativeMarketOrder
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.DerivativeMarketOrder;

                /**
                 * Decodes a DerivativeMarketOrder message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DerivativeMarketOrder
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.DerivativeMarketOrder;

                /**
                 * Verifies a DerivativeMarketOrder message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DerivativeMarketOrder message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DerivativeMarketOrder
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.DerivativeMarketOrder;

                /**
                 * Creates a plain object from a DerivativeMarketOrder message. Also converts values to other types if specified.
                 * @param message DerivativeMarketOrder
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.DerivativeMarketOrder, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DerivativeMarketOrder to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a Position. */
            interface IPosition {

                /** Position isLong */
                isLong?: (boolean|null);

                /** Position quantity */
                quantity?: (string|null);

                /** Position entry_price */
                entry_price?: (string|null);

                /** Position margin */
                margin?: (string|null);

                /** Position cumulative_funding_entry */
                cumulative_funding_entry?: (string|null);
            }

            /** Represents a Position. */
            class Position implements IPosition {

                /**
                 * Constructs a new Position.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IPosition);

                /** Position isLong. */
                public isLong: boolean;

                /** Position quantity. */
                public quantity: string;

                /** Position entry_price. */
                public entry_price: string;

                /** Position margin. */
                public margin: string;

                /** Position cumulative_funding_entry. */
                public cumulative_funding_entry: string;

                /**
                 * Encodes the specified Position message. Does not implicitly {@link injective.exchange.v1beta1.Position.verify|verify} messages.
                 * @param message Position message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IPosition, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Position message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.Position.verify|verify} messages.
                 * @param message Position message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IPosition, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Position message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Position
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.Position;

                /**
                 * Decodes a Position message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Position
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.Position;

                /**
                 * Verifies a Position message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Position message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Position
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.Position;

                /**
                 * Creates a plain object from a Position message. Also converts values to other types if specified.
                 * @param message Position
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.Position, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Position to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MarketOrderIndicator. */
            interface IMarketOrderIndicator {

                /** MarketOrderIndicator market_id */
                market_id?: (string|null);

                /** MarketOrderIndicator isBuy */
                isBuy?: (boolean|null);
            }

            /** Represents a MarketOrderIndicator. */
            class MarketOrderIndicator implements IMarketOrderIndicator {

                /**
                 * Constructs a new MarketOrderIndicator.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IMarketOrderIndicator);

                /** MarketOrderIndicator market_id. */
                public market_id: string;

                /** MarketOrderIndicator isBuy. */
                public isBuy: boolean;

                /**
                 * Encodes the specified MarketOrderIndicator message. Does not implicitly {@link injective.exchange.v1beta1.MarketOrderIndicator.verify|verify} messages.
                 * @param message MarketOrderIndicator message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IMarketOrderIndicator, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MarketOrderIndicator message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.MarketOrderIndicator.verify|verify} messages.
                 * @param message MarketOrderIndicator message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IMarketOrderIndicator, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MarketOrderIndicator message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MarketOrderIndicator
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.MarketOrderIndicator;

                /**
                 * Decodes a MarketOrderIndicator message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MarketOrderIndicator
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.MarketOrderIndicator;

                /**
                 * Verifies a MarketOrderIndicator message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MarketOrderIndicator message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MarketOrderIndicator
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.MarketOrderIndicator;

                /**
                 * Creates a plain object from a MarketOrderIndicator message. Also converts values to other types if specified.
                 * @param message MarketOrderIndicator
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.MarketOrderIndicator, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MarketOrderIndicator to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a TradeLog. */
            interface ITradeLog {

                /** TradeLog quantity */
                quantity?: (string|null);

                /** TradeLog price */
                price?: (string|null);

                /** TradeLog subaccount_id */
                subaccount_id?: (Uint8Array|null);

                /** TradeLog fee */
                fee?: (string|null);

                /** TradeLog order_hash */
                order_hash?: (Uint8Array|null);

                /** TradeLog fee_recipient_address */
                fee_recipient_address?: (Uint8Array|null);
            }

            /** Represents a TradeLog. */
            class TradeLog implements ITradeLog {

                /**
                 * Constructs a new TradeLog.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.ITradeLog);

                /** TradeLog quantity. */
                public quantity: string;

                /** TradeLog price. */
                public price: string;

                /** TradeLog subaccount_id. */
                public subaccount_id: Uint8Array;

                /** TradeLog fee. */
                public fee: string;

                /** TradeLog order_hash. */
                public order_hash: Uint8Array;

                /** TradeLog fee_recipient_address. */
                public fee_recipient_address: Uint8Array;

                /**
                 * Encodes the specified TradeLog message. Does not implicitly {@link injective.exchange.v1beta1.TradeLog.verify|verify} messages.
                 * @param message TradeLog message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.ITradeLog, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified TradeLog message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.TradeLog.verify|verify} messages.
                 * @param message TradeLog message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.ITradeLog, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a TradeLog message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns TradeLog
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.TradeLog;

                /**
                 * Decodes a TradeLog message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns TradeLog
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.TradeLog;

                /**
                 * Verifies a TradeLog message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a TradeLog message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns TradeLog
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.TradeLog;

                /**
                 * Creates a plain object from a TradeLog message. Also converts values to other types if specified.
                 * @param message TradeLog
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.TradeLog, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this TradeLog to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a PositionDelta. */
            interface IPositionDelta {

                /** PositionDelta is_long */
                is_long?: (boolean|null);

                /** PositionDelta execution_quantity */
                execution_quantity?: (string|null);

                /** PositionDelta execution_margin */
                execution_margin?: (string|null);

                /** PositionDelta execution_price */
                execution_price?: (string|null);
            }

            /** Represents a PositionDelta. */
            class PositionDelta implements IPositionDelta {

                /**
                 * Constructs a new PositionDelta.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IPositionDelta);

                /** PositionDelta is_long. */
                public is_long: boolean;

                /** PositionDelta execution_quantity. */
                public execution_quantity: string;

                /** PositionDelta execution_margin. */
                public execution_margin: string;

                /** PositionDelta execution_price. */
                public execution_price: string;

                /**
                 * Encodes the specified PositionDelta message. Does not implicitly {@link injective.exchange.v1beta1.PositionDelta.verify|verify} messages.
                 * @param message PositionDelta message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IPositionDelta, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified PositionDelta message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.PositionDelta.verify|verify} messages.
                 * @param message PositionDelta message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IPositionDelta, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a PositionDelta message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns PositionDelta
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.PositionDelta;

                /**
                 * Decodes a PositionDelta message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns PositionDelta
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.PositionDelta;

                /**
                 * Verifies a PositionDelta message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a PositionDelta message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns PositionDelta
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.PositionDelta;

                /**
                 * Creates a plain object from a PositionDelta message. Also converts values to other types if specified.
                 * @param message PositionDelta
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.PositionDelta, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this PositionDelta to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a DerivativeTradeLog. */
            interface IDerivativeTradeLog {

                /** DerivativeTradeLog subaccount_id */
                subaccount_id?: (Uint8Array|null);

                /** DerivativeTradeLog position_delta */
                position_delta?: (injective.exchange.v1beta1.IPositionDelta|null);

                /** DerivativeTradeLog payout */
                payout?: (string|null);

                /** DerivativeTradeLog fee */
                fee?: (string|null);

                /** DerivativeTradeLog order_hash */
                order_hash?: (Uint8Array|null);

                /** DerivativeTradeLog fee_recipient_address */
                fee_recipient_address?: (Uint8Array|null);
            }

            /** Represents a DerivativeTradeLog. */
            class DerivativeTradeLog implements IDerivativeTradeLog {

                /**
                 * Constructs a new DerivativeTradeLog.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IDerivativeTradeLog);

                /** DerivativeTradeLog subaccount_id. */
                public subaccount_id: Uint8Array;

                /** DerivativeTradeLog position_delta. */
                public position_delta?: (injective.exchange.v1beta1.IPositionDelta|null);

                /** DerivativeTradeLog payout. */
                public payout: string;

                /** DerivativeTradeLog fee. */
                public fee: string;

                /** DerivativeTradeLog order_hash. */
                public order_hash: Uint8Array;

                /** DerivativeTradeLog fee_recipient_address. */
                public fee_recipient_address: Uint8Array;

                /**
                 * Encodes the specified DerivativeTradeLog message. Does not implicitly {@link injective.exchange.v1beta1.DerivativeTradeLog.verify|verify} messages.
                 * @param message DerivativeTradeLog message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IDerivativeTradeLog, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DerivativeTradeLog message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.DerivativeTradeLog.verify|verify} messages.
                 * @param message DerivativeTradeLog message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IDerivativeTradeLog, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DerivativeTradeLog message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DerivativeTradeLog
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.DerivativeTradeLog;

                /**
                 * Decodes a DerivativeTradeLog message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DerivativeTradeLog
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.DerivativeTradeLog;

                /**
                 * Verifies a DerivativeTradeLog message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DerivativeTradeLog message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DerivativeTradeLog
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.DerivativeTradeLog;

                /**
                 * Creates a plain object from a DerivativeTradeLog message. Also converts values to other types if specified.
                 * @param message DerivativeTradeLog
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.DerivativeTradeLog, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DerivativeTradeLog to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** ExecutionType enum. */
            enum ExecutionType {
                UnspecifiedExecutionType = 0,
                Market = 1,
                LimitFill = 2,
                LimitMatchRestingOrder = 3,
                LimitMatchNewOrder = 4,
                MarketLiquidation = 5,
                ExpiryMarketSettlement = 6
            }

            /** Properties of a SubaccountPosition. */
            interface ISubaccountPosition {

                /** SubaccountPosition position */
                position?: (injective.exchange.v1beta1.IPosition|null);

                /** SubaccountPosition subaccount_id */
                subaccount_id?: (Uint8Array|null);
            }

            /** Represents a SubaccountPosition. */
            class SubaccountPosition implements ISubaccountPosition {

                /**
                 * Constructs a new SubaccountPosition.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.ISubaccountPosition);

                /** SubaccountPosition position. */
                public position?: (injective.exchange.v1beta1.IPosition|null);

                /** SubaccountPosition subaccount_id. */
                public subaccount_id: Uint8Array;

                /**
                 * Encodes the specified SubaccountPosition message. Does not implicitly {@link injective.exchange.v1beta1.SubaccountPosition.verify|verify} messages.
                 * @param message SubaccountPosition message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.ISubaccountPosition, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified SubaccountPosition message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.SubaccountPosition.verify|verify} messages.
                 * @param message SubaccountPosition message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.ISubaccountPosition, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a SubaccountPosition message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns SubaccountPosition
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.SubaccountPosition;

                /**
                 * Decodes a SubaccountPosition message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns SubaccountPosition
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.SubaccountPosition;

                /**
                 * Verifies a SubaccountPosition message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a SubaccountPosition message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns SubaccountPosition
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.SubaccountPosition;

                /**
                 * Creates a plain object from a SubaccountPosition message. Also converts values to other types if specified.
                 * @param message SubaccountPosition
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.SubaccountPosition, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this SubaccountPosition to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a SubaccountDeposit. */
            interface ISubaccountDeposit {

                /** SubaccountDeposit subaccount_id */
                subaccount_id?: (Uint8Array|null);

                /** SubaccountDeposit deposit */
                deposit?: (injective.exchange.v1beta1.IDeposit|null);
            }

            /** Represents a SubaccountDeposit. */
            class SubaccountDeposit implements ISubaccountDeposit {

                /**
                 * Constructs a new SubaccountDeposit.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.ISubaccountDeposit);

                /** SubaccountDeposit subaccount_id. */
                public subaccount_id: Uint8Array;

                /** SubaccountDeposit deposit. */
                public deposit?: (injective.exchange.v1beta1.IDeposit|null);

                /**
                 * Encodes the specified SubaccountDeposit message. Does not implicitly {@link injective.exchange.v1beta1.SubaccountDeposit.verify|verify} messages.
                 * @param message SubaccountDeposit message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.ISubaccountDeposit, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified SubaccountDeposit message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.SubaccountDeposit.verify|verify} messages.
                 * @param message SubaccountDeposit message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.ISubaccountDeposit, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a SubaccountDeposit message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns SubaccountDeposit
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.SubaccountDeposit;

                /**
                 * Decodes a SubaccountDeposit message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns SubaccountDeposit
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.SubaccountDeposit;

                /**
                 * Verifies a SubaccountDeposit message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a SubaccountDeposit message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns SubaccountDeposit
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.SubaccountDeposit;

                /**
                 * Creates a plain object from a SubaccountDeposit message. Also converts values to other types if specified.
                 * @param message SubaccountDeposit
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.SubaccountDeposit, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this SubaccountDeposit to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a DepositUpdate. */
            interface IDepositUpdate {

                /** DepositUpdate denom */
                denom?: (string|null);

                /** DepositUpdate deposits */
                deposits?: (injective.exchange.v1beta1.ISubaccountDeposit[]|null);
            }

            /** Represents a DepositUpdate. */
            class DepositUpdate implements IDepositUpdate {

                /**
                 * Constructs a new DepositUpdate.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IDepositUpdate);

                /** DepositUpdate denom. */
                public denom: string;

                /** DepositUpdate deposits. */
                public deposits: injective.exchange.v1beta1.ISubaccountDeposit[];

                /**
                 * Encodes the specified DepositUpdate message. Does not implicitly {@link injective.exchange.v1beta1.DepositUpdate.verify|verify} messages.
                 * @param message DepositUpdate message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IDepositUpdate, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DepositUpdate message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.DepositUpdate.verify|verify} messages.
                 * @param message DepositUpdate message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IDepositUpdate, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DepositUpdate message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DepositUpdate
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.DepositUpdate;

                /**
                 * Decodes a DepositUpdate message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DepositUpdate
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.DepositUpdate;

                /**
                 * Verifies a DepositUpdate message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DepositUpdate message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DepositUpdate
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.DepositUpdate;

                /**
                 * Creates a plain object from a DepositUpdate message. Also converts values to other types if specified.
                 * @param message DepositUpdate
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.DepositUpdate, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DepositUpdate to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a PointsMultiplier. */
            interface IPointsMultiplier {

                /** PointsMultiplier maker_points_multiplier */
                maker_points_multiplier?: (string|null);

                /** PointsMultiplier taker_points_multiplier */
                taker_points_multiplier?: (string|null);
            }

            /** Represents a PointsMultiplier. */
            class PointsMultiplier implements IPointsMultiplier {

                /**
                 * Constructs a new PointsMultiplier.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IPointsMultiplier);

                /** PointsMultiplier maker_points_multiplier. */
                public maker_points_multiplier: string;

                /** PointsMultiplier taker_points_multiplier. */
                public taker_points_multiplier: string;

                /**
                 * Encodes the specified PointsMultiplier message. Does not implicitly {@link injective.exchange.v1beta1.PointsMultiplier.verify|verify} messages.
                 * @param message PointsMultiplier message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IPointsMultiplier, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified PointsMultiplier message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.PointsMultiplier.verify|verify} messages.
                 * @param message PointsMultiplier message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IPointsMultiplier, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a PointsMultiplier message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns PointsMultiplier
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.PointsMultiplier;

                /**
                 * Decodes a PointsMultiplier message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns PointsMultiplier
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.PointsMultiplier;

                /**
                 * Verifies a PointsMultiplier message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a PointsMultiplier message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns PointsMultiplier
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.PointsMultiplier;

                /**
                 * Creates a plain object from a PointsMultiplier message. Also converts values to other types if specified.
                 * @param message PointsMultiplier
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.PointsMultiplier, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this PointsMultiplier to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a TradingRewardCampaignBoostInfo. */
            interface ITradingRewardCampaignBoostInfo {

                /** TradingRewardCampaignBoostInfo boosted_spot_market_ids */
                boosted_spot_market_ids?: (string[]|null);

                /** TradingRewardCampaignBoostInfo spot_market_multipliers */
                spot_market_multipliers?: (injective.exchange.v1beta1.IPointsMultiplier[]|null);

                /** TradingRewardCampaignBoostInfo boosted_derivative_market_ids */
                boosted_derivative_market_ids?: (string[]|null);

                /** TradingRewardCampaignBoostInfo derivative_market_multipliers */
                derivative_market_multipliers?: (injective.exchange.v1beta1.IPointsMultiplier[]|null);
            }

            /** Represents a TradingRewardCampaignBoostInfo. */
            class TradingRewardCampaignBoostInfo implements ITradingRewardCampaignBoostInfo {

                /**
                 * Constructs a new TradingRewardCampaignBoostInfo.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.ITradingRewardCampaignBoostInfo);

                /** TradingRewardCampaignBoostInfo boosted_spot_market_ids. */
                public boosted_spot_market_ids: string[];

                /** TradingRewardCampaignBoostInfo spot_market_multipliers. */
                public spot_market_multipliers: injective.exchange.v1beta1.IPointsMultiplier[];

                /** TradingRewardCampaignBoostInfo boosted_derivative_market_ids. */
                public boosted_derivative_market_ids: string[];

                /** TradingRewardCampaignBoostInfo derivative_market_multipliers. */
                public derivative_market_multipliers: injective.exchange.v1beta1.IPointsMultiplier[];

                /**
                 * Encodes the specified TradingRewardCampaignBoostInfo message. Does not implicitly {@link injective.exchange.v1beta1.TradingRewardCampaignBoostInfo.verify|verify} messages.
                 * @param message TradingRewardCampaignBoostInfo message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.ITradingRewardCampaignBoostInfo, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified TradingRewardCampaignBoostInfo message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.TradingRewardCampaignBoostInfo.verify|verify} messages.
                 * @param message TradingRewardCampaignBoostInfo message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.ITradingRewardCampaignBoostInfo, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a TradingRewardCampaignBoostInfo message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns TradingRewardCampaignBoostInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.TradingRewardCampaignBoostInfo;

                /**
                 * Decodes a TradingRewardCampaignBoostInfo message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns TradingRewardCampaignBoostInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.TradingRewardCampaignBoostInfo;

                /**
                 * Verifies a TradingRewardCampaignBoostInfo message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a TradingRewardCampaignBoostInfo message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns TradingRewardCampaignBoostInfo
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.TradingRewardCampaignBoostInfo;

                /**
                 * Creates a plain object from a TradingRewardCampaignBoostInfo message. Also converts values to other types if specified.
                 * @param message TradingRewardCampaignBoostInfo
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.TradingRewardCampaignBoostInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this TradingRewardCampaignBoostInfo to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a CampaignRewardPool. */
            interface ICampaignRewardPool {

                /** CampaignRewardPool start_timestamp */
                start_timestamp?: (number|null);

                /** CampaignRewardPool max_campaign_rewards */
                max_campaign_rewards?: (cosmos.base.v1beta1.ICoin[]|null);
            }

            /** Represents a CampaignRewardPool. */
            class CampaignRewardPool implements ICampaignRewardPool {

                /**
                 * Constructs a new CampaignRewardPool.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.ICampaignRewardPool);

                /** CampaignRewardPool start_timestamp. */
                public start_timestamp: number;

                /** CampaignRewardPool max_campaign_rewards. */
                public max_campaign_rewards: cosmos.base.v1beta1.ICoin[];

                /**
                 * Encodes the specified CampaignRewardPool message. Does not implicitly {@link injective.exchange.v1beta1.CampaignRewardPool.verify|verify} messages.
                 * @param message CampaignRewardPool message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.ICampaignRewardPool, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified CampaignRewardPool message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.CampaignRewardPool.verify|verify} messages.
                 * @param message CampaignRewardPool message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.ICampaignRewardPool, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a CampaignRewardPool message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns CampaignRewardPool
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.CampaignRewardPool;

                /**
                 * Decodes a CampaignRewardPool message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns CampaignRewardPool
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.CampaignRewardPool;

                /**
                 * Verifies a CampaignRewardPool message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a CampaignRewardPool message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns CampaignRewardPool
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.CampaignRewardPool;

                /**
                 * Creates a plain object from a CampaignRewardPool message. Also converts values to other types if specified.
                 * @param message CampaignRewardPool
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.CampaignRewardPool, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this CampaignRewardPool to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a TradingRewardCampaignInfo. */
            interface ITradingRewardCampaignInfo {

                /** TradingRewardCampaignInfo campaign_duration_seconds */
                campaign_duration_seconds?: (number|null);

                /** TradingRewardCampaignInfo quote_denoms */
                quote_denoms?: (string[]|null);

                /** TradingRewardCampaignInfo trading_reward_boost_info */
                trading_reward_boost_info?: (injective.exchange.v1beta1.ITradingRewardCampaignBoostInfo|null);

                /** TradingRewardCampaignInfo disqualified_market_ids */
                disqualified_market_ids?: (string[]|null);
            }

            /** Represents a TradingRewardCampaignInfo. */
            class TradingRewardCampaignInfo implements ITradingRewardCampaignInfo {

                /**
                 * Constructs a new TradingRewardCampaignInfo.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.ITradingRewardCampaignInfo);

                /** TradingRewardCampaignInfo campaign_duration_seconds. */
                public campaign_duration_seconds: number;

                /** TradingRewardCampaignInfo quote_denoms. */
                public quote_denoms: string[];

                /** TradingRewardCampaignInfo trading_reward_boost_info. */
                public trading_reward_boost_info?: (injective.exchange.v1beta1.ITradingRewardCampaignBoostInfo|null);

                /** TradingRewardCampaignInfo disqualified_market_ids. */
                public disqualified_market_ids: string[];

                /**
                 * Encodes the specified TradingRewardCampaignInfo message. Does not implicitly {@link injective.exchange.v1beta1.TradingRewardCampaignInfo.verify|verify} messages.
                 * @param message TradingRewardCampaignInfo message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.ITradingRewardCampaignInfo, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified TradingRewardCampaignInfo message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.TradingRewardCampaignInfo.verify|verify} messages.
                 * @param message TradingRewardCampaignInfo message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.ITradingRewardCampaignInfo, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a TradingRewardCampaignInfo message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns TradingRewardCampaignInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.TradingRewardCampaignInfo;

                /**
                 * Decodes a TradingRewardCampaignInfo message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns TradingRewardCampaignInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.TradingRewardCampaignInfo;

                /**
                 * Verifies a TradingRewardCampaignInfo message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a TradingRewardCampaignInfo message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns TradingRewardCampaignInfo
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.TradingRewardCampaignInfo;

                /**
                 * Creates a plain object from a TradingRewardCampaignInfo message. Also converts values to other types if specified.
                 * @param message TradingRewardCampaignInfo
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.TradingRewardCampaignInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this TradingRewardCampaignInfo to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a FeeDiscountTierInfo. */
            interface IFeeDiscountTierInfo {

                /** FeeDiscountTierInfo maker_discount_rate */
                maker_discount_rate?: (string|null);

                /** FeeDiscountTierInfo taker_discount_rate */
                taker_discount_rate?: (string|null);

                /** FeeDiscountTierInfo staked_amount */
                staked_amount?: (string|null);

                /** FeeDiscountTierInfo volume */
                volume?: (string|null);
            }

            /** Represents a FeeDiscountTierInfo. */
            class FeeDiscountTierInfo implements IFeeDiscountTierInfo {

                /**
                 * Constructs a new FeeDiscountTierInfo.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IFeeDiscountTierInfo);

                /** FeeDiscountTierInfo maker_discount_rate. */
                public maker_discount_rate: string;

                /** FeeDiscountTierInfo taker_discount_rate. */
                public taker_discount_rate: string;

                /** FeeDiscountTierInfo staked_amount. */
                public staked_amount: string;

                /** FeeDiscountTierInfo volume. */
                public volume: string;

                /**
                 * Encodes the specified FeeDiscountTierInfo message. Does not implicitly {@link injective.exchange.v1beta1.FeeDiscountTierInfo.verify|verify} messages.
                 * @param message FeeDiscountTierInfo message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IFeeDiscountTierInfo, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified FeeDiscountTierInfo message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.FeeDiscountTierInfo.verify|verify} messages.
                 * @param message FeeDiscountTierInfo message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IFeeDiscountTierInfo, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a FeeDiscountTierInfo message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns FeeDiscountTierInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.FeeDiscountTierInfo;

                /**
                 * Decodes a FeeDiscountTierInfo message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns FeeDiscountTierInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.FeeDiscountTierInfo;

                /**
                 * Verifies a FeeDiscountTierInfo message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a FeeDiscountTierInfo message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns FeeDiscountTierInfo
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.FeeDiscountTierInfo;

                /**
                 * Creates a plain object from a FeeDiscountTierInfo message. Also converts values to other types if specified.
                 * @param message FeeDiscountTierInfo
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.FeeDiscountTierInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this FeeDiscountTierInfo to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a FeeDiscountSchedule. */
            interface IFeeDiscountSchedule {

                /** FeeDiscountSchedule bucket_count */
                bucket_count?: (number|null);

                /** FeeDiscountSchedule bucket_duration */
                bucket_duration?: (number|null);

                /** FeeDiscountSchedule quote_denoms */
                quote_denoms?: (string[]|null);

                /** FeeDiscountSchedule tier_infos */
                tier_infos?: (injective.exchange.v1beta1.IFeeDiscountTierInfo[]|null);

                /** FeeDiscountSchedule disqualified_market_ids */
                disqualified_market_ids?: (string[]|null);
            }

            /** Represents a FeeDiscountSchedule. */
            class FeeDiscountSchedule implements IFeeDiscountSchedule {

                /**
                 * Constructs a new FeeDiscountSchedule.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IFeeDiscountSchedule);

                /** FeeDiscountSchedule bucket_count. */
                public bucket_count: number;

                /** FeeDiscountSchedule bucket_duration. */
                public bucket_duration: number;

                /** FeeDiscountSchedule quote_denoms. */
                public quote_denoms: string[];

                /** FeeDiscountSchedule tier_infos. */
                public tier_infos: injective.exchange.v1beta1.IFeeDiscountTierInfo[];

                /** FeeDiscountSchedule disqualified_market_ids. */
                public disqualified_market_ids: string[];

                /**
                 * Encodes the specified FeeDiscountSchedule message. Does not implicitly {@link injective.exchange.v1beta1.FeeDiscountSchedule.verify|verify} messages.
                 * @param message FeeDiscountSchedule message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IFeeDiscountSchedule, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified FeeDiscountSchedule message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.FeeDiscountSchedule.verify|verify} messages.
                 * @param message FeeDiscountSchedule message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IFeeDiscountSchedule, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a FeeDiscountSchedule message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns FeeDiscountSchedule
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.FeeDiscountSchedule;

                /**
                 * Decodes a FeeDiscountSchedule message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns FeeDiscountSchedule
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.FeeDiscountSchedule;

                /**
                 * Verifies a FeeDiscountSchedule message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a FeeDiscountSchedule message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns FeeDiscountSchedule
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.FeeDiscountSchedule;

                /**
                 * Creates a plain object from a FeeDiscountSchedule message. Also converts values to other types if specified.
                 * @param message FeeDiscountSchedule
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.FeeDiscountSchedule, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this FeeDiscountSchedule to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a FeeDiscountTierTTL. */
            interface IFeeDiscountTierTTL {

                /** FeeDiscountTierTTL tier */
                tier?: (number|null);

                /** FeeDiscountTierTTL ttl_timestamp */
                ttl_timestamp?: (number|null);
            }

            /** Represents a FeeDiscountTierTTL. */
            class FeeDiscountTierTTL implements IFeeDiscountTierTTL {

                /**
                 * Constructs a new FeeDiscountTierTTL.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IFeeDiscountTierTTL);

                /** FeeDiscountTierTTL tier. */
                public tier: number;

                /** FeeDiscountTierTTL ttl_timestamp. */
                public ttl_timestamp: number;

                /**
                 * Encodes the specified FeeDiscountTierTTL message. Does not implicitly {@link injective.exchange.v1beta1.FeeDiscountTierTTL.verify|verify} messages.
                 * @param message FeeDiscountTierTTL message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IFeeDiscountTierTTL, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified FeeDiscountTierTTL message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.FeeDiscountTierTTL.verify|verify} messages.
                 * @param message FeeDiscountTierTTL message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IFeeDiscountTierTTL, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a FeeDiscountTierTTL message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns FeeDiscountTierTTL
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.FeeDiscountTierTTL;

                /**
                 * Decodes a FeeDiscountTierTTL message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns FeeDiscountTierTTL
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.FeeDiscountTierTTL;

                /**
                 * Verifies a FeeDiscountTierTTL message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a FeeDiscountTierTTL message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns FeeDiscountTierTTL
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.FeeDiscountTierTTL;

                /**
                 * Creates a plain object from a FeeDiscountTierTTL message. Also converts values to other types if specified.
                 * @param message FeeDiscountTierTTL
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.FeeDiscountTierTTL, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this FeeDiscountTierTTL to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a VolumeRecord. */
            interface IVolumeRecord {

                /** VolumeRecord maker_volume */
                maker_volume?: (string|null);

                /** VolumeRecord taker_volume */
                taker_volume?: (string|null);
            }

            /** Represents a VolumeRecord. */
            class VolumeRecord implements IVolumeRecord {

                /**
                 * Constructs a new VolumeRecord.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IVolumeRecord);

                /** VolumeRecord maker_volume. */
                public maker_volume: string;

                /** VolumeRecord taker_volume. */
                public taker_volume: string;

                /**
                 * Encodes the specified VolumeRecord message. Does not implicitly {@link injective.exchange.v1beta1.VolumeRecord.verify|verify} messages.
                 * @param message VolumeRecord message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IVolumeRecord, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified VolumeRecord message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.VolumeRecord.verify|verify} messages.
                 * @param message VolumeRecord message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IVolumeRecord, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a VolumeRecord message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns VolumeRecord
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.VolumeRecord;

                /**
                 * Decodes a VolumeRecord message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns VolumeRecord
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.VolumeRecord;

                /**
                 * Verifies a VolumeRecord message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a VolumeRecord message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns VolumeRecord
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.VolumeRecord;

                /**
                 * Creates a plain object from a VolumeRecord message. Also converts values to other types if specified.
                 * @param message VolumeRecord
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.VolumeRecord, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this VolumeRecord to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an AccountRewards. */
            interface IAccountRewards {

                /** AccountRewards account */
                account?: (string|null);

                /** AccountRewards rewards */
                rewards?: (cosmos.base.v1beta1.ICoin[]|null);
            }

            /** Represents an AccountRewards. */
            class AccountRewards implements IAccountRewards {

                /**
                 * Constructs a new AccountRewards.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IAccountRewards);

                /** AccountRewards account. */
                public account: string;

                /** AccountRewards rewards. */
                public rewards: cosmos.base.v1beta1.ICoin[];

                /**
                 * Encodes the specified AccountRewards message. Does not implicitly {@link injective.exchange.v1beta1.AccountRewards.verify|verify} messages.
                 * @param message AccountRewards message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IAccountRewards, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified AccountRewards message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.AccountRewards.verify|verify} messages.
                 * @param message AccountRewards message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IAccountRewards, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an AccountRewards message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns AccountRewards
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.AccountRewards;

                /**
                 * Decodes an AccountRewards message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns AccountRewards
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.AccountRewards;

                /**
                 * Verifies an AccountRewards message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an AccountRewards message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns AccountRewards
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.AccountRewards;

                /**
                 * Creates a plain object from an AccountRewards message. Also converts values to other types if specified.
                 * @param message AccountRewards
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.AccountRewards, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this AccountRewards to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a TradeRecords. */
            interface ITradeRecords {

                /** TradeRecords market_id */
                market_id?: (string|null);

                /** TradeRecords latest_trade_records */
                latest_trade_records?: (injective.exchange.v1beta1.ITradeRecord[]|null);
            }

            /** Represents a TradeRecords. */
            class TradeRecords implements ITradeRecords {

                /**
                 * Constructs a new TradeRecords.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.ITradeRecords);

                /** TradeRecords market_id. */
                public market_id: string;

                /** TradeRecords latest_trade_records. */
                public latest_trade_records: injective.exchange.v1beta1.ITradeRecord[];

                /**
                 * Encodes the specified TradeRecords message. Does not implicitly {@link injective.exchange.v1beta1.TradeRecords.verify|verify} messages.
                 * @param message TradeRecords message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.ITradeRecords, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified TradeRecords message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.TradeRecords.verify|verify} messages.
                 * @param message TradeRecords message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.ITradeRecords, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a TradeRecords message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns TradeRecords
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.TradeRecords;

                /**
                 * Decodes a TradeRecords message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns TradeRecords
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.TradeRecords;

                /**
                 * Verifies a TradeRecords message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a TradeRecords message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns TradeRecords
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.TradeRecords;

                /**
                 * Creates a plain object from a TradeRecords message. Also converts values to other types if specified.
                 * @param message TradeRecords
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.TradeRecords, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this TradeRecords to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a SubaccountIDs. */
            interface ISubaccountIDs {

                /** SubaccountIDs subaccount_ids */
                subaccount_ids?: (Uint8Array[]|null);
            }

            /** Represents a SubaccountIDs. */
            class SubaccountIDs implements ISubaccountIDs {

                /**
                 * Constructs a new SubaccountIDs.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.ISubaccountIDs);

                /** SubaccountIDs subaccount_ids. */
                public subaccount_ids: Uint8Array[];

                /**
                 * Encodes the specified SubaccountIDs message. Does not implicitly {@link injective.exchange.v1beta1.SubaccountIDs.verify|verify} messages.
                 * @param message SubaccountIDs message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.ISubaccountIDs, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified SubaccountIDs message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.SubaccountIDs.verify|verify} messages.
                 * @param message SubaccountIDs message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.ISubaccountIDs, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a SubaccountIDs message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns SubaccountIDs
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.SubaccountIDs;

                /**
                 * Decodes a SubaccountIDs message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns SubaccountIDs
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.SubaccountIDs;

                /**
                 * Verifies a SubaccountIDs message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a SubaccountIDs message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns SubaccountIDs
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.SubaccountIDs;

                /**
                 * Creates a plain object from a SubaccountIDs message. Also converts values to other types if specified.
                 * @param message SubaccountIDs
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.SubaccountIDs, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this SubaccountIDs to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a TradeRecord. */
            interface ITradeRecord {

                /** TradeRecord timestamp */
                timestamp?: (number|null);

                /** TradeRecord price */
                price?: (string|null);

                /** TradeRecord quantity */
                quantity?: (string|null);
            }

            /** Represents a TradeRecord. */
            class TradeRecord implements ITradeRecord {

                /**
                 * Constructs a new TradeRecord.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.ITradeRecord);

                /** TradeRecord timestamp. */
                public timestamp: number;

                /** TradeRecord price. */
                public price: string;

                /** TradeRecord quantity. */
                public quantity: string;

                /**
                 * Encodes the specified TradeRecord message. Does not implicitly {@link injective.exchange.v1beta1.TradeRecord.verify|verify} messages.
                 * @param message TradeRecord message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.ITradeRecord, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified TradeRecord message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.TradeRecord.verify|verify} messages.
                 * @param message TradeRecord message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.ITradeRecord, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a TradeRecord message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns TradeRecord
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.TradeRecord;

                /**
                 * Decodes a TradeRecord message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns TradeRecord
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.TradeRecord;

                /**
                 * Verifies a TradeRecord message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a TradeRecord message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns TradeRecord
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.TradeRecord;

                /**
                 * Creates a plain object from a TradeRecord message. Also converts values to other types if specified.
                 * @param message TradeRecord
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.TradeRecord, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this TradeRecord to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** OrderMask enum. */
            enum OrderMask {
                UNUSED = 0,
                ANY = 1,
                REGULAR = 2,
                CONDITIONAL = 4,
                DIRECTION_BUY_OR_HIGHER = 8,
                DIRECTION_SELL_OR_LOWER = 16,
                TYPE_MARKET = 32,
                TYPE_LIMIT = 64
            }

            /** Properties of a Level. */
            interface ILevel {

                /** Level p */
                p?: (string|null);

                /** Level q */
                q?: (string|null);
            }

            /** Represents a Level. */
            class Level implements ILevel {

                /**
                 * Constructs a new Level.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.ILevel);

                /** Level p. */
                public p: string;

                /** Level q. */
                public q: string;

                /**
                 * Encodes the specified Level message. Does not implicitly {@link injective.exchange.v1beta1.Level.verify|verify} messages.
                 * @param message Level message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.ILevel, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Level message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.Level.verify|verify} messages.
                 * @param message Level message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.ILevel, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Level message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Level
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.Level;

                /**
                 * Decodes a Level message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Level
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.Level;

                /**
                 * Verifies a Level message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Level message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Level
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.Level;

                /**
                 * Creates a plain object from a Level message. Also converts values to other types if specified.
                 * @param message Level
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.Level, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Level to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an AggregateSubaccountVolumeRecord. */
            interface IAggregateSubaccountVolumeRecord {

                /** AggregateSubaccountVolumeRecord subaccount_id */
                subaccount_id?: (string|null);

                /** AggregateSubaccountVolumeRecord market_volumes */
                market_volumes?: (injective.exchange.v1beta1.IMarketVolume[]|null);
            }

            /** Represents an AggregateSubaccountVolumeRecord. */
            class AggregateSubaccountVolumeRecord implements IAggregateSubaccountVolumeRecord {

                /**
                 * Constructs a new AggregateSubaccountVolumeRecord.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IAggregateSubaccountVolumeRecord);

                /** AggregateSubaccountVolumeRecord subaccount_id. */
                public subaccount_id: string;

                /** AggregateSubaccountVolumeRecord market_volumes. */
                public market_volumes: injective.exchange.v1beta1.IMarketVolume[];

                /**
                 * Encodes the specified AggregateSubaccountVolumeRecord message. Does not implicitly {@link injective.exchange.v1beta1.AggregateSubaccountVolumeRecord.verify|verify} messages.
                 * @param message AggregateSubaccountVolumeRecord message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IAggregateSubaccountVolumeRecord, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified AggregateSubaccountVolumeRecord message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.AggregateSubaccountVolumeRecord.verify|verify} messages.
                 * @param message AggregateSubaccountVolumeRecord message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IAggregateSubaccountVolumeRecord, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an AggregateSubaccountVolumeRecord message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns AggregateSubaccountVolumeRecord
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.AggregateSubaccountVolumeRecord;

                /**
                 * Decodes an AggregateSubaccountVolumeRecord message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns AggregateSubaccountVolumeRecord
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.AggregateSubaccountVolumeRecord;

                /**
                 * Verifies an AggregateSubaccountVolumeRecord message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an AggregateSubaccountVolumeRecord message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns AggregateSubaccountVolumeRecord
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.AggregateSubaccountVolumeRecord;

                /**
                 * Creates a plain object from an AggregateSubaccountVolumeRecord message. Also converts values to other types if specified.
                 * @param message AggregateSubaccountVolumeRecord
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.AggregateSubaccountVolumeRecord, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this AggregateSubaccountVolumeRecord to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an AggregateAccountVolumeRecord. */
            interface IAggregateAccountVolumeRecord {

                /** AggregateAccountVolumeRecord account */
                account?: (string|null);

                /** AggregateAccountVolumeRecord market_volumes */
                market_volumes?: (injective.exchange.v1beta1.IMarketVolume[]|null);
            }

            /** Represents an AggregateAccountVolumeRecord. */
            class AggregateAccountVolumeRecord implements IAggregateAccountVolumeRecord {

                /**
                 * Constructs a new AggregateAccountVolumeRecord.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IAggregateAccountVolumeRecord);

                /** AggregateAccountVolumeRecord account. */
                public account: string;

                /** AggregateAccountVolumeRecord market_volumes. */
                public market_volumes: injective.exchange.v1beta1.IMarketVolume[];

                /**
                 * Encodes the specified AggregateAccountVolumeRecord message. Does not implicitly {@link injective.exchange.v1beta1.AggregateAccountVolumeRecord.verify|verify} messages.
                 * @param message AggregateAccountVolumeRecord message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IAggregateAccountVolumeRecord, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified AggregateAccountVolumeRecord message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.AggregateAccountVolumeRecord.verify|verify} messages.
                 * @param message AggregateAccountVolumeRecord message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IAggregateAccountVolumeRecord, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an AggregateAccountVolumeRecord message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns AggregateAccountVolumeRecord
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.AggregateAccountVolumeRecord;

                /**
                 * Decodes an AggregateAccountVolumeRecord message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns AggregateAccountVolumeRecord
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.AggregateAccountVolumeRecord;

                /**
                 * Verifies an AggregateAccountVolumeRecord message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an AggregateAccountVolumeRecord message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns AggregateAccountVolumeRecord
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.AggregateAccountVolumeRecord;

                /**
                 * Creates a plain object from an AggregateAccountVolumeRecord message. Also converts values to other types if specified.
                 * @param message AggregateAccountVolumeRecord
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.AggregateAccountVolumeRecord, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this AggregateAccountVolumeRecord to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MarketVolume. */
            interface IMarketVolume {

                /** MarketVolume market_id */
                market_id?: (string|null);

                /** MarketVolume volume */
                volume?: (injective.exchange.v1beta1.IVolumeRecord|null);
            }

            /** Represents a MarketVolume. */
            class MarketVolume implements IMarketVolume {

                /**
                 * Constructs a new MarketVolume.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IMarketVolume);

                /** MarketVolume market_id. */
                public market_id: string;

                /** MarketVolume volume. */
                public volume?: (injective.exchange.v1beta1.IVolumeRecord|null);

                /**
                 * Encodes the specified MarketVolume message. Does not implicitly {@link injective.exchange.v1beta1.MarketVolume.verify|verify} messages.
                 * @param message MarketVolume message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IMarketVolume, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MarketVolume message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.MarketVolume.verify|verify} messages.
                 * @param message MarketVolume message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IMarketVolume, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MarketVolume message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MarketVolume
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.MarketVolume;

                /**
                 * Decodes a MarketVolume message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MarketVolume
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.MarketVolume;

                /**
                 * Verifies a MarketVolume message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MarketVolume message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MarketVolume
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.MarketVolume;

                /**
                 * Creates a plain object from a MarketVolume message. Also converts values to other types if specified.
                 * @param message MarketVolume
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.MarketVolume, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MarketVolume to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a DenomDecimals. */
            interface IDenomDecimals {

                /** DenomDecimals denom */
                denom?: (string|null);

                /** DenomDecimals decimals */
                decimals?: (number|null);
            }

            /** Represents a DenomDecimals. */
            class DenomDecimals implements IDenomDecimals {

                /**
                 * Constructs a new DenomDecimals.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IDenomDecimals);

                /** DenomDecimals denom. */
                public denom: string;

                /** DenomDecimals decimals. */
                public decimals: number;

                /**
                 * Encodes the specified DenomDecimals message. Does not implicitly {@link injective.exchange.v1beta1.DenomDecimals.verify|verify} messages.
                 * @param message DenomDecimals message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IDenomDecimals, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DenomDecimals message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.DenomDecimals.verify|verify} messages.
                 * @param message DenomDecimals message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IDenomDecimals, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DenomDecimals message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DenomDecimals
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.DenomDecimals;

                /**
                 * Decodes a DenomDecimals message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DenomDecimals
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.DenomDecimals;

                /**
                 * Verifies a DenomDecimals message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DenomDecimals message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DenomDecimals
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.DenomDecimals;

                /**
                 * Creates a plain object from a DenomDecimals message. Also converts values to other types if specified.
                 * @param message DenomDecimals
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.DenomDecimals, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DenomDecimals to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an EventBatchSpotExecution. */
            interface IEventBatchSpotExecution {

                /** EventBatchSpotExecution market_id */
                market_id?: (string|null);

                /** EventBatchSpotExecution is_buy */
                is_buy?: (boolean|null);

                /** EventBatchSpotExecution executionType */
                executionType?: (injective.exchange.v1beta1.ExecutionType|null);

                /** EventBatchSpotExecution trades */
                trades?: (injective.exchange.v1beta1.ITradeLog[]|null);
            }

            /** Represents an EventBatchSpotExecution. */
            class EventBatchSpotExecution implements IEventBatchSpotExecution {

                /**
                 * Constructs a new EventBatchSpotExecution.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IEventBatchSpotExecution);

                /** EventBatchSpotExecution market_id. */
                public market_id: string;

                /** EventBatchSpotExecution is_buy. */
                public is_buy: boolean;

                /** EventBatchSpotExecution executionType. */
                public executionType: injective.exchange.v1beta1.ExecutionType;

                /** EventBatchSpotExecution trades. */
                public trades: injective.exchange.v1beta1.ITradeLog[];

                /**
                 * Encodes the specified EventBatchSpotExecution message. Does not implicitly {@link injective.exchange.v1beta1.EventBatchSpotExecution.verify|verify} messages.
                 * @param message EventBatchSpotExecution message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IEventBatchSpotExecution, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified EventBatchSpotExecution message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.EventBatchSpotExecution.verify|verify} messages.
                 * @param message EventBatchSpotExecution message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IEventBatchSpotExecution, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an EventBatchSpotExecution message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns EventBatchSpotExecution
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.EventBatchSpotExecution;

                /**
                 * Decodes an EventBatchSpotExecution message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns EventBatchSpotExecution
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.EventBatchSpotExecution;

                /**
                 * Verifies an EventBatchSpotExecution message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an EventBatchSpotExecution message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns EventBatchSpotExecution
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.EventBatchSpotExecution;

                /**
                 * Creates a plain object from an EventBatchSpotExecution message. Also converts values to other types if specified.
                 * @param message EventBatchSpotExecution
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.EventBatchSpotExecution, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this EventBatchSpotExecution to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an EventBatchDerivativeExecution. */
            interface IEventBatchDerivativeExecution {

                /** EventBatchDerivativeExecution market_id */
                market_id?: (string|null);

                /** EventBatchDerivativeExecution is_buy */
                is_buy?: (boolean|null);

                /** EventBatchDerivativeExecution is_liquidation */
                is_liquidation?: (boolean|null);

                /** EventBatchDerivativeExecution cumulative_funding */
                cumulative_funding?: (string|null);

                /** EventBatchDerivativeExecution executionType */
                executionType?: (injective.exchange.v1beta1.ExecutionType|null);

                /** EventBatchDerivativeExecution trades */
                trades?: (injective.exchange.v1beta1.IDerivativeTradeLog[]|null);
            }

            /** Represents an EventBatchDerivativeExecution. */
            class EventBatchDerivativeExecution implements IEventBatchDerivativeExecution {

                /**
                 * Constructs a new EventBatchDerivativeExecution.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IEventBatchDerivativeExecution);

                /** EventBatchDerivativeExecution market_id. */
                public market_id: string;

                /** EventBatchDerivativeExecution is_buy. */
                public is_buy: boolean;

                /** EventBatchDerivativeExecution is_liquidation. */
                public is_liquidation: boolean;

                /** EventBatchDerivativeExecution cumulative_funding. */
                public cumulative_funding: string;

                /** EventBatchDerivativeExecution executionType. */
                public executionType: injective.exchange.v1beta1.ExecutionType;

                /** EventBatchDerivativeExecution trades. */
                public trades: injective.exchange.v1beta1.IDerivativeTradeLog[];

                /**
                 * Encodes the specified EventBatchDerivativeExecution message. Does not implicitly {@link injective.exchange.v1beta1.EventBatchDerivativeExecution.verify|verify} messages.
                 * @param message EventBatchDerivativeExecution message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IEventBatchDerivativeExecution, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified EventBatchDerivativeExecution message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.EventBatchDerivativeExecution.verify|verify} messages.
                 * @param message EventBatchDerivativeExecution message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IEventBatchDerivativeExecution, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an EventBatchDerivativeExecution message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns EventBatchDerivativeExecution
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.EventBatchDerivativeExecution;

                /**
                 * Decodes an EventBatchDerivativeExecution message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns EventBatchDerivativeExecution
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.EventBatchDerivativeExecution;

                /**
                 * Verifies an EventBatchDerivativeExecution message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an EventBatchDerivativeExecution message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns EventBatchDerivativeExecution
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.EventBatchDerivativeExecution;

                /**
                 * Creates a plain object from an EventBatchDerivativeExecution message. Also converts values to other types if specified.
                 * @param message EventBatchDerivativeExecution
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.EventBatchDerivativeExecution, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this EventBatchDerivativeExecution to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an EventLostFundsFromLiquidation. */
            interface IEventLostFundsFromLiquidation {

                /** EventLostFundsFromLiquidation market_id */
                market_id?: (string|null);

                /** EventLostFundsFromLiquidation subaccount_id */
                subaccount_id?: (Uint8Array|null);

                /** EventLostFundsFromLiquidation lost_funds_from_available_during_payout */
                lost_funds_from_available_during_payout?: (string|null);

                /** EventLostFundsFromLiquidation lost_funds_from_order_cancels */
                lost_funds_from_order_cancels?: (string|null);
            }

            /** Represents an EventLostFundsFromLiquidation. */
            class EventLostFundsFromLiquidation implements IEventLostFundsFromLiquidation {

                /**
                 * Constructs a new EventLostFundsFromLiquidation.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IEventLostFundsFromLiquidation);

                /** EventLostFundsFromLiquidation market_id. */
                public market_id: string;

                /** EventLostFundsFromLiquidation subaccount_id. */
                public subaccount_id: Uint8Array;

                /** EventLostFundsFromLiquidation lost_funds_from_available_during_payout. */
                public lost_funds_from_available_during_payout: string;

                /** EventLostFundsFromLiquidation lost_funds_from_order_cancels. */
                public lost_funds_from_order_cancels: string;

                /**
                 * Encodes the specified EventLostFundsFromLiquidation message. Does not implicitly {@link injective.exchange.v1beta1.EventLostFundsFromLiquidation.verify|verify} messages.
                 * @param message EventLostFundsFromLiquidation message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IEventLostFundsFromLiquidation, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified EventLostFundsFromLiquidation message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.EventLostFundsFromLiquidation.verify|verify} messages.
                 * @param message EventLostFundsFromLiquidation message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IEventLostFundsFromLiquidation, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an EventLostFundsFromLiquidation message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns EventLostFundsFromLiquidation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.EventLostFundsFromLiquidation;

                /**
                 * Decodes an EventLostFundsFromLiquidation message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns EventLostFundsFromLiquidation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.EventLostFundsFromLiquidation;

                /**
                 * Verifies an EventLostFundsFromLiquidation message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an EventLostFundsFromLiquidation message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns EventLostFundsFromLiquidation
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.EventLostFundsFromLiquidation;

                /**
                 * Creates a plain object from an EventLostFundsFromLiquidation message. Also converts values to other types if specified.
                 * @param message EventLostFundsFromLiquidation
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.EventLostFundsFromLiquidation, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this EventLostFundsFromLiquidation to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an EventBatchDerivativePosition. */
            interface IEventBatchDerivativePosition {

                /** EventBatchDerivativePosition market_id */
                market_id?: (string|null);

                /** EventBatchDerivativePosition positions */
                positions?: (injective.exchange.v1beta1.ISubaccountPosition[]|null);
            }

            /** Represents an EventBatchDerivativePosition. */
            class EventBatchDerivativePosition implements IEventBatchDerivativePosition {

                /**
                 * Constructs a new EventBatchDerivativePosition.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IEventBatchDerivativePosition);

                /** EventBatchDerivativePosition market_id. */
                public market_id: string;

                /** EventBatchDerivativePosition positions. */
                public positions: injective.exchange.v1beta1.ISubaccountPosition[];

                /**
                 * Encodes the specified EventBatchDerivativePosition message. Does not implicitly {@link injective.exchange.v1beta1.EventBatchDerivativePosition.verify|verify} messages.
                 * @param message EventBatchDerivativePosition message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IEventBatchDerivativePosition, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified EventBatchDerivativePosition message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.EventBatchDerivativePosition.verify|verify} messages.
                 * @param message EventBatchDerivativePosition message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IEventBatchDerivativePosition, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an EventBatchDerivativePosition message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns EventBatchDerivativePosition
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.EventBatchDerivativePosition;

                /**
                 * Decodes an EventBatchDerivativePosition message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns EventBatchDerivativePosition
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.EventBatchDerivativePosition;

                /**
                 * Verifies an EventBatchDerivativePosition message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an EventBatchDerivativePosition message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns EventBatchDerivativePosition
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.EventBatchDerivativePosition;

                /**
                 * Creates a plain object from an EventBatchDerivativePosition message. Also converts values to other types if specified.
                 * @param message EventBatchDerivativePosition
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.EventBatchDerivativePosition, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this EventBatchDerivativePosition to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an EventDerivativeMarketPaused. */
            interface IEventDerivativeMarketPaused {

                /** EventDerivativeMarketPaused market_id */
                market_id?: (string|null);

                /** EventDerivativeMarketPaused settle_price */
                settle_price?: (string|null);

                /** EventDerivativeMarketPaused total_missing_funds */
                total_missing_funds?: (string|null);

                /** EventDerivativeMarketPaused missing_funds_rate */
                missing_funds_rate?: (string|null);
            }

            /** Represents an EventDerivativeMarketPaused. */
            class EventDerivativeMarketPaused implements IEventDerivativeMarketPaused {

                /**
                 * Constructs a new EventDerivativeMarketPaused.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IEventDerivativeMarketPaused);

                /** EventDerivativeMarketPaused market_id. */
                public market_id: string;

                /** EventDerivativeMarketPaused settle_price. */
                public settle_price: string;

                /** EventDerivativeMarketPaused total_missing_funds. */
                public total_missing_funds: string;

                /** EventDerivativeMarketPaused missing_funds_rate. */
                public missing_funds_rate: string;

                /**
                 * Encodes the specified EventDerivativeMarketPaused message. Does not implicitly {@link injective.exchange.v1beta1.EventDerivativeMarketPaused.verify|verify} messages.
                 * @param message EventDerivativeMarketPaused message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IEventDerivativeMarketPaused, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified EventDerivativeMarketPaused message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.EventDerivativeMarketPaused.verify|verify} messages.
                 * @param message EventDerivativeMarketPaused message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IEventDerivativeMarketPaused, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an EventDerivativeMarketPaused message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns EventDerivativeMarketPaused
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.EventDerivativeMarketPaused;

                /**
                 * Decodes an EventDerivativeMarketPaused message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns EventDerivativeMarketPaused
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.EventDerivativeMarketPaused;

                /**
                 * Verifies an EventDerivativeMarketPaused message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an EventDerivativeMarketPaused message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns EventDerivativeMarketPaused
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.EventDerivativeMarketPaused;

                /**
                 * Creates a plain object from an EventDerivativeMarketPaused message. Also converts values to other types if specified.
                 * @param message EventDerivativeMarketPaused
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.EventDerivativeMarketPaused, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this EventDerivativeMarketPaused to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an EventMarketBeyondBankruptcy. */
            interface IEventMarketBeyondBankruptcy {

                /** EventMarketBeyondBankruptcy market_id */
                market_id?: (string|null);

                /** EventMarketBeyondBankruptcy settle_price */
                settle_price?: (string|null);

                /** EventMarketBeyondBankruptcy missing_market_funds */
                missing_market_funds?: (string|null);
            }

            /** Represents an EventMarketBeyondBankruptcy. */
            class EventMarketBeyondBankruptcy implements IEventMarketBeyondBankruptcy {

                /**
                 * Constructs a new EventMarketBeyondBankruptcy.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IEventMarketBeyondBankruptcy);

                /** EventMarketBeyondBankruptcy market_id. */
                public market_id: string;

                /** EventMarketBeyondBankruptcy settle_price. */
                public settle_price: string;

                /** EventMarketBeyondBankruptcy missing_market_funds. */
                public missing_market_funds: string;

                /**
                 * Encodes the specified EventMarketBeyondBankruptcy message. Does not implicitly {@link injective.exchange.v1beta1.EventMarketBeyondBankruptcy.verify|verify} messages.
                 * @param message EventMarketBeyondBankruptcy message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IEventMarketBeyondBankruptcy, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified EventMarketBeyondBankruptcy message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.EventMarketBeyondBankruptcy.verify|verify} messages.
                 * @param message EventMarketBeyondBankruptcy message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IEventMarketBeyondBankruptcy, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an EventMarketBeyondBankruptcy message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns EventMarketBeyondBankruptcy
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.EventMarketBeyondBankruptcy;

                /**
                 * Decodes an EventMarketBeyondBankruptcy message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns EventMarketBeyondBankruptcy
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.EventMarketBeyondBankruptcy;

                /**
                 * Verifies an EventMarketBeyondBankruptcy message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an EventMarketBeyondBankruptcy message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns EventMarketBeyondBankruptcy
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.EventMarketBeyondBankruptcy;

                /**
                 * Creates a plain object from an EventMarketBeyondBankruptcy message. Also converts values to other types if specified.
                 * @param message EventMarketBeyondBankruptcy
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.EventMarketBeyondBankruptcy, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this EventMarketBeyondBankruptcy to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an EventAllPositionsHaircut. */
            interface IEventAllPositionsHaircut {

                /** EventAllPositionsHaircut market_id */
                market_id?: (string|null);

                /** EventAllPositionsHaircut settle_price */
                settle_price?: (string|null);

                /** EventAllPositionsHaircut missing_funds_rate */
                missing_funds_rate?: (string|null);
            }

            /** Represents an EventAllPositionsHaircut. */
            class EventAllPositionsHaircut implements IEventAllPositionsHaircut {

                /**
                 * Constructs a new EventAllPositionsHaircut.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IEventAllPositionsHaircut);

                /** EventAllPositionsHaircut market_id. */
                public market_id: string;

                /** EventAllPositionsHaircut settle_price. */
                public settle_price: string;

                /** EventAllPositionsHaircut missing_funds_rate. */
                public missing_funds_rate: string;

                /**
                 * Encodes the specified EventAllPositionsHaircut message. Does not implicitly {@link injective.exchange.v1beta1.EventAllPositionsHaircut.verify|verify} messages.
                 * @param message EventAllPositionsHaircut message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IEventAllPositionsHaircut, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified EventAllPositionsHaircut message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.EventAllPositionsHaircut.verify|verify} messages.
                 * @param message EventAllPositionsHaircut message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IEventAllPositionsHaircut, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an EventAllPositionsHaircut message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns EventAllPositionsHaircut
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.EventAllPositionsHaircut;

                /**
                 * Decodes an EventAllPositionsHaircut message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns EventAllPositionsHaircut
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.EventAllPositionsHaircut;

                /**
                 * Verifies an EventAllPositionsHaircut message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an EventAllPositionsHaircut message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns EventAllPositionsHaircut
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.EventAllPositionsHaircut;

                /**
                 * Creates a plain object from an EventAllPositionsHaircut message. Also converts values to other types if specified.
                 * @param message EventAllPositionsHaircut
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.EventAllPositionsHaircut, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this EventAllPositionsHaircut to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an EventBinaryOptionsMarketUpdate. */
            interface IEventBinaryOptionsMarketUpdate {

                /** EventBinaryOptionsMarketUpdate market */
                market?: (injective.exchange.v1beta1.IBinaryOptionsMarket|null);
            }

            /** Represents an EventBinaryOptionsMarketUpdate. */
            class EventBinaryOptionsMarketUpdate implements IEventBinaryOptionsMarketUpdate {

                /**
                 * Constructs a new EventBinaryOptionsMarketUpdate.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IEventBinaryOptionsMarketUpdate);

                /** EventBinaryOptionsMarketUpdate market. */
                public market?: (injective.exchange.v1beta1.IBinaryOptionsMarket|null);

                /**
                 * Encodes the specified EventBinaryOptionsMarketUpdate message. Does not implicitly {@link injective.exchange.v1beta1.EventBinaryOptionsMarketUpdate.verify|verify} messages.
                 * @param message EventBinaryOptionsMarketUpdate message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IEventBinaryOptionsMarketUpdate, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified EventBinaryOptionsMarketUpdate message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.EventBinaryOptionsMarketUpdate.verify|verify} messages.
                 * @param message EventBinaryOptionsMarketUpdate message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IEventBinaryOptionsMarketUpdate, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an EventBinaryOptionsMarketUpdate message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns EventBinaryOptionsMarketUpdate
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.EventBinaryOptionsMarketUpdate;

                /**
                 * Decodes an EventBinaryOptionsMarketUpdate message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns EventBinaryOptionsMarketUpdate
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.EventBinaryOptionsMarketUpdate;

                /**
                 * Verifies an EventBinaryOptionsMarketUpdate message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an EventBinaryOptionsMarketUpdate message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns EventBinaryOptionsMarketUpdate
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.EventBinaryOptionsMarketUpdate;

                /**
                 * Creates a plain object from an EventBinaryOptionsMarketUpdate message. Also converts values to other types if specified.
                 * @param message EventBinaryOptionsMarketUpdate
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.EventBinaryOptionsMarketUpdate, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this EventBinaryOptionsMarketUpdate to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an EventNewSpotOrders. */
            interface IEventNewSpotOrders {

                /** EventNewSpotOrders market_id */
                market_id?: (string|null);

                /** EventNewSpotOrders buy_orders */
                buy_orders?: (injective.exchange.v1beta1.ISpotLimitOrder[]|null);

                /** EventNewSpotOrders sell_orders */
                sell_orders?: (injective.exchange.v1beta1.ISpotLimitOrder[]|null);
            }

            /** Represents an EventNewSpotOrders. */
            class EventNewSpotOrders implements IEventNewSpotOrders {

                /**
                 * Constructs a new EventNewSpotOrders.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IEventNewSpotOrders);

                /** EventNewSpotOrders market_id. */
                public market_id: string;

                /** EventNewSpotOrders buy_orders. */
                public buy_orders: injective.exchange.v1beta1.ISpotLimitOrder[];

                /** EventNewSpotOrders sell_orders. */
                public sell_orders: injective.exchange.v1beta1.ISpotLimitOrder[];

                /**
                 * Encodes the specified EventNewSpotOrders message. Does not implicitly {@link injective.exchange.v1beta1.EventNewSpotOrders.verify|verify} messages.
                 * @param message EventNewSpotOrders message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IEventNewSpotOrders, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified EventNewSpotOrders message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.EventNewSpotOrders.verify|verify} messages.
                 * @param message EventNewSpotOrders message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IEventNewSpotOrders, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an EventNewSpotOrders message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns EventNewSpotOrders
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.EventNewSpotOrders;

                /**
                 * Decodes an EventNewSpotOrders message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns EventNewSpotOrders
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.EventNewSpotOrders;

                /**
                 * Verifies an EventNewSpotOrders message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an EventNewSpotOrders message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns EventNewSpotOrders
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.EventNewSpotOrders;

                /**
                 * Creates a plain object from an EventNewSpotOrders message. Also converts values to other types if specified.
                 * @param message EventNewSpotOrders
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.EventNewSpotOrders, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this EventNewSpotOrders to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an EventNewDerivativeOrders. */
            interface IEventNewDerivativeOrders {

                /** EventNewDerivativeOrders market_id */
                market_id?: (string|null);

                /** EventNewDerivativeOrders buy_orders */
                buy_orders?: (injective.exchange.v1beta1.IDerivativeLimitOrder[]|null);

                /** EventNewDerivativeOrders sell_orders */
                sell_orders?: (injective.exchange.v1beta1.IDerivativeLimitOrder[]|null);
            }

            /** Represents an EventNewDerivativeOrders. */
            class EventNewDerivativeOrders implements IEventNewDerivativeOrders {

                /**
                 * Constructs a new EventNewDerivativeOrders.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IEventNewDerivativeOrders);

                /** EventNewDerivativeOrders market_id. */
                public market_id: string;

                /** EventNewDerivativeOrders buy_orders. */
                public buy_orders: injective.exchange.v1beta1.IDerivativeLimitOrder[];

                /** EventNewDerivativeOrders sell_orders. */
                public sell_orders: injective.exchange.v1beta1.IDerivativeLimitOrder[];

                /**
                 * Encodes the specified EventNewDerivativeOrders message. Does not implicitly {@link injective.exchange.v1beta1.EventNewDerivativeOrders.verify|verify} messages.
                 * @param message EventNewDerivativeOrders message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IEventNewDerivativeOrders, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified EventNewDerivativeOrders message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.EventNewDerivativeOrders.verify|verify} messages.
                 * @param message EventNewDerivativeOrders message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IEventNewDerivativeOrders, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an EventNewDerivativeOrders message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns EventNewDerivativeOrders
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.EventNewDerivativeOrders;

                /**
                 * Decodes an EventNewDerivativeOrders message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns EventNewDerivativeOrders
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.EventNewDerivativeOrders;

                /**
                 * Verifies an EventNewDerivativeOrders message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an EventNewDerivativeOrders message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns EventNewDerivativeOrders
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.EventNewDerivativeOrders;

                /**
                 * Creates a plain object from an EventNewDerivativeOrders message. Also converts values to other types if specified.
                 * @param message EventNewDerivativeOrders
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.EventNewDerivativeOrders, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this EventNewDerivativeOrders to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an EventCancelSpotOrder. */
            interface IEventCancelSpotOrder {

                /** EventCancelSpotOrder market_id */
                market_id?: (string|null);

                /** EventCancelSpotOrder order */
                order?: (injective.exchange.v1beta1.ISpotLimitOrder|null);
            }

            /** Represents an EventCancelSpotOrder. */
            class EventCancelSpotOrder implements IEventCancelSpotOrder {

                /**
                 * Constructs a new EventCancelSpotOrder.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IEventCancelSpotOrder);

                /** EventCancelSpotOrder market_id. */
                public market_id: string;

                /** EventCancelSpotOrder order. */
                public order?: (injective.exchange.v1beta1.ISpotLimitOrder|null);

                /**
                 * Encodes the specified EventCancelSpotOrder message. Does not implicitly {@link injective.exchange.v1beta1.EventCancelSpotOrder.verify|verify} messages.
                 * @param message EventCancelSpotOrder message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IEventCancelSpotOrder, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified EventCancelSpotOrder message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.EventCancelSpotOrder.verify|verify} messages.
                 * @param message EventCancelSpotOrder message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IEventCancelSpotOrder, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an EventCancelSpotOrder message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns EventCancelSpotOrder
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.EventCancelSpotOrder;

                /**
                 * Decodes an EventCancelSpotOrder message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns EventCancelSpotOrder
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.EventCancelSpotOrder;

                /**
                 * Verifies an EventCancelSpotOrder message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an EventCancelSpotOrder message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns EventCancelSpotOrder
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.EventCancelSpotOrder;

                /**
                 * Creates a plain object from an EventCancelSpotOrder message. Also converts values to other types if specified.
                 * @param message EventCancelSpotOrder
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.EventCancelSpotOrder, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this EventCancelSpotOrder to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an EventSpotMarketUpdate. */
            interface IEventSpotMarketUpdate {

                /** EventSpotMarketUpdate market */
                market?: (injective.exchange.v1beta1.ISpotMarket|null);
            }

            /** Represents an EventSpotMarketUpdate. */
            class EventSpotMarketUpdate implements IEventSpotMarketUpdate {

                /**
                 * Constructs a new EventSpotMarketUpdate.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IEventSpotMarketUpdate);

                /** EventSpotMarketUpdate market. */
                public market?: (injective.exchange.v1beta1.ISpotMarket|null);

                /**
                 * Encodes the specified EventSpotMarketUpdate message. Does not implicitly {@link injective.exchange.v1beta1.EventSpotMarketUpdate.verify|verify} messages.
                 * @param message EventSpotMarketUpdate message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IEventSpotMarketUpdate, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified EventSpotMarketUpdate message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.EventSpotMarketUpdate.verify|verify} messages.
                 * @param message EventSpotMarketUpdate message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IEventSpotMarketUpdate, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an EventSpotMarketUpdate message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns EventSpotMarketUpdate
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.EventSpotMarketUpdate;

                /**
                 * Decodes an EventSpotMarketUpdate message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns EventSpotMarketUpdate
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.EventSpotMarketUpdate;

                /**
                 * Verifies an EventSpotMarketUpdate message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an EventSpotMarketUpdate message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns EventSpotMarketUpdate
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.EventSpotMarketUpdate;

                /**
                 * Creates a plain object from an EventSpotMarketUpdate message. Also converts values to other types if specified.
                 * @param message EventSpotMarketUpdate
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.EventSpotMarketUpdate, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this EventSpotMarketUpdate to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an EventPerpetualMarketUpdate. */
            interface IEventPerpetualMarketUpdate {

                /** EventPerpetualMarketUpdate market */
                market?: (injective.exchange.v1beta1.IDerivativeMarket|null);

                /** EventPerpetualMarketUpdate perpetual_market_info */
                perpetual_market_info?: (injective.exchange.v1beta1.IPerpetualMarketInfo|null);

                /** EventPerpetualMarketUpdate funding */
                funding?: (injective.exchange.v1beta1.IPerpetualMarketFunding|null);
            }

            /** Represents an EventPerpetualMarketUpdate. */
            class EventPerpetualMarketUpdate implements IEventPerpetualMarketUpdate {

                /**
                 * Constructs a new EventPerpetualMarketUpdate.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IEventPerpetualMarketUpdate);

                /** EventPerpetualMarketUpdate market. */
                public market?: (injective.exchange.v1beta1.IDerivativeMarket|null);

                /** EventPerpetualMarketUpdate perpetual_market_info. */
                public perpetual_market_info?: (injective.exchange.v1beta1.IPerpetualMarketInfo|null);

                /** EventPerpetualMarketUpdate funding. */
                public funding?: (injective.exchange.v1beta1.IPerpetualMarketFunding|null);

                /**
                 * Encodes the specified EventPerpetualMarketUpdate message. Does not implicitly {@link injective.exchange.v1beta1.EventPerpetualMarketUpdate.verify|verify} messages.
                 * @param message EventPerpetualMarketUpdate message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IEventPerpetualMarketUpdate, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified EventPerpetualMarketUpdate message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.EventPerpetualMarketUpdate.verify|verify} messages.
                 * @param message EventPerpetualMarketUpdate message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IEventPerpetualMarketUpdate, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an EventPerpetualMarketUpdate message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns EventPerpetualMarketUpdate
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.EventPerpetualMarketUpdate;

                /**
                 * Decodes an EventPerpetualMarketUpdate message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns EventPerpetualMarketUpdate
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.EventPerpetualMarketUpdate;

                /**
                 * Verifies an EventPerpetualMarketUpdate message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an EventPerpetualMarketUpdate message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns EventPerpetualMarketUpdate
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.EventPerpetualMarketUpdate;

                /**
                 * Creates a plain object from an EventPerpetualMarketUpdate message. Also converts values to other types if specified.
                 * @param message EventPerpetualMarketUpdate
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.EventPerpetualMarketUpdate, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this EventPerpetualMarketUpdate to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an EventExpiryFuturesMarketUpdate. */
            interface IEventExpiryFuturesMarketUpdate {

                /** EventExpiryFuturesMarketUpdate market */
                market?: (injective.exchange.v1beta1.IDerivativeMarket|null);

                /** EventExpiryFuturesMarketUpdate expiry_futures_market_info */
                expiry_futures_market_info?: (injective.exchange.v1beta1.IExpiryFuturesMarketInfo|null);
            }

            /** Represents an EventExpiryFuturesMarketUpdate. */
            class EventExpiryFuturesMarketUpdate implements IEventExpiryFuturesMarketUpdate {

                /**
                 * Constructs a new EventExpiryFuturesMarketUpdate.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IEventExpiryFuturesMarketUpdate);

                /** EventExpiryFuturesMarketUpdate market. */
                public market?: (injective.exchange.v1beta1.IDerivativeMarket|null);

                /** EventExpiryFuturesMarketUpdate expiry_futures_market_info. */
                public expiry_futures_market_info?: (injective.exchange.v1beta1.IExpiryFuturesMarketInfo|null);

                /**
                 * Encodes the specified EventExpiryFuturesMarketUpdate message. Does not implicitly {@link injective.exchange.v1beta1.EventExpiryFuturesMarketUpdate.verify|verify} messages.
                 * @param message EventExpiryFuturesMarketUpdate message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IEventExpiryFuturesMarketUpdate, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified EventExpiryFuturesMarketUpdate message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.EventExpiryFuturesMarketUpdate.verify|verify} messages.
                 * @param message EventExpiryFuturesMarketUpdate message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IEventExpiryFuturesMarketUpdate, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an EventExpiryFuturesMarketUpdate message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns EventExpiryFuturesMarketUpdate
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.EventExpiryFuturesMarketUpdate;

                /**
                 * Decodes an EventExpiryFuturesMarketUpdate message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns EventExpiryFuturesMarketUpdate
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.EventExpiryFuturesMarketUpdate;

                /**
                 * Verifies an EventExpiryFuturesMarketUpdate message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an EventExpiryFuturesMarketUpdate message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns EventExpiryFuturesMarketUpdate
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.EventExpiryFuturesMarketUpdate;

                /**
                 * Creates a plain object from an EventExpiryFuturesMarketUpdate message. Also converts values to other types if specified.
                 * @param message EventExpiryFuturesMarketUpdate
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.EventExpiryFuturesMarketUpdate, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this EventExpiryFuturesMarketUpdate to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an EventPerpetualMarketFundingUpdate. */
            interface IEventPerpetualMarketFundingUpdate {

                /** EventPerpetualMarketFundingUpdate market_id */
                market_id?: (string|null);

                /** EventPerpetualMarketFundingUpdate funding */
                funding?: (injective.exchange.v1beta1.IPerpetualMarketFunding|null);

                /** EventPerpetualMarketFundingUpdate is_hourly_funding */
                is_hourly_funding?: (boolean|null);

                /** EventPerpetualMarketFundingUpdate funding_rate */
                funding_rate?: (string|null);

                /** EventPerpetualMarketFundingUpdate mark_price */
                mark_price?: (string|null);
            }

            /** Represents an EventPerpetualMarketFundingUpdate. */
            class EventPerpetualMarketFundingUpdate implements IEventPerpetualMarketFundingUpdate {

                /**
                 * Constructs a new EventPerpetualMarketFundingUpdate.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IEventPerpetualMarketFundingUpdate);

                /** EventPerpetualMarketFundingUpdate market_id. */
                public market_id: string;

                /** EventPerpetualMarketFundingUpdate funding. */
                public funding?: (injective.exchange.v1beta1.IPerpetualMarketFunding|null);

                /** EventPerpetualMarketFundingUpdate is_hourly_funding. */
                public is_hourly_funding: boolean;

                /** EventPerpetualMarketFundingUpdate funding_rate. */
                public funding_rate: string;

                /** EventPerpetualMarketFundingUpdate mark_price. */
                public mark_price: string;

                /**
                 * Encodes the specified EventPerpetualMarketFundingUpdate message. Does not implicitly {@link injective.exchange.v1beta1.EventPerpetualMarketFundingUpdate.verify|verify} messages.
                 * @param message EventPerpetualMarketFundingUpdate message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IEventPerpetualMarketFundingUpdate, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified EventPerpetualMarketFundingUpdate message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.EventPerpetualMarketFundingUpdate.verify|verify} messages.
                 * @param message EventPerpetualMarketFundingUpdate message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IEventPerpetualMarketFundingUpdate, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an EventPerpetualMarketFundingUpdate message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns EventPerpetualMarketFundingUpdate
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.EventPerpetualMarketFundingUpdate;

                /**
                 * Decodes an EventPerpetualMarketFundingUpdate message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns EventPerpetualMarketFundingUpdate
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.EventPerpetualMarketFundingUpdate;

                /**
                 * Verifies an EventPerpetualMarketFundingUpdate message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an EventPerpetualMarketFundingUpdate message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns EventPerpetualMarketFundingUpdate
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.EventPerpetualMarketFundingUpdate;

                /**
                 * Creates a plain object from an EventPerpetualMarketFundingUpdate message. Also converts values to other types if specified.
                 * @param message EventPerpetualMarketFundingUpdate
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.EventPerpetualMarketFundingUpdate, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this EventPerpetualMarketFundingUpdate to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an EventSubaccountDeposit. */
            interface IEventSubaccountDeposit {

                /** EventSubaccountDeposit src_address */
                src_address?: (string|null);

                /** EventSubaccountDeposit subaccount_id */
                subaccount_id?: (Uint8Array|null);

                /** EventSubaccountDeposit amount */
                amount?: (cosmos.base.v1beta1.ICoin|null);
            }

            /** Represents an EventSubaccountDeposit. */
            class EventSubaccountDeposit implements IEventSubaccountDeposit {

                /**
                 * Constructs a new EventSubaccountDeposit.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IEventSubaccountDeposit);

                /** EventSubaccountDeposit src_address. */
                public src_address: string;

                /** EventSubaccountDeposit subaccount_id. */
                public subaccount_id: Uint8Array;

                /** EventSubaccountDeposit amount. */
                public amount?: (cosmos.base.v1beta1.ICoin|null);

                /**
                 * Encodes the specified EventSubaccountDeposit message. Does not implicitly {@link injective.exchange.v1beta1.EventSubaccountDeposit.verify|verify} messages.
                 * @param message EventSubaccountDeposit message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IEventSubaccountDeposit, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified EventSubaccountDeposit message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.EventSubaccountDeposit.verify|verify} messages.
                 * @param message EventSubaccountDeposit message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IEventSubaccountDeposit, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an EventSubaccountDeposit message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns EventSubaccountDeposit
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.EventSubaccountDeposit;

                /**
                 * Decodes an EventSubaccountDeposit message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns EventSubaccountDeposit
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.EventSubaccountDeposit;

                /**
                 * Verifies an EventSubaccountDeposit message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an EventSubaccountDeposit message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns EventSubaccountDeposit
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.EventSubaccountDeposit;

                /**
                 * Creates a plain object from an EventSubaccountDeposit message. Also converts values to other types if specified.
                 * @param message EventSubaccountDeposit
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.EventSubaccountDeposit, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this EventSubaccountDeposit to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an EventSubaccountWithdraw. */
            interface IEventSubaccountWithdraw {

                /** EventSubaccountWithdraw subaccount_id */
                subaccount_id?: (Uint8Array|null);

                /** EventSubaccountWithdraw dst_address */
                dst_address?: (string|null);

                /** EventSubaccountWithdraw amount */
                amount?: (cosmos.base.v1beta1.ICoin|null);
            }

            /** Represents an EventSubaccountWithdraw. */
            class EventSubaccountWithdraw implements IEventSubaccountWithdraw {

                /**
                 * Constructs a new EventSubaccountWithdraw.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IEventSubaccountWithdraw);

                /** EventSubaccountWithdraw subaccount_id. */
                public subaccount_id: Uint8Array;

                /** EventSubaccountWithdraw dst_address. */
                public dst_address: string;

                /** EventSubaccountWithdraw amount. */
                public amount?: (cosmos.base.v1beta1.ICoin|null);

                /**
                 * Encodes the specified EventSubaccountWithdraw message. Does not implicitly {@link injective.exchange.v1beta1.EventSubaccountWithdraw.verify|verify} messages.
                 * @param message EventSubaccountWithdraw message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IEventSubaccountWithdraw, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified EventSubaccountWithdraw message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.EventSubaccountWithdraw.verify|verify} messages.
                 * @param message EventSubaccountWithdraw message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IEventSubaccountWithdraw, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an EventSubaccountWithdraw message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns EventSubaccountWithdraw
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.EventSubaccountWithdraw;

                /**
                 * Decodes an EventSubaccountWithdraw message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns EventSubaccountWithdraw
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.EventSubaccountWithdraw;

                /**
                 * Verifies an EventSubaccountWithdraw message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an EventSubaccountWithdraw message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns EventSubaccountWithdraw
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.EventSubaccountWithdraw;

                /**
                 * Creates a plain object from an EventSubaccountWithdraw message. Also converts values to other types if specified.
                 * @param message EventSubaccountWithdraw
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.EventSubaccountWithdraw, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this EventSubaccountWithdraw to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an EventSubaccountBalanceTransfer. */
            interface IEventSubaccountBalanceTransfer {

                /** EventSubaccountBalanceTransfer src_subaccount_id */
                src_subaccount_id?: (string|null);

                /** EventSubaccountBalanceTransfer dst_subaccount_id */
                dst_subaccount_id?: (string|null);

                /** EventSubaccountBalanceTransfer amount */
                amount?: (cosmos.base.v1beta1.ICoin|null);
            }

            /** Represents an EventSubaccountBalanceTransfer. */
            class EventSubaccountBalanceTransfer implements IEventSubaccountBalanceTransfer {

                /**
                 * Constructs a new EventSubaccountBalanceTransfer.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IEventSubaccountBalanceTransfer);

                /** EventSubaccountBalanceTransfer src_subaccount_id. */
                public src_subaccount_id: string;

                /** EventSubaccountBalanceTransfer dst_subaccount_id. */
                public dst_subaccount_id: string;

                /** EventSubaccountBalanceTransfer amount. */
                public amount?: (cosmos.base.v1beta1.ICoin|null);

                /**
                 * Encodes the specified EventSubaccountBalanceTransfer message. Does not implicitly {@link injective.exchange.v1beta1.EventSubaccountBalanceTransfer.verify|verify} messages.
                 * @param message EventSubaccountBalanceTransfer message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IEventSubaccountBalanceTransfer, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified EventSubaccountBalanceTransfer message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.EventSubaccountBalanceTransfer.verify|verify} messages.
                 * @param message EventSubaccountBalanceTransfer message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IEventSubaccountBalanceTransfer, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an EventSubaccountBalanceTransfer message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns EventSubaccountBalanceTransfer
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.EventSubaccountBalanceTransfer;

                /**
                 * Decodes an EventSubaccountBalanceTransfer message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns EventSubaccountBalanceTransfer
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.EventSubaccountBalanceTransfer;

                /**
                 * Verifies an EventSubaccountBalanceTransfer message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an EventSubaccountBalanceTransfer message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns EventSubaccountBalanceTransfer
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.EventSubaccountBalanceTransfer;

                /**
                 * Creates a plain object from an EventSubaccountBalanceTransfer message. Also converts values to other types if specified.
                 * @param message EventSubaccountBalanceTransfer
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.EventSubaccountBalanceTransfer, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this EventSubaccountBalanceTransfer to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an EventBatchDepositUpdate. */
            interface IEventBatchDepositUpdate {

                /** EventBatchDepositUpdate deposit_updates */
                deposit_updates?: (injective.exchange.v1beta1.IDepositUpdate[]|null);
            }

            /** Represents an EventBatchDepositUpdate. */
            class EventBatchDepositUpdate implements IEventBatchDepositUpdate {

                /**
                 * Constructs a new EventBatchDepositUpdate.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IEventBatchDepositUpdate);

                /** EventBatchDepositUpdate deposit_updates. */
                public deposit_updates: injective.exchange.v1beta1.IDepositUpdate[];

                /**
                 * Encodes the specified EventBatchDepositUpdate message. Does not implicitly {@link injective.exchange.v1beta1.EventBatchDepositUpdate.verify|verify} messages.
                 * @param message EventBatchDepositUpdate message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IEventBatchDepositUpdate, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified EventBatchDepositUpdate message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.EventBatchDepositUpdate.verify|verify} messages.
                 * @param message EventBatchDepositUpdate message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IEventBatchDepositUpdate, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an EventBatchDepositUpdate message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns EventBatchDepositUpdate
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.EventBatchDepositUpdate;

                /**
                 * Decodes an EventBatchDepositUpdate message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns EventBatchDepositUpdate
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.EventBatchDepositUpdate;

                /**
                 * Verifies an EventBatchDepositUpdate message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an EventBatchDepositUpdate message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns EventBatchDepositUpdate
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.EventBatchDepositUpdate;

                /**
                 * Creates a plain object from an EventBatchDepositUpdate message. Also converts values to other types if specified.
                 * @param message EventBatchDepositUpdate
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.EventBatchDepositUpdate, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this EventBatchDepositUpdate to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a DerivativeMarketOrderCancel. */
            interface IDerivativeMarketOrderCancel {

                /** DerivativeMarketOrderCancel market_order */
                market_order?: (injective.exchange.v1beta1.IDerivativeMarketOrder|null);

                /** DerivativeMarketOrderCancel cancel_quantity */
                cancel_quantity?: (string|null);
            }

            /** Represents a DerivativeMarketOrderCancel. */
            class DerivativeMarketOrderCancel implements IDerivativeMarketOrderCancel {

                /**
                 * Constructs a new DerivativeMarketOrderCancel.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IDerivativeMarketOrderCancel);

                /** DerivativeMarketOrderCancel market_order. */
                public market_order?: (injective.exchange.v1beta1.IDerivativeMarketOrder|null);

                /** DerivativeMarketOrderCancel cancel_quantity. */
                public cancel_quantity: string;

                /**
                 * Encodes the specified DerivativeMarketOrderCancel message. Does not implicitly {@link injective.exchange.v1beta1.DerivativeMarketOrderCancel.verify|verify} messages.
                 * @param message DerivativeMarketOrderCancel message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IDerivativeMarketOrderCancel, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DerivativeMarketOrderCancel message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.DerivativeMarketOrderCancel.verify|verify} messages.
                 * @param message DerivativeMarketOrderCancel message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IDerivativeMarketOrderCancel, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DerivativeMarketOrderCancel message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DerivativeMarketOrderCancel
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.DerivativeMarketOrderCancel;

                /**
                 * Decodes a DerivativeMarketOrderCancel message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DerivativeMarketOrderCancel
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.DerivativeMarketOrderCancel;

                /**
                 * Verifies a DerivativeMarketOrderCancel message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DerivativeMarketOrderCancel message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DerivativeMarketOrderCancel
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.DerivativeMarketOrderCancel;

                /**
                 * Creates a plain object from a DerivativeMarketOrderCancel message. Also converts values to other types if specified.
                 * @param message DerivativeMarketOrderCancel
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.DerivativeMarketOrderCancel, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DerivativeMarketOrderCancel to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an EventCancelDerivativeOrder. */
            interface IEventCancelDerivativeOrder {

                /** EventCancelDerivativeOrder market_id */
                market_id?: (string|null);

                /** EventCancelDerivativeOrder isLimitCancel */
                isLimitCancel?: (boolean|null);

                /** EventCancelDerivativeOrder limit_order */
                limit_order?: (injective.exchange.v1beta1.IDerivativeLimitOrder|null);

                /** EventCancelDerivativeOrder market_order_cancel */
                market_order_cancel?: (injective.exchange.v1beta1.IDerivativeMarketOrderCancel|null);
            }

            /** Represents an EventCancelDerivativeOrder. */
            class EventCancelDerivativeOrder implements IEventCancelDerivativeOrder {

                /**
                 * Constructs a new EventCancelDerivativeOrder.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IEventCancelDerivativeOrder);

                /** EventCancelDerivativeOrder market_id. */
                public market_id: string;

                /** EventCancelDerivativeOrder isLimitCancel. */
                public isLimitCancel: boolean;

                /** EventCancelDerivativeOrder limit_order. */
                public limit_order?: (injective.exchange.v1beta1.IDerivativeLimitOrder|null);

                /** EventCancelDerivativeOrder market_order_cancel. */
                public market_order_cancel?: (injective.exchange.v1beta1.IDerivativeMarketOrderCancel|null);

                /**
                 * Encodes the specified EventCancelDerivativeOrder message. Does not implicitly {@link injective.exchange.v1beta1.EventCancelDerivativeOrder.verify|verify} messages.
                 * @param message EventCancelDerivativeOrder message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IEventCancelDerivativeOrder, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified EventCancelDerivativeOrder message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.EventCancelDerivativeOrder.verify|verify} messages.
                 * @param message EventCancelDerivativeOrder message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IEventCancelDerivativeOrder, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an EventCancelDerivativeOrder message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns EventCancelDerivativeOrder
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.EventCancelDerivativeOrder;

                /**
                 * Decodes an EventCancelDerivativeOrder message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns EventCancelDerivativeOrder
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.EventCancelDerivativeOrder;

                /**
                 * Verifies an EventCancelDerivativeOrder message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an EventCancelDerivativeOrder message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns EventCancelDerivativeOrder
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.EventCancelDerivativeOrder;

                /**
                 * Creates a plain object from an EventCancelDerivativeOrder message. Also converts values to other types if specified.
                 * @param message EventCancelDerivativeOrder
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.EventCancelDerivativeOrder, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this EventCancelDerivativeOrder to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an EventFeeDiscountSchedule. */
            interface IEventFeeDiscountSchedule {

                /** EventFeeDiscountSchedule schedule */
                schedule?: (injective.exchange.v1beta1.IFeeDiscountSchedule|null);
            }

            /** Represents an EventFeeDiscountSchedule. */
            class EventFeeDiscountSchedule implements IEventFeeDiscountSchedule {

                /**
                 * Constructs a new EventFeeDiscountSchedule.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IEventFeeDiscountSchedule);

                /** EventFeeDiscountSchedule schedule. */
                public schedule?: (injective.exchange.v1beta1.IFeeDiscountSchedule|null);

                /**
                 * Encodes the specified EventFeeDiscountSchedule message. Does not implicitly {@link injective.exchange.v1beta1.EventFeeDiscountSchedule.verify|verify} messages.
                 * @param message EventFeeDiscountSchedule message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IEventFeeDiscountSchedule, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified EventFeeDiscountSchedule message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.EventFeeDiscountSchedule.verify|verify} messages.
                 * @param message EventFeeDiscountSchedule message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IEventFeeDiscountSchedule, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an EventFeeDiscountSchedule message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns EventFeeDiscountSchedule
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.EventFeeDiscountSchedule;

                /**
                 * Decodes an EventFeeDiscountSchedule message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns EventFeeDiscountSchedule
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.EventFeeDiscountSchedule;

                /**
                 * Verifies an EventFeeDiscountSchedule message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an EventFeeDiscountSchedule message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns EventFeeDiscountSchedule
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.EventFeeDiscountSchedule;

                /**
                 * Creates a plain object from an EventFeeDiscountSchedule message. Also converts values to other types if specified.
                 * @param message EventFeeDiscountSchedule
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.EventFeeDiscountSchedule, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this EventFeeDiscountSchedule to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an EventTradingRewardCampaignUpdate. */
            interface IEventTradingRewardCampaignUpdate {

                /** EventTradingRewardCampaignUpdate campaign_info */
                campaign_info?: (injective.exchange.v1beta1.ITradingRewardCampaignInfo|null);

                /** EventTradingRewardCampaignUpdate campaign_reward_pools */
                campaign_reward_pools?: (injective.exchange.v1beta1.ICampaignRewardPool[]|null);
            }

            /** Represents an EventTradingRewardCampaignUpdate. */
            class EventTradingRewardCampaignUpdate implements IEventTradingRewardCampaignUpdate {

                /**
                 * Constructs a new EventTradingRewardCampaignUpdate.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IEventTradingRewardCampaignUpdate);

                /** EventTradingRewardCampaignUpdate campaign_info. */
                public campaign_info?: (injective.exchange.v1beta1.ITradingRewardCampaignInfo|null);

                /** EventTradingRewardCampaignUpdate campaign_reward_pools. */
                public campaign_reward_pools: injective.exchange.v1beta1.ICampaignRewardPool[];

                /**
                 * Encodes the specified EventTradingRewardCampaignUpdate message. Does not implicitly {@link injective.exchange.v1beta1.EventTradingRewardCampaignUpdate.verify|verify} messages.
                 * @param message EventTradingRewardCampaignUpdate message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IEventTradingRewardCampaignUpdate, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified EventTradingRewardCampaignUpdate message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.EventTradingRewardCampaignUpdate.verify|verify} messages.
                 * @param message EventTradingRewardCampaignUpdate message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IEventTradingRewardCampaignUpdate, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an EventTradingRewardCampaignUpdate message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns EventTradingRewardCampaignUpdate
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.EventTradingRewardCampaignUpdate;

                /**
                 * Decodes an EventTradingRewardCampaignUpdate message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns EventTradingRewardCampaignUpdate
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.EventTradingRewardCampaignUpdate;

                /**
                 * Verifies an EventTradingRewardCampaignUpdate message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an EventTradingRewardCampaignUpdate message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns EventTradingRewardCampaignUpdate
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.EventTradingRewardCampaignUpdate;

                /**
                 * Creates a plain object from an EventTradingRewardCampaignUpdate message. Also converts values to other types if specified.
                 * @param message EventTradingRewardCampaignUpdate
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.EventTradingRewardCampaignUpdate, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this EventTradingRewardCampaignUpdate to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an EventTradingRewardDistribution. */
            interface IEventTradingRewardDistribution {

                /** EventTradingRewardDistribution account_rewards */
                account_rewards?: (injective.exchange.v1beta1.IAccountRewards[]|null);
            }

            /** Represents an EventTradingRewardDistribution. */
            class EventTradingRewardDistribution implements IEventTradingRewardDistribution {

                /**
                 * Constructs a new EventTradingRewardDistribution.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IEventTradingRewardDistribution);

                /** EventTradingRewardDistribution account_rewards. */
                public account_rewards: injective.exchange.v1beta1.IAccountRewards[];

                /**
                 * Encodes the specified EventTradingRewardDistribution message. Does not implicitly {@link injective.exchange.v1beta1.EventTradingRewardDistribution.verify|verify} messages.
                 * @param message EventTradingRewardDistribution message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IEventTradingRewardDistribution, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified EventTradingRewardDistribution message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.EventTradingRewardDistribution.verify|verify} messages.
                 * @param message EventTradingRewardDistribution message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IEventTradingRewardDistribution, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an EventTradingRewardDistribution message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns EventTradingRewardDistribution
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.EventTradingRewardDistribution;

                /**
                 * Decodes an EventTradingRewardDistribution message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns EventTradingRewardDistribution
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.EventTradingRewardDistribution;

                /**
                 * Verifies an EventTradingRewardDistribution message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an EventTradingRewardDistribution message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns EventTradingRewardDistribution
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.EventTradingRewardDistribution;

                /**
                 * Creates a plain object from an EventTradingRewardDistribution message. Also converts values to other types if specified.
                 * @param message EventTradingRewardDistribution
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.EventTradingRewardDistribution, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this EventTradingRewardDistribution to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an EventNewConditionalDerivativeOrder. */
            interface IEventNewConditionalDerivativeOrder {

                /** EventNewConditionalDerivativeOrder market_id */
                market_id?: (string|null);

                /** EventNewConditionalDerivativeOrder order */
                order?: (injective.exchange.v1beta1.IDerivativeOrder|null);

                /** EventNewConditionalDerivativeOrder hash */
                hash?: (Uint8Array|null);

                /** EventNewConditionalDerivativeOrder is_market */
                is_market?: (boolean|null);
            }

            /** Represents an EventNewConditionalDerivativeOrder. */
            class EventNewConditionalDerivativeOrder implements IEventNewConditionalDerivativeOrder {

                /**
                 * Constructs a new EventNewConditionalDerivativeOrder.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IEventNewConditionalDerivativeOrder);

                /** EventNewConditionalDerivativeOrder market_id. */
                public market_id: string;

                /** EventNewConditionalDerivativeOrder order. */
                public order?: (injective.exchange.v1beta1.IDerivativeOrder|null);

                /** EventNewConditionalDerivativeOrder hash. */
                public hash: Uint8Array;

                /** EventNewConditionalDerivativeOrder is_market. */
                public is_market: boolean;

                /**
                 * Encodes the specified EventNewConditionalDerivativeOrder message. Does not implicitly {@link injective.exchange.v1beta1.EventNewConditionalDerivativeOrder.verify|verify} messages.
                 * @param message EventNewConditionalDerivativeOrder message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IEventNewConditionalDerivativeOrder, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified EventNewConditionalDerivativeOrder message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.EventNewConditionalDerivativeOrder.verify|verify} messages.
                 * @param message EventNewConditionalDerivativeOrder message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IEventNewConditionalDerivativeOrder, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an EventNewConditionalDerivativeOrder message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns EventNewConditionalDerivativeOrder
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.EventNewConditionalDerivativeOrder;

                /**
                 * Decodes an EventNewConditionalDerivativeOrder message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns EventNewConditionalDerivativeOrder
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.EventNewConditionalDerivativeOrder;

                /**
                 * Verifies an EventNewConditionalDerivativeOrder message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an EventNewConditionalDerivativeOrder message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns EventNewConditionalDerivativeOrder
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.EventNewConditionalDerivativeOrder;

                /**
                 * Creates a plain object from an EventNewConditionalDerivativeOrder message. Also converts values to other types if specified.
                 * @param message EventNewConditionalDerivativeOrder
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.EventNewConditionalDerivativeOrder, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this EventNewConditionalDerivativeOrder to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an EventCancelConditionalDerivativeOrder. */
            interface IEventCancelConditionalDerivativeOrder {

                /** EventCancelConditionalDerivativeOrder market_id */
                market_id?: (string|null);

                /** EventCancelConditionalDerivativeOrder isLimitCancel */
                isLimitCancel?: (boolean|null);

                /** EventCancelConditionalDerivativeOrder limit_order */
                limit_order?: (injective.exchange.v1beta1.IDerivativeLimitOrder|null);

                /** EventCancelConditionalDerivativeOrder market_order */
                market_order?: (injective.exchange.v1beta1.IDerivativeMarketOrder|null);
            }

            /** Represents an EventCancelConditionalDerivativeOrder. */
            class EventCancelConditionalDerivativeOrder implements IEventCancelConditionalDerivativeOrder {

                /**
                 * Constructs a new EventCancelConditionalDerivativeOrder.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IEventCancelConditionalDerivativeOrder);

                /** EventCancelConditionalDerivativeOrder market_id. */
                public market_id: string;

                /** EventCancelConditionalDerivativeOrder isLimitCancel. */
                public isLimitCancel: boolean;

                /** EventCancelConditionalDerivativeOrder limit_order. */
                public limit_order?: (injective.exchange.v1beta1.IDerivativeLimitOrder|null);

                /** EventCancelConditionalDerivativeOrder market_order. */
                public market_order?: (injective.exchange.v1beta1.IDerivativeMarketOrder|null);

                /**
                 * Encodes the specified EventCancelConditionalDerivativeOrder message. Does not implicitly {@link injective.exchange.v1beta1.EventCancelConditionalDerivativeOrder.verify|verify} messages.
                 * @param message EventCancelConditionalDerivativeOrder message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IEventCancelConditionalDerivativeOrder, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified EventCancelConditionalDerivativeOrder message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.EventCancelConditionalDerivativeOrder.verify|verify} messages.
                 * @param message EventCancelConditionalDerivativeOrder message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IEventCancelConditionalDerivativeOrder, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an EventCancelConditionalDerivativeOrder message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns EventCancelConditionalDerivativeOrder
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.EventCancelConditionalDerivativeOrder;

                /**
                 * Decodes an EventCancelConditionalDerivativeOrder message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns EventCancelConditionalDerivativeOrder
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.EventCancelConditionalDerivativeOrder;

                /**
                 * Verifies an EventCancelConditionalDerivativeOrder message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an EventCancelConditionalDerivativeOrder message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns EventCancelConditionalDerivativeOrder
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.EventCancelConditionalDerivativeOrder;

                /**
                 * Creates a plain object from an EventCancelConditionalDerivativeOrder message. Also converts values to other types if specified.
                 * @param message EventCancelConditionalDerivativeOrder
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.EventCancelConditionalDerivativeOrder, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this EventCancelConditionalDerivativeOrder to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an EventConditionalDerivativeOrderTrigger. */
            interface IEventConditionalDerivativeOrderTrigger {

                /** EventConditionalDerivativeOrderTrigger market_id */
                market_id?: (Uint8Array|null);

                /** EventConditionalDerivativeOrderTrigger isLimitTrigger */
                isLimitTrigger?: (boolean|null);

                /** EventConditionalDerivativeOrderTrigger triggered_order_hash */
                triggered_order_hash?: (Uint8Array|null);

                /** EventConditionalDerivativeOrderTrigger placed_order_hash */
                placed_order_hash?: (Uint8Array|null);
            }

            /** Represents an EventConditionalDerivativeOrderTrigger. */
            class EventConditionalDerivativeOrderTrigger implements IEventConditionalDerivativeOrderTrigger {

                /**
                 * Constructs a new EventConditionalDerivativeOrderTrigger.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IEventConditionalDerivativeOrderTrigger);

                /** EventConditionalDerivativeOrderTrigger market_id. */
                public market_id: Uint8Array;

                /** EventConditionalDerivativeOrderTrigger isLimitTrigger. */
                public isLimitTrigger: boolean;

                /** EventConditionalDerivativeOrderTrigger triggered_order_hash. */
                public triggered_order_hash: Uint8Array;

                /** EventConditionalDerivativeOrderTrigger placed_order_hash. */
                public placed_order_hash: Uint8Array;

                /**
                 * Encodes the specified EventConditionalDerivativeOrderTrigger message. Does not implicitly {@link injective.exchange.v1beta1.EventConditionalDerivativeOrderTrigger.verify|verify} messages.
                 * @param message EventConditionalDerivativeOrderTrigger message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IEventConditionalDerivativeOrderTrigger, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified EventConditionalDerivativeOrderTrigger message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.EventConditionalDerivativeOrderTrigger.verify|verify} messages.
                 * @param message EventConditionalDerivativeOrderTrigger message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IEventConditionalDerivativeOrderTrigger, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an EventConditionalDerivativeOrderTrigger message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns EventConditionalDerivativeOrderTrigger
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.EventConditionalDerivativeOrderTrigger;

                /**
                 * Decodes an EventConditionalDerivativeOrderTrigger message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns EventConditionalDerivativeOrderTrigger
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.EventConditionalDerivativeOrderTrigger;

                /**
                 * Verifies an EventConditionalDerivativeOrderTrigger message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an EventConditionalDerivativeOrderTrigger message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns EventConditionalDerivativeOrderTrigger
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.EventConditionalDerivativeOrderTrigger;

                /**
                 * Creates a plain object from an EventConditionalDerivativeOrderTrigger message. Also converts values to other types if specified.
                 * @param message EventConditionalDerivativeOrderTrigger
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.EventConditionalDerivativeOrderTrigger, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this EventConditionalDerivativeOrderTrigger to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an EventOrderFail. */
            interface IEventOrderFail {

                /** EventOrderFail account */
                account?: (Uint8Array|null);

                /** EventOrderFail hashes */
                hashes?: (Uint8Array[]|null);

                /** EventOrderFail flags */
                flags?: (number[]|null);
            }

            /** Represents an EventOrderFail. */
            class EventOrderFail implements IEventOrderFail {

                /**
                 * Constructs a new EventOrderFail.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IEventOrderFail);

                /** EventOrderFail account. */
                public account: Uint8Array;

                /** EventOrderFail hashes. */
                public hashes: Uint8Array[];

                /** EventOrderFail flags. */
                public flags: number[];

                /**
                 * Encodes the specified EventOrderFail message. Does not implicitly {@link injective.exchange.v1beta1.EventOrderFail.verify|verify} messages.
                 * @param message EventOrderFail message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IEventOrderFail, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified EventOrderFail message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.EventOrderFail.verify|verify} messages.
                 * @param message EventOrderFail message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IEventOrderFail, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an EventOrderFail message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns EventOrderFail
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.EventOrderFail;

                /**
                 * Decodes an EventOrderFail message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns EventOrderFail
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.EventOrderFail;

                /**
                 * Verifies an EventOrderFail message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an EventOrderFail message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns EventOrderFail
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.EventOrderFail;

                /**
                 * Creates a plain object from an EventOrderFail message. Also converts values to other types if specified.
                 * @param message EventOrderFail
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.EventOrderFail, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this EventOrderFail to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an EventAtomicMarketOrderFeeMultipliersUpdated. */
            interface IEventAtomicMarketOrderFeeMultipliersUpdated {

                /** EventAtomicMarketOrderFeeMultipliersUpdated market_fee_multipliers */
                market_fee_multipliers?: (injective.exchange.v1beta1.IMarketFeeMultiplier[]|null);
            }

            /** Represents an EventAtomicMarketOrderFeeMultipliersUpdated. */
            class EventAtomicMarketOrderFeeMultipliersUpdated implements IEventAtomicMarketOrderFeeMultipliersUpdated {

                /**
                 * Constructs a new EventAtomicMarketOrderFeeMultipliersUpdated.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IEventAtomicMarketOrderFeeMultipliersUpdated);

                /** EventAtomicMarketOrderFeeMultipliersUpdated market_fee_multipliers. */
                public market_fee_multipliers: injective.exchange.v1beta1.IMarketFeeMultiplier[];

                /**
                 * Encodes the specified EventAtomicMarketOrderFeeMultipliersUpdated message. Does not implicitly {@link injective.exchange.v1beta1.EventAtomicMarketOrderFeeMultipliersUpdated.verify|verify} messages.
                 * @param message EventAtomicMarketOrderFeeMultipliersUpdated message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IEventAtomicMarketOrderFeeMultipliersUpdated, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified EventAtomicMarketOrderFeeMultipliersUpdated message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.EventAtomicMarketOrderFeeMultipliersUpdated.verify|verify} messages.
                 * @param message EventAtomicMarketOrderFeeMultipliersUpdated message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IEventAtomicMarketOrderFeeMultipliersUpdated, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an EventAtomicMarketOrderFeeMultipliersUpdated message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns EventAtomicMarketOrderFeeMultipliersUpdated
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.EventAtomicMarketOrderFeeMultipliersUpdated;

                /**
                 * Decodes an EventAtomicMarketOrderFeeMultipliersUpdated message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns EventAtomicMarketOrderFeeMultipliersUpdated
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.EventAtomicMarketOrderFeeMultipliersUpdated;

                /**
                 * Verifies an EventAtomicMarketOrderFeeMultipliersUpdated message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an EventAtomicMarketOrderFeeMultipliersUpdated message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns EventAtomicMarketOrderFeeMultipliersUpdated
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.EventAtomicMarketOrderFeeMultipliersUpdated;

                /**
                 * Creates a plain object from an EventAtomicMarketOrderFeeMultipliersUpdated message. Also converts values to other types if specified.
                 * @param message EventAtomicMarketOrderFeeMultipliersUpdated
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.EventAtomicMarketOrderFeeMultipliersUpdated, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this EventAtomicMarketOrderFeeMultipliersUpdated to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an EventOrderbookUpdate. */
            interface IEventOrderbookUpdate {

                /** EventOrderbookUpdate spot_updates */
                spot_updates?: (injective.exchange.v1beta1.IOrderbookUpdate[]|null);

                /** EventOrderbookUpdate derivative_updates */
                derivative_updates?: (injective.exchange.v1beta1.IOrderbookUpdate[]|null);
            }

            /** Represents an EventOrderbookUpdate. */
            class EventOrderbookUpdate implements IEventOrderbookUpdate {

                /**
                 * Constructs a new EventOrderbookUpdate.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IEventOrderbookUpdate);

                /** EventOrderbookUpdate spot_updates. */
                public spot_updates: injective.exchange.v1beta1.IOrderbookUpdate[];

                /** EventOrderbookUpdate derivative_updates. */
                public derivative_updates: injective.exchange.v1beta1.IOrderbookUpdate[];

                /**
                 * Encodes the specified EventOrderbookUpdate message. Does not implicitly {@link injective.exchange.v1beta1.EventOrderbookUpdate.verify|verify} messages.
                 * @param message EventOrderbookUpdate message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IEventOrderbookUpdate, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified EventOrderbookUpdate message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.EventOrderbookUpdate.verify|verify} messages.
                 * @param message EventOrderbookUpdate message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IEventOrderbookUpdate, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an EventOrderbookUpdate message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns EventOrderbookUpdate
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.EventOrderbookUpdate;

                /**
                 * Decodes an EventOrderbookUpdate message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns EventOrderbookUpdate
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.EventOrderbookUpdate;

                /**
                 * Verifies an EventOrderbookUpdate message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an EventOrderbookUpdate message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns EventOrderbookUpdate
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.EventOrderbookUpdate;

                /**
                 * Creates a plain object from an EventOrderbookUpdate message. Also converts values to other types if specified.
                 * @param message EventOrderbookUpdate
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.EventOrderbookUpdate, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this EventOrderbookUpdate to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an OrderbookUpdate. */
            interface IOrderbookUpdate {

                /** OrderbookUpdate seq */
                seq?: (number|null);

                /** OrderbookUpdate orderbook */
                orderbook?: (injective.exchange.v1beta1.IOrderbook|null);
            }

            /** Represents an OrderbookUpdate. */
            class OrderbookUpdate implements IOrderbookUpdate {

                /**
                 * Constructs a new OrderbookUpdate.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IOrderbookUpdate);

                /** OrderbookUpdate seq. */
                public seq: number;

                /** OrderbookUpdate orderbook. */
                public orderbook?: (injective.exchange.v1beta1.IOrderbook|null);

                /**
                 * Encodes the specified OrderbookUpdate message. Does not implicitly {@link injective.exchange.v1beta1.OrderbookUpdate.verify|verify} messages.
                 * @param message OrderbookUpdate message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IOrderbookUpdate, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified OrderbookUpdate message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.OrderbookUpdate.verify|verify} messages.
                 * @param message OrderbookUpdate message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IOrderbookUpdate, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an OrderbookUpdate message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns OrderbookUpdate
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.OrderbookUpdate;

                /**
                 * Decodes an OrderbookUpdate message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns OrderbookUpdate
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.OrderbookUpdate;

                /**
                 * Verifies an OrderbookUpdate message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an OrderbookUpdate message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns OrderbookUpdate
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.OrderbookUpdate;

                /**
                 * Creates a plain object from an OrderbookUpdate message. Also converts values to other types if specified.
                 * @param message OrderbookUpdate
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.OrderbookUpdate, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this OrderbookUpdate to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an Orderbook. */
            interface IOrderbook {

                /** Orderbook market_id */
                market_id?: (Uint8Array|null);

                /** Orderbook buy_levels */
                buy_levels?: (injective.exchange.v1beta1.ILevel[]|null);

                /** Orderbook sell_levels */
                sell_levels?: (injective.exchange.v1beta1.ILevel[]|null);
            }

            /** Represents an Orderbook. */
            class Orderbook implements IOrderbook {

                /**
                 * Constructs a new Orderbook.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IOrderbook);

                /** Orderbook market_id. */
                public market_id: Uint8Array;

                /** Orderbook buy_levels. */
                public buy_levels: injective.exchange.v1beta1.ILevel[];

                /** Orderbook sell_levels. */
                public sell_levels: injective.exchange.v1beta1.ILevel[];

                /**
                 * Encodes the specified Orderbook message. Does not implicitly {@link injective.exchange.v1beta1.Orderbook.verify|verify} messages.
                 * @param message Orderbook message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IOrderbook, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Orderbook message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.Orderbook.verify|verify} messages.
                 * @param message Orderbook message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IOrderbook, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an Orderbook message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Orderbook
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.Orderbook;

                /**
                 * Decodes an Orderbook message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Orderbook
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.Orderbook;

                /**
                 * Verifies an Orderbook message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an Orderbook message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Orderbook
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.Orderbook;

                /**
                 * Creates a plain object from an Orderbook message. Also converts values to other types if specified.
                 * @param message Orderbook
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.Orderbook, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Orderbook to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Represents a Query */
            class Query extends $protobuf.rpc.Service {

                /**
                 * Constructs a new Query service.
                 * @param rpcImpl RPC implementation
                 * @param [requestDelimited=false] Whether requests are length-delimited
                 * @param [responseDelimited=false] Whether responses are length-delimited
                 */
                constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

                /**
                 * Calls QueryExchangeParams.
                 * @param request QueryExchangeParamsRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryExchangeParamsResponse
                 */
                public queryExchangeParams(request: injective.exchange.v1beta1.IQueryExchangeParamsRequest, callback: injective.exchange.v1beta1.Query.QueryExchangeParamsCallback): void;

                /**
                 * Calls QueryExchangeParams.
                 * @param request QueryExchangeParamsRequest message or plain object
                 * @returns Promise
                 */
                public queryExchangeParams(request: injective.exchange.v1beta1.IQueryExchangeParamsRequest): Promise<injective.exchange.v1beta1.QueryExchangeParamsResponse>;

                /**
                 * Calls SubaccountDeposits.
                 * @param request QuerySubaccountDepositsRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QuerySubaccountDepositsResponse
                 */
                public subaccountDeposits(request: injective.exchange.v1beta1.IQuerySubaccountDepositsRequest, callback: injective.exchange.v1beta1.Query.SubaccountDepositsCallback): void;

                /**
                 * Calls SubaccountDeposits.
                 * @param request QuerySubaccountDepositsRequest message or plain object
                 * @returns Promise
                 */
                public subaccountDeposits(request: injective.exchange.v1beta1.IQuerySubaccountDepositsRequest): Promise<injective.exchange.v1beta1.QuerySubaccountDepositsResponse>;

                /**
                 * Calls SubaccountDeposit.
                 * @param request QuerySubaccountDepositRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QuerySubaccountDepositResponse
                 */
                public subaccountDeposit(request: injective.exchange.v1beta1.IQuerySubaccountDepositRequest, callback: injective.exchange.v1beta1.Query.SubaccountDepositCallback): void;

                /**
                 * Calls SubaccountDeposit.
                 * @param request QuerySubaccountDepositRequest message or plain object
                 * @returns Promise
                 */
                public subaccountDeposit(request: injective.exchange.v1beta1.IQuerySubaccountDepositRequest): Promise<injective.exchange.v1beta1.QuerySubaccountDepositResponse>;

                /**
                 * Calls ExchangeBalances.
                 * @param request QueryExchangeBalancesRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryExchangeBalancesResponse
                 */
                public exchangeBalances(request: injective.exchange.v1beta1.IQueryExchangeBalancesRequest, callback: injective.exchange.v1beta1.Query.ExchangeBalancesCallback): void;

                /**
                 * Calls ExchangeBalances.
                 * @param request QueryExchangeBalancesRequest message or plain object
                 * @returns Promise
                 */
                public exchangeBalances(request: injective.exchange.v1beta1.IQueryExchangeBalancesRequest): Promise<injective.exchange.v1beta1.QueryExchangeBalancesResponse>;

                /**
                 * Calls AggregateVolume.
                 * @param request QueryAggregateVolumeRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryAggregateVolumeResponse
                 */
                public aggregateVolume(request: injective.exchange.v1beta1.IQueryAggregateVolumeRequest, callback: injective.exchange.v1beta1.Query.AggregateVolumeCallback): void;

                /**
                 * Calls AggregateVolume.
                 * @param request QueryAggregateVolumeRequest message or plain object
                 * @returns Promise
                 */
                public aggregateVolume(request: injective.exchange.v1beta1.IQueryAggregateVolumeRequest): Promise<injective.exchange.v1beta1.QueryAggregateVolumeResponse>;

                /**
                 * Calls AggregateVolumes.
                 * @param request QueryAggregateVolumesRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryAggregateVolumesResponse
                 */
                public aggregateVolumes(request: injective.exchange.v1beta1.IQueryAggregateVolumesRequest, callback: injective.exchange.v1beta1.Query.AggregateVolumesCallback): void;

                /**
                 * Calls AggregateVolumes.
                 * @param request QueryAggregateVolumesRequest message or plain object
                 * @returns Promise
                 */
                public aggregateVolumes(request: injective.exchange.v1beta1.IQueryAggregateVolumesRequest): Promise<injective.exchange.v1beta1.QueryAggregateVolumesResponse>;

                /**
                 * Calls AggregateMarketVolume.
                 * @param request QueryAggregateMarketVolumeRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryAggregateMarketVolumeResponse
                 */
                public aggregateMarketVolume(request: injective.exchange.v1beta1.IQueryAggregateMarketVolumeRequest, callback: injective.exchange.v1beta1.Query.AggregateMarketVolumeCallback): void;

                /**
                 * Calls AggregateMarketVolume.
                 * @param request QueryAggregateMarketVolumeRequest message or plain object
                 * @returns Promise
                 */
                public aggregateMarketVolume(request: injective.exchange.v1beta1.IQueryAggregateMarketVolumeRequest): Promise<injective.exchange.v1beta1.QueryAggregateMarketVolumeResponse>;

                /**
                 * Calls AggregateMarketVolumes.
                 * @param request QueryAggregateMarketVolumesRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryAggregateMarketVolumesResponse
                 */
                public aggregateMarketVolumes(request: injective.exchange.v1beta1.IQueryAggregateMarketVolumesRequest, callback: injective.exchange.v1beta1.Query.AggregateMarketVolumesCallback): void;

                /**
                 * Calls AggregateMarketVolumes.
                 * @param request QueryAggregateMarketVolumesRequest message or plain object
                 * @returns Promise
                 */
                public aggregateMarketVolumes(request: injective.exchange.v1beta1.IQueryAggregateMarketVolumesRequest): Promise<injective.exchange.v1beta1.QueryAggregateMarketVolumesResponse>;

                /**
                 * Calls DenomDecimal.
                 * @param request QueryDenomDecimalRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryDenomDecimalResponse
                 */
                public denomDecimal(request: injective.exchange.v1beta1.IQueryDenomDecimalRequest, callback: injective.exchange.v1beta1.Query.DenomDecimalCallback): void;

                /**
                 * Calls DenomDecimal.
                 * @param request QueryDenomDecimalRequest message or plain object
                 * @returns Promise
                 */
                public denomDecimal(request: injective.exchange.v1beta1.IQueryDenomDecimalRequest): Promise<injective.exchange.v1beta1.QueryDenomDecimalResponse>;

                /**
                 * Calls DenomDecimals.
                 * @param request QueryDenomDecimalsRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryDenomDecimalsResponse
                 */
                public denomDecimals(request: injective.exchange.v1beta1.IQueryDenomDecimalsRequest, callback: injective.exchange.v1beta1.Query.DenomDecimalsCallback): void;

                /**
                 * Calls DenomDecimals.
                 * @param request QueryDenomDecimalsRequest message or plain object
                 * @returns Promise
                 */
                public denomDecimals(request: injective.exchange.v1beta1.IQueryDenomDecimalsRequest): Promise<injective.exchange.v1beta1.QueryDenomDecimalsResponse>;

                /**
                 * Calls SpotMarkets.
                 * @param request QuerySpotMarketsRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QuerySpotMarketsResponse
                 */
                public spotMarkets(request: injective.exchange.v1beta1.IQuerySpotMarketsRequest, callback: injective.exchange.v1beta1.Query.SpotMarketsCallback): void;

                /**
                 * Calls SpotMarkets.
                 * @param request QuerySpotMarketsRequest message or plain object
                 * @returns Promise
                 */
                public spotMarkets(request: injective.exchange.v1beta1.IQuerySpotMarketsRequest): Promise<injective.exchange.v1beta1.QuerySpotMarketsResponse>;

                /**
                 * Calls SpotMarket.
                 * @param request QuerySpotMarketRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QuerySpotMarketResponse
                 */
                public spotMarket(request: injective.exchange.v1beta1.IQuerySpotMarketRequest, callback: injective.exchange.v1beta1.Query.SpotMarketCallback): void;

                /**
                 * Calls SpotMarket.
                 * @param request QuerySpotMarketRequest message or plain object
                 * @returns Promise
                 */
                public spotMarket(request: injective.exchange.v1beta1.IQuerySpotMarketRequest): Promise<injective.exchange.v1beta1.QuerySpotMarketResponse>;

                /**
                 * Calls FullSpotMarkets.
                 * @param request QueryFullSpotMarketsRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryFullSpotMarketsResponse
                 */
                public fullSpotMarkets(request: injective.exchange.v1beta1.IQueryFullSpotMarketsRequest, callback: injective.exchange.v1beta1.Query.FullSpotMarketsCallback): void;

                /**
                 * Calls FullSpotMarkets.
                 * @param request QueryFullSpotMarketsRequest message or plain object
                 * @returns Promise
                 */
                public fullSpotMarkets(request: injective.exchange.v1beta1.IQueryFullSpotMarketsRequest): Promise<injective.exchange.v1beta1.QueryFullSpotMarketsResponse>;

                /**
                 * Calls FullSpotMarket.
                 * @param request QueryFullSpotMarketRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryFullSpotMarketResponse
                 */
                public fullSpotMarket(request: injective.exchange.v1beta1.IQueryFullSpotMarketRequest, callback: injective.exchange.v1beta1.Query.FullSpotMarketCallback): void;

                /**
                 * Calls FullSpotMarket.
                 * @param request QueryFullSpotMarketRequest message or plain object
                 * @returns Promise
                 */
                public fullSpotMarket(request: injective.exchange.v1beta1.IQueryFullSpotMarketRequest): Promise<injective.exchange.v1beta1.QueryFullSpotMarketResponse>;

                /**
                 * Calls SpotOrderbook.
                 * @param request QuerySpotOrderbookRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QuerySpotOrderbookResponse
                 */
                public spotOrderbook(request: injective.exchange.v1beta1.IQuerySpotOrderbookRequest, callback: injective.exchange.v1beta1.Query.SpotOrderbookCallback): void;

                /**
                 * Calls SpotOrderbook.
                 * @param request QuerySpotOrderbookRequest message or plain object
                 * @returns Promise
                 */
                public spotOrderbook(request: injective.exchange.v1beta1.IQuerySpotOrderbookRequest): Promise<injective.exchange.v1beta1.QuerySpotOrderbookResponse>;

                /**
                 * Calls TraderSpotOrders.
                 * @param request QueryTraderSpotOrdersRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryTraderSpotOrdersResponse
                 */
                public traderSpotOrders(request: injective.exchange.v1beta1.IQueryTraderSpotOrdersRequest, callback: injective.exchange.v1beta1.Query.TraderSpotOrdersCallback): void;

                /**
                 * Calls TraderSpotOrders.
                 * @param request QueryTraderSpotOrdersRequest message or plain object
                 * @returns Promise
                 */
                public traderSpotOrders(request: injective.exchange.v1beta1.IQueryTraderSpotOrdersRequest): Promise<injective.exchange.v1beta1.QueryTraderSpotOrdersResponse>;

                /**
                 * Calls AccountAddressSpotOrders.
                 * @param request QueryAccountAddressSpotOrdersRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryAccountAddressSpotOrdersResponse
                 */
                public accountAddressSpotOrders(request: injective.exchange.v1beta1.IQueryAccountAddressSpotOrdersRequest, callback: injective.exchange.v1beta1.Query.AccountAddressSpotOrdersCallback): void;

                /**
                 * Calls AccountAddressSpotOrders.
                 * @param request QueryAccountAddressSpotOrdersRequest message or plain object
                 * @returns Promise
                 */
                public accountAddressSpotOrders(request: injective.exchange.v1beta1.IQueryAccountAddressSpotOrdersRequest): Promise<injective.exchange.v1beta1.QueryAccountAddressSpotOrdersResponse>;

                /**
                 * Calls SpotOrdersByHashes.
                 * @param request QuerySpotOrdersByHashesRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QuerySpotOrdersByHashesResponse
                 */
                public spotOrdersByHashes(request: injective.exchange.v1beta1.IQuerySpotOrdersByHashesRequest, callback: injective.exchange.v1beta1.Query.SpotOrdersByHashesCallback): void;

                /**
                 * Calls SpotOrdersByHashes.
                 * @param request QuerySpotOrdersByHashesRequest message or plain object
                 * @returns Promise
                 */
                public spotOrdersByHashes(request: injective.exchange.v1beta1.IQuerySpotOrdersByHashesRequest): Promise<injective.exchange.v1beta1.QuerySpotOrdersByHashesResponse>;

                /**
                 * Calls SubaccountOrders.
                 * @param request QuerySubaccountOrdersRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QuerySubaccountOrdersResponse
                 */
                public subaccountOrders(request: injective.exchange.v1beta1.IQuerySubaccountOrdersRequest, callback: injective.exchange.v1beta1.Query.SubaccountOrdersCallback): void;

                /**
                 * Calls SubaccountOrders.
                 * @param request QuerySubaccountOrdersRequest message or plain object
                 * @returns Promise
                 */
                public subaccountOrders(request: injective.exchange.v1beta1.IQuerySubaccountOrdersRequest): Promise<injective.exchange.v1beta1.QuerySubaccountOrdersResponse>;

                /**
                 * Calls TraderSpotTransientOrders.
                 * @param request QueryTraderSpotOrdersRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryTraderSpotOrdersResponse
                 */
                public traderSpotTransientOrders(request: injective.exchange.v1beta1.IQueryTraderSpotOrdersRequest, callback: injective.exchange.v1beta1.Query.TraderSpotTransientOrdersCallback): void;

                /**
                 * Calls TraderSpotTransientOrders.
                 * @param request QueryTraderSpotOrdersRequest message or plain object
                 * @returns Promise
                 */
                public traderSpotTransientOrders(request: injective.exchange.v1beta1.IQueryTraderSpotOrdersRequest): Promise<injective.exchange.v1beta1.QueryTraderSpotOrdersResponse>;

                /**
                 * Calls SpotMidPriceAndTOB.
                 * @param request QuerySpotMidPriceAndTOBRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QuerySpotMidPriceAndTOBResponse
                 */
                public spotMidPriceAndTOB(request: injective.exchange.v1beta1.IQuerySpotMidPriceAndTOBRequest, callback: injective.exchange.v1beta1.Query.SpotMidPriceAndTOBCallback): void;

                /**
                 * Calls SpotMidPriceAndTOB.
                 * @param request QuerySpotMidPriceAndTOBRequest message or plain object
                 * @returns Promise
                 */
                public spotMidPriceAndTOB(request: injective.exchange.v1beta1.IQuerySpotMidPriceAndTOBRequest): Promise<injective.exchange.v1beta1.QuerySpotMidPriceAndTOBResponse>;

                /**
                 * Calls DerivativeMidPriceAndTOB.
                 * @param request QueryDerivativeMidPriceAndTOBRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryDerivativeMidPriceAndTOBResponse
                 */
                public derivativeMidPriceAndTOB(request: injective.exchange.v1beta1.IQueryDerivativeMidPriceAndTOBRequest, callback: injective.exchange.v1beta1.Query.DerivativeMidPriceAndTOBCallback): void;

                /**
                 * Calls DerivativeMidPriceAndTOB.
                 * @param request QueryDerivativeMidPriceAndTOBRequest message or plain object
                 * @returns Promise
                 */
                public derivativeMidPriceAndTOB(request: injective.exchange.v1beta1.IQueryDerivativeMidPriceAndTOBRequest): Promise<injective.exchange.v1beta1.QueryDerivativeMidPriceAndTOBResponse>;

                /**
                 * Calls DerivativeOrderbook.
                 * @param request QueryDerivativeOrderbookRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryDerivativeOrderbookResponse
                 */
                public derivativeOrderbook(request: injective.exchange.v1beta1.IQueryDerivativeOrderbookRequest, callback: injective.exchange.v1beta1.Query.DerivativeOrderbookCallback): void;

                /**
                 * Calls DerivativeOrderbook.
                 * @param request QueryDerivativeOrderbookRequest message or plain object
                 * @returns Promise
                 */
                public derivativeOrderbook(request: injective.exchange.v1beta1.IQueryDerivativeOrderbookRequest): Promise<injective.exchange.v1beta1.QueryDerivativeOrderbookResponse>;

                /**
                 * Calls TraderDerivativeOrders.
                 * @param request QueryTraderDerivativeOrdersRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryTraderDerivativeOrdersResponse
                 */
                public traderDerivativeOrders(request: injective.exchange.v1beta1.IQueryTraderDerivativeOrdersRequest, callback: injective.exchange.v1beta1.Query.TraderDerivativeOrdersCallback): void;

                /**
                 * Calls TraderDerivativeOrders.
                 * @param request QueryTraderDerivativeOrdersRequest message or plain object
                 * @returns Promise
                 */
                public traderDerivativeOrders(request: injective.exchange.v1beta1.IQueryTraderDerivativeOrdersRequest): Promise<injective.exchange.v1beta1.QueryTraderDerivativeOrdersResponse>;

                /**
                 * Calls AccountAddressDerivativeOrders.
                 * @param request QueryAccountAddressDerivativeOrdersRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryAccountAddressDerivativeOrdersResponse
                 */
                public accountAddressDerivativeOrders(request: injective.exchange.v1beta1.IQueryAccountAddressDerivativeOrdersRequest, callback: injective.exchange.v1beta1.Query.AccountAddressDerivativeOrdersCallback): void;

                /**
                 * Calls AccountAddressDerivativeOrders.
                 * @param request QueryAccountAddressDerivativeOrdersRequest message or plain object
                 * @returns Promise
                 */
                public accountAddressDerivativeOrders(request: injective.exchange.v1beta1.IQueryAccountAddressDerivativeOrdersRequest): Promise<injective.exchange.v1beta1.QueryAccountAddressDerivativeOrdersResponse>;

                /**
                 * Calls DerivativeOrdersByHashes.
                 * @param request QueryDerivativeOrdersByHashesRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryDerivativeOrdersByHashesResponse
                 */
                public derivativeOrdersByHashes(request: injective.exchange.v1beta1.IQueryDerivativeOrdersByHashesRequest, callback: injective.exchange.v1beta1.Query.DerivativeOrdersByHashesCallback): void;

                /**
                 * Calls DerivativeOrdersByHashes.
                 * @param request QueryDerivativeOrdersByHashesRequest message or plain object
                 * @returns Promise
                 */
                public derivativeOrdersByHashes(request: injective.exchange.v1beta1.IQueryDerivativeOrdersByHashesRequest): Promise<injective.exchange.v1beta1.QueryDerivativeOrdersByHashesResponse>;

                /**
                 * Calls TraderDerivativeTransientOrders.
                 * @param request QueryTraderDerivativeOrdersRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryTraderDerivativeOrdersResponse
                 */
                public traderDerivativeTransientOrders(request: injective.exchange.v1beta1.IQueryTraderDerivativeOrdersRequest, callback: injective.exchange.v1beta1.Query.TraderDerivativeTransientOrdersCallback): void;

                /**
                 * Calls TraderDerivativeTransientOrders.
                 * @param request QueryTraderDerivativeOrdersRequest message or plain object
                 * @returns Promise
                 */
                public traderDerivativeTransientOrders(request: injective.exchange.v1beta1.IQueryTraderDerivativeOrdersRequest): Promise<injective.exchange.v1beta1.QueryTraderDerivativeOrdersResponse>;

                /**
                 * Calls DerivativeMarkets.
                 * @param request QueryDerivativeMarketsRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryDerivativeMarketsResponse
                 */
                public derivativeMarkets(request: injective.exchange.v1beta1.IQueryDerivativeMarketsRequest, callback: injective.exchange.v1beta1.Query.DerivativeMarketsCallback): void;

                /**
                 * Calls DerivativeMarkets.
                 * @param request QueryDerivativeMarketsRequest message or plain object
                 * @returns Promise
                 */
                public derivativeMarkets(request: injective.exchange.v1beta1.IQueryDerivativeMarketsRequest): Promise<injective.exchange.v1beta1.QueryDerivativeMarketsResponse>;

                /**
                 * Calls DerivativeMarket.
                 * @param request QueryDerivativeMarketRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryDerivativeMarketResponse
                 */
                public derivativeMarket(request: injective.exchange.v1beta1.IQueryDerivativeMarketRequest, callback: injective.exchange.v1beta1.Query.DerivativeMarketCallback): void;

                /**
                 * Calls DerivativeMarket.
                 * @param request QueryDerivativeMarketRequest message or plain object
                 * @returns Promise
                 */
                public derivativeMarket(request: injective.exchange.v1beta1.IQueryDerivativeMarketRequest): Promise<injective.exchange.v1beta1.QueryDerivativeMarketResponse>;

                /**
                 * Calls DerivativeMarketAddress.
                 * @param request QueryDerivativeMarketAddressRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryDerivativeMarketAddressResponse
                 */
                public derivativeMarketAddress(request: injective.exchange.v1beta1.IQueryDerivativeMarketAddressRequest, callback: injective.exchange.v1beta1.Query.DerivativeMarketAddressCallback): void;

                /**
                 * Calls DerivativeMarketAddress.
                 * @param request QueryDerivativeMarketAddressRequest message or plain object
                 * @returns Promise
                 */
                public derivativeMarketAddress(request: injective.exchange.v1beta1.IQueryDerivativeMarketAddressRequest): Promise<injective.exchange.v1beta1.QueryDerivativeMarketAddressResponse>;

                /**
                 * Calls SubaccountTradeNonce.
                 * @param request QuerySubaccountTradeNonceRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QuerySubaccountTradeNonceResponse
                 */
                public subaccountTradeNonce(request: injective.exchange.v1beta1.IQuerySubaccountTradeNonceRequest, callback: injective.exchange.v1beta1.Query.SubaccountTradeNonceCallback): void;

                /**
                 * Calls SubaccountTradeNonce.
                 * @param request QuerySubaccountTradeNonceRequest message or plain object
                 * @returns Promise
                 */
                public subaccountTradeNonce(request: injective.exchange.v1beta1.IQuerySubaccountTradeNonceRequest): Promise<injective.exchange.v1beta1.QuerySubaccountTradeNonceResponse>;

                /**
                 * Calls ExchangeModuleState.
                 * @param request QueryModuleStateRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryModuleStateResponse
                 */
                public exchangeModuleState(request: injective.exchange.v1beta1.IQueryModuleStateRequest, callback: injective.exchange.v1beta1.Query.ExchangeModuleStateCallback): void;

                /**
                 * Calls ExchangeModuleState.
                 * @param request QueryModuleStateRequest message or plain object
                 * @returns Promise
                 */
                public exchangeModuleState(request: injective.exchange.v1beta1.IQueryModuleStateRequest): Promise<injective.exchange.v1beta1.QueryModuleStateResponse>;

                /**
                 * Calls Positions.
                 * @param request QueryPositionsRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryPositionsResponse
                 */
                public positions(request: injective.exchange.v1beta1.IQueryPositionsRequest, callback: injective.exchange.v1beta1.Query.PositionsCallback): void;

                /**
                 * Calls Positions.
                 * @param request QueryPositionsRequest message or plain object
                 * @returns Promise
                 */
                public positions(request: injective.exchange.v1beta1.IQueryPositionsRequest): Promise<injective.exchange.v1beta1.QueryPositionsResponse>;

                /**
                 * Calls SubaccountPositions.
                 * @param request QuerySubaccountPositionsRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QuerySubaccountPositionsResponse
                 */
                public subaccountPositions(request: injective.exchange.v1beta1.IQuerySubaccountPositionsRequest, callback: injective.exchange.v1beta1.Query.SubaccountPositionsCallback): void;

                /**
                 * Calls SubaccountPositions.
                 * @param request QuerySubaccountPositionsRequest message or plain object
                 * @returns Promise
                 */
                public subaccountPositions(request: injective.exchange.v1beta1.IQuerySubaccountPositionsRequest): Promise<injective.exchange.v1beta1.QuerySubaccountPositionsResponse>;

                /**
                 * Calls SubaccountPositionInMarket.
                 * @param request QuerySubaccountPositionInMarketRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QuerySubaccountPositionInMarketResponse
                 */
                public subaccountPositionInMarket(request: injective.exchange.v1beta1.IQuerySubaccountPositionInMarketRequest, callback: injective.exchange.v1beta1.Query.SubaccountPositionInMarketCallback): void;

                /**
                 * Calls SubaccountPositionInMarket.
                 * @param request QuerySubaccountPositionInMarketRequest message or plain object
                 * @returns Promise
                 */
                public subaccountPositionInMarket(request: injective.exchange.v1beta1.IQuerySubaccountPositionInMarketRequest): Promise<injective.exchange.v1beta1.QuerySubaccountPositionInMarketResponse>;

                /**
                 * Calls SubaccountEffectivePositionInMarket.
                 * @param request QuerySubaccountEffectivePositionInMarketRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QuerySubaccountEffectivePositionInMarketResponse
                 */
                public subaccountEffectivePositionInMarket(request: injective.exchange.v1beta1.IQuerySubaccountEffectivePositionInMarketRequest, callback: injective.exchange.v1beta1.Query.SubaccountEffectivePositionInMarketCallback): void;

                /**
                 * Calls SubaccountEffectivePositionInMarket.
                 * @param request QuerySubaccountEffectivePositionInMarketRequest message or plain object
                 * @returns Promise
                 */
                public subaccountEffectivePositionInMarket(request: injective.exchange.v1beta1.IQuerySubaccountEffectivePositionInMarketRequest): Promise<injective.exchange.v1beta1.QuerySubaccountEffectivePositionInMarketResponse>;

                /**
                 * Calls PerpetualMarketInfo.
                 * @param request QueryPerpetualMarketInfoRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryPerpetualMarketInfoResponse
                 */
                public perpetualMarketInfo(request: injective.exchange.v1beta1.IQueryPerpetualMarketInfoRequest, callback: injective.exchange.v1beta1.Query.PerpetualMarketInfoCallback): void;

                /**
                 * Calls PerpetualMarketInfo.
                 * @param request QueryPerpetualMarketInfoRequest message or plain object
                 * @returns Promise
                 */
                public perpetualMarketInfo(request: injective.exchange.v1beta1.IQueryPerpetualMarketInfoRequest): Promise<injective.exchange.v1beta1.QueryPerpetualMarketInfoResponse>;

                /**
                 * Calls ExpiryFuturesMarketInfo.
                 * @param request QueryExpiryFuturesMarketInfoRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryExpiryFuturesMarketInfoResponse
                 */
                public expiryFuturesMarketInfo(request: injective.exchange.v1beta1.IQueryExpiryFuturesMarketInfoRequest, callback: injective.exchange.v1beta1.Query.ExpiryFuturesMarketInfoCallback): void;

                /**
                 * Calls ExpiryFuturesMarketInfo.
                 * @param request QueryExpiryFuturesMarketInfoRequest message or plain object
                 * @returns Promise
                 */
                public expiryFuturesMarketInfo(request: injective.exchange.v1beta1.IQueryExpiryFuturesMarketInfoRequest): Promise<injective.exchange.v1beta1.QueryExpiryFuturesMarketInfoResponse>;

                /**
                 * Calls PerpetualMarketFunding.
                 * @param request QueryPerpetualMarketFundingRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryPerpetualMarketFundingResponse
                 */
                public perpetualMarketFunding(request: injective.exchange.v1beta1.IQueryPerpetualMarketFundingRequest, callback: injective.exchange.v1beta1.Query.PerpetualMarketFundingCallback): void;

                /**
                 * Calls PerpetualMarketFunding.
                 * @param request QueryPerpetualMarketFundingRequest message or plain object
                 * @returns Promise
                 */
                public perpetualMarketFunding(request: injective.exchange.v1beta1.IQueryPerpetualMarketFundingRequest): Promise<injective.exchange.v1beta1.QueryPerpetualMarketFundingResponse>;

                /**
                 * Calls SubaccountOrderMetadata.
                 * @param request QuerySubaccountOrderMetadataRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QuerySubaccountOrderMetadataResponse
                 */
                public subaccountOrderMetadata(request: injective.exchange.v1beta1.IQuerySubaccountOrderMetadataRequest, callback: injective.exchange.v1beta1.Query.SubaccountOrderMetadataCallback): void;

                /**
                 * Calls SubaccountOrderMetadata.
                 * @param request QuerySubaccountOrderMetadataRequest message or plain object
                 * @returns Promise
                 */
                public subaccountOrderMetadata(request: injective.exchange.v1beta1.IQuerySubaccountOrderMetadataRequest): Promise<injective.exchange.v1beta1.QuerySubaccountOrderMetadataResponse>;

                /**
                 * Calls TradeRewardPoints.
                 * @param request QueryTradeRewardPointsRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryTradeRewardPointsResponse
                 */
                public tradeRewardPoints(request: injective.exchange.v1beta1.IQueryTradeRewardPointsRequest, callback: injective.exchange.v1beta1.Query.TradeRewardPointsCallback): void;

                /**
                 * Calls TradeRewardPoints.
                 * @param request QueryTradeRewardPointsRequest message or plain object
                 * @returns Promise
                 */
                public tradeRewardPoints(request: injective.exchange.v1beta1.IQueryTradeRewardPointsRequest): Promise<injective.exchange.v1beta1.QueryTradeRewardPointsResponse>;

                /**
                 * Calls PendingTradeRewardPoints.
                 * @param request QueryTradeRewardPointsRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryTradeRewardPointsResponse
                 */
                public pendingTradeRewardPoints(request: injective.exchange.v1beta1.IQueryTradeRewardPointsRequest, callback: injective.exchange.v1beta1.Query.PendingTradeRewardPointsCallback): void;

                /**
                 * Calls PendingTradeRewardPoints.
                 * @param request QueryTradeRewardPointsRequest message or plain object
                 * @returns Promise
                 */
                public pendingTradeRewardPoints(request: injective.exchange.v1beta1.IQueryTradeRewardPointsRequest): Promise<injective.exchange.v1beta1.QueryTradeRewardPointsResponse>;

                /**
                 * Calls TradeRewardCampaign.
                 * @param request QueryTradeRewardCampaignRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryTradeRewardCampaignResponse
                 */
                public tradeRewardCampaign(request: injective.exchange.v1beta1.IQueryTradeRewardCampaignRequest, callback: injective.exchange.v1beta1.Query.TradeRewardCampaignCallback): void;

                /**
                 * Calls TradeRewardCampaign.
                 * @param request QueryTradeRewardCampaignRequest message or plain object
                 * @returns Promise
                 */
                public tradeRewardCampaign(request: injective.exchange.v1beta1.IQueryTradeRewardCampaignRequest): Promise<injective.exchange.v1beta1.QueryTradeRewardCampaignResponse>;

                /**
                 * Calls FeeDiscountAccountInfo.
                 * @param request QueryFeeDiscountAccountInfoRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryFeeDiscountAccountInfoResponse
                 */
                public feeDiscountAccountInfo(request: injective.exchange.v1beta1.IQueryFeeDiscountAccountInfoRequest, callback: injective.exchange.v1beta1.Query.FeeDiscountAccountInfoCallback): void;

                /**
                 * Calls FeeDiscountAccountInfo.
                 * @param request QueryFeeDiscountAccountInfoRequest message or plain object
                 * @returns Promise
                 */
                public feeDiscountAccountInfo(request: injective.exchange.v1beta1.IQueryFeeDiscountAccountInfoRequest): Promise<injective.exchange.v1beta1.QueryFeeDiscountAccountInfoResponse>;

                /**
                 * Calls FeeDiscountSchedule.
                 * @param request QueryFeeDiscountScheduleRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryFeeDiscountScheduleResponse
                 */
                public feeDiscountSchedule(request: injective.exchange.v1beta1.IQueryFeeDiscountScheduleRequest, callback: injective.exchange.v1beta1.Query.FeeDiscountScheduleCallback): void;

                /**
                 * Calls FeeDiscountSchedule.
                 * @param request QueryFeeDiscountScheduleRequest message or plain object
                 * @returns Promise
                 */
                public feeDiscountSchedule(request: injective.exchange.v1beta1.IQueryFeeDiscountScheduleRequest): Promise<injective.exchange.v1beta1.QueryFeeDiscountScheduleResponse>;

                /**
                 * Calls BalanceMismatches.
                 * @param request QueryBalanceMismatchesRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryBalanceMismatchesResponse
                 */
                public balanceMismatches(request: injective.exchange.v1beta1.IQueryBalanceMismatchesRequest, callback: injective.exchange.v1beta1.Query.BalanceMismatchesCallback): void;

                /**
                 * Calls BalanceMismatches.
                 * @param request QueryBalanceMismatchesRequest message or plain object
                 * @returns Promise
                 */
                public balanceMismatches(request: injective.exchange.v1beta1.IQueryBalanceMismatchesRequest): Promise<injective.exchange.v1beta1.QueryBalanceMismatchesResponse>;

                /**
                 * Calls BalanceWithBalanceHolds.
                 * @param request QueryBalanceWithBalanceHoldsRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryBalanceWithBalanceHoldsResponse
                 */
                public balanceWithBalanceHolds(request: injective.exchange.v1beta1.IQueryBalanceWithBalanceHoldsRequest, callback: injective.exchange.v1beta1.Query.BalanceWithBalanceHoldsCallback): void;

                /**
                 * Calls BalanceWithBalanceHolds.
                 * @param request QueryBalanceWithBalanceHoldsRequest message or plain object
                 * @returns Promise
                 */
                public balanceWithBalanceHolds(request: injective.exchange.v1beta1.IQueryBalanceWithBalanceHoldsRequest): Promise<injective.exchange.v1beta1.QueryBalanceWithBalanceHoldsResponse>;

                /**
                 * Calls FeeDiscountTierStatistics.
                 * @param request QueryFeeDiscountTierStatisticsRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryFeeDiscountTierStatisticsResponse
                 */
                public feeDiscountTierStatistics(request: injective.exchange.v1beta1.IQueryFeeDiscountTierStatisticsRequest, callback: injective.exchange.v1beta1.Query.FeeDiscountTierStatisticsCallback): void;

                /**
                 * Calls FeeDiscountTierStatistics.
                 * @param request QueryFeeDiscountTierStatisticsRequest message or plain object
                 * @returns Promise
                 */
                public feeDiscountTierStatistics(request: injective.exchange.v1beta1.IQueryFeeDiscountTierStatisticsRequest): Promise<injective.exchange.v1beta1.QueryFeeDiscountTierStatisticsResponse>;

                /**
                 * Calls MitoVaultInfos.
                 * @param request MitoVaultInfosRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and MitoVaultInfosResponse
                 */
                public mitoVaultInfos(request: injective.exchange.v1beta1.IMitoVaultInfosRequest, callback: injective.exchange.v1beta1.Query.MitoVaultInfosCallback): void;

                /**
                 * Calls MitoVaultInfos.
                 * @param request MitoVaultInfosRequest message or plain object
                 * @returns Promise
                 */
                public mitoVaultInfos(request: injective.exchange.v1beta1.IMitoVaultInfosRequest): Promise<injective.exchange.v1beta1.MitoVaultInfosResponse>;

                /**
                 * Calls QueryMarketIDFromVault.
                 * @param request QueryMarketIDFromVaultRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryMarketIDFromVaultResponse
                 */
                public queryMarketIDFromVault(request: injective.exchange.v1beta1.IQueryMarketIDFromVaultRequest, callback: injective.exchange.v1beta1.Query.QueryMarketIDFromVaultCallback): void;

                /**
                 * Calls QueryMarketIDFromVault.
                 * @param request QueryMarketIDFromVaultRequest message or plain object
                 * @returns Promise
                 */
                public queryMarketIDFromVault(request: injective.exchange.v1beta1.IQueryMarketIDFromVaultRequest): Promise<injective.exchange.v1beta1.QueryMarketIDFromVaultResponse>;

                /**
                 * Calls HistoricalTradeRecords.
                 * @param request QueryHistoricalTradeRecordsRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryHistoricalTradeRecordsResponse
                 */
                public historicalTradeRecords(request: injective.exchange.v1beta1.IQueryHistoricalTradeRecordsRequest, callback: injective.exchange.v1beta1.Query.HistoricalTradeRecordsCallback): void;

                /**
                 * Calls HistoricalTradeRecords.
                 * @param request QueryHistoricalTradeRecordsRequest message or plain object
                 * @returns Promise
                 */
                public historicalTradeRecords(request: injective.exchange.v1beta1.IQueryHistoricalTradeRecordsRequest): Promise<injective.exchange.v1beta1.QueryHistoricalTradeRecordsResponse>;

                /**
                 * Calls IsOptedOutOfRewards.
                 * @param request QueryIsOptedOutOfRewardsRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryIsOptedOutOfRewardsResponse
                 */
                public isOptedOutOfRewards(request: injective.exchange.v1beta1.IQueryIsOptedOutOfRewardsRequest, callback: injective.exchange.v1beta1.Query.IsOptedOutOfRewardsCallback): void;

                /**
                 * Calls IsOptedOutOfRewards.
                 * @param request QueryIsOptedOutOfRewardsRequest message or plain object
                 * @returns Promise
                 */
                public isOptedOutOfRewards(request: injective.exchange.v1beta1.IQueryIsOptedOutOfRewardsRequest): Promise<injective.exchange.v1beta1.QueryIsOptedOutOfRewardsResponse>;

                /**
                 * Calls OptedOutOfRewardsAccounts.
                 * @param request QueryOptedOutOfRewardsAccountsRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryOptedOutOfRewardsAccountsResponse
                 */
                public optedOutOfRewardsAccounts(request: injective.exchange.v1beta1.IQueryOptedOutOfRewardsAccountsRequest, callback: injective.exchange.v1beta1.Query.OptedOutOfRewardsAccountsCallback): void;

                /**
                 * Calls OptedOutOfRewardsAccounts.
                 * @param request QueryOptedOutOfRewardsAccountsRequest message or plain object
                 * @returns Promise
                 */
                public optedOutOfRewardsAccounts(request: injective.exchange.v1beta1.IQueryOptedOutOfRewardsAccountsRequest): Promise<injective.exchange.v1beta1.QueryOptedOutOfRewardsAccountsResponse>;

                /**
                 * Calls MarketVolatility.
                 * @param request QueryMarketVolatilityRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryMarketVolatilityResponse
                 */
                public marketVolatility(request: injective.exchange.v1beta1.IQueryMarketVolatilityRequest, callback: injective.exchange.v1beta1.Query.MarketVolatilityCallback): void;

                /**
                 * Calls MarketVolatility.
                 * @param request QueryMarketVolatilityRequest message or plain object
                 * @returns Promise
                 */
                public marketVolatility(request: injective.exchange.v1beta1.IQueryMarketVolatilityRequest): Promise<injective.exchange.v1beta1.QueryMarketVolatilityResponse>;

                /**
                 * Calls BinaryOptionsMarkets.
                 * @param request QueryBinaryMarketsRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryBinaryMarketsResponse
                 */
                public binaryOptionsMarkets(request: injective.exchange.v1beta1.IQueryBinaryMarketsRequest, callback: injective.exchange.v1beta1.Query.BinaryOptionsMarketsCallback): void;

                /**
                 * Calls BinaryOptionsMarkets.
                 * @param request QueryBinaryMarketsRequest message or plain object
                 * @returns Promise
                 */
                public binaryOptionsMarkets(request: injective.exchange.v1beta1.IQueryBinaryMarketsRequest): Promise<injective.exchange.v1beta1.QueryBinaryMarketsResponse>;

                /**
                 * Calls TraderDerivativeConditionalOrders.
                 * @param request QueryTraderDerivativeConditionalOrdersRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryTraderDerivativeConditionalOrdersResponse
                 */
                public traderDerivativeConditionalOrders(request: injective.exchange.v1beta1.IQueryTraderDerivativeConditionalOrdersRequest, callback: injective.exchange.v1beta1.Query.TraderDerivativeConditionalOrdersCallback): void;

                /**
                 * Calls TraderDerivativeConditionalOrders.
                 * @param request QueryTraderDerivativeConditionalOrdersRequest message or plain object
                 * @returns Promise
                 */
                public traderDerivativeConditionalOrders(request: injective.exchange.v1beta1.IQueryTraderDerivativeConditionalOrdersRequest): Promise<injective.exchange.v1beta1.QueryTraderDerivativeConditionalOrdersResponse>;

                /**
                 * Calls MarketAtomicExecutionFeeMultiplier.
                 * @param request QueryMarketAtomicExecutionFeeMultiplierRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryMarketAtomicExecutionFeeMultiplierResponse
                 */
                public marketAtomicExecutionFeeMultiplier(request: injective.exchange.v1beta1.IQueryMarketAtomicExecutionFeeMultiplierRequest, callback: injective.exchange.v1beta1.Query.MarketAtomicExecutionFeeMultiplierCallback): void;

                /**
                 * Calls MarketAtomicExecutionFeeMultiplier.
                 * @param request QueryMarketAtomicExecutionFeeMultiplierRequest message or plain object
                 * @returns Promise
                 */
                public marketAtomicExecutionFeeMultiplier(request: injective.exchange.v1beta1.IQueryMarketAtomicExecutionFeeMultiplierRequest): Promise<injective.exchange.v1beta1.QueryMarketAtomicExecutionFeeMultiplierResponse>;
            }

            namespace Query {

                /**
                 * Callback as used by {@link injective.exchange.v1beta1.Query#queryExchangeParams}.
                 * @param error Error, if any
                 * @param [response] QueryExchangeParamsResponse
                 */
                type QueryExchangeParamsCallback = (error: (Error|null), response?: injective.exchange.v1beta1.QueryExchangeParamsResponse) => void;

                /**
                 * Callback as used by {@link injective.exchange.v1beta1.Query#subaccountDeposits}.
                 * @param error Error, if any
                 * @param [response] QuerySubaccountDepositsResponse
                 */
                type SubaccountDepositsCallback = (error: (Error|null), response?: injective.exchange.v1beta1.QuerySubaccountDepositsResponse) => void;

                /**
                 * Callback as used by {@link injective.exchange.v1beta1.Query#subaccountDeposit}.
                 * @param error Error, if any
                 * @param [response] QuerySubaccountDepositResponse
                 */
                type SubaccountDepositCallback = (error: (Error|null), response?: injective.exchange.v1beta1.QuerySubaccountDepositResponse) => void;

                /**
                 * Callback as used by {@link injective.exchange.v1beta1.Query#exchangeBalances}.
                 * @param error Error, if any
                 * @param [response] QueryExchangeBalancesResponse
                 */
                type ExchangeBalancesCallback = (error: (Error|null), response?: injective.exchange.v1beta1.QueryExchangeBalancesResponse) => void;

                /**
                 * Callback as used by {@link injective.exchange.v1beta1.Query#aggregateVolume}.
                 * @param error Error, if any
                 * @param [response] QueryAggregateVolumeResponse
                 */
                type AggregateVolumeCallback = (error: (Error|null), response?: injective.exchange.v1beta1.QueryAggregateVolumeResponse) => void;

                /**
                 * Callback as used by {@link injective.exchange.v1beta1.Query#aggregateVolumes}.
                 * @param error Error, if any
                 * @param [response] QueryAggregateVolumesResponse
                 */
                type AggregateVolumesCallback = (error: (Error|null), response?: injective.exchange.v1beta1.QueryAggregateVolumesResponse) => void;

                /**
                 * Callback as used by {@link injective.exchange.v1beta1.Query#aggregateMarketVolume}.
                 * @param error Error, if any
                 * @param [response] QueryAggregateMarketVolumeResponse
                 */
                type AggregateMarketVolumeCallback = (error: (Error|null), response?: injective.exchange.v1beta1.QueryAggregateMarketVolumeResponse) => void;

                /**
                 * Callback as used by {@link injective.exchange.v1beta1.Query#aggregateMarketVolumes}.
                 * @param error Error, if any
                 * @param [response] QueryAggregateMarketVolumesResponse
                 */
                type AggregateMarketVolumesCallback = (error: (Error|null), response?: injective.exchange.v1beta1.QueryAggregateMarketVolumesResponse) => void;

                /**
                 * Callback as used by {@link injective.exchange.v1beta1.Query#denomDecimal}.
                 * @param error Error, if any
                 * @param [response] QueryDenomDecimalResponse
                 */
                type DenomDecimalCallback = (error: (Error|null), response?: injective.exchange.v1beta1.QueryDenomDecimalResponse) => void;

                /**
                 * Callback as used by {@link injective.exchange.v1beta1.Query#denomDecimals}.
                 * @param error Error, if any
                 * @param [response] QueryDenomDecimalsResponse
                 */
                type DenomDecimalsCallback = (error: (Error|null), response?: injective.exchange.v1beta1.QueryDenomDecimalsResponse) => void;

                /**
                 * Callback as used by {@link injective.exchange.v1beta1.Query#spotMarkets}.
                 * @param error Error, if any
                 * @param [response] QuerySpotMarketsResponse
                 */
                type SpotMarketsCallback = (error: (Error|null), response?: injective.exchange.v1beta1.QuerySpotMarketsResponse) => void;

                /**
                 * Callback as used by {@link injective.exchange.v1beta1.Query#spotMarket}.
                 * @param error Error, if any
                 * @param [response] QuerySpotMarketResponse
                 */
                type SpotMarketCallback = (error: (Error|null), response?: injective.exchange.v1beta1.QuerySpotMarketResponse) => void;

                /**
                 * Callback as used by {@link injective.exchange.v1beta1.Query#fullSpotMarkets}.
                 * @param error Error, if any
                 * @param [response] QueryFullSpotMarketsResponse
                 */
                type FullSpotMarketsCallback = (error: (Error|null), response?: injective.exchange.v1beta1.QueryFullSpotMarketsResponse) => void;

                /**
                 * Callback as used by {@link injective.exchange.v1beta1.Query#fullSpotMarket}.
                 * @param error Error, if any
                 * @param [response] QueryFullSpotMarketResponse
                 */
                type FullSpotMarketCallback = (error: (Error|null), response?: injective.exchange.v1beta1.QueryFullSpotMarketResponse) => void;

                /**
                 * Callback as used by {@link injective.exchange.v1beta1.Query#spotOrderbook}.
                 * @param error Error, if any
                 * @param [response] QuerySpotOrderbookResponse
                 */
                type SpotOrderbookCallback = (error: (Error|null), response?: injective.exchange.v1beta1.QuerySpotOrderbookResponse) => void;

                /**
                 * Callback as used by {@link injective.exchange.v1beta1.Query#traderSpotOrders}.
                 * @param error Error, if any
                 * @param [response] QueryTraderSpotOrdersResponse
                 */
                type TraderSpotOrdersCallback = (error: (Error|null), response?: injective.exchange.v1beta1.QueryTraderSpotOrdersResponse) => void;

                /**
                 * Callback as used by {@link injective.exchange.v1beta1.Query#accountAddressSpotOrders}.
                 * @param error Error, if any
                 * @param [response] QueryAccountAddressSpotOrdersResponse
                 */
                type AccountAddressSpotOrdersCallback = (error: (Error|null), response?: injective.exchange.v1beta1.QueryAccountAddressSpotOrdersResponse) => void;

                /**
                 * Callback as used by {@link injective.exchange.v1beta1.Query#spotOrdersByHashes}.
                 * @param error Error, if any
                 * @param [response] QuerySpotOrdersByHashesResponse
                 */
                type SpotOrdersByHashesCallback = (error: (Error|null), response?: injective.exchange.v1beta1.QuerySpotOrdersByHashesResponse) => void;

                /**
                 * Callback as used by {@link injective.exchange.v1beta1.Query#subaccountOrders}.
                 * @param error Error, if any
                 * @param [response] QuerySubaccountOrdersResponse
                 */
                type SubaccountOrdersCallback = (error: (Error|null), response?: injective.exchange.v1beta1.QuerySubaccountOrdersResponse) => void;

                /**
                 * Callback as used by {@link injective.exchange.v1beta1.Query#traderSpotTransientOrders}.
                 * @param error Error, if any
                 * @param [response] QueryTraderSpotOrdersResponse
                 */
                type TraderSpotTransientOrdersCallback = (error: (Error|null), response?: injective.exchange.v1beta1.QueryTraderSpotOrdersResponse) => void;

                /**
                 * Callback as used by {@link injective.exchange.v1beta1.Query#spotMidPriceAndTOB}.
                 * @param error Error, if any
                 * @param [response] QuerySpotMidPriceAndTOBResponse
                 */
                type SpotMidPriceAndTOBCallback = (error: (Error|null), response?: injective.exchange.v1beta1.QuerySpotMidPriceAndTOBResponse) => void;

                /**
                 * Callback as used by {@link injective.exchange.v1beta1.Query#derivativeMidPriceAndTOB}.
                 * @param error Error, if any
                 * @param [response] QueryDerivativeMidPriceAndTOBResponse
                 */
                type DerivativeMidPriceAndTOBCallback = (error: (Error|null), response?: injective.exchange.v1beta1.QueryDerivativeMidPriceAndTOBResponse) => void;

                /**
                 * Callback as used by {@link injective.exchange.v1beta1.Query#derivativeOrderbook}.
                 * @param error Error, if any
                 * @param [response] QueryDerivativeOrderbookResponse
                 */
                type DerivativeOrderbookCallback = (error: (Error|null), response?: injective.exchange.v1beta1.QueryDerivativeOrderbookResponse) => void;

                /**
                 * Callback as used by {@link injective.exchange.v1beta1.Query#traderDerivativeOrders}.
                 * @param error Error, if any
                 * @param [response] QueryTraderDerivativeOrdersResponse
                 */
                type TraderDerivativeOrdersCallback = (error: (Error|null), response?: injective.exchange.v1beta1.QueryTraderDerivativeOrdersResponse) => void;

                /**
                 * Callback as used by {@link injective.exchange.v1beta1.Query#accountAddressDerivativeOrders}.
                 * @param error Error, if any
                 * @param [response] QueryAccountAddressDerivativeOrdersResponse
                 */
                type AccountAddressDerivativeOrdersCallback = (error: (Error|null), response?: injective.exchange.v1beta1.QueryAccountAddressDerivativeOrdersResponse) => void;

                /**
                 * Callback as used by {@link injective.exchange.v1beta1.Query#derivativeOrdersByHashes}.
                 * @param error Error, if any
                 * @param [response] QueryDerivativeOrdersByHashesResponse
                 */
                type DerivativeOrdersByHashesCallback = (error: (Error|null), response?: injective.exchange.v1beta1.QueryDerivativeOrdersByHashesResponse) => void;

                /**
                 * Callback as used by {@link injective.exchange.v1beta1.Query#traderDerivativeTransientOrders}.
                 * @param error Error, if any
                 * @param [response] QueryTraderDerivativeOrdersResponse
                 */
                type TraderDerivativeTransientOrdersCallback = (error: (Error|null), response?: injective.exchange.v1beta1.QueryTraderDerivativeOrdersResponse) => void;

                /**
                 * Callback as used by {@link injective.exchange.v1beta1.Query#derivativeMarkets}.
                 * @param error Error, if any
                 * @param [response] QueryDerivativeMarketsResponse
                 */
                type DerivativeMarketsCallback = (error: (Error|null), response?: injective.exchange.v1beta1.QueryDerivativeMarketsResponse) => void;

                /**
                 * Callback as used by {@link injective.exchange.v1beta1.Query#derivativeMarket}.
                 * @param error Error, if any
                 * @param [response] QueryDerivativeMarketResponse
                 */
                type DerivativeMarketCallback = (error: (Error|null), response?: injective.exchange.v1beta1.QueryDerivativeMarketResponse) => void;

                /**
                 * Callback as used by {@link injective.exchange.v1beta1.Query#derivativeMarketAddress}.
                 * @param error Error, if any
                 * @param [response] QueryDerivativeMarketAddressResponse
                 */
                type DerivativeMarketAddressCallback = (error: (Error|null), response?: injective.exchange.v1beta1.QueryDerivativeMarketAddressResponse) => void;

                /**
                 * Callback as used by {@link injective.exchange.v1beta1.Query#subaccountTradeNonce}.
                 * @param error Error, if any
                 * @param [response] QuerySubaccountTradeNonceResponse
                 */
                type SubaccountTradeNonceCallback = (error: (Error|null), response?: injective.exchange.v1beta1.QuerySubaccountTradeNonceResponse) => void;

                /**
                 * Callback as used by {@link injective.exchange.v1beta1.Query#exchangeModuleState}.
                 * @param error Error, if any
                 * @param [response] QueryModuleStateResponse
                 */
                type ExchangeModuleStateCallback = (error: (Error|null), response?: injective.exchange.v1beta1.QueryModuleStateResponse) => void;

                /**
                 * Callback as used by {@link injective.exchange.v1beta1.Query#positions}.
                 * @param error Error, if any
                 * @param [response] QueryPositionsResponse
                 */
                type PositionsCallback = (error: (Error|null), response?: injective.exchange.v1beta1.QueryPositionsResponse) => void;

                /**
                 * Callback as used by {@link injective.exchange.v1beta1.Query#subaccountPositions}.
                 * @param error Error, if any
                 * @param [response] QuerySubaccountPositionsResponse
                 */
                type SubaccountPositionsCallback = (error: (Error|null), response?: injective.exchange.v1beta1.QuerySubaccountPositionsResponse) => void;

                /**
                 * Callback as used by {@link injective.exchange.v1beta1.Query#subaccountPositionInMarket}.
                 * @param error Error, if any
                 * @param [response] QuerySubaccountPositionInMarketResponse
                 */
                type SubaccountPositionInMarketCallback = (error: (Error|null), response?: injective.exchange.v1beta1.QuerySubaccountPositionInMarketResponse) => void;

                /**
                 * Callback as used by {@link injective.exchange.v1beta1.Query#subaccountEffectivePositionInMarket}.
                 * @param error Error, if any
                 * @param [response] QuerySubaccountEffectivePositionInMarketResponse
                 */
                type SubaccountEffectivePositionInMarketCallback = (error: (Error|null), response?: injective.exchange.v1beta1.QuerySubaccountEffectivePositionInMarketResponse) => void;

                /**
                 * Callback as used by {@link injective.exchange.v1beta1.Query#perpetualMarketInfo}.
                 * @param error Error, if any
                 * @param [response] QueryPerpetualMarketInfoResponse
                 */
                type PerpetualMarketInfoCallback = (error: (Error|null), response?: injective.exchange.v1beta1.QueryPerpetualMarketInfoResponse) => void;

                /**
                 * Callback as used by {@link injective.exchange.v1beta1.Query#expiryFuturesMarketInfo}.
                 * @param error Error, if any
                 * @param [response] QueryExpiryFuturesMarketInfoResponse
                 */
                type ExpiryFuturesMarketInfoCallback = (error: (Error|null), response?: injective.exchange.v1beta1.QueryExpiryFuturesMarketInfoResponse) => void;

                /**
                 * Callback as used by {@link injective.exchange.v1beta1.Query#perpetualMarketFunding}.
                 * @param error Error, if any
                 * @param [response] QueryPerpetualMarketFundingResponse
                 */
                type PerpetualMarketFundingCallback = (error: (Error|null), response?: injective.exchange.v1beta1.QueryPerpetualMarketFundingResponse) => void;

                /**
                 * Callback as used by {@link injective.exchange.v1beta1.Query#subaccountOrderMetadata}.
                 * @param error Error, if any
                 * @param [response] QuerySubaccountOrderMetadataResponse
                 */
                type SubaccountOrderMetadataCallback = (error: (Error|null), response?: injective.exchange.v1beta1.QuerySubaccountOrderMetadataResponse) => void;

                /**
                 * Callback as used by {@link injective.exchange.v1beta1.Query#tradeRewardPoints}.
                 * @param error Error, if any
                 * @param [response] QueryTradeRewardPointsResponse
                 */
                type TradeRewardPointsCallback = (error: (Error|null), response?: injective.exchange.v1beta1.QueryTradeRewardPointsResponse) => void;

                /**
                 * Callback as used by {@link injective.exchange.v1beta1.Query#pendingTradeRewardPoints}.
                 * @param error Error, if any
                 * @param [response] QueryTradeRewardPointsResponse
                 */
                type PendingTradeRewardPointsCallback = (error: (Error|null), response?: injective.exchange.v1beta1.QueryTradeRewardPointsResponse) => void;

                /**
                 * Callback as used by {@link injective.exchange.v1beta1.Query#tradeRewardCampaign}.
                 * @param error Error, if any
                 * @param [response] QueryTradeRewardCampaignResponse
                 */
                type TradeRewardCampaignCallback = (error: (Error|null), response?: injective.exchange.v1beta1.QueryTradeRewardCampaignResponse) => void;

                /**
                 * Callback as used by {@link injective.exchange.v1beta1.Query#feeDiscountAccountInfo}.
                 * @param error Error, if any
                 * @param [response] QueryFeeDiscountAccountInfoResponse
                 */
                type FeeDiscountAccountInfoCallback = (error: (Error|null), response?: injective.exchange.v1beta1.QueryFeeDiscountAccountInfoResponse) => void;

                /**
                 * Callback as used by {@link injective.exchange.v1beta1.Query#feeDiscountSchedule}.
                 * @param error Error, if any
                 * @param [response] QueryFeeDiscountScheduleResponse
                 */
                type FeeDiscountScheduleCallback = (error: (Error|null), response?: injective.exchange.v1beta1.QueryFeeDiscountScheduleResponse) => void;

                /**
                 * Callback as used by {@link injective.exchange.v1beta1.Query#balanceMismatches}.
                 * @param error Error, if any
                 * @param [response] QueryBalanceMismatchesResponse
                 */
                type BalanceMismatchesCallback = (error: (Error|null), response?: injective.exchange.v1beta1.QueryBalanceMismatchesResponse) => void;

                /**
                 * Callback as used by {@link injective.exchange.v1beta1.Query#balanceWithBalanceHolds}.
                 * @param error Error, if any
                 * @param [response] QueryBalanceWithBalanceHoldsResponse
                 */
                type BalanceWithBalanceHoldsCallback = (error: (Error|null), response?: injective.exchange.v1beta1.QueryBalanceWithBalanceHoldsResponse) => void;

                /**
                 * Callback as used by {@link injective.exchange.v1beta1.Query#feeDiscountTierStatistics}.
                 * @param error Error, if any
                 * @param [response] QueryFeeDiscountTierStatisticsResponse
                 */
                type FeeDiscountTierStatisticsCallback = (error: (Error|null), response?: injective.exchange.v1beta1.QueryFeeDiscountTierStatisticsResponse) => void;

                /**
                 * Callback as used by {@link injective.exchange.v1beta1.Query#mitoVaultInfos}.
                 * @param error Error, if any
                 * @param [response] MitoVaultInfosResponse
                 */
                type MitoVaultInfosCallback = (error: (Error|null), response?: injective.exchange.v1beta1.MitoVaultInfosResponse) => void;

                /**
                 * Callback as used by {@link injective.exchange.v1beta1.Query#queryMarketIDFromVault}.
                 * @param error Error, if any
                 * @param [response] QueryMarketIDFromVaultResponse
                 */
                type QueryMarketIDFromVaultCallback = (error: (Error|null), response?: injective.exchange.v1beta1.QueryMarketIDFromVaultResponse) => void;

                /**
                 * Callback as used by {@link injective.exchange.v1beta1.Query#historicalTradeRecords}.
                 * @param error Error, if any
                 * @param [response] QueryHistoricalTradeRecordsResponse
                 */
                type HistoricalTradeRecordsCallback = (error: (Error|null), response?: injective.exchange.v1beta1.QueryHistoricalTradeRecordsResponse) => void;

                /**
                 * Callback as used by {@link injective.exchange.v1beta1.Query#isOptedOutOfRewards}.
                 * @param error Error, if any
                 * @param [response] QueryIsOptedOutOfRewardsResponse
                 */
                type IsOptedOutOfRewardsCallback = (error: (Error|null), response?: injective.exchange.v1beta1.QueryIsOptedOutOfRewardsResponse) => void;

                /**
                 * Callback as used by {@link injective.exchange.v1beta1.Query#optedOutOfRewardsAccounts}.
                 * @param error Error, if any
                 * @param [response] QueryOptedOutOfRewardsAccountsResponse
                 */
                type OptedOutOfRewardsAccountsCallback = (error: (Error|null), response?: injective.exchange.v1beta1.QueryOptedOutOfRewardsAccountsResponse) => void;

                /**
                 * Callback as used by {@link injective.exchange.v1beta1.Query#marketVolatility}.
                 * @param error Error, if any
                 * @param [response] QueryMarketVolatilityResponse
                 */
                type MarketVolatilityCallback = (error: (Error|null), response?: injective.exchange.v1beta1.QueryMarketVolatilityResponse) => void;

                /**
                 * Callback as used by {@link injective.exchange.v1beta1.Query#binaryOptionsMarkets}.
                 * @param error Error, if any
                 * @param [response] QueryBinaryMarketsResponse
                 */
                type BinaryOptionsMarketsCallback = (error: (Error|null), response?: injective.exchange.v1beta1.QueryBinaryMarketsResponse) => void;

                /**
                 * Callback as used by {@link injective.exchange.v1beta1.Query#traderDerivativeConditionalOrders}.
                 * @param error Error, if any
                 * @param [response] QueryTraderDerivativeConditionalOrdersResponse
                 */
                type TraderDerivativeConditionalOrdersCallback = (error: (Error|null), response?: injective.exchange.v1beta1.QueryTraderDerivativeConditionalOrdersResponse) => void;

                /**
                 * Callback as used by {@link injective.exchange.v1beta1.Query#marketAtomicExecutionFeeMultiplier}.
                 * @param error Error, if any
                 * @param [response] QueryMarketAtomicExecutionFeeMultiplierResponse
                 */
                type MarketAtomicExecutionFeeMultiplierCallback = (error: (Error|null), response?: injective.exchange.v1beta1.QueryMarketAtomicExecutionFeeMultiplierResponse) => void;
            }

            /** Properties of a Subaccount. */
            interface ISubaccount {

                /** Subaccount trader */
                trader?: (string|null);

                /** Subaccount subaccount_nonce */
                subaccount_nonce?: (number|null);
            }

            /** Represents a Subaccount. */
            class Subaccount implements ISubaccount {

                /**
                 * Constructs a new Subaccount.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.ISubaccount);

                /** Subaccount trader. */
                public trader: string;

                /** Subaccount subaccount_nonce. */
                public subaccount_nonce: number;

                /**
                 * Encodes the specified Subaccount message. Does not implicitly {@link injective.exchange.v1beta1.Subaccount.verify|verify} messages.
                 * @param message Subaccount message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.ISubaccount, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Subaccount message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.Subaccount.verify|verify} messages.
                 * @param message Subaccount message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.ISubaccount, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Subaccount message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Subaccount
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.Subaccount;

                /**
                 * Decodes a Subaccount message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Subaccount
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.Subaccount;

                /**
                 * Verifies a Subaccount message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Subaccount message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Subaccount
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.Subaccount;

                /**
                 * Creates a plain object from a Subaccount message. Also converts values to other types if specified.
                 * @param message Subaccount
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.Subaccount, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Subaccount to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QuerySubaccountOrdersRequest. */
            interface IQuerySubaccountOrdersRequest {

                /** QuerySubaccountOrdersRequest subaccount_id */
                subaccount_id?: (string|null);

                /** QuerySubaccountOrdersRequest market_id */
                market_id?: (string|null);
            }

            /** Represents a QuerySubaccountOrdersRequest. */
            class QuerySubaccountOrdersRequest implements IQuerySubaccountOrdersRequest {

                /**
                 * Constructs a new QuerySubaccountOrdersRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQuerySubaccountOrdersRequest);

                /** QuerySubaccountOrdersRequest subaccount_id. */
                public subaccount_id: string;

                /** QuerySubaccountOrdersRequest market_id. */
                public market_id: string;

                /**
                 * Encodes the specified QuerySubaccountOrdersRequest message. Does not implicitly {@link injective.exchange.v1beta1.QuerySubaccountOrdersRequest.verify|verify} messages.
                 * @param message QuerySubaccountOrdersRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQuerySubaccountOrdersRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QuerySubaccountOrdersRequest message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QuerySubaccountOrdersRequest.verify|verify} messages.
                 * @param message QuerySubaccountOrdersRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQuerySubaccountOrdersRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QuerySubaccountOrdersRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QuerySubaccountOrdersRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QuerySubaccountOrdersRequest;

                /**
                 * Decodes a QuerySubaccountOrdersRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QuerySubaccountOrdersRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QuerySubaccountOrdersRequest;

                /**
                 * Verifies a QuerySubaccountOrdersRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QuerySubaccountOrdersRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QuerySubaccountOrdersRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QuerySubaccountOrdersRequest;

                /**
                 * Creates a plain object from a QuerySubaccountOrdersRequest message. Also converts values to other types if specified.
                 * @param message QuerySubaccountOrdersRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QuerySubaccountOrdersRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QuerySubaccountOrdersRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QuerySubaccountOrdersResponse. */
            interface IQuerySubaccountOrdersResponse {

                /** QuerySubaccountOrdersResponse buy_orders */
                buy_orders?: (injective.exchange.v1beta1.ISubaccountOrderData[]|null);

                /** QuerySubaccountOrdersResponse sell_orders */
                sell_orders?: (injective.exchange.v1beta1.ISubaccountOrderData[]|null);
            }

            /** Represents a QuerySubaccountOrdersResponse. */
            class QuerySubaccountOrdersResponse implements IQuerySubaccountOrdersResponse {

                /**
                 * Constructs a new QuerySubaccountOrdersResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQuerySubaccountOrdersResponse);

                /** QuerySubaccountOrdersResponse buy_orders. */
                public buy_orders: injective.exchange.v1beta1.ISubaccountOrderData[];

                /** QuerySubaccountOrdersResponse sell_orders. */
                public sell_orders: injective.exchange.v1beta1.ISubaccountOrderData[];

                /**
                 * Encodes the specified QuerySubaccountOrdersResponse message. Does not implicitly {@link injective.exchange.v1beta1.QuerySubaccountOrdersResponse.verify|verify} messages.
                 * @param message QuerySubaccountOrdersResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQuerySubaccountOrdersResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QuerySubaccountOrdersResponse message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QuerySubaccountOrdersResponse.verify|verify} messages.
                 * @param message QuerySubaccountOrdersResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQuerySubaccountOrdersResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QuerySubaccountOrdersResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QuerySubaccountOrdersResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QuerySubaccountOrdersResponse;

                /**
                 * Decodes a QuerySubaccountOrdersResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QuerySubaccountOrdersResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QuerySubaccountOrdersResponse;

                /**
                 * Verifies a QuerySubaccountOrdersResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QuerySubaccountOrdersResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QuerySubaccountOrdersResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QuerySubaccountOrdersResponse;

                /**
                 * Creates a plain object from a QuerySubaccountOrdersResponse message. Also converts values to other types if specified.
                 * @param message QuerySubaccountOrdersResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QuerySubaccountOrdersResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QuerySubaccountOrdersResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a SubaccountOrderbookMetadataWithMarket. */
            interface ISubaccountOrderbookMetadataWithMarket {

                /** SubaccountOrderbookMetadataWithMarket metadata */
                metadata?: (injective.exchange.v1beta1.ISubaccountOrderbookMetadata|null);

                /** SubaccountOrderbookMetadataWithMarket market_id */
                market_id?: (string|null);

                /** SubaccountOrderbookMetadataWithMarket isBuy */
                isBuy?: (boolean|null);
            }

            /** Represents a SubaccountOrderbookMetadataWithMarket. */
            class SubaccountOrderbookMetadataWithMarket implements ISubaccountOrderbookMetadataWithMarket {

                /**
                 * Constructs a new SubaccountOrderbookMetadataWithMarket.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.ISubaccountOrderbookMetadataWithMarket);

                /** SubaccountOrderbookMetadataWithMarket metadata. */
                public metadata?: (injective.exchange.v1beta1.ISubaccountOrderbookMetadata|null);

                /** SubaccountOrderbookMetadataWithMarket market_id. */
                public market_id: string;

                /** SubaccountOrderbookMetadataWithMarket isBuy. */
                public isBuy: boolean;

                /**
                 * Encodes the specified SubaccountOrderbookMetadataWithMarket message. Does not implicitly {@link injective.exchange.v1beta1.SubaccountOrderbookMetadataWithMarket.verify|verify} messages.
                 * @param message SubaccountOrderbookMetadataWithMarket message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.ISubaccountOrderbookMetadataWithMarket, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified SubaccountOrderbookMetadataWithMarket message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.SubaccountOrderbookMetadataWithMarket.verify|verify} messages.
                 * @param message SubaccountOrderbookMetadataWithMarket message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.ISubaccountOrderbookMetadataWithMarket, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a SubaccountOrderbookMetadataWithMarket message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns SubaccountOrderbookMetadataWithMarket
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.SubaccountOrderbookMetadataWithMarket;

                /**
                 * Decodes a SubaccountOrderbookMetadataWithMarket message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns SubaccountOrderbookMetadataWithMarket
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.SubaccountOrderbookMetadataWithMarket;

                /**
                 * Verifies a SubaccountOrderbookMetadataWithMarket message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a SubaccountOrderbookMetadataWithMarket message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns SubaccountOrderbookMetadataWithMarket
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.SubaccountOrderbookMetadataWithMarket;

                /**
                 * Creates a plain object from a SubaccountOrderbookMetadataWithMarket message. Also converts values to other types if specified.
                 * @param message SubaccountOrderbookMetadataWithMarket
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.SubaccountOrderbookMetadataWithMarket, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this SubaccountOrderbookMetadataWithMarket to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryExchangeParamsRequest. */
            interface IQueryExchangeParamsRequest {
            }

            /** Represents a QueryExchangeParamsRequest. */
            class QueryExchangeParamsRequest implements IQueryExchangeParamsRequest {

                /**
                 * Constructs a new QueryExchangeParamsRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQueryExchangeParamsRequest);

                /**
                 * Encodes the specified QueryExchangeParamsRequest message. Does not implicitly {@link injective.exchange.v1beta1.QueryExchangeParamsRequest.verify|verify} messages.
                 * @param message QueryExchangeParamsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQueryExchangeParamsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryExchangeParamsRequest message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QueryExchangeParamsRequest.verify|verify} messages.
                 * @param message QueryExchangeParamsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQueryExchangeParamsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryExchangeParamsRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryExchangeParamsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QueryExchangeParamsRequest;

                /**
                 * Decodes a QueryExchangeParamsRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryExchangeParamsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QueryExchangeParamsRequest;

                /**
                 * Verifies a QueryExchangeParamsRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryExchangeParamsRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryExchangeParamsRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QueryExchangeParamsRequest;

                /**
                 * Creates a plain object from a QueryExchangeParamsRequest message. Also converts values to other types if specified.
                 * @param message QueryExchangeParamsRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QueryExchangeParamsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryExchangeParamsRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryExchangeParamsResponse. */
            interface IQueryExchangeParamsResponse {

                /** QueryExchangeParamsResponse params */
                params?: (injective.exchange.v1beta1.IParams|null);
            }

            /** Represents a QueryExchangeParamsResponse. */
            class QueryExchangeParamsResponse implements IQueryExchangeParamsResponse {

                /**
                 * Constructs a new QueryExchangeParamsResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQueryExchangeParamsResponse);

                /** QueryExchangeParamsResponse params. */
                public params?: (injective.exchange.v1beta1.IParams|null);

                /**
                 * Encodes the specified QueryExchangeParamsResponse message. Does not implicitly {@link injective.exchange.v1beta1.QueryExchangeParamsResponse.verify|verify} messages.
                 * @param message QueryExchangeParamsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQueryExchangeParamsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryExchangeParamsResponse message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QueryExchangeParamsResponse.verify|verify} messages.
                 * @param message QueryExchangeParamsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQueryExchangeParamsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryExchangeParamsResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryExchangeParamsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QueryExchangeParamsResponse;

                /**
                 * Decodes a QueryExchangeParamsResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryExchangeParamsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QueryExchangeParamsResponse;

                /**
                 * Verifies a QueryExchangeParamsResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryExchangeParamsResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryExchangeParamsResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QueryExchangeParamsResponse;

                /**
                 * Creates a plain object from a QueryExchangeParamsResponse message. Also converts values to other types if specified.
                 * @param message QueryExchangeParamsResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QueryExchangeParamsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryExchangeParamsResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QuerySubaccountDepositsRequest. */
            interface IQuerySubaccountDepositsRequest {

                /** QuerySubaccountDepositsRequest subaccount_id */
                subaccount_id?: (string|null);

                /** QuerySubaccountDepositsRequest subaccount */
                subaccount?: (injective.exchange.v1beta1.ISubaccount|null);
            }

            /** Represents a QuerySubaccountDepositsRequest. */
            class QuerySubaccountDepositsRequest implements IQuerySubaccountDepositsRequest {

                /**
                 * Constructs a new QuerySubaccountDepositsRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQuerySubaccountDepositsRequest);

                /** QuerySubaccountDepositsRequest subaccount_id. */
                public subaccount_id: string;

                /** QuerySubaccountDepositsRequest subaccount. */
                public subaccount?: (injective.exchange.v1beta1.ISubaccount|null);

                /**
                 * Encodes the specified QuerySubaccountDepositsRequest message. Does not implicitly {@link injective.exchange.v1beta1.QuerySubaccountDepositsRequest.verify|verify} messages.
                 * @param message QuerySubaccountDepositsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQuerySubaccountDepositsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QuerySubaccountDepositsRequest message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QuerySubaccountDepositsRequest.verify|verify} messages.
                 * @param message QuerySubaccountDepositsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQuerySubaccountDepositsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QuerySubaccountDepositsRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QuerySubaccountDepositsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QuerySubaccountDepositsRequest;

                /**
                 * Decodes a QuerySubaccountDepositsRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QuerySubaccountDepositsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QuerySubaccountDepositsRequest;

                /**
                 * Verifies a QuerySubaccountDepositsRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QuerySubaccountDepositsRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QuerySubaccountDepositsRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QuerySubaccountDepositsRequest;

                /**
                 * Creates a plain object from a QuerySubaccountDepositsRequest message. Also converts values to other types if specified.
                 * @param message QuerySubaccountDepositsRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QuerySubaccountDepositsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QuerySubaccountDepositsRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QuerySubaccountDepositsResponse. */
            interface IQuerySubaccountDepositsResponse {

                /** QuerySubaccountDepositsResponse deposits */
                deposits?: ({ [k: string]: injective.exchange.v1beta1.IDeposit }|null);
            }

            /** Represents a QuerySubaccountDepositsResponse. */
            class QuerySubaccountDepositsResponse implements IQuerySubaccountDepositsResponse {

                /**
                 * Constructs a new QuerySubaccountDepositsResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQuerySubaccountDepositsResponse);

                /** QuerySubaccountDepositsResponse deposits. */
                public deposits: { [k: string]: injective.exchange.v1beta1.IDeposit };

                /**
                 * Encodes the specified QuerySubaccountDepositsResponse message. Does not implicitly {@link injective.exchange.v1beta1.QuerySubaccountDepositsResponse.verify|verify} messages.
                 * @param message QuerySubaccountDepositsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQuerySubaccountDepositsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QuerySubaccountDepositsResponse message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QuerySubaccountDepositsResponse.verify|verify} messages.
                 * @param message QuerySubaccountDepositsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQuerySubaccountDepositsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QuerySubaccountDepositsResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QuerySubaccountDepositsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QuerySubaccountDepositsResponse;

                /**
                 * Decodes a QuerySubaccountDepositsResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QuerySubaccountDepositsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QuerySubaccountDepositsResponse;

                /**
                 * Verifies a QuerySubaccountDepositsResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QuerySubaccountDepositsResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QuerySubaccountDepositsResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QuerySubaccountDepositsResponse;

                /**
                 * Creates a plain object from a QuerySubaccountDepositsResponse message. Also converts values to other types if specified.
                 * @param message QuerySubaccountDepositsResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QuerySubaccountDepositsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QuerySubaccountDepositsResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryExchangeBalancesRequest. */
            interface IQueryExchangeBalancesRequest {
            }

            /** Represents a QueryExchangeBalancesRequest. */
            class QueryExchangeBalancesRequest implements IQueryExchangeBalancesRequest {

                /**
                 * Constructs a new QueryExchangeBalancesRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQueryExchangeBalancesRequest);

                /**
                 * Encodes the specified QueryExchangeBalancesRequest message. Does not implicitly {@link injective.exchange.v1beta1.QueryExchangeBalancesRequest.verify|verify} messages.
                 * @param message QueryExchangeBalancesRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQueryExchangeBalancesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryExchangeBalancesRequest message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QueryExchangeBalancesRequest.verify|verify} messages.
                 * @param message QueryExchangeBalancesRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQueryExchangeBalancesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryExchangeBalancesRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryExchangeBalancesRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QueryExchangeBalancesRequest;

                /**
                 * Decodes a QueryExchangeBalancesRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryExchangeBalancesRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QueryExchangeBalancesRequest;

                /**
                 * Verifies a QueryExchangeBalancesRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryExchangeBalancesRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryExchangeBalancesRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QueryExchangeBalancesRequest;

                /**
                 * Creates a plain object from a QueryExchangeBalancesRequest message. Also converts values to other types if specified.
                 * @param message QueryExchangeBalancesRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QueryExchangeBalancesRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryExchangeBalancesRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryExchangeBalancesResponse. */
            interface IQueryExchangeBalancesResponse {

                /** QueryExchangeBalancesResponse balances */
                balances?: (injective.exchange.v1beta1.IBalance[]|null);
            }

            /** Represents a QueryExchangeBalancesResponse. */
            class QueryExchangeBalancesResponse implements IQueryExchangeBalancesResponse {

                /**
                 * Constructs a new QueryExchangeBalancesResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQueryExchangeBalancesResponse);

                /** QueryExchangeBalancesResponse balances. */
                public balances: injective.exchange.v1beta1.IBalance[];

                /**
                 * Encodes the specified QueryExchangeBalancesResponse message. Does not implicitly {@link injective.exchange.v1beta1.QueryExchangeBalancesResponse.verify|verify} messages.
                 * @param message QueryExchangeBalancesResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQueryExchangeBalancesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryExchangeBalancesResponse message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QueryExchangeBalancesResponse.verify|verify} messages.
                 * @param message QueryExchangeBalancesResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQueryExchangeBalancesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryExchangeBalancesResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryExchangeBalancesResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QueryExchangeBalancesResponse;

                /**
                 * Decodes a QueryExchangeBalancesResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryExchangeBalancesResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QueryExchangeBalancesResponse;

                /**
                 * Verifies a QueryExchangeBalancesResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryExchangeBalancesResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryExchangeBalancesResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QueryExchangeBalancesResponse;

                /**
                 * Creates a plain object from a QueryExchangeBalancesResponse message. Also converts values to other types if specified.
                 * @param message QueryExchangeBalancesResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QueryExchangeBalancesResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryExchangeBalancesResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryAggregateVolumeRequest. */
            interface IQueryAggregateVolumeRequest {

                /** QueryAggregateVolumeRequest account */
                account?: (string|null);
            }

            /** Represents a QueryAggregateVolumeRequest. */
            class QueryAggregateVolumeRequest implements IQueryAggregateVolumeRequest {

                /**
                 * Constructs a new QueryAggregateVolumeRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQueryAggregateVolumeRequest);

                /** QueryAggregateVolumeRequest account. */
                public account: string;

                /**
                 * Encodes the specified QueryAggregateVolumeRequest message. Does not implicitly {@link injective.exchange.v1beta1.QueryAggregateVolumeRequest.verify|verify} messages.
                 * @param message QueryAggregateVolumeRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQueryAggregateVolumeRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryAggregateVolumeRequest message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QueryAggregateVolumeRequest.verify|verify} messages.
                 * @param message QueryAggregateVolumeRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQueryAggregateVolumeRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryAggregateVolumeRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryAggregateVolumeRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QueryAggregateVolumeRequest;

                /**
                 * Decodes a QueryAggregateVolumeRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryAggregateVolumeRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QueryAggregateVolumeRequest;

                /**
                 * Verifies a QueryAggregateVolumeRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryAggregateVolumeRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryAggregateVolumeRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QueryAggregateVolumeRequest;

                /**
                 * Creates a plain object from a QueryAggregateVolumeRequest message. Also converts values to other types if specified.
                 * @param message QueryAggregateVolumeRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QueryAggregateVolumeRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryAggregateVolumeRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryAggregateVolumeResponse. */
            interface IQueryAggregateVolumeResponse {

                /** QueryAggregateVolumeResponse aggregate_volumes */
                aggregate_volumes?: (injective.exchange.v1beta1.IMarketVolume[]|null);
            }

            /** Represents a QueryAggregateVolumeResponse. */
            class QueryAggregateVolumeResponse implements IQueryAggregateVolumeResponse {

                /**
                 * Constructs a new QueryAggregateVolumeResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQueryAggregateVolumeResponse);

                /** QueryAggregateVolumeResponse aggregate_volumes. */
                public aggregate_volumes: injective.exchange.v1beta1.IMarketVolume[];

                /**
                 * Encodes the specified QueryAggregateVolumeResponse message. Does not implicitly {@link injective.exchange.v1beta1.QueryAggregateVolumeResponse.verify|verify} messages.
                 * @param message QueryAggregateVolumeResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQueryAggregateVolumeResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryAggregateVolumeResponse message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QueryAggregateVolumeResponse.verify|verify} messages.
                 * @param message QueryAggregateVolumeResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQueryAggregateVolumeResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryAggregateVolumeResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryAggregateVolumeResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QueryAggregateVolumeResponse;

                /**
                 * Decodes a QueryAggregateVolumeResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryAggregateVolumeResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QueryAggregateVolumeResponse;

                /**
                 * Verifies a QueryAggregateVolumeResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryAggregateVolumeResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryAggregateVolumeResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QueryAggregateVolumeResponse;

                /**
                 * Creates a plain object from a QueryAggregateVolumeResponse message. Also converts values to other types if specified.
                 * @param message QueryAggregateVolumeResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QueryAggregateVolumeResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryAggregateVolumeResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryAggregateVolumesRequest. */
            interface IQueryAggregateVolumesRequest {

                /** QueryAggregateVolumesRequest accounts */
                accounts?: (string[]|null);

                /** QueryAggregateVolumesRequest market_ids */
                market_ids?: (string[]|null);
            }

            /** Represents a QueryAggregateVolumesRequest. */
            class QueryAggregateVolumesRequest implements IQueryAggregateVolumesRequest {

                /**
                 * Constructs a new QueryAggregateVolumesRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQueryAggregateVolumesRequest);

                /** QueryAggregateVolumesRequest accounts. */
                public accounts: string[];

                /** QueryAggregateVolumesRequest market_ids. */
                public market_ids: string[];

                /**
                 * Encodes the specified QueryAggregateVolumesRequest message. Does not implicitly {@link injective.exchange.v1beta1.QueryAggregateVolumesRequest.verify|verify} messages.
                 * @param message QueryAggregateVolumesRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQueryAggregateVolumesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryAggregateVolumesRequest message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QueryAggregateVolumesRequest.verify|verify} messages.
                 * @param message QueryAggregateVolumesRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQueryAggregateVolumesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryAggregateVolumesRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryAggregateVolumesRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QueryAggregateVolumesRequest;

                /**
                 * Decodes a QueryAggregateVolumesRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryAggregateVolumesRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QueryAggregateVolumesRequest;

                /**
                 * Verifies a QueryAggregateVolumesRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryAggregateVolumesRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryAggregateVolumesRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QueryAggregateVolumesRequest;

                /**
                 * Creates a plain object from a QueryAggregateVolumesRequest message. Also converts values to other types if specified.
                 * @param message QueryAggregateVolumesRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QueryAggregateVolumesRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryAggregateVolumesRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryAggregateVolumesResponse. */
            interface IQueryAggregateVolumesResponse {

                /** QueryAggregateVolumesResponse aggregate_account_volumes */
                aggregate_account_volumes?: (injective.exchange.v1beta1.IAggregateAccountVolumeRecord[]|null);

                /** QueryAggregateVolumesResponse aggregate_market_volumes */
                aggregate_market_volumes?: (injective.exchange.v1beta1.IMarketVolume[]|null);
            }

            /** Represents a QueryAggregateVolumesResponse. */
            class QueryAggregateVolumesResponse implements IQueryAggregateVolumesResponse {

                /**
                 * Constructs a new QueryAggregateVolumesResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQueryAggregateVolumesResponse);

                /** QueryAggregateVolumesResponse aggregate_account_volumes. */
                public aggregate_account_volumes: injective.exchange.v1beta1.IAggregateAccountVolumeRecord[];

                /** QueryAggregateVolumesResponse aggregate_market_volumes. */
                public aggregate_market_volumes: injective.exchange.v1beta1.IMarketVolume[];

                /**
                 * Encodes the specified QueryAggregateVolumesResponse message. Does not implicitly {@link injective.exchange.v1beta1.QueryAggregateVolumesResponse.verify|verify} messages.
                 * @param message QueryAggregateVolumesResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQueryAggregateVolumesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryAggregateVolumesResponse message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QueryAggregateVolumesResponse.verify|verify} messages.
                 * @param message QueryAggregateVolumesResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQueryAggregateVolumesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryAggregateVolumesResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryAggregateVolumesResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QueryAggregateVolumesResponse;

                /**
                 * Decodes a QueryAggregateVolumesResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryAggregateVolumesResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QueryAggregateVolumesResponse;

                /**
                 * Verifies a QueryAggregateVolumesResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryAggregateVolumesResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryAggregateVolumesResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QueryAggregateVolumesResponse;

                /**
                 * Creates a plain object from a QueryAggregateVolumesResponse message. Also converts values to other types if specified.
                 * @param message QueryAggregateVolumesResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QueryAggregateVolumesResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryAggregateVolumesResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryAggregateMarketVolumeRequest. */
            interface IQueryAggregateMarketVolumeRequest {

                /** QueryAggregateMarketVolumeRequest market_id */
                market_id?: (string|null);
            }

            /** Represents a QueryAggregateMarketVolumeRequest. */
            class QueryAggregateMarketVolumeRequest implements IQueryAggregateMarketVolumeRequest {

                /**
                 * Constructs a new QueryAggregateMarketVolumeRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQueryAggregateMarketVolumeRequest);

                /** QueryAggregateMarketVolumeRequest market_id. */
                public market_id: string;

                /**
                 * Encodes the specified QueryAggregateMarketVolumeRequest message. Does not implicitly {@link injective.exchange.v1beta1.QueryAggregateMarketVolumeRequest.verify|verify} messages.
                 * @param message QueryAggregateMarketVolumeRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQueryAggregateMarketVolumeRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryAggregateMarketVolumeRequest message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QueryAggregateMarketVolumeRequest.verify|verify} messages.
                 * @param message QueryAggregateMarketVolumeRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQueryAggregateMarketVolumeRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryAggregateMarketVolumeRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryAggregateMarketVolumeRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QueryAggregateMarketVolumeRequest;

                /**
                 * Decodes a QueryAggregateMarketVolumeRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryAggregateMarketVolumeRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QueryAggregateMarketVolumeRequest;

                /**
                 * Verifies a QueryAggregateMarketVolumeRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryAggregateMarketVolumeRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryAggregateMarketVolumeRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QueryAggregateMarketVolumeRequest;

                /**
                 * Creates a plain object from a QueryAggregateMarketVolumeRequest message. Also converts values to other types if specified.
                 * @param message QueryAggregateMarketVolumeRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QueryAggregateMarketVolumeRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryAggregateMarketVolumeRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryAggregateMarketVolumeResponse. */
            interface IQueryAggregateMarketVolumeResponse {

                /** QueryAggregateMarketVolumeResponse volume */
                volume?: (injective.exchange.v1beta1.IVolumeRecord|null);
            }

            /** Represents a QueryAggregateMarketVolumeResponse. */
            class QueryAggregateMarketVolumeResponse implements IQueryAggregateMarketVolumeResponse {

                /**
                 * Constructs a new QueryAggregateMarketVolumeResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQueryAggregateMarketVolumeResponse);

                /** QueryAggregateMarketVolumeResponse volume. */
                public volume?: (injective.exchange.v1beta1.IVolumeRecord|null);

                /**
                 * Encodes the specified QueryAggregateMarketVolumeResponse message. Does not implicitly {@link injective.exchange.v1beta1.QueryAggregateMarketVolumeResponse.verify|verify} messages.
                 * @param message QueryAggregateMarketVolumeResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQueryAggregateMarketVolumeResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryAggregateMarketVolumeResponse message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QueryAggregateMarketVolumeResponse.verify|verify} messages.
                 * @param message QueryAggregateMarketVolumeResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQueryAggregateMarketVolumeResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryAggregateMarketVolumeResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryAggregateMarketVolumeResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QueryAggregateMarketVolumeResponse;

                /**
                 * Decodes a QueryAggregateMarketVolumeResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryAggregateMarketVolumeResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QueryAggregateMarketVolumeResponse;

                /**
                 * Verifies a QueryAggregateMarketVolumeResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryAggregateMarketVolumeResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryAggregateMarketVolumeResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QueryAggregateMarketVolumeResponse;

                /**
                 * Creates a plain object from a QueryAggregateMarketVolumeResponse message. Also converts values to other types if specified.
                 * @param message QueryAggregateMarketVolumeResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QueryAggregateMarketVolumeResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryAggregateMarketVolumeResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryDenomDecimalRequest. */
            interface IQueryDenomDecimalRequest {

                /** QueryDenomDecimalRequest denom */
                denom?: (string|null);
            }

            /** Represents a QueryDenomDecimalRequest. */
            class QueryDenomDecimalRequest implements IQueryDenomDecimalRequest {

                /**
                 * Constructs a new QueryDenomDecimalRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQueryDenomDecimalRequest);

                /** QueryDenomDecimalRequest denom. */
                public denom: string;

                /**
                 * Encodes the specified QueryDenomDecimalRequest message. Does not implicitly {@link injective.exchange.v1beta1.QueryDenomDecimalRequest.verify|verify} messages.
                 * @param message QueryDenomDecimalRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQueryDenomDecimalRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryDenomDecimalRequest message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QueryDenomDecimalRequest.verify|verify} messages.
                 * @param message QueryDenomDecimalRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQueryDenomDecimalRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryDenomDecimalRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryDenomDecimalRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QueryDenomDecimalRequest;

                /**
                 * Decodes a QueryDenomDecimalRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryDenomDecimalRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QueryDenomDecimalRequest;

                /**
                 * Verifies a QueryDenomDecimalRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryDenomDecimalRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryDenomDecimalRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QueryDenomDecimalRequest;

                /**
                 * Creates a plain object from a QueryDenomDecimalRequest message. Also converts values to other types if specified.
                 * @param message QueryDenomDecimalRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QueryDenomDecimalRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryDenomDecimalRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryDenomDecimalResponse. */
            interface IQueryDenomDecimalResponse {

                /** QueryDenomDecimalResponse decimal */
                decimal?: (number|null);
            }

            /** Represents a QueryDenomDecimalResponse. */
            class QueryDenomDecimalResponse implements IQueryDenomDecimalResponse {

                /**
                 * Constructs a new QueryDenomDecimalResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQueryDenomDecimalResponse);

                /** QueryDenomDecimalResponse decimal. */
                public decimal: number;

                /**
                 * Encodes the specified QueryDenomDecimalResponse message. Does not implicitly {@link injective.exchange.v1beta1.QueryDenomDecimalResponse.verify|verify} messages.
                 * @param message QueryDenomDecimalResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQueryDenomDecimalResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryDenomDecimalResponse message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QueryDenomDecimalResponse.verify|verify} messages.
                 * @param message QueryDenomDecimalResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQueryDenomDecimalResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryDenomDecimalResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryDenomDecimalResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QueryDenomDecimalResponse;

                /**
                 * Decodes a QueryDenomDecimalResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryDenomDecimalResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QueryDenomDecimalResponse;

                /**
                 * Verifies a QueryDenomDecimalResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryDenomDecimalResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryDenomDecimalResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QueryDenomDecimalResponse;

                /**
                 * Creates a plain object from a QueryDenomDecimalResponse message. Also converts values to other types if specified.
                 * @param message QueryDenomDecimalResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QueryDenomDecimalResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryDenomDecimalResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryDenomDecimalsRequest. */
            interface IQueryDenomDecimalsRequest {

                /** QueryDenomDecimalsRequest denoms */
                denoms?: (string[]|null);
            }

            /** Represents a QueryDenomDecimalsRequest. */
            class QueryDenomDecimalsRequest implements IQueryDenomDecimalsRequest {

                /**
                 * Constructs a new QueryDenomDecimalsRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQueryDenomDecimalsRequest);

                /** QueryDenomDecimalsRequest denoms. */
                public denoms: string[];

                /**
                 * Encodes the specified QueryDenomDecimalsRequest message. Does not implicitly {@link injective.exchange.v1beta1.QueryDenomDecimalsRequest.verify|verify} messages.
                 * @param message QueryDenomDecimalsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQueryDenomDecimalsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryDenomDecimalsRequest message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QueryDenomDecimalsRequest.verify|verify} messages.
                 * @param message QueryDenomDecimalsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQueryDenomDecimalsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryDenomDecimalsRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryDenomDecimalsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QueryDenomDecimalsRequest;

                /**
                 * Decodes a QueryDenomDecimalsRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryDenomDecimalsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QueryDenomDecimalsRequest;

                /**
                 * Verifies a QueryDenomDecimalsRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryDenomDecimalsRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryDenomDecimalsRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QueryDenomDecimalsRequest;

                /**
                 * Creates a plain object from a QueryDenomDecimalsRequest message. Also converts values to other types if specified.
                 * @param message QueryDenomDecimalsRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QueryDenomDecimalsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryDenomDecimalsRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryDenomDecimalsResponse. */
            interface IQueryDenomDecimalsResponse {

                /** QueryDenomDecimalsResponse denom_decimals */
                denom_decimals?: (injective.exchange.v1beta1.IDenomDecimals[]|null);
            }

            /** Represents a QueryDenomDecimalsResponse. */
            class QueryDenomDecimalsResponse implements IQueryDenomDecimalsResponse {

                /**
                 * Constructs a new QueryDenomDecimalsResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQueryDenomDecimalsResponse);

                /** QueryDenomDecimalsResponse denom_decimals. */
                public denom_decimals: injective.exchange.v1beta1.IDenomDecimals[];

                /**
                 * Encodes the specified QueryDenomDecimalsResponse message. Does not implicitly {@link injective.exchange.v1beta1.QueryDenomDecimalsResponse.verify|verify} messages.
                 * @param message QueryDenomDecimalsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQueryDenomDecimalsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryDenomDecimalsResponse message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QueryDenomDecimalsResponse.verify|verify} messages.
                 * @param message QueryDenomDecimalsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQueryDenomDecimalsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryDenomDecimalsResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryDenomDecimalsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QueryDenomDecimalsResponse;

                /**
                 * Decodes a QueryDenomDecimalsResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryDenomDecimalsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QueryDenomDecimalsResponse;

                /**
                 * Verifies a QueryDenomDecimalsResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryDenomDecimalsResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryDenomDecimalsResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QueryDenomDecimalsResponse;

                /**
                 * Creates a plain object from a QueryDenomDecimalsResponse message. Also converts values to other types if specified.
                 * @param message QueryDenomDecimalsResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QueryDenomDecimalsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryDenomDecimalsResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryAggregateMarketVolumesRequest. */
            interface IQueryAggregateMarketVolumesRequest {

                /** QueryAggregateMarketVolumesRequest market_ids */
                market_ids?: (string[]|null);
            }

            /** Represents a QueryAggregateMarketVolumesRequest. */
            class QueryAggregateMarketVolumesRequest implements IQueryAggregateMarketVolumesRequest {

                /**
                 * Constructs a new QueryAggregateMarketVolumesRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQueryAggregateMarketVolumesRequest);

                /** QueryAggregateMarketVolumesRequest market_ids. */
                public market_ids: string[];

                /**
                 * Encodes the specified QueryAggregateMarketVolumesRequest message. Does not implicitly {@link injective.exchange.v1beta1.QueryAggregateMarketVolumesRequest.verify|verify} messages.
                 * @param message QueryAggregateMarketVolumesRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQueryAggregateMarketVolumesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryAggregateMarketVolumesRequest message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QueryAggregateMarketVolumesRequest.verify|verify} messages.
                 * @param message QueryAggregateMarketVolumesRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQueryAggregateMarketVolumesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryAggregateMarketVolumesRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryAggregateMarketVolumesRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QueryAggregateMarketVolumesRequest;

                /**
                 * Decodes a QueryAggregateMarketVolumesRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryAggregateMarketVolumesRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QueryAggregateMarketVolumesRequest;

                /**
                 * Verifies a QueryAggregateMarketVolumesRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryAggregateMarketVolumesRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryAggregateMarketVolumesRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QueryAggregateMarketVolumesRequest;

                /**
                 * Creates a plain object from a QueryAggregateMarketVolumesRequest message. Also converts values to other types if specified.
                 * @param message QueryAggregateMarketVolumesRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QueryAggregateMarketVolumesRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryAggregateMarketVolumesRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryAggregateMarketVolumesResponse. */
            interface IQueryAggregateMarketVolumesResponse {

                /** QueryAggregateMarketVolumesResponse volumes */
                volumes?: (injective.exchange.v1beta1.IMarketVolume[]|null);
            }

            /** Represents a QueryAggregateMarketVolumesResponse. */
            class QueryAggregateMarketVolumesResponse implements IQueryAggregateMarketVolumesResponse {

                /**
                 * Constructs a new QueryAggregateMarketVolumesResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQueryAggregateMarketVolumesResponse);

                /** QueryAggregateMarketVolumesResponse volumes. */
                public volumes: injective.exchange.v1beta1.IMarketVolume[];

                /**
                 * Encodes the specified QueryAggregateMarketVolumesResponse message. Does not implicitly {@link injective.exchange.v1beta1.QueryAggregateMarketVolumesResponse.verify|verify} messages.
                 * @param message QueryAggregateMarketVolumesResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQueryAggregateMarketVolumesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryAggregateMarketVolumesResponse message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QueryAggregateMarketVolumesResponse.verify|verify} messages.
                 * @param message QueryAggregateMarketVolumesResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQueryAggregateMarketVolumesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryAggregateMarketVolumesResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryAggregateMarketVolumesResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QueryAggregateMarketVolumesResponse;

                /**
                 * Decodes a QueryAggregateMarketVolumesResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryAggregateMarketVolumesResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QueryAggregateMarketVolumesResponse;

                /**
                 * Verifies a QueryAggregateMarketVolumesResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryAggregateMarketVolumesResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryAggregateMarketVolumesResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QueryAggregateMarketVolumesResponse;

                /**
                 * Creates a plain object from a QueryAggregateMarketVolumesResponse message. Also converts values to other types if specified.
                 * @param message QueryAggregateMarketVolumesResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QueryAggregateMarketVolumesResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryAggregateMarketVolumesResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QuerySubaccountDepositRequest. */
            interface IQuerySubaccountDepositRequest {

                /** QuerySubaccountDepositRequest subaccount_id */
                subaccount_id?: (string|null);

                /** QuerySubaccountDepositRequest denom */
                denom?: (string|null);
            }

            /** Represents a QuerySubaccountDepositRequest. */
            class QuerySubaccountDepositRequest implements IQuerySubaccountDepositRequest {

                /**
                 * Constructs a new QuerySubaccountDepositRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQuerySubaccountDepositRequest);

                /** QuerySubaccountDepositRequest subaccount_id. */
                public subaccount_id: string;

                /** QuerySubaccountDepositRequest denom. */
                public denom: string;

                /**
                 * Encodes the specified QuerySubaccountDepositRequest message. Does not implicitly {@link injective.exchange.v1beta1.QuerySubaccountDepositRequest.verify|verify} messages.
                 * @param message QuerySubaccountDepositRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQuerySubaccountDepositRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QuerySubaccountDepositRequest message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QuerySubaccountDepositRequest.verify|verify} messages.
                 * @param message QuerySubaccountDepositRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQuerySubaccountDepositRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QuerySubaccountDepositRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QuerySubaccountDepositRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QuerySubaccountDepositRequest;

                /**
                 * Decodes a QuerySubaccountDepositRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QuerySubaccountDepositRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QuerySubaccountDepositRequest;

                /**
                 * Verifies a QuerySubaccountDepositRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QuerySubaccountDepositRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QuerySubaccountDepositRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QuerySubaccountDepositRequest;

                /**
                 * Creates a plain object from a QuerySubaccountDepositRequest message. Also converts values to other types if specified.
                 * @param message QuerySubaccountDepositRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QuerySubaccountDepositRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QuerySubaccountDepositRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QuerySubaccountDepositResponse. */
            interface IQuerySubaccountDepositResponse {

                /** QuerySubaccountDepositResponse deposits */
                deposits?: (injective.exchange.v1beta1.IDeposit|null);
            }

            /** Represents a QuerySubaccountDepositResponse. */
            class QuerySubaccountDepositResponse implements IQuerySubaccountDepositResponse {

                /**
                 * Constructs a new QuerySubaccountDepositResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQuerySubaccountDepositResponse);

                /** QuerySubaccountDepositResponse deposits. */
                public deposits?: (injective.exchange.v1beta1.IDeposit|null);

                /**
                 * Encodes the specified QuerySubaccountDepositResponse message. Does not implicitly {@link injective.exchange.v1beta1.QuerySubaccountDepositResponse.verify|verify} messages.
                 * @param message QuerySubaccountDepositResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQuerySubaccountDepositResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QuerySubaccountDepositResponse message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QuerySubaccountDepositResponse.verify|verify} messages.
                 * @param message QuerySubaccountDepositResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQuerySubaccountDepositResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QuerySubaccountDepositResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QuerySubaccountDepositResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QuerySubaccountDepositResponse;

                /**
                 * Decodes a QuerySubaccountDepositResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QuerySubaccountDepositResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QuerySubaccountDepositResponse;

                /**
                 * Verifies a QuerySubaccountDepositResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QuerySubaccountDepositResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QuerySubaccountDepositResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QuerySubaccountDepositResponse;

                /**
                 * Creates a plain object from a QuerySubaccountDepositResponse message. Also converts values to other types if specified.
                 * @param message QuerySubaccountDepositResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QuerySubaccountDepositResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QuerySubaccountDepositResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QuerySpotMarketsRequest. */
            interface IQuerySpotMarketsRequest {

                /** QuerySpotMarketsRequest status */
                status?: (string|null);

                /** QuerySpotMarketsRequest market_ids */
                market_ids?: (string[]|null);
            }

            /** Represents a QuerySpotMarketsRequest. */
            class QuerySpotMarketsRequest implements IQuerySpotMarketsRequest {

                /**
                 * Constructs a new QuerySpotMarketsRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQuerySpotMarketsRequest);

                /** QuerySpotMarketsRequest status. */
                public status: string;

                /** QuerySpotMarketsRequest market_ids. */
                public market_ids: string[];

                /**
                 * Encodes the specified QuerySpotMarketsRequest message. Does not implicitly {@link injective.exchange.v1beta1.QuerySpotMarketsRequest.verify|verify} messages.
                 * @param message QuerySpotMarketsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQuerySpotMarketsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QuerySpotMarketsRequest message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QuerySpotMarketsRequest.verify|verify} messages.
                 * @param message QuerySpotMarketsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQuerySpotMarketsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QuerySpotMarketsRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QuerySpotMarketsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QuerySpotMarketsRequest;

                /**
                 * Decodes a QuerySpotMarketsRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QuerySpotMarketsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QuerySpotMarketsRequest;

                /**
                 * Verifies a QuerySpotMarketsRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QuerySpotMarketsRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QuerySpotMarketsRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QuerySpotMarketsRequest;

                /**
                 * Creates a plain object from a QuerySpotMarketsRequest message. Also converts values to other types if specified.
                 * @param message QuerySpotMarketsRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QuerySpotMarketsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QuerySpotMarketsRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QuerySpotMarketsResponse. */
            interface IQuerySpotMarketsResponse {

                /** QuerySpotMarketsResponse markets */
                markets?: (injective.exchange.v1beta1.ISpotMarket[]|null);
            }

            /** Represents a QuerySpotMarketsResponse. */
            class QuerySpotMarketsResponse implements IQuerySpotMarketsResponse {

                /**
                 * Constructs a new QuerySpotMarketsResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQuerySpotMarketsResponse);

                /** QuerySpotMarketsResponse markets. */
                public markets: injective.exchange.v1beta1.ISpotMarket[];

                /**
                 * Encodes the specified QuerySpotMarketsResponse message. Does not implicitly {@link injective.exchange.v1beta1.QuerySpotMarketsResponse.verify|verify} messages.
                 * @param message QuerySpotMarketsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQuerySpotMarketsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QuerySpotMarketsResponse message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QuerySpotMarketsResponse.verify|verify} messages.
                 * @param message QuerySpotMarketsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQuerySpotMarketsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QuerySpotMarketsResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QuerySpotMarketsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QuerySpotMarketsResponse;

                /**
                 * Decodes a QuerySpotMarketsResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QuerySpotMarketsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QuerySpotMarketsResponse;

                /**
                 * Verifies a QuerySpotMarketsResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QuerySpotMarketsResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QuerySpotMarketsResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QuerySpotMarketsResponse;

                /**
                 * Creates a plain object from a QuerySpotMarketsResponse message. Also converts values to other types if specified.
                 * @param message QuerySpotMarketsResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QuerySpotMarketsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QuerySpotMarketsResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QuerySpotMarketRequest. */
            interface IQuerySpotMarketRequest {

                /** QuerySpotMarketRequest market_id */
                market_id?: (string|null);
            }

            /** Represents a QuerySpotMarketRequest. */
            class QuerySpotMarketRequest implements IQuerySpotMarketRequest {

                /**
                 * Constructs a new QuerySpotMarketRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQuerySpotMarketRequest);

                /** QuerySpotMarketRequest market_id. */
                public market_id: string;

                /**
                 * Encodes the specified QuerySpotMarketRequest message. Does not implicitly {@link injective.exchange.v1beta1.QuerySpotMarketRequest.verify|verify} messages.
                 * @param message QuerySpotMarketRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQuerySpotMarketRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QuerySpotMarketRequest message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QuerySpotMarketRequest.verify|verify} messages.
                 * @param message QuerySpotMarketRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQuerySpotMarketRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QuerySpotMarketRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QuerySpotMarketRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QuerySpotMarketRequest;

                /**
                 * Decodes a QuerySpotMarketRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QuerySpotMarketRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QuerySpotMarketRequest;

                /**
                 * Verifies a QuerySpotMarketRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QuerySpotMarketRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QuerySpotMarketRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QuerySpotMarketRequest;

                /**
                 * Creates a plain object from a QuerySpotMarketRequest message. Also converts values to other types if specified.
                 * @param message QuerySpotMarketRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QuerySpotMarketRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QuerySpotMarketRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QuerySpotMarketResponse. */
            interface IQuerySpotMarketResponse {

                /** QuerySpotMarketResponse market */
                market?: (injective.exchange.v1beta1.ISpotMarket|null);
            }

            /** Represents a QuerySpotMarketResponse. */
            class QuerySpotMarketResponse implements IQuerySpotMarketResponse {

                /**
                 * Constructs a new QuerySpotMarketResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQuerySpotMarketResponse);

                /** QuerySpotMarketResponse market. */
                public market?: (injective.exchange.v1beta1.ISpotMarket|null);

                /**
                 * Encodes the specified QuerySpotMarketResponse message. Does not implicitly {@link injective.exchange.v1beta1.QuerySpotMarketResponse.verify|verify} messages.
                 * @param message QuerySpotMarketResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQuerySpotMarketResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QuerySpotMarketResponse message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QuerySpotMarketResponse.verify|verify} messages.
                 * @param message QuerySpotMarketResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQuerySpotMarketResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QuerySpotMarketResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QuerySpotMarketResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QuerySpotMarketResponse;

                /**
                 * Decodes a QuerySpotMarketResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QuerySpotMarketResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QuerySpotMarketResponse;

                /**
                 * Verifies a QuerySpotMarketResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QuerySpotMarketResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QuerySpotMarketResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QuerySpotMarketResponse;

                /**
                 * Creates a plain object from a QuerySpotMarketResponse message. Also converts values to other types if specified.
                 * @param message QuerySpotMarketResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QuerySpotMarketResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QuerySpotMarketResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** OrderSide enum. */
            enum OrderSide {
                Side_Unspecified = 0,
                Buy = 1,
                Sell = 2
            }

            /** Properties of a QuerySpotOrderbookRequest. */
            interface IQuerySpotOrderbookRequest {

                /** QuerySpotOrderbookRequest market_id */
                market_id?: (string|null);

                /** QuerySpotOrderbookRequest limit */
                limit?: (number|null);

                /** QuerySpotOrderbookRequest order_side */
                order_side?: (injective.exchange.v1beta1.OrderSide|null);

                /** QuerySpotOrderbookRequest limit_cumulative_notional */
                limit_cumulative_notional?: (string|null);

                /** QuerySpotOrderbookRequest limit_cumulative_quantity */
                limit_cumulative_quantity?: (string|null);
            }

            /** Represents a QuerySpotOrderbookRequest. */
            class QuerySpotOrderbookRequest implements IQuerySpotOrderbookRequest {

                /**
                 * Constructs a new QuerySpotOrderbookRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQuerySpotOrderbookRequest);

                /** QuerySpotOrderbookRequest market_id. */
                public market_id: string;

                /** QuerySpotOrderbookRequest limit. */
                public limit: number;

                /** QuerySpotOrderbookRequest order_side. */
                public order_side: injective.exchange.v1beta1.OrderSide;

                /** QuerySpotOrderbookRequest limit_cumulative_notional. */
                public limit_cumulative_notional: string;

                /** QuerySpotOrderbookRequest limit_cumulative_quantity. */
                public limit_cumulative_quantity: string;

                /**
                 * Encodes the specified QuerySpotOrderbookRequest message. Does not implicitly {@link injective.exchange.v1beta1.QuerySpotOrderbookRequest.verify|verify} messages.
                 * @param message QuerySpotOrderbookRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQuerySpotOrderbookRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QuerySpotOrderbookRequest message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QuerySpotOrderbookRequest.verify|verify} messages.
                 * @param message QuerySpotOrderbookRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQuerySpotOrderbookRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QuerySpotOrderbookRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QuerySpotOrderbookRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QuerySpotOrderbookRequest;

                /**
                 * Decodes a QuerySpotOrderbookRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QuerySpotOrderbookRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QuerySpotOrderbookRequest;

                /**
                 * Verifies a QuerySpotOrderbookRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QuerySpotOrderbookRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QuerySpotOrderbookRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QuerySpotOrderbookRequest;

                /**
                 * Creates a plain object from a QuerySpotOrderbookRequest message. Also converts values to other types if specified.
                 * @param message QuerySpotOrderbookRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QuerySpotOrderbookRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QuerySpotOrderbookRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QuerySpotOrderbookResponse. */
            interface IQuerySpotOrderbookResponse {

                /** QuerySpotOrderbookResponse buys_price_level */
                buys_price_level?: (injective.exchange.v1beta1.ILevel[]|null);

                /** QuerySpotOrderbookResponse sells_price_level */
                sells_price_level?: (injective.exchange.v1beta1.ILevel[]|null);
            }

            /** Represents a QuerySpotOrderbookResponse. */
            class QuerySpotOrderbookResponse implements IQuerySpotOrderbookResponse {

                /**
                 * Constructs a new QuerySpotOrderbookResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQuerySpotOrderbookResponse);

                /** QuerySpotOrderbookResponse buys_price_level. */
                public buys_price_level: injective.exchange.v1beta1.ILevel[];

                /** QuerySpotOrderbookResponse sells_price_level. */
                public sells_price_level: injective.exchange.v1beta1.ILevel[];

                /**
                 * Encodes the specified QuerySpotOrderbookResponse message. Does not implicitly {@link injective.exchange.v1beta1.QuerySpotOrderbookResponse.verify|verify} messages.
                 * @param message QuerySpotOrderbookResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQuerySpotOrderbookResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QuerySpotOrderbookResponse message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QuerySpotOrderbookResponse.verify|verify} messages.
                 * @param message QuerySpotOrderbookResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQuerySpotOrderbookResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QuerySpotOrderbookResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QuerySpotOrderbookResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QuerySpotOrderbookResponse;

                /**
                 * Decodes a QuerySpotOrderbookResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QuerySpotOrderbookResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QuerySpotOrderbookResponse;

                /**
                 * Verifies a QuerySpotOrderbookResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QuerySpotOrderbookResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QuerySpotOrderbookResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QuerySpotOrderbookResponse;

                /**
                 * Creates a plain object from a QuerySpotOrderbookResponse message. Also converts values to other types if specified.
                 * @param message QuerySpotOrderbookResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QuerySpotOrderbookResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QuerySpotOrderbookResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a FullSpotMarket. */
            interface IFullSpotMarket {

                /** FullSpotMarket market */
                market?: (injective.exchange.v1beta1.ISpotMarket|null);

                /** FullSpotMarket mid_price_and_tob */
                mid_price_and_tob?: (injective.exchange.v1beta1.IMidPriceAndTOB|null);
            }

            /** Represents a FullSpotMarket. */
            class FullSpotMarket implements IFullSpotMarket {

                /**
                 * Constructs a new FullSpotMarket.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IFullSpotMarket);

                /** FullSpotMarket market. */
                public market?: (injective.exchange.v1beta1.ISpotMarket|null);

                /** FullSpotMarket mid_price_and_tob. */
                public mid_price_and_tob?: (injective.exchange.v1beta1.IMidPriceAndTOB|null);

                /**
                 * Encodes the specified FullSpotMarket message. Does not implicitly {@link injective.exchange.v1beta1.FullSpotMarket.verify|verify} messages.
                 * @param message FullSpotMarket message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IFullSpotMarket, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified FullSpotMarket message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.FullSpotMarket.verify|verify} messages.
                 * @param message FullSpotMarket message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IFullSpotMarket, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a FullSpotMarket message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns FullSpotMarket
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.FullSpotMarket;

                /**
                 * Decodes a FullSpotMarket message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns FullSpotMarket
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.FullSpotMarket;

                /**
                 * Verifies a FullSpotMarket message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a FullSpotMarket message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns FullSpotMarket
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.FullSpotMarket;

                /**
                 * Creates a plain object from a FullSpotMarket message. Also converts values to other types if specified.
                 * @param message FullSpotMarket
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.FullSpotMarket, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this FullSpotMarket to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryFullSpotMarketsRequest. */
            interface IQueryFullSpotMarketsRequest {

                /** QueryFullSpotMarketsRequest status */
                status?: (string|null);

                /** QueryFullSpotMarketsRequest market_ids */
                market_ids?: (string[]|null);

                /** QueryFullSpotMarketsRequest with_mid_price_and_tob */
                with_mid_price_and_tob?: (boolean|null);
            }

            /** Represents a QueryFullSpotMarketsRequest. */
            class QueryFullSpotMarketsRequest implements IQueryFullSpotMarketsRequest {

                /**
                 * Constructs a new QueryFullSpotMarketsRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQueryFullSpotMarketsRequest);

                /** QueryFullSpotMarketsRequest status. */
                public status: string;

                /** QueryFullSpotMarketsRequest market_ids. */
                public market_ids: string[];

                /** QueryFullSpotMarketsRequest with_mid_price_and_tob. */
                public with_mid_price_and_tob: boolean;

                /**
                 * Encodes the specified QueryFullSpotMarketsRequest message. Does not implicitly {@link injective.exchange.v1beta1.QueryFullSpotMarketsRequest.verify|verify} messages.
                 * @param message QueryFullSpotMarketsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQueryFullSpotMarketsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryFullSpotMarketsRequest message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QueryFullSpotMarketsRequest.verify|verify} messages.
                 * @param message QueryFullSpotMarketsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQueryFullSpotMarketsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryFullSpotMarketsRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryFullSpotMarketsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QueryFullSpotMarketsRequest;

                /**
                 * Decodes a QueryFullSpotMarketsRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryFullSpotMarketsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QueryFullSpotMarketsRequest;

                /**
                 * Verifies a QueryFullSpotMarketsRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryFullSpotMarketsRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryFullSpotMarketsRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QueryFullSpotMarketsRequest;

                /**
                 * Creates a plain object from a QueryFullSpotMarketsRequest message. Also converts values to other types if specified.
                 * @param message QueryFullSpotMarketsRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QueryFullSpotMarketsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryFullSpotMarketsRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryFullSpotMarketsResponse. */
            interface IQueryFullSpotMarketsResponse {

                /** QueryFullSpotMarketsResponse markets */
                markets?: (injective.exchange.v1beta1.IFullSpotMarket[]|null);
            }

            /** Represents a QueryFullSpotMarketsResponse. */
            class QueryFullSpotMarketsResponse implements IQueryFullSpotMarketsResponse {

                /**
                 * Constructs a new QueryFullSpotMarketsResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQueryFullSpotMarketsResponse);

                /** QueryFullSpotMarketsResponse markets. */
                public markets: injective.exchange.v1beta1.IFullSpotMarket[];

                /**
                 * Encodes the specified QueryFullSpotMarketsResponse message. Does not implicitly {@link injective.exchange.v1beta1.QueryFullSpotMarketsResponse.verify|verify} messages.
                 * @param message QueryFullSpotMarketsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQueryFullSpotMarketsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryFullSpotMarketsResponse message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QueryFullSpotMarketsResponse.verify|verify} messages.
                 * @param message QueryFullSpotMarketsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQueryFullSpotMarketsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryFullSpotMarketsResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryFullSpotMarketsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QueryFullSpotMarketsResponse;

                /**
                 * Decodes a QueryFullSpotMarketsResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryFullSpotMarketsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QueryFullSpotMarketsResponse;

                /**
                 * Verifies a QueryFullSpotMarketsResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryFullSpotMarketsResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryFullSpotMarketsResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QueryFullSpotMarketsResponse;

                /**
                 * Creates a plain object from a QueryFullSpotMarketsResponse message. Also converts values to other types if specified.
                 * @param message QueryFullSpotMarketsResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QueryFullSpotMarketsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryFullSpotMarketsResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryFullSpotMarketRequest. */
            interface IQueryFullSpotMarketRequest {

                /** QueryFullSpotMarketRequest market_id */
                market_id?: (string|null);

                /** QueryFullSpotMarketRequest with_mid_price_and_tob */
                with_mid_price_and_tob?: (boolean|null);
            }

            /** Represents a QueryFullSpotMarketRequest. */
            class QueryFullSpotMarketRequest implements IQueryFullSpotMarketRequest {

                /**
                 * Constructs a new QueryFullSpotMarketRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQueryFullSpotMarketRequest);

                /** QueryFullSpotMarketRequest market_id. */
                public market_id: string;

                /** QueryFullSpotMarketRequest with_mid_price_and_tob. */
                public with_mid_price_and_tob: boolean;

                /**
                 * Encodes the specified QueryFullSpotMarketRequest message. Does not implicitly {@link injective.exchange.v1beta1.QueryFullSpotMarketRequest.verify|verify} messages.
                 * @param message QueryFullSpotMarketRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQueryFullSpotMarketRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryFullSpotMarketRequest message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QueryFullSpotMarketRequest.verify|verify} messages.
                 * @param message QueryFullSpotMarketRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQueryFullSpotMarketRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryFullSpotMarketRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryFullSpotMarketRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QueryFullSpotMarketRequest;

                /**
                 * Decodes a QueryFullSpotMarketRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryFullSpotMarketRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QueryFullSpotMarketRequest;

                /**
                 * Verifies a QueryFullSpotMarketRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryFullSpotMarketRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryFullSpotMarketRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QueryFullSpotMarketRequest;

                /**
                 * Creates a plain object from a QueryFullSpotMarketRequest message. Also converts values to other types if specified.
                 * @param message QueryFullSpotMarketRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QueryFullSpotMarketRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryFullSpotMarketRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryFullSpotMarketResponse. */
            interface IQueryFullSpotMarketResponse {

                /** QueryFullSpotMarketResponse market */
                market?: (injective.exchange.v1beta1.IFullSpotMarket|null);
            }

            /** Represents a QueryFullSpotMarketResponse. */
            class QueryFullSpotMarketResponse implements IQueryFullSpotMarketResponse {

                /**
                 * Constructs a new QueryFullSpotMarketResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQueryFullSpotMarketResponse);

                /** QueryFullSpotMarketResponse market. */
                public market?: (injective.exchange.v1beta1.IFullSpotMarket|null);

                /**
                 * Encodes the specified QueryFullSpotMarketResponse message. Does not implicitly {@link injective.exchange.v1beta1.QueryFullSpotMarketResponse.verify|verify} messages.
                 * @param message QueryFullSpotMarketResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQueryFullSpotMarketResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryFullSpotMarketResponse message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QueryFullSpotMarketResponse.verify|verify} messages.
                 * @param message QueryFullSpotMarketResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQueryFullSpotMarketResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryFullSpotMarketResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryFullSpotMarketResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QueryFullSpotMarketResponse;

                /**
                 * Decodes a QueryFullSpotMarketResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryFullSpotMarketResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QueryFullSpotMarketResponse;

                /**
                 * Verifies a QueryFullSpotMarketResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryFullSpotMarketResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryFullSpotMarketResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QueryFullSpotMarketResponse;

                /**
                 * Creates a plain object from a QueryFullSpotMarketResponse message. Also converts values to other types if specified.
                 * @param message QueryFullSpotMarketResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QueryFullSpotMarketResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryFullSpotMarketResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QuerySpotOrdersByHashesRequest. */
            interface IQuerySpotOrdersByHashesRequest {

                /** QuerySpotOrdersByHashesRequest market_id */
                market_id?: (string|null);

                /** QuerySpotOrdersByHashesRequest subaccount_id */
                subaccount_id?: (string|null);

                /** QuerySpotOrdersByHashesRequest order_hashes */
                order_hashes?: (string[]|null);
            }

            /** Represents a QuerySpotOrdersByHashesRequest. */
            class QuerySpotOrdersByHashesRequest implements IQuerySpotOrdersByHashesRequest {

                /**
                 * Constructs a new QuerySpotOrdersByHashesRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQuerySpotOrdersByHashesRequest);

                /** QuerySpotOrdersByHashesRequest market_id. */
                public market_id: string;

                /** QuerySpotOrdersByHashesRequest subaccount_id. */
                public subaccount_id: string;

                /** QuerySpotOrdersByHashesRequest order_hashes. */
                public order_hashes: string[];

                /**
                 * Encodes the specified QuerySpotOrdersByHashesRequest message. Does not implicitly {@link injective.exchange.v1beta1.QuerySpotOrdersByHashesRequest.verify|verify} messages.
                 * @param message QuerySpotOrdersByHashesRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQuerySpotOrdersByHashesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QuerySpotOrdersByHashesRequest message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QuerySpotOrdersByHashesRequest.verify|verify} messages.
                 * @param message QuerySpotOrdersByHashesRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQuerySpotOrdersByHashesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QuerySpotOrdersByHashesRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QuerySpotOrdersByHashesRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QuerySpotOrdersByHashesRequest;

                /**
                 * Decodes a QuerySpotOrdersByHashesRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QuerySpotOrdersByHashesRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QuerySpotOrdersByHashesRequest;

                /**
                 * Verifies a QuerySpotOrdersByHashesRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QuerySpotOrdersByHashesRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QuerySpotOrdersByHashesRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QuerySpotOrdersByHashesRequest;

                /**
                 * Creates a plain object from a QuerySpotOrdersByHashesRequest message. Also converts values to other types if specified.
                 * @param message QuerySpotOrdersByHashesRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QuerySpotOrdersByHashesRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QuerySpotOrdersByHashesRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QuerySpotOrdersByHashesResponse. */
            interface IQuerySpotOrdersByHashesResponse {

                /** QuerySpotOrdersByHashesResponse orders */
                orders?: (injective.exchange.v1beta1.ITrimmedSpotLimitOrder[]|null);
            }

            /** Represents a QuerySpotOrdersByHashesResponse. */
            class QuerySpotOrdersByHashesResponse implements IQuerySpotOrdersByHashesResponse {

                /**
                 * Constructs a new QuerySpotOrdersByHashesResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQuerySpotOrdersByHashesResponse);

                /** QuerySpotOrdersByHashesResponse orders. */
                public orders: injective.exchange.v1beta1.ITrimmedSpotLimitOrder[];

                /**
                 * Encodes the specified QuerySpotOrdersByHashesResponse message. Does not implicitly {@link injective.exchange.v1beta1.QuerySpotOrdersByHashesResponse.verify|verify} messages.
                 * @param message QuerySpotOrdersByHashesResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQuerySpotOrdersByHashesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QuerySpotOrdersByHashesResponse message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QuerySpotOrdersByHashesResponse.verify|verify} messages.
                 * @param message QuerySpotOrdersByHashesResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQuerySpotOrdersByHashesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QuerySpotOrdersByHashesResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QuerySpotOrdersByHashesResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QuerySpotOrdersByHashesResponse;

                /**
                 * Decodes a QuerySpotOrdersByHashesResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QuerySpotOrdersByHashesResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QuerySpotOrdersByHashesResponse;

                /**
                 * Verifies a QuerySpotOrdersByHashesResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QuerySpotOrdersByHashesResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QuerySpotOrdersByHashesResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QuerySpotOrdersByHashesResponse;

                /**
                 * Creates a plain object from a QuerySpotOrdersByHashesResponse message. Also converts values to other types if specified.
                 * @param message QuerySpotOrdersByHashesResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QuerySpotOrdersByHashesResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QuerySpotOrdersByHashesResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryTraderSpotOrdersRequest. */
            interface IQueryTraderSpotOrdersRequest {

                /** QueryTraderSpotOrdersRequest market_id */
                market_id?: (string|null);

                /** QueryTraderSpotOrdersRequest subaccount_id */
                subaccount_id?: (string|null);
            }

            /** Represents a QueryTraderSpotOrdersRequest. */
            class QueryTraderSpotOrdersRequest implements IQueryTraderSpotOrdersRequest {

                /**
                 * Constructs a new QueryTraderSpotOrdersRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQueryTraderSpotOrdersRequest);

                /** QueryTraderSpotOrdersRequest market_id. */
                public market_id: string;

                /** QueryTraderSpotOrdersRequest subaccount_id. */
                public subaccount_id: string;

                /**
                 * Encodes the specified QueryTraderSpotOrdersRequest message. Does not implicitly {@link injective.exchange.v1beta1.QueryTraderSpotOrdersRequest.verify|verify} messages.
                 * @param message QueryTraderSpotOrdersRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQueryTraderSpotOrdersRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryTraderSpotOrdersRequest message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QueryTraderSpotOrdersRequest.verify|verify} messages.
                 * @param message QueryTraderSpotOrdersRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQueryTraderSpotOrdersRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryTraderSpotOrdersRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryTraderSpotOrdersRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QueryTraderSpotOrdersRequest;

                /**
                 * Decodes a QueryTraderSpotOrdersRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryTraderSpotOrdersRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QueryTraderSpotOrdersRequest;

                /**
                 * Verifies a QueryTraderSpotOrdersRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryTraderSpotOrdersRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryTraderSpotOrdersRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QueryTraderSpotOrdersRequest;

                /**
                 * Creates a plain object from a QueryTraderSpotOrdersRequest message. Also converts values to other types if specified.
                 * @param message QueryTraderSpotOrdersRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QueryTraderSpotOrdersRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryTraderSpotOrdersRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryAccountAddressSpotOrdersRequest. */
            interface IQueryAccountAddressSpotOrdersRequest {

                /** QueryAccountAddressSpotOrdersRequest market_id */
                market_id?: (string|null);

                /** QueryAccountAddressSpotOrdersRequest account_address */
                account_address?: (string|null);
            }

            /** Represents a QueryAccountAddressSpotOrdersRequest. */
            class QueryAccountAddressSpotOrdersRequest implements IQueryAccountAddressSpotOrdersRequest {

                /**
                 * Constructs a new QueryAccountAddressSpotOrdersRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQueryAccountAddressSpotOrdersRequest);

                /** QueryAccountAddressSpotOrdersRequest market_id. */
                public market_id: string;

                /** QueryAccountAddressSpotOrdersRequest account_address. */
                public account_address: string;

                /**
                 * Encodes the specified QueryAccountAddressSpotOrdersRequest message. Does not implicitly {@link injective.exchange.v1beta1.QueryAccountAddressSpotOrdersRequest.verify|verify} messages.
                 * @param message QueryAccountAddressSpotOrdersRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQueryAccountAddressSpotOrdersRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryAccountAddressSpotOrdersRequest message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QueryAccountAddressSpotOrdersRequest.verify|verify} messages.
                 * @param message QueryAccountAddressSpotOrdersRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQueryAccountAddressSpotOrdersRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryAccountAddressSpotOrdersRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryAccountAddressSpotOrdersRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QueryAccountAddressSpotOrdersRequest;

                /**
                 * Decodes a QueryAccountAddressSpotOrdersRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryAccountAddressSpotOrdersRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QueryAccountAddressSpotOrdersRequest;

                /**
                 * Verifies a QueryAccountAddressSpotOrdersRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryAccountAddressSpotOrdersRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryAccountAddressSpotOrdersRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QueryAccountAddressSpotOrdersRequest;

                /**
                 * Creates a plain object from a QueryAccountAddressSpotOrdersRequest message. Also converts values to other types if specified.
                 * @param message QueryAccountAddressSpotOrdersRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QueryAccountAddressSpotOrdersRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryAccountAddressSpotOrdersRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a TrimmedSpotLimitOrder. */
            interface ITrimmedSpotLimitOrder {

                /** TrimmedSpotLimitOrder price */
                price?: (string|null);

                /** TrimmedSpotLimitOrder quantity */
                quantity?: (string|null);

                /** TrimmedSpotLimitOrder fillable */
                fillable?: (string|null);

                /** TrimmedSpotLimitOrder isBuy */
                isBuy?: (boolean|null);

                /** TrimmedSpotLimitOrder order_hash */
                order_hash?: (string|null);
            }

            /** Represents a TrimmedSpotLimitOrder. */
            class TrimmedSpotLimitOrder implements ITrimmedSpotLimitOrder {

                /**
                 * Constructs a new TrimmedSpotLimitOrder.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.ITrimmedSpotLimitOrder);

                /** TrimmedSpotLimitOrder price. */
                public price: string;

                /** TrimmedSpotLimitOrder quantity. */
                public quantity: string;

                /** TrimmedSpotLimitOrder fillable. */
                public fillable: string;

                /** TrimmedSpotLimitOrder isBuy. */
                public isBuy: boolean;

                /** TrimmedSpotLimitOrder order_hash. */
                public order_hash: string;

                /**
                 * Encodes the specified TrimmedSpotLimitOrder message. Does not implicitly {@link injective.exchange.v1beta1.TrimmedSpotLimitOrder.verify|verify} messages.
                 * @param message TrimmedSpotLimitOrder message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.ITrimmedSpotLimitOrder, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified TrimmedSpotLimitOrder message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.TrimmedSpotLimitOrder.verify|verify} messages.
                 * @param message TrimmedSpotLimitOrder message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.ITrimmedSpotLimitOrder, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a TrimmedSpotLimitOrder message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns TrimmedSpotLimitOrder
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.TrimmedSpotLimitOrder;

                /**
                 * Decodes a TrimmedSpotLimitOrder message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns TrimmedSpotLimitOrder
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.TrimmedSpotLimitOrder;

                /**
                 * Verifies a TrimmedSpotLimitOrder message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a TrimmedSpotLimitOrder message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns TrimmedSpotLimitOrder
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.TrimmedSpotLimitOrder;

                /**
                 * Creates a plain object from a TrimmedSpotLimitOrder message. Also converts values to other types if specified.
                 * @param message TrimmedSpotLimitOrder
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.TrimmedSpotLimitOrder, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this TrimmedSpotLimitOrder to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryTraderSpotOrdersResponse. */
            interface IQueryTraderSpotOrdersResponse {

                /** QueryTraderSpotOrdersResponse orders */
                orders?: (injective.exchange.v1beta1.ITrimmedSpotLimitOrder[]|null);
            }

            /** Represents a QueryTraderSpotOrdersResponse. */
            class QueryTraderSpotOrdersResponse implements IQueryTraderSpotOrdersResponse {

                /**
                 * Constructs a new QueryTraderSpotOrdersResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQueryTraderSpotOrdersResponse);

                /** QueryTraderSpotOrdersResponse orders. */
                public orders: injective.exchange.v1beta1.ITrimmedSpotLimitOrder[];

                /**
                 * Encodes the specified QueryTraderSpotOrdersResponse message. Does not implicitly {@link injective.exchange.v1beta1.QueryTraderSpotOrdersResponse.verify|verify} messages.
                 * @param message QueryTraderSpotOrdersResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQueryTraderSpotOrdersResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryTraderSpotOrdersResponse message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QueryTraderSpotOrdersResponse.verify|verify} messages.
                 * @param message QueryTraderSpotOrdersResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQueryTraderSpotOrdersResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryTraderSpotOrdersResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryTraderSpotOrdersResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QueryTraderSpotOrdersResponse;

                /**
                 * Decodes a QueryTraderSpotOrdersResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryTraderSpotOrdersResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QueryTraderSpotOrdersResponse;

                /**
                 * Verifies a QueryTraderSpotOrdersResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryTraderSpotOrdersResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryTraderSpotOrdersResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QueryTraderSpotOrdersResponse;

                /**
                 * Creates a plain object from a QueryTraderSpotOrdersResponse message. Also converts values to other types if specified.
                 * @param message QueryTraderSpotOrdersResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QueryTraderSpotOrdersResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryTraderSpotOrdersResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryAccountAddressSpotOrdersResponse. */
            interface IQueryAccountAddressSpotOrdersResponse {

                /** QueryAccountAddressSpotOrdersResponse orders */
                orders?: (injective.exchange.v1beta1.ITrimmedSpotLimitOrder[]|null);
            }

            /** Represents a QueryAccountAddressSpotOrdersResponse. */
            class QueryAccountAddressSpotOrdersResponse implements IQueryAccountAddressSpotOrdersResponse {

                /**
                 * Constructs a new QueryAccountAddressSpotOrdersResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQueryAccountAddressSpotOrdersResponse);

                /** QueryAccountAddressSpotOrdersResponse orders. */
                public orders: injective.exchange.v1beta1.ITrimmedSpotLimitOrder[];

                /**
                 * Encodes the specified QueryAccountAddressSpotOrdersResponse message. Does not implicitly {@link injective.exchange.v1beta1.QueryAccountAddressSpotOrdersResponse.verify|verify} messages.
                 * @param message QueryAccountAddressSpotOrdersResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQueryAccountAddressSpotOrdersResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryAccountAddressSpotOrdersResponse message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QueryAccountAddressSpotOrdersResponse.verify|verify} messages.
                 * @param message QueryAccountAddressSpotOrdersResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQueryAccountAddressSpotOrdersResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryAccountAddressSpotOrdersResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryAccountAddressSpotOrdersResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QueryAccountAddressSpotOrdersResponse;

                /**
                 * Decodes a QueryAccountAddressSpotOrdersResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryAccountAddressSpotOrdersResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QueryAccountAddressSpotOrdersResponse;

                /**
                 * Verifies a QueryAccountAddressSpotOrdersResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryAccountAddressSpotOrdersResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryAccountAddressSpotOrdersResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QueryAccountAddressSpotOrdersResponse;

                /**
                 * Creates a plain object from a QueryAccountAddressSpotOrdersResponse message. Also converts values to other types if specified.
                 * @param message QueryAccountAddressSpotOrdersResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QueryAccountAddressSpotOrdersResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryAccountAddressSpotOrdersResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QuerySpotMidPriceAndTOBRequest. */
            interface IQuerySpotMidPriceAndTOBRequest {

                /** QuerySpotMidPriceAndTOBRequest market_id */
                market_id?: (string|null);
            }

            /** Represents a QuerySpotMidPriceAndTOBRequest. */
            class QuerySpotMidPriceAndTOBRequest implements IQuerySpotMidPriceAndTOBRequest {

                /**
                 * Constructs a new QuerySpotMidPriceAndTOBRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQuerySpotMidPriceAndTOBRequest);

                /** QuerySpotMidPriceAndTOBRequest market_id. */
                public market_id: string;

                /**
                 * Encodes the specified QuerySpotMidPriceAndTOBRequest message. Does not implicitly {@link injective.exchange.v1beta1.QuerySpotMidPriceAndTOBRequest.verify|verify} messages.
                 * @param message QuerySpotMidPriceAndTOBRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQuerySpotMidPriceAndTOBRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QuerySpotMidPriceAndTOBRequest message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QuerySpotMidPriceAndTOBRequest.verify|verify} messages.
                 * @param message QuerySpotMidPriceAndTOBRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQuerySpotMidPriceAndTOBRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QuerySpotMidPriceAndTOBRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QuerySpotMidPriceAndTOBRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QuerySpotMidPriceAndTOBRequest;

                /**
                 * Decodes a QuerySpotMidPriceAndTOBRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QuerySpotMidPriceAndTOBRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QuerySpotMidPriceAndTOBRequest;

                /**
                 * Verifies a QuerySpotMidPriceAndTOBRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QuerySpotMidPriceAndTOBRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QuerySpotMidPriceAndTOBRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QuerySpotMidPriceAndTOBRequest;

                /**
                 * Creates a plain object from a QuerySpotMidPriceAndTOBRequest message. Also converts values to other types if specified.
                 * @param message QuerySpotMidPriceAndTOBRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QuerySpotMidPriceAndTOBRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QuerySpotMidPriceAndTOBRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QuerySpotMidPriceAndTOBResponse. */
            interface IQuerySpotMidPriceAndTOBResponse {

                /** QuerySpotMidPriceAndTOBResponse mid_price */
                mid_price?: (string|null);

                /** QuerySpotMidPriceAndTOBResponse best_buy_price */
                best_buy_price?: (string|null);

                /** QuerySpotMidPriceAndTOBResponse best_sell_price */
                best_sell_price?: (string|null);
            }

            /** Represents a QuerySpotMidPriceAndTOBResponse. */
            class QuerySpotMidPriceAndTOBResponse implements IQuerySpotMidPriceAndTOBResponse {

                /**
                 * Constructs a new QuerySpotMidPriceAndTOBResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQuerySpotMidPriceAndTOBResponse);

                /** QuerySpotMidPriceAndTOBResponse mid_price. */
                public mid_price: string;

                /** QuerySpotMidPriceAndTOBResponse best_buy_price. */
                public best_buy_price: string;

                /** QuerySpotMidPriceAndTOBResponse best_sell_price. */
                public best_sell_price: string;

                /**
                 * Encodes the specified QuerySpotMidPriceAndTOBResponse message. Does not implicitly {@link injective.exchange.v1beta1.QuerySpotMidPriceAndTOBResponse.verify|verify} messages.
                 * @param message QuerySpotMidPriceAndTOBResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQuerySpotMidPriceAndTOBResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QuerySpotMidPriceAndTOBResponse message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QuerySpotMidPriceAndTOBResponse.verify|verify} messages.
                 * @param message QuerySpotMidPriceAndTOBResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQuerySpotMidPriceAndTOBResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QuerySpotMidPriceAndTOBResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QuerySpotMidPriceAndTOBResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QuerySpotMidPriceAndTOBResponse;

                /**
                 * Decodes a QuerySpotMidPriceAndTOBResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QuerySpotMidPriceAndTOBResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QuerySpotMidPriceAndTOBResponse;

                /**
                 * Verifies a QuerySpotMidPriceAndTOBResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QuerySpotMidPriceAndTOBResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QuerySpotMidPriceAndTOBResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QuerySpotMidPriceAndTOBResponse;

                /**
                 * Creates a plain object from a QuerySpotMidPriceAndTOBResponse message. Also converts values to other types if specified.
                 * @param message QuerySpotMidPriceAndTOBResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QuerySpotMidPriceAndTOBResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QuerySpotMidPriceAndTOBResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryDerivativeMidPriceAndTOBRequest. */
            interface IQueryDerivativeMidPriceAndTOBRequest {

                /** QueryDerivativeMidPriceAndTOBRequest market_id */
                market_id?: (string|null);
            }

            /** Represents a QueryDerivativeMidPriceAndTOBRequest. */
            class QueryDerivativeMidPriceAndTOBRequest implements IQueryDerivativeMidPriceAndTOBRequest {

                /**
                 * Constructs a new QueryDerivativeMidPriceAndTOBRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQueryDerivativeMidPriceAndTOBRequest);

                /** QueryDerivativeMidPriceAndTOBRequest market_id. */
                public market_id: string;

                /**
                 * Encodes the specified QueryDerivativeMidPriceAndTOBRequest message. Does not implicitly {@link injective.exchange.v1beta1.QueryDerivativeMidPriceAndTOBRequest.verify|verify} messages.
                 * @param message QueryDerivativeMidPriceAndTOBRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQueryDerivativeMidPriceAndTOBRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryDerivativeMidPriceAndTOBRequest message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QueryDerivativeMidPriceAndTOBRequest.verify|verify} messages.
                 * @param message QueryDerivativeMidPriceAndTOBRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQueryDerivativeMidPriceAndTOBRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryDerivativeMidPriceAndTOBRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryDerivativeMidPriceAndTOBRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QueryDerivativeMidPriceAndTOBRequest;

                /**
                 * Decodes a QueryDerivativeMidPriceAndTOBRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryDerivativeMidPriceAndTOBRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QueryDerivativeMidPriceAndTOBRequest;

                /**
                 * Verifies a QueryDerivativeMidPriceAndTOBRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryDerivativeMidPriceAndTOBRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryDerivativeMidPriceAndTOBRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QueryDerivativeMidPriceAndTOBRequest;

                /**
                 * Creates a plain object from a QueryDerivativeMidPriceAndTOBRequest message. Also converts values to other types if specified.
                 * @param message QueryDerivativeMidPriceAndTOBRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QueryDerivativeMidPriceAndTOBRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryDerivativeMidPriceAndTOBRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryDerivativeMidPriceAndTOBResponse. */
            interface IQueryDerivativeMidPriceAndTOBResponse {

                /** QueryDerivativeMidPriceAndTOBResponse mid_price */
                mid_price?: (string|null);

                /** QueryDerivativeMidPriceAndTOBResponse best_buy_price */
                best_buy_price?: (string|null);

                /** QueryDerivativeMidPriceAndTOBResponse best_sell_price */
                best_sell_price?: (string|null);
            }

            /** Represents a QueryDerivativeMidPriceAndTOBResponse. */
            class QueryDerivativeMidPriceAndTOBResponse implements IQueryDerivativeMidPriceAndTOBResponse {

                /**
                 * Constructs a new QueryDerivativeMidPriceAndTOBResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQueryDerivativeMidPriceAndTOBResponse);

                /** QueryDerivativeMidPriceAndTOBResponse mid_price. */
                public mid_price: string;

                /** QueryDerivativeMidPriceAndTOBResponse best_buy_price. */
                public best_buy_price: string;

                /** QueryDerivativeMidPriceAndTOBResponse best_sell_price. */
                public best_sell_price: string;

                /**
                 * Encodes the specified QueryDerivativeMidPriceAndTOBResponse message. Does not implicitly {@link injective.exchange.v1beta1.QueryDerivativeMidPriceAndTOBResponse.verify|verify} messages.
                 * @param message QueryDerivativeMidPriceAndTOBResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQueryDerivativeMidPriceAndTOBResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryDerivativeMidPriceAndTOBResponse message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QueryDerivativeMidPriceAndTOBResponse.verify|verify} messages.
                 * @param message QueryDerivativeMidPriceAndTOBResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQueryDerivativeMidPriceAndTOBResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryDerivativeMidPriceAndTOBResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryDerivativeMidPriceAndTOBResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QueryDerivativeMidPriceAndTOBResponse;

                /**
                 * Decodes a QueryDerivativeMidPriceAndTOBResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryDerivativeMidPriceAndTOBResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QueryDerivativeMidPriceAndTOBResponse;

                /**
                 * Verifies a QueryDerivativeMidPriceAndTOBResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryDerivativeMidPriceAndTOBResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryDerivativeMidPriceAndTOBResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QueryDerivativeMidPriceAndTOBResponse;

                /**
                 * Creates a plain object from a QueryDerivativeMidPriceAndTOBResponse message. Also converts values to other types if specified.
                 * @param message QueryDerivativeMidPriceAndTOBResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QueryDerivativeMidPriceAndTOBResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryDerivativeMidPriceAndTOBResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryDerivativeOrderbookRequest. */
            interface IQueryDerivativeOrderbookRequest {

                /** QueryDerivativeOrderbookRequest market_id */
                market_id?: (string|null);

                /** QueryDerivativeOrderbookRequest limit */
                limit?: (number|null);

                /** QueryDerivativeOrderbookRequest limit_cumulative_notional */
                limit_cumulative_notional?: (string|null);
            }

            /** Represents a QueryDerivativeOrderbookRequest. */
            class QueryDerivativeOrderbookRequest implements IQueryDerivativeOrderbookRequest {

                /**
                 * Constructs a new QueryDerivativeOrderbookRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQueryDerivativeOrderbookRequest);

                /** QueryDerivativeOrderbookRequest market_id. */
                public market_id: string;

                /** QueryDerivativeOrderbookRequest limit. */
                public limit: number;

                /** QueryDerivativeOrderbookRequest limit_cumulative_notional. */
                public limit_cumulative_notional: string;

                /**
                 * Encodes the specified QueryDerivativeOrderbookRequest message. Does not implicitly {@link injective.exchange.v1beta1.QueryDerivativeOrderbookRequest.verify|verify} messages.
                 * @param message QueryDerivativeOrderbookRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQueryDerivativeOrderbookRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryDerivativeOrderbookRequest message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QueryDerivativeOrderbookRequest.verify|verify} messages.
                 * @param message QueryDerivativeOrderbookRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQueryDerivativeOrderbookRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryDerivativeOrderbookRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryDerivativeOrderbookRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QueryDerivativeOrderbookRequest;

                /**
                 * Decodes a QueryDerivativeOrderbookRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryDerivativeOrderbookRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QueryDerivativeOrderbookRequest;

                /**
                 * Verifies a QueryDerivativeOrderbookRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryDerivativeOrderbookRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryDerivativeOrderbookRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QueryDerivativeOrderbookRequest;

                /**
                 * Creates a plain object from a QueryDerivativeOrderbookRequest message. Also converts values to other types if specified.
                 * @param message QueryDerivativeOrderbookRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QueryDerivativeOrderbookRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryDerivativeOrderbookRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryDerivativeOrderbookResponse. */
            interface IQueryDerivativeOrderbookResponse {

                /** QueryDerivativeOrderbookResponse buys_price_level */
                buys_price_level?: (injective.exchange.v1beta1.ILevel[]|null);

                /** QueryDerivativeOrderbookResponse sells_price_level */
                sells_price_level?: (injective.exchange.v1beta1.ILevel[]|null);
            }

            /** Represents a QueryDerivativeOrderbookResponse. */
            class QueryDerivativeOrderbookResponse implements IQueryDerivativeOrderbookResponse {

                /**
                 * Constructs a new QueryDerivativeOrderbookResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQueryDerivativeOrderbookResponse);

                /** QueryDerivativeOrderbookResponse buys_price_level. */
                public buys_price_level: injective.exchange.v1beta1.ILevel[];

                /** QueryDerivativeOrderbookResponse sells_price_level. */
                public sells_price_level: injective.exchange.v1beta1.ILevel[];

                /**
                 * Encodes the specified QueryDerivativeOrderbookResponse message. Does not implicitly {@link injective.exchange.v1beta1.QueryDerivativeOrderbookResponse.verify|verify} messages.
                 * @param message QueryDerivativeOrderbookResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQueryDerivativeOrderbookResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryDerivativeOrderbookResponse message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QueryDerivativeOrderbookResponse.verify|verify} messages.
                 * @param message QueryDerivativeOrderbookResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQueryDerivativeOrderbookResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryDerivativeOrderbookResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryDerivativeOrderbookResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QueryDerivativeOrderbookResponse;

                /**
                 * Decodes a QueryDerivativeOrderbookResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryDerivativeOrderbookResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QueryDerivativeOrderbookResponse;

                /**
                 * Verifies a QueryDerivativeOrderbookResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryDerivativeOrderbookResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryDerivativeOrderbookResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QueryDerivativeOrderbookResponse;

                /**
                 * Creates a plain object from a QueryDerivativeOrderbookResponse message. Also converts values to other types if specified.
                 * @param message QueryDerivativeOrderbookResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QueryDerivativeOrderbookResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryDerivativeOrderbookResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** CancellationStrategy enum. */
            enum CancellationStrategy {
                UnspecifiedOrder = 0,
                FromWorstToBest = 1,
                FromBestToWorst = 2
            }

            /** Properties of a QueryTraderSpotOrdersToCancelUpToAmountRequest. */
            interface IQueryTraderSpotOrdersToCancelUpToAmountRequest {

                /** QueryTraderSpotOrdersToCancelUpToAmountRequest market_id */
                market_id?: (string|null);

                /** QueryTraderSpotOrdersToCancelUpToAmountRequest subaccount_id */
                subaccount_id?: (string|null);

                /** QueryTraderSpotOrdersToCancelUpToAmountRequest base_amount */
                base_amount?: (string|null);

                /** QueryTraderSpotOrdersToCancelUpToAmountRequest quote_amount */
                quote_amount?: (string|null);

                /** QueryTraderSpotOrdersToCancelUpToAmountRequest strategy */
                strategy?: (injective.exchange.v1beta1.CancellationStrategy|null);

                /** QueryTraderSpotOrdersToCancelUpToAmountRequest reference_price */
                reference_price?: (string|null);
            }

            /** Represents a QueryTraderSpotOrdersToCancelUpToAmountRequest. */
            class QueryTraderSpotOrdersToCancelUpToAmountRequest implements IQueryTraderSpotOrdersToCancelUpToAmountRequest {

                /**
                 * Constructs a new QueryTraderSpotOrdersToCancelUpToAmountRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQueryTraderSpotOrdersToCancelUpToAmountRequest);

                /** QueryTraderSpotOrdersToCancelUpToAmountRequest market_id. */
                public market_id: string;

                /** QueryTraderSpotOrdersToCancelUpToAmountRequest subaccount_id. */
                public subaccount_id: string;

                /** QueryTraderSpotOrdersToCancelUpToAmountRequest base_amount. */
                public base_amount: string;

                /** QueryTraderSpotOrdersToCancelUpToAmountRequest quote_amount. */
                public quote_amount: string;

                /** QueryTraderSpotOrdersToCancelUpToAmountRequest strategy. */
                public strategy: injective.exchange.v1beta1.CancellationStrategy;

                /** QueryTraderSpotOrdersToCancelUpToAmountRequest reference_price. */
                public reference_price: string;

                /**
                 * Encodes the specified QueryTraderSpotOrdersToCancelUpToAmountRequest message. Does not implicitly {@link injective.exchange.v1beta1.QueryTraderSpotOrdersToCancelUpToAmountRequest.verify|verify} messages.
                 * @param message QueryTraderSpotOrdersToCancelUpToAmountRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQueryTraderSpotOrdersToCancelUpToAmountRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryTraderSpotOrdersToCancelUpToAmountRequest message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QueryTraderSpotOrdersToCancelUpToAmountRequest.verify|verify} messages.
                 * @param message QueryTraderSpotOrdersToCancelUpToAmountRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQueryTraderSpotOrdersToCancelUpToAmountRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryTraderSpotOrdersToCancelUpToAmountRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryTraderSpotOrdersToCancelUpToAmountRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QueryTraderSpotOrdersToCancelUpToAmountRequest;

                /**
                 * Decodes a QueryTraderSpotOrdersToCancelUpToAmountRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryTraderSpotOrdersToCancelUpToAmountRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QueryTraderSpotOrdersToCancelUpToAmountRequest;

                /**
                 * Verifies a QueryTraderSpotOrdersToCancelUpToAmountRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryTraderSpotOrdersToCancelUpToAmountRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryTraderSpotOrdersToCancelUpToAmountRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QueryTraderSpotOrdersToCancelUpToAmountRequest;

                /**
                 * Creates a plain object from a QueryTraderSpotOrdersToCancelUpToAmountRequest message. Also converts values to other types if specified.
                 * @param message QueryTraderSpotOrdersToCancelUpToAmountRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QueryTraderSpotOrdersToCancelUpToAmountRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryTraderSpotOrdersToCancelUpToAmountRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryTraderDerivativeOrdersToCancelUpToAmountRequest. */
            interface IQueryTraderDerivativeOrdersToCancelUpToAmountRequest {

                /** QueryTraderDerivativeOrdersToCancelUpToAmountRequest market_id */
                market_id?: (string|null);

                /** QueryTraderDerivativeOrdersToCancelUpToAmountRequest subaccount_id */
                subaccount_id?: (string|null);

                /** QueryTraderDerivativeOrdersToCancelUpToAmountRequest quote_amount */
                quote_amount?: (string|null);

                /** QueryTraderDerivativeOrdersToCancelUpToAmountRequest strategy */
                strategy?: (injective.exchange.v1beta1.CancellationStrategy|null);

                /** QueryTraderDerivativeOrdersToCancelUpToAmountRequest reference_price */
                reference_price?: (string|null);
            }

            /** Represents a QueryTraderDerivativeOrdersToCancelUpToAmountRequest. */
            class QueryTraderDerivativeOrdersToCancelUpToAmountRequest implements IQueryTraderDerivativeOrdersToCancelUpToAmountRequest {

                /**
                 * Constructs a new QueryTraderDerivativeOrdersToCancelUpToAmountRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQueryTraderDerivativeOrdersToCancelUpToAmountRequest);

                /** QueryTraderDerivativeOrdersToCancelUpToAmountRequest market_id. */
                public market_id: string;

                /** QueryTraderDerivativeOrdersToCancelUpToAmountRequest subaccount_id. */
                public subaccount_id: string;

                /** QueryTraderDerivativeOrdersToCancelUpToAmountRequest quote_amount. */
                public quote_amount: string;

                /** QueryTraderDerivativeOrdersToCancelUpToAmountRequest strategy. */
                public strategy: injective.exchange.v1beta1.CancellationStrategy;

                /** QueryTraderDerivativeOrdersToCancelUpToAmountRequest reference_price. */
                public reference_price: string;

                /**
                 * Encodes the specified QueryTraderDerivativeOrdersToCancelUpToAmountRequest message. Does not implicitly {@link injective.exchange.v1beta1.QueryTraderDerivativeOrdersToCancelUpToAmountRequest.verify|verify} messages.
                 * @param message QueryTraderDerivativeOrdersToCancelUpToAmountRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQueryTraderDerivativeOrdersToCancelUpToAmountRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryTraderDerivativeOrdersToCancelUpToAmountRequest message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QueryTraderDerivativeOrdersToCancelUpToAmountRequest.verify|verify} messages.
                 * @param message QueryTraderDerivativeOrdersToCancelUpToAmountRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQueryTraderDerivativeOrdersToCancelUpToAmountRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryTraderDerivativeOrdersToCancelUpToAmountRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryTraderDerivativeOrdersToCancelUpToAmountRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QueryTraderDerivativeOrdersToCancelUpToAmountRequest;

                /**
                 * Decodes a QueryTraderDerivativeOrdersToCancelUpToAmountRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryTraderDerivativeOrdersToCancelUpToAmountRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QueryTraderDerivativeOrdersToCancelUpToAmountRequest;

                /**
                 * Verifies a QueryTraderDerivativeOrdersToCancelUpToAmountRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryTraderDerivativeOrdersToCancelUpToAmountRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryTraderDerivativeOrdersToCancelUpToAmountRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QueryTraderDerivativeOrdersToCancelUpToAmountRequest;

                /**
                 * Creates a plain object from a QueryTraderDerivativeOrdersToCancelUpToAmountRequest message. Also converts values to other types if specified.
                 * @param message QueryTraderDerivativeOrdersToCancelUpToAmountRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QueryTraderDerivativeOrdersToCancelUpToAmountRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryTraderDerivativeOrdersToCancelUpToAmountRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryTraderDerivativeOrdersRequest. */
            interface IQueryTraderDerivativeOrdersRequest {

                /** QueryTraderDerivativeOrdersRequest market_id */
                market_id?: (string|null);

                /** QueryTraderDerivativeOrdersRequest subaccount_id */
                subaccount_id?: (string|null);
            }

            /** Represents a QueryTraderDerivativeOrdersRequest. */
            class QueryTraderDerivativeOrdersRequest implements IQueryTraderDerivativeOrdersRequest {

                /**
                 * Constructs a new QueryTraderDerivativeOrdersRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQueryTraderDerivativeOrdersRequest);

                /** QueryTraderDerivativeOrdersRequest market_id. */
                public market_id: string;

                /** QueryTraderDerivativeOrdersRequest subaccount_id. */
                public subaccount_id: string;

                /**
                 * Encodes the specified QueryTraderDerivativeOrdersRequest message. Does not implicitly {@link injective.exchange.v1beta1.QueryTraderDerivativeOrdersRequest.verify|verify} messages.
                 * @param message QueryTraderDerivativeOrdersRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQueryTraderDerivativeOrdersRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryTraderDerivativeOrdersRequest message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QueryTraderDerivativeOrdersRequest.verify|verify} messages.
                 * @param message QueryTraderDerivativeOrdersRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQueryTraderDerivativeOrdersRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryTraderDerivativeOrdersRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryTraderDerivativeOrdersRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QueryTraderDerivativeOrdersRequest;

                /**
                 * Decodes a QueryTraderDerivativeOrdersRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryTraderDerivativeOrdersRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QueryTraderDerivativeOrdersRequest;

                /**
                 * Verifies a QueryTraderDerivativeOrdersRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryTraderDerivativeOrdersRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryTraderDerivativeOrdersRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QueryTraderDerivativeOrdersRequest;

                /**
                 * Creates a plain object from a QueryTraderDerivativeOrdersRequest message. Also converts values to other types if specified.
                 * @param message QueryTraderDerivativeOrdersRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QueryTraderDerivativeOrdersRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryTraderDerivativeOrdersRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryAccountAddressDerivativeOrdersRequest. */
            interface IQueryAccountAddressDerivativeOrdersRequest {

                /** QueryAccountAddressDerivativeOrdersRequest market_id */
                market_id?: (string|null);

                /** QueryAccountAddressDerivativeOrdersRequest account_address */
                account_address?: (string|null);
            }

            /** Represents a QueryAccountAddressDerivativeOrdersRequest. */
            class QueryAccountAddressDerivativeOrdersRequest implements IQueryAccountAddressDerivativeOrdersRequest {

                /**
                 * Constructs a new QueryAccountAddressDerivativeOrdersRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQueryAccountAddressDerivativeOrdersRequest);

                /** QueryAccountAddressDerivativeOrdersRequest market_id. */
                public market_id: string;

                /** QueryAccountAddressDerivativeOrdersRequest account_address. */
                public account_address: string;

                /**
                 * Encodes the specified QueryAccountAddressDerivativeOrdersRequest message. Does not implicitly {@link injective.exchange.v1beta1.QueryAccountAddressDerivativeOrdersRequest.verify|verify} messages.
                 * @param message QueryAccountAddressDerivativeOrdersRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQueryAccountAddressDerivativeOrdersRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryAccountAddressDerivativeOrdersRequest message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QueryAccountAddressDerivativeOrdersRequest.verify|verify} messages.
                 * @param message QueryAccountAddressDerivativeOrdersRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQueryAccountAddressDerivativeOrdersRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryAccountAddressDerivativeOrdersRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryAccountAddressDerivativeOrdersRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QueryAccountAddressDerivativeOrdersRequest;

                /**
                 * Decodes a QueryAccountAddressDerivativeOrdersRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryAccountAddressDerivativeOrdersRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QueryAccountAddressDerivativeOrdersRequest;

                /**
                 * Verifies a QueryAccountAddressDerivativeOrdersRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryAccountAddressDerivativeOrdersRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryAccountAddressDerivativeOrdersRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QueryAccountAddressDerivativeOrdersRequest;

                /**
                 * Creates a plain object from a QueryAccountAddressDerivativeOrdersRequest message. Also converts values to other types if specified.
                 * @param message QueryAccountAddressDerivativeOrdersRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QueryAccountAddressDerivativeOrdersRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryAccountAddressDerivativeOrdersRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a TrimmedDerivativeLimitOrder. */
            interface ITrimmedDerivativeLimitOrder {

                /** TrimmedDerivativeLimitOrder price */
                price?: (string|null);

                /** TrimmedDerivativeLimitOrder quantity */
                quantity?: (string|null);

                /** TrimmedDerivativeLimitOrder margin */
                margin?: (string|null);

                /** TrimmedDerivativeLimitOrder fillable */
                fillable?: (string|null);

                /** TrimmedDerivativeLimitOrder isBuy */
                isBuy?: (boolean|null);

                /** TrimmedDerivativeLimitOrder order_hash */
                order_hash?: (string|null);
            }

            /** Represents a TrimmedDerivativeLimitOrder. */
            class TrimmedDerivativeLimitOrder implements ITrimmedDerivativeLimitOrder {

                /**
                 * Constructs a new TrimmedDerivativeLimitOrder.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.ITrimmedDerivativeLimitOrder);

                /** TrimmedDerivativeLimitOrder price. */
                public price: string;

                /** TrimmedDerivativeLimitOrder quantity. */
                public quantity: string;

                /** TrimmedDerivativeLimitOrder margin. */
                public margin: string;

                /** TrimmedDerivativeLimitOrder fillable. */
                public fillable: string;

                /** TrimmedDerivativeLimitOrder isBuy. */
                public isBuy: boolean;

                /** TrimmedDerivativeLimitOrder order_hash. */
                public order_hash: string;

                /**
                 * Encodes the specified TrimmedDerivativeLimitOrder message. Does not implicitly {@link injective.exchange.v1beta1.TrimmedDerivativeLimitOrder.verify|verify} messages.
                 * @param message TrimmedDerivativeLimitOrder message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.ITrimmedDerivativeLimitOrder, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified TrimmedDerivativeLimitOrder message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.TrimmedDerivativeLimitOrder.verify|verify} messages.
                 * @param message TrimmedDerivativeLimitOrder message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.ITrimmedDerivativeLimitOrder, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a TrimmedDerivativeLimitOrder message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns TrimmedDerivativeLimitOrder
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.TrimmedDerivativeLimitOrder;

                /**
                 * Decodes a TrimmedDerivativeLimitOrder message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns TrimmedDerivativeLimitOrder
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.TrimmedDerivativeLimitOrder;

                /**
                 * Verifies a TrimmedDerivativeLimitOrder message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a TrimmedDerivativeLimitOrder message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns TrimmedDerivativeLimitOrder
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.TrimmedDerivativeLimitOrder;

                /**
                 * Creates a plain object from a TrimmedDerivativeLimitOrder message. Also converts values to other types if specified.
                 * @param message TrimmedDerivativeLimitOrder
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.TrimmedDerivativeLimitOrder, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this TrimmedDerivativeLimitOrder to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryTraderDerivativeOrdersResponse. */
            interface IQueryTraderDerivativeOrdersResponse {

                /** QueryTraderDerivativeOrdersResponse orders */
                orders?: (injective.exchange.v1beta1.ITrimmedDerivativeLimitOrder[]|null);
            }

            /** Represents a QueryTraderDerivativeOrdersResponse. */
            class QueryTraderDerivativeOrdersResponse implements IQueryTraderDerivativeOrdersResponse {

                /**
                 * Constructs a new QueryTraderDerivativeOrdersResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQueryTraderDerivativeOrdersResponse);

                /** QueryTraderDerivativeOrdersResponse orders. */
                public orders: injective.exchange.v1beta1.ITrimmedDerivativeLimitOrder[];

                /**
                 * Encodes the specified QueryTraderDerivativeOrdersResponse message. Does not implicitly {@link injective.exchange.v1beta1.QueryTraderDerivativeOrdersResponse.verify|verify} messages.
                 * @param message QueryTraderDerivativeOrdersResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQueryTraderDerivativeOrdersResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryTraderDerivativeOrdersResponse message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QueryTraderDerivativeOrdersResponse.verify|verify} messages.
                 * @param message QueryTraderDerivativeOrdersResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQueryTraderDerivativeOrdersResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryTraderDerivativeOrdersResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryTraderDerivativeOrdersResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QueryTraderDerivativeOrdersResponse;

                /**
                 * Decodes a QueryTraderDerivativeOrdersResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryTraderDerivativeOrdersResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QueryTraderDerivativeOrdersResponse;

                /**
                 * Verifies a QueryTraderDerivativeOrdersResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryTraderDerivativeOrdersResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryTraderDerivativeOrdersResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QueryTraderDerivativeOrdersResponse;

                /**
                 * Creates a plain object from a QueryTraderDerivativeOrdersResponse message. Also converts values to other types if specified.
                 * @param message QueryTraderDerivativeOrdersResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QueryTraderDerivativeOrdersResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryTraderDerivativeOrdersResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryAccountAddressDerivativeOrdersResponse. */
            interface IQueryAccountAddressDerivativeOrdersResponse {

                /** QueryAccountAddressDerivativeOrdersResponse orders */
                orders?: (injective.exchange.v1beta1.ITrimmedDerivativeLimitOrder[]|null);
            }

            /** Represents a QueryAccountAddressDerivativeOrdersResponse. */
            class QueryAccountAddressDerivativeOrdersResponse implements IQueryAccountAddressDerivativeOrdersResponse {

                /**
                 * Constructs a new QueryAccountAddressDerivativeOrdersResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQueryAccountAddressDerivativeOrdersResponse);

                /** QueryAccountAddressDerivativeOrdersResponse orders. */
                public orders: injective.exchange.v1beta1.ITrimmedDerivativeLimitOrder[];

                /**
                 * Encodes the specified QueryAccountAddressDerivativeOrdersResponse message. Does not implicitly {@link injective.exchange.v1beta1.QueryAccountAddressDerivativeOrdersResponse.verify|verify} messages.
                 * @param message QueryAccountAddressDerivativeOrdersResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQueryAccountAddressDerivativeOrdersResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryAccountAddressDerivativeOrdersResponse message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QueryAccountAddressDerivativeOrdersResponse.verify|verify} messages.
                 * @param message QueryAccountAddressDerivativeOrdersResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQueryAccountAddressDerivativeOrdersResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryAccountAddressDerivativeOrdersResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryAccountAddressDerivativeOrdersResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QueryAccountAddressDerivativeOrdersResponse;

                /**
                 * Decodes a QueryAccountAddressDerivativeOrdersResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryAccountAddressDerivativeOrdersResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QueryAccountAddressDerivativeOrdersResponse;

                /**
                 * Verifies a QueryAccountAddressDerivativeOrdersResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryAccountAddressDerivativeOrdersResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryAccountAddressDerivativeOrdersResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QueryAccountAddressDerivativeOrdersResponse;

                /**
                 * Creates a plain object from a QueryAccountAddressDerivativeOrdersResponse message. Also converts values to other types if specified.
                 * @param message QueryAccountAddressDerivativeOrdersResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QueryAccountAddressDerivativeOrdersResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryAccountAddressDerivativeOrdersResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryDerivativeOrdersByHashesRequest. */
            interface IQueryDerivativeOrdersByHashesRequest {

                /** QueryDerivativeOrdersByHashesRequest market_id */
                market_id?: (string|null);

                /** QueryDerivativeOrdersByHashesRequest subaccount_id */
                subaccount_id?: (string|null);

                /** QueryDerivativeOrdersByHashesRequest order_hashes */
                order_hashes?: (string[]|null);
            }

            /** Represents a QueryDerivativeOrdersByHashesRequest. */
            class QueryDerivativeOrdersByHashesRequest implements IQueryDerivativeOrdersByHashesRequest {

                /**
                 * Constructs a new QueryDerivativeOrdersByHashesRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQueryDerivativeOrdersByHashesRequest);

                /** QueryDerivativeOrdersByHashesRequest market_id. */
                public market_id: string;

                /** QueryDerivativeOrdersByHashesRequest subaccount_id. */
                public subaccount_id: string;

                /** QueryDerivativeOrdersByHashesRequest order_hashes. */
                public order_hashes: string[];

                /**
                 * Encodes the specified QueryDerivativeOrdersByHashesRequest message. Does not implicitly {@link injective.exchange.v1beta1.QueryDerivativeOrdersByHashesRequest.verify|verify} messages.
                 * @param message QueryDerivativeOrdersByHashesRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQueryDerivativeOrdersByHashesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryDerivativeOrdersByHashesRequest message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QueryDerivativeOrdersByHashesRequest.verify|verify} messages.
                 * @param message QueryDerivativeOrdersByHashesRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQueryDerivativeOrdersByHashesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryDerivativeOrdersByHashesRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryDerivativeOrdersByHashesRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QueryDerivativeOrdersByHashesRequest;

                /**
                 * Decodes a QueryDerivativeOrdersByHashesRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryDerivativeOrdersByHashesRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QueryDerivativeOrdersByHashesRequest;

                /**
                 * Verifies a QueryDerivativeOrdersByHashesRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryDerivativeOrdersByHashesRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryDerivativeOrdersByHashesRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QueryDerivativeOrdersByHashesRequest;

                /**
                 * Creates a plain object from a QueryDerivativeOrdersByHashesRequest message. Also converts values to other types if specified.
                 * @param message QueryDerivativeOrdersByHashesRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QueryDerivativeOrdersByHashesRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryDerivativeOrdersByHashesRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryDerivativeOrdersByHashesResponse. */
            interface IQueryDerivativeOrdersByHashesResponse {

                /** QueryDerivativeOrdersByHashesResponse orders */
                orders?: (injective.exchange.v1beta1.ITrimmedDerivativeLimitOrder[]|null);
            }

            /** Represents a QueryDerivativeOrdersByHashesResponse. */
            class QueryDerivativeOrdersByHashesResponse implements IQueryDerivativeOrdersByHashesResponse {

                /**
                 * Constructs a new QueryDerivativeOrdersByHashesResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQueryDerivativeOrdersByHashesResponse);

                /** QueryDerivativeOrdersByHashesResponse orders. */
                public orders: injective.exchange.v1beta1.ITrimmedDerivativeLimitOrder[];

                /**
                 * Encodes the specified QueryDerivativeOrdersByHashesResponse message. Does not implicitly {@link injective.exchange.v1beta1.QueryDerivativeOrdersByHashesResponse.verify|verify} messages.
                 * @param message QueryDerivativeOrdersByHashesResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQueryDerivativeOrdersByHashesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryDerivativeOrdersByHashesResponse message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QueryDerivativeOrdersByHashesResponse.verify|verify} messages.
                 * @param message QueryDerivativeOrdersByHashesResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQueryDerivativeOrdersByHashesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryDerivativeOrdersByHashesResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryDerivativeOrdersByHashesResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QueryDerivativeOrdersByHashesResponse;

                /**
                 * Decodes a QueryDerivativeOrdersByHashesResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryDerivativeOrdersByHashesResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QueryDerivativeOrdersByHashesResponse;

                /**
                 * Verifies a QueryDerivativeOrdersByHashesResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryDerivativeOrdersByHashesResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryDerivativeOrdersByHashesResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QueryDerivativeOrdersByHashesResponse;

                /**
                 * Creates a plain object from a QueryDerivativeOrdersByHashesResponse message. Also converts values to other types if specified.
                 * @param message QueryDerivativeOrdersByHashesResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QueryDerivativeOrdersByHashesResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryDerivativeOrdersByHashesResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryDerivativeMarketsRequest. */
            interface IQueryDerivativeMarketsRequest {

                /** QueryDerivativeMarketsRequest status */
                status?: (string|null);

                /** QueryDerivativeMarketsRequest market_ids */
                market_ids?: (string[]|null);

                /** QueryDerivativeMarketsRequest with_mid_price_and_tob */
                with_mid_price_and_tob?: (boolean|null);
            }

            /** Represents a QueryDerivativeMarketsRequest. */
            class QueryDerivativeMarketsRequest implements IQueryDerivativeMarketsRequest {

                /**
                 * Constructs a new QueryDerivativeMarketsRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQueryDerivativeMarketsRequest);

                /** QueryDerivativeMarketsRequest status. */
                public status: string;

                /** QueryDerivativeMarketsRequest market_ids. */
                public market_ids: string[];

                /** QueryDerivativeMarketsRequest with_mid_price_and_tob. */
                public with_mid_price_and_tob: boolean;

                /**
                 * Encodes the specified QueryDerivativeMarketsRequest message. Does not implicitly {@link injective.exchange.v1beta1.QueryDerivativeMarketsRequest.verify|verify} messages.
                 * @param message QueryDerivativeMarketsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQueryDerivativeMarketsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryDerivativeMarketsRequest message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QueryDerivativeMarketsRequest.verify|verify} messages.
                 * @param message QueryDerivativeMarketsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQueryDerivativeMarketsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryDerivativeMarketsRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryDerivativeMarketsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QueryDerivativeMarketsRequest;

                /**
                 * Decodes a QueryDerivativeMarketsRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryDerivativeMarketsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QueryDerivativeMarketsRequest;

                /**
                 * Verifies a QueryDerivativeMarketsRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryDerivativeMarketsRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryDerivativeMarketsRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QueryDerivativeMarketsRequest;

                /**
                 * Creates a plain object from a QueryDerivativeMarketsRequest message. Also converts values to other types if specified.
                 * @param message QueryDerivativeMarketsRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QueryDerivativeMarketsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryDerivativeMarketsRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a PriceLevel. */
            interface IPriceLevel {

                /** PriceLevel price */
                price?: (string|null);

                /** PriceLevel quantity */
                quantity?: (string|null);
            }

            /** Represents a PriceLevel. */
            class PriceLevel implements IPriceLevel {

                /**
                 * Constructs a new PriceLevel.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IPriceLevel);

                /** PriceLevel price. */
                public price: string;

                /** PriceLevel quantity. */
                public quantity: string;

                /**
                 * Encodes the specified PriceLevel message. Does not implicitly {@link injective.exchange.v1beta1.PriceLevel.verify|verify} messages.
                 * @param message PriceLevel message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IPriceLevel, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified PriceLevel message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.PriceLevel.verify|verify} messages.
                 * @param message PriceLevel message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IPriceLevel, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a PriceLevel message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns PriceLevel
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.PriceLevel;

                /**
                 * Decodes a PriceLevel message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns PriceLevel
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.PriceLevel;

                /**
                 * Verifies a PriceLevel message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a PriceLevel message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns PriceLevel
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.PriceLevel;

                /**
                 * Creates a plain object from a PriceLevel message. Also converts values to other types if specified.
                 * @param message PriceLevel
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.PriceLevel, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this PriceLevel to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a PerpetualMarketState. */
            interface IPerpetualMarketState {

                /** PerpetualMarketState market_info */
                market_info?: (injective.exchange.v1beta1.IPerpetualMarketInfo|null);

                /** PerpetualMarketState funding_info */
                funding_info?: (injective.exchange.v1beta1.IPerpetualMarketFunding|null);
            }

            /** Represents a PerpetualMarketState. */
            class PerpetualMarketState implements IPerpetualMarketState {

                /**
                 * Constructs a new PerpetualMarketState.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IPerpetualMarketState);

                /** PerpetualMarketState market_info. */
                public market_info?: (injective.exchange.v1beta1.IPerpetualMarketInfo|null);

                /** PerpetualMarketState funding_info. */
                public funding_info?: (injective.exchange.v1beta1.IPerpetualMarketFunding|null);

                /**
                 * Encodes the specified PerpetualMarketState message. Does not implicitly {@link injective.exchange.v1beta1.PerpetualMarketState.verify|verify} messages.
                 * @param message PerpetualMarketState message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IPerpetualMarketState, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified PerpetualMarketState message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.PerpetualMarketState.verify|verify} messages.
                 * @param message PerpetualMarketState message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IPerpetualMarketState, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a PerpetualMarketState message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns PerpetualMarketState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.PerpetualMarketState;

                /**
                 * Decodes a PerpetualMarketState message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns PerpetualMarketState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.PerpetualMarketState;

                /**
                 * Verifies a PerpetualMarketState message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a PerpetualMarketState message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns PerpetualMarketState
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.PerpetualMarketState;

                /**
                 * Creates a plain object from a PerpetualMarketState message. Also converts values to other types if specified.
                 * @param message PerpetualMarketState
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.PerpetualMarketState, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this PerpetualMarketState to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a FullDerivativeMarket. */
            interface IFullDerivativeMarket {

                /** FullDerivativeMarket market */
                market?: (injective.exchange.v1beta1.IDerivativeMarket|null);

                /** FullDerivativeMarket perpetual_info */
                perpetual_info?: (injective.exchange.v1beta1.IPerpetualMarketState|null);

                /** FullDerivativeMarket futures_info */
                futures_info?: (injective.exchange.v1beta1.IExpiryFuturesMarketInfo|null);

                /** FullDerivativeMarket mark_price */
                mark_price?: (string|null);

                /** FullDerivativeMarket mid_price_and_tob */
                mid_price_and_tob?: (injective.exchange.v1beta1.IMidPriceAndTOB|null);
            }

            /** Represents a FullDerivativeMarket. */
            class FullDerivativeMarket implements IFullDerivativeMarket {

                /**
                 * Constructs a new FullDerivativeMarket.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IFullDerivativeMarket);

                /** FullDerivativeMarket market. */
                public market?: (injective.exchange.v1beta1.IDerivativeMarket|null);

                /** FullDerivativeMarket perpetual_info. */
                public perpetual_info?: (injective.exchange.v1beta1.IPerpetualMarketState|null);

                /** FullDerivativeMarket futures_info. */
                public futures_info?: (injective.exchange.v1beta1.IExpiryFuturesMarketInfo|null);

                /** FullDerivativeMarket mark_price. */
                public mark_price: string;

                /** FullDerivativeMarket mid_price_and_tob. */
                public mid_price_and_tob?: (injective.exchange.v1beta1.IMidPriceAndTOB|null);

                /** FullDerivativeMarket info. */
                public info?: ("perpetual_info"|"futures_info");

                /**
                 * Encodes the specified FullDerivativeMarket message. Does not implicitly {@link injective.exchange.v1beta1.FullDerivativeMarket.verify|verify} messages.
                 * @param message FullDerivativeMarket message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IFullDerivativeMarket, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified FullDerivativeMarket message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.FullDerivativeMarket.verify|verify} messages.
                 * @param message FullDerivativeMarket message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IFullDerivativeMarket, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a FullDerivativeMarket message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns FullDerivativeMarket
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.FullDerivativeMarket;

                /**
                 * Decodes a FullDerivativeMarket message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns FullDerivativeMarket
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.FullDerivativeMarket;

                /**
                 * Verifies a FullDerivativeMarket message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a FullDerivativeMarket message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns FullDerivativeMarket
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.FullDerivativeMarket;

                /**
                 * Creates a plain object from a FullDerivativeMarket message. Also converts values to other types if specified.
                 * @param message FullDerivativeMarket
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.FullDerivativeMarket, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this FullDerivativeMarket to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryDerivativeMarketsResponse. */
            interface IQueryDerivativeMarketsResponse {

                /** QueryDerivativeMarketsResponse markets */
                markets?: (injective.exchange.v1beta1.IFullDerivativeMarket[]|null);
            }

            /** Represents a QueryDerivativeMarketsResponse. */
            class QueryDerivativeMarketsResponse implements IQueryDerivativeMarketsResponse {

                /**
                 * Constructs a new QueryDerivativeMarketsResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQueryDerivativeMarketsResponse);

                /** QueryDerivativeMarketsResponse markets. */
                public markets: injective.exchange.v1beta1.IFullDerivativeMarket[];

                /**
                 * Encodes the specified QueryDerivativeMarketsResponse message. Does not implicitly {@link injective.exchange.v1beta1.QueryDerivativeMarketsResponse.verify|verify} messages.
                 * @param message QueryDerivativeMarketsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQueryDerivativeMarketsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryDerivativeMarketsResponse message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QueryDerivativeMarketsResponse.verify|verify} messages.
                 * @param message QueryDerivativeMarketsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQueryDerivativeMarketsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryDerivativeMarketsResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryDerivativeMarketsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QueryDerivativeMarketsResponse;

                /**
                 * Decodes a QueryDerivativeMarketsResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryDerivativeMarketsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QueryDerivativeMarketsResponse;

                /**
                 * Verifies a QueryDerivativeMarketsResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryDerivativeMarketsResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryDerivativeMarketsResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QueryDerivativeMarketsResponse;

                /**
                 * Creates a plain object from a QueryDerivativeMarketsResponse message. Also converts values to other types if specified.
                 * @param message QueryDerivativeMarketsResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QueryDerivativeMarketsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryDerivativeMarketsResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryDerivativeMarketRequest. */
            interface IQueryDerivativeMarketRequest {

                /** QueryDerivativeMarketRequest market_id */
                market_id?: (string|null);
            }

            /** Represents a QueryDerivativeMarketRequest. */
            class QueryDerivativeMarketRequest implements IQueryDerivativeMarketRequest {

                /**
                 * Constructs a new QueryDerivativeMarketRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQueryDerivativeMarketRequest);

                /** QueryDerivativeMarketRequest market_id. */
                public market_id: string;

                /**
                 * Encodes the specified QueryDerivativeMarketRequest message. Does not implicitly {@link injective.exchange.v1beta1.QueryDerivativeMarketRequest.verify|verify} messages.
                 * @param message QueryDerivativeMarketRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQueryDerivativeMarketRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryDerivativeMarketRequest message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QueryDerivativeMarketRequest.verify|verify} messages.
                 * @param message QueryDerivativeMarketRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQueryDerivativeMarketRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryDerivativeMarketRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryDerivativeMarketRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QueryDerivativeMarketRequest;

                /**
                 * Decodes a QueryDerivativeMarketRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryDerivativeMarketRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QueryDerivativeMarketRequest;

                /**
                 * Verifies a QueryDerivativeMarketRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryDerivativeMarketRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryDerivativeMarketRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QueryDerivativeMarketRequest;

                /**
                 * Creates a plain object from a QueryDerivativeMarketRequest message. Also converts values to other types if specified.
                 * @param message QueryDerivativeMarketRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QueryDerivativeMarketRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryDerivativeMarketRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryDerivativeMarketResponse. */
            interface IQueryDerivativeMarketResponse {

                /** QueryDerivativeMarketResponse market */
                market?: (injective.exchange.v1beta1.IFullDerivativeMarket|null);
            }

            /** Represents a QueryDerivativeMarketResponse. */
            class QueryDerivativeMarketResponse implements IQueryDerivativeMarketResponse {

                /**
                 * Constructs a new QueryDerivativeMarketResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQueryDerivativeMarketResponse);

                /** QueryDerivativeMarketResponse market. */
                public market?: (injective.exchange.v1beta1.IFullDerivativeMarket|null);

                /**
                 * Encodes the specified QueryDerivativeMarketResponse message. Does not implicitly {@link injective.exchange.v1beta1.QueryDerivativeMarketResponse.verify|verify} messages.
                 * @param message QueryDerivativeMarketResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQueryDerivativeMarketResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryDerivativeMarketResponse message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QueryDerivativeMarketResponse.verify|verify} messages.
                 * @param message QueryDerivativeMarketResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQueryDerivativeMarketResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryDerivativeMarketResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryDerivativeMarketResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QueryDerivativeMarketResponse;

                /**
                 * Decodes a QueryDerivativeMarketResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryDerivativeMarketResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QueryDerivativeMarketResponse;

                /**
                 * Verifies a QueryDerivativeMarketResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryDerivativeMarketResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryDerivativeMarketResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QueryDerivativeMarketResponse;

                /**
                 * Creates a plain object from a QueryDerivativeMarketResponse message. Also converts values to other types if specified.
                 * @param message QueryDerivativeMarketResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QueryDerivativeMarketResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryDerivativeMarketResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryDerivativeMarketAddressRequest. */
            interface IQueryDerivativeMarketAddressRequest {

                /** QueryDerivativeMarketAddressRequest market_id */
                market_id?: (string|null);
            }

            /** Represents a QueryDerivativeMarketAddressRequest. */
            class QueryDerivativeMarketAddressRequest implements IQueryDerivativeMarketAddressRequest {

                /**
                 * Constructs a new QueryDerivativeMarketAddressRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQueryDerivativeMarketAddressRequest);

                /** QueryDerivativeMarketAddressRequest market_id. */
                public market_id: string;

                /**
                 * Encodes the specified QueryDerivativeMarketAddressRequest message. Does not implicitly {@link injective.exchange.v1beta1.QueryDerivativeMarketAddressRequest.verify|verify} messages.
                 * @param message QueryDerivativeMarketAddressRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQueryDerivativeMarketAddressRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryDerivativeMarketAddressRequest message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QueryDerivativeMarketAddressRequest.verify|verify} messages.
                 * @param message QueryDerivativeMarketAddressRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQueryDerivativeMarketAddressRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryDerivativeMarketAddressRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryDerivativeMarketAddressRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QueryDerivativeMarketAddressRequest;

                /**
                 * Decodes a QueryDerivativeMarketAddressRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryDerivativeMarketAddressRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QueryDerivativeMarketAddressRequest;

                /**
                 * Verifies a QueryDerivativeMarketAddressRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryDerivativeMarketAddressRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryDerivativeMarketAddressRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QueryDerivativeMarketAddressRequest;

                /**
                 * Creates a plain object from a QueryDerivativeMarketAddressRequest message. Also converts values to other types if specified.
                 * @param message QueryDerivativeMarketAddressRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QueryDerivativeMarketAddressRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryDerivativeMarketAddressRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryDerivativeMarketAddressResponse. */
            interface IQueryDerivativeMarketAddressResponse {

                /** QueryDerivativeMarketAddressResponse address */
                address?: (string|null);

                /** QueryDerivativeMarketAddressResponse subaccount_id */
                subaccount_id?: (string|null);
            }

            /** Represents a QueryDerivativeMarketAddressResponse. */
            class QueryDerivativeMarketAddressResponse implements IQueryDerivativeMarketAddressResponse {

                /**
                 * Constructs a new QueryDerivativeMarketAddressResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQueryDerivativeMarketAddressResponse);

                /** QueryDerivativeMarketAddressResponse address. */
                public address: string;

                /** QueryDerivativeMarketAddressResponse subaccount_id. */
                public subaccount_id: string;

                /**
                 * Encodes the specified QueryDerivativeMarketAddressResponse message. Does not implicitly {@link injective.exchange.v1beta1.QueryDerivativeMarketAddressResponse.verify|verify} messages.
                 * @param message QueryDerivativeMarketAddressResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQueryDerivativeMarketAddressResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryDerivativeMarketAddressResponse message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QueryDerivativeMarketAddressResponse.verify|verify} messages.
                 * @param message QueryDerivativeMarketAddressResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQueryDerivativeMarketAddressResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryDerivativeMarketAddressResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryDerivativeMarketAddressResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QueryDerivativeMarketAddressResponse;

                /**
                 * Decodes a QueryDerivativeMarketAddressResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryDerivativeMarketAddressResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QueryDerivativeMarketAddressResponse;

                /**
                 * Verifies a QueryDerivativeMarketAddressResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryDerivativeMarketAddressResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryDerivativeMarketAddressResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QueryDerivativeMarketAddressResponse;

                /**
                 * Creates a plain object from a QueryDerivativeMarketAddressResponse message. Also converts values to other types if specified.
                 * @param message QueryDerivativeMarketAddressResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QueryDerivativeMarketAddressResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryDerivativeMarketAddressResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QuerySubaccountTradeNonceRequest. */
            interface IQuerySubaccountTradeNonceRequest {

                /** QuerySubaccountTradeNonceRequest subaccount_id */
                subaccount_id?: (string|null);
            }

            /** Represents a QuerySubaccountTradeNonceRequest. */
            class QuerySubaccountTradeNonceRequest implements IQuerySubaccountTradeNonceRequest {

                /**
                 * Constructs a new QuerySubaccountTradeNonceRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQuerySubaccountTradeNonceRequest);

                /** QuerySubaccountTradeNonceRequest subaccount_id. */
                public subaccount_id: string;

                /**
                 * Encodes the specified QuerySubaccountTradeNonceRequest message. Does not implicitly {@link injective.exchange.v1beta1.QuerySubaccountTradeNonceRequest.verify|verify} messages.
                 * @param message QuerySubaccountTradeNonceRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQuerySubaccountTradeNonceRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QuerySubaccountTradeNonceRequest message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QuerySubaccountTradeNonceRequest.verify|verify} messages.
                 * @param message QuerySubaccountTradeNonceRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQuerySubaccountTradeNonceRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QuerySubaccountTradeNonceRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QuerySubaccountTradeNonceRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QuerySubaccountTradeNonceRequest;

                /**
                 * Decodes a QuerySubaccountTradeNonceRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QuerySubaccountTradeNonceRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QuerySubaccountTradeNonceRequest;

                /**
                 * Verifies a QuerySubaccountTradeNonceRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QuerySubaccountTradeNonceRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QuerySubaccountTradeNonceRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QuerySubaccountTradeNonceRequest;

                /**
                 * Creates a plain object from a QuerySubaccountTradeNonceRequest message. Also converts values to other types if specified.
                 * @param message QuerySubaccountTradeNonceRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QuerySubaccountTradeNonceRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QuerySubaccountTradeNonceRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QuerySubaccountPositionsRequest. */
            interface IQuerySubaccountPositionsRequest {

                /** QuerySubaccountPositionsRequest subaccount_id */
                subaccount_id?: (string|null);
            }

            /** Represents a QuerySubaccountPositionsRequest. */
            class QuerySubaccountPositionsRequest implements IQuerySubaccountPositionsRequest {

                /**
                 * Constructs a new QuerySubaccountPositionsRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQuerySubaccountPositionsRequest);

                /** QuerySubaccountPositionsRequest subaccount_id. */
                public subaccount_id: string;

                /**
                 * Encodes the specified QuerySubaccountPositionsRequest message. Does not implicitly {@link injective.exchange.v1beta1.QuerySubaccountPositionsRequest.verify|verify} messages.
                 * @param message QuerySubaccountPositionsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQuerySubaccountPositionsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QuerySubaccountPositionsRequest message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QuerySubaccountPositionsRequest.verify|verify} messages.
                 * @param message QuerySubaccountPositionsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQuerySubaccountPositionsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QuerySubaccountPositionsRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QuerySubaccountPositionsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QuerySubaccountPositionsRequest;

                /**
                 * Decodes a QuerySubaccountPositionsRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QuerySubaccountPositionsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QuerySubaccountPositionsRequest;

                /**
                 * Verifies a QuerySubaccountPositionsRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QuerySubaccountPositionsRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QuerySubaccountPositionsRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QuerySubaccountPositionsRequest;

                /**
                 * Creates a plain object from a QuerySubaccountPositionsRequest message. Also converts values to other types if specified.
                 * @param message QuerySubaccountPositionsRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QuerySubaccountPositionsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QuerySubaccountPositionsRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QuerySubaccountPositionInMarketRequest. */
            interface IQuerySubaccountPositionInMarketRequest {

                /** QuerySubaccountPositionInMarketRequest subaccount_id */
                subaccount_id?: (string|null);

                /** QuerySubaccountPositionInMarketRequest market_id */
                market_id?: (string|null);
            }

            /** Represents a QuerySubaccountPositionInMarketRequest. */
            class QuerySubaccountPositionInMarketRequest implements IQuerySubaccountPositionInMarketRequest {

                /**
                 * Constructs a new QuerySubaccountPositionInMarketRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQuerySubaccountPositionInMarketRequest);

                /** QuerySubaccountPositionInMarketRequest subaccount_id. */
                public subaccount_id: string;

                /** QuerySubaccountPositionInMarketRequest market_id. */
                public market_id: string;

                /**
                 * Encodes the specified QuerySubaccountPositionInMarketRequest message. Does not implicitly {@link injective.exchange.v1beta1.QuerySubaccountPositionInMarketRequest.verify|verify} messages.
                 * @param message QuerySubaccountPositionInMarketRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQuerySubaccountPositionInMarketRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QuerySubaccountPositionInMarketRequest message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QuerySubaccountPositionInMarketRequest.verify|verify} messages.
                 * @param message QuerySubaccountPositionInMarketRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQuerySubaccountPositionInMarketRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QuerySubaccountPositionInMarketRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QuerySubaccountPositionInMarketRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QuerySubaccountPositionInMarketRequest;

                /**
                 * Decodes a QuerySubaccountPositionInMarketRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QuerySubaccountPositionInMarketRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QuerySubaccountPositionInMarketRequest;

                /**
                 * Verifies a QuerySubaccountPositionInMarketRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QuerySubaccountPositionInMarketRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QuerySubaccountPositionInMarketRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QuerySubaccountPositionInMarketRequest;

                /**
                 * Creates a plain object from a QuerySubaccountPositionInMarketRequest message. Also converts values to other types if specified.
                 * @param message QuerySubaccountPositionInMarketRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QuerySubaccountPositionInMarketRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QuerySubaccountPositionInMarketRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QuerySubaccountEffectivePositionInMarketRequest. */
            interface IQuerySubaccountEffectivePositionInMarketRequest {

                /** QuerySubaccountEffectivePositionInMarketRequest subaccount_id */
                subaccount_id?: (string|null);

                /** QuerySubaccountEffectivePositionInMarketRequest market_id */
                market_id?: (string|null);
            }

            /** Represents a QuerySubaccountEffectivePositionInMarketRequest. */
            class QuerySubaccountEffectivePositionInMarketRequest implements IQuerySubaccountEffectivePositionInMarketRequest {

                /**
                 * Constructs a new QuerySubaccountEffectivePositionInMarketRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQuerySubaccountEffectivePositionInMarketRequest);

                /** QuerySubaccountEffectivePositionInMarketRequest subaccount_id. */
                public subaccount_id: string;

                /** QuerySubaccountEffectivePositionInMarketRequest market_id. */
                public market_id: string;

                /**
                 * Encodes the specified QuerySubaccountEffectivePositionInMarketRequest message. Does not implicitly {@link injective.exchange.v1beta1.QuerySubaccountEffectivePositionInMarketRequest.verify|verify} messages.
                 * @param message QuerySubaccountEffectivePositionInMarketRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQuerySubaccountEffectivePositionInMarketRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QuerySubaccountEffectivePositionInMarketRequest message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QuerySubaccountEffectivePositionInMarketRequest.verify|verify} messages.
                 * @param message QuerySubaccountEffectivePositionInMarketRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQuerySubaccountEffectivePositionInMarketRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QuerySubaccountEffectivePositionInMarketRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QuerySubaccountEffectivePositionInMarketRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QuerySubaccountEffectivePositionInMarketRequest;

                /**
                 * Decodes a QuerySubaccountEffectivePositionInMarketRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QuerySubaccountEffectivePositionInMarketRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QuerySubaccountEffectivePositionInMarketRequest;

                /**
                 * Verifies a QuerySubaccountEffectivePositionInMarketRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QuerySubaccountEffectivePositionInMarketRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QuerySubaccountEffectivePositionInMarketRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QuerySubaccountEffectivePositionInMarketRequest;

                /**
                 * Creates a plain object from a QuerySubaccountEffectivePositionInMarketRequest message. Also converts values to other types if specified.
                 * @param message QuerySubaccountEffectivePositionInMarketRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QuerySubaccountEffectivePositionInMarketRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QuerySubaccountEffectivePositionInMarketRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QuerySubaccountOrderMetadataRequest. */
            interface IQuerySubaccountOrderMetadataRequest {

                /** QuerySubaccountOrderMetadataRequest subaccount_id */
                subaccount_id?: (string|null);
            }

            /** Represents a QuerySubaccountOrderMetadataRequest. */
            class QuerySubaccountOrderMetadataRequest implements IQuerySubaccountOrderMetadataRequest {

                /**
                 * Constructs a new QuerySubaccountOrderMetadataRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQuerySubaccountOrderMetadataRequest);

                /** QuerySubaccountOrderMetadataRequest subaccount_id. */
                public subaccount_id: string;

                /**
                 * Encodes the specified QuerySubaccountOrderMetadataRequest message. Does not implicitly {@link injective.exchange.v1beta1.QuerySubaccountOrderMetadataRequest.verify|verify} messages.
                 * @param message QuerySubaccountOrderMetadataRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQuerySubaccountOrderMetadataRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QuerySubaccountOrderMetadataRequest message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QuerySubaccountOrderMetadataRequest.verify|verify} messages.
                 * @param message QuerySubaccountOrderMetadataRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQuerySubaccountOrderMetadataRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QuerySubaccountOrderMetadataRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QuerySubaccountOrderMetadataRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QuerySubaccountOrderMetadataRequest;

                /**
                 * Decodes a QuerySubaccountOrderMetadataRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QuerySubaccountOrderMetadataRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QuerySubaccountOrderMetadataRequest;

                /**
                 * Verifies a QuerySubaccountOrderMetadataRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QuerySubaccountOrderMetadataRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QuerySubaccountOrderMetadataRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QuerySubaccountOrderMetadataRequest;

                /**
                 * Creates a plain object from a QuerySubaccountOrderMetadataRequest message. Also converts values to other types if specified.
                 * @param message QuerySubaccountOrderMetadataRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QuerySubaccountOrderMetadataRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QuerySubaccountOrderMetadataRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QuerySubaccountPositionsResponse. */
            interface IQuerySubaccountPositionsResponse {

                /** QuerySubaccountPositionsResponse state */
                state?: (injective.exchange.v1beta1.IDerivativePosition[]|null);
            }

            /** Represents a QuerySubaccountPositionsResponse. */
            class QuerySubaccountPositionsResponse implements IQuerySubaccountPositionsResponse {

                /**
                 * Constructs a new QuerySubaccountPositionsResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQuerySubaccountPositionsResponse);

                /** QuerySubaccountPositionsResponse state. */
                public state: injective.exchange.v1beta1.IDerivativePosition[];

                /**
                 * Encodes the specified QuerySubaccountPositionsResponse message. Does not implicitly {@link injective.exchange.v1beta1.QuerySubaccountPositionsResponse.verify|verify} messages.
                 * @param message QuerySubaccountPositionsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQuerySubaccountPositionsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QuerySubaccountPositionsResponse message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QuerySubaccountPositionsResponse.verify|verify} messages.
                 * @param message QuerySubaccountPositionsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQuerySubaccountPositionsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QuerySubaccountPositionsResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QuerySubaccountPositionsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QuerySubaccountPositionsResponse;

                /**
                 * Decodes a QuerySubaccountPositionsResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QuerySubaccountPositionsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QuerySubaccountPositionsResponse;

                /**
                 * Verifies a QuerySubaccountPositionsResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QuerySubaccountPositionsResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QuerySubaccountPositionsResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QuerySubaccountPositionsResponse;

                /**
                 * Creates a plain object from a QuerySubaccountPositionsResponse message. Also converts values to other types if specified.
                 * @param message QuerySubaccountPositionsResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QuerySubaccountPositionsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QuerySubaccountPositionsResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QuerySubaccountPositionInMarketResponse. */
            interface IQuerySubaccountPositionInMarketResponse {

                /** QuerySubaccountPositionInMarketResponse state */
                state?: (injective.exchange.v1beta1.IPosition|null);
            }

            /** Represents a QuerySubaccountPositionInMarketResponse. */
            class QuerySubaccountPositionInMarketResponse implements IQuerySubaccountPositionInMarketResponse {

                /**
                 * Constructs a new QuerySubaccountPositionInMarketResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQuerySubaccountPositionInMarketResponse);

                /** QuerySubaccountPositionInMarketResponse state. */
                public state?: (injective.exchange.v1beta1.IPosition|null);

                /**
                 * Encodes the specified QuerySubaccountPositionInMarketResponse message. Does not implicitly {@link injective.exchange.v1beta1.QuerySubaccountPositionInMarketResponse.verify|verify} messages.
                 * @param message QuerySubaccountPositionInMarketResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQuerySubaccountPositionInMarketResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QuerySubaccountPositionInMarketResponse message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QuerySubaccountPositionInMarketResponse.verify|verify} messages.
                 * @param message QuerySubaccountPositionInMarketResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQuerySubaccountPositionInMarketResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QuerySubaccountPositionInMarketResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QuerySubaccountPositionInMarketResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QuerySubaccountPositionInMarketResponse;

                /**
                 * Decodes a QuerySubaccountPositionInMarketResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QuerySubaccountPositionInMarketResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QuerySubaccountPositionInMarketResponse;

                /**
                 * Verifies a QuerySubaccountPositionInMarketResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QuerySubaccountPositionInMarketResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QuerySubaccountPositionInMarketResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QuerySubaccountPositionInMarketResponse;

                /**
                 * Creates a plain object from a QuerySubaccountPositionInMarketResponse message. Also converts values to other types if specified.
                 * @param message QuerySubaccountPositionInMarketResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QuerySubaccountPositionInMarketResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QuerySubaccountPositionInMarketResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an EffectivePosition. */
            interface IEffectivePosition {

                /** EffectivePosition is_long */
                is_long?: (boolean|null);

                /** EffectivePosition quantity */
                quantity?: (string|null);

                /** EffectivePosition entry_price */
                entry_price?: (string|null);

                /** EffectivePosition effective_margin */
                effective_margin?: (string|null);
            }

            /** Represents an EffectivePosition. */
            class EffectivePosition implements IEffectivePosition {

                /**
                 * Constructs a new EffectivePosition.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IEffectivePosition);

                /** EffectivePosition is_long. */
                public is_long: boolean;

                /** EffectivePosition quantity. */
                public quantity: string;

                /** EffectivePosition entry_price. */
                public entry_price: string;

                /** EffectivePosition effective_margin. */
                public effective_margin: string;

                /**
                 * Encodes the specified EffectivePosition message. Does not implicitly {@link injective.exchange.v1beta1.EffectivePosition.verify|verify} messages.
                 * @param message EffectivePosition message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IEffectivePosition, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified EffectivePosition message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.EffectivePosition.verify|verify} messages.
                 * @param message EffectivePosition message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IEffectivePosition, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an EffectivePosition message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns EffectivePosition
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.EffectivePosition;

                /**
                 * Decodes an EffectivePosition message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns EffectivePosition
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.EffectivePosition;

                /**
                 * Verifies an EffectivePosition message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an EffectivePosition message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns EffectivePosition
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.EffectivePosition;

                /**
                 * Creates a plain object from an EffectivePosition message. Also converts values to other types if specified.
                 * @param message EffectivePosition
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.EffectivePosition, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this EffectivePosition to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QuerySubaccountEffectivePositionInMarketResponse. */
            interface IQuerySubaccountEffectivePositionInMarketResponse {

                /** QuerySubaccountEffectivePositionInMarketResponse state */
                state?: (injective.exchange.v1beta1.IEffectivePosition|null);
            }

            /** Represents a QuerySubaccountEffectivePositionInMarketResponse. */
            class QuerySubaccountEffectivePositionInMarketResponse implements IQuerySubaccountEffectivePositionInMarketResponse {

                /**
                 * Constructs a new QuerySubaccountEffectivePositionInMarketResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQuerySubaccountEffectivePositionInMarketResponse);

                /** QuerySubaccountEffectivePositionInMarketResponse state. */
                public state?: (injective.exchange.v1beta1.IEffectivePosition|null);

                /**
                 * Encodes the specified QuerySubaccountEffectivePositionInMarketResponse message. Does not implicitly {@link injective.exchange.v1beta1.QuerySubaccountEffectivePositionInMarketResponse.verify|verify} messages.
                 * @param message QuerySubaccountEffectivePositionInMarketResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQuerySubaccountEffectivePositionInMarketResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QuerySubaccountEffectivePositionInMarketResponse message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QuerySubaccountEffectivePositionInMarketResponse.verify|verify} messages.
                 * @param message QuerySubaccountEffectivePositionInMarketResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQuerySubaccountEffectivePositionInMarketResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QuerySubaccountEffectivePositionInMarketResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QuerySubaccountEffectivePositionInMarketResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QuerySubaccountEffectivePositionInMarketResponse;

                /**
                 * Decodes a QuerySubaccountEffectivePositionInMarketResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QuerySubaccountEffectivePositionInMarketResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QuerySubaccountEffectivePositionInMarketResponse;

                /**
                 * Verifies a QuerySubaccountEffectivePositionInMarketResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QuerySubaccountEffectivePositionInMarketResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QuerySubaccountEffectivePositionInMarketResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QuerySubaccountEffectivePositionInMarketResponse;

                /**
                 * Creates a plain object from a QuerySubaccountEffectivePositionInMarketResponse message. Also converts values to other types if specified.
                 * @param message QuerySubaccountEffectivePositionInMarketResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QuerySubaccountEffectivePositionInMarketResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QuerySubaccountEffectivePositionInMarketResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryPerpetualMarketInfoRequest. */
            interface IQueryPerpetualMarketInfoRequest {

                /** QueryPerpetualMarketInfoRequest market_id */
                market_id?: (string|null);
            }

            /** Represents a QueryPerpetualMarketInfoRequest. */
            class QueryPerpetualMarketInfoRequest implements IQueryPerpetualMarketInfoRequest {

                /**
                 * Constructs a new QueryPerpetualMarketInfoRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQueryPerpetualMarketInfoRequest);

                /** QueryPerpetualMarketInfoRequest market_id. */
                public market_id: string;

                /**
                 * Encodes the specified QueryPerpetualMarketInfoRequest message. Does not implicitly {@link injective.exchange.v1beta1.QueryPerpetualMarketInfoRequest.verify|verify} messages.
                 * @param message QueryPerpetualMarketInfoRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQueryPerpetualMarketInfoRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryPerpetualMarketInfoRequest message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QueryPerpetualMarketInfoRequest.verify|verify} messages.
                 * @param message QueryPerpetualMarketInfoRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQueryPerpetualMarketInfoRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryPerpetualMarketInfoRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryPerpetualMarketInfoRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QueryPerpetualMarketInfoRequest;

                /**
                 * Decodes a QueryPerpetualMarketInfoRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryPerpetualMarketInfoRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QueryPerpetualMarketInfoRequest;

                /**
                 * Verifies a QueryPerpetualMarketInfoRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryPerpetualMarketInfoRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryPerpetualMarketInfoRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QueryPerpetualMarketInfoRequest;

                /**
                 * Creates a plain object from a QueryPerpetualMarketInfoRequest message. Also converts values to other types if specified.
                 * @param message QueryPerpetualMarketInfoRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QueryPerpetualMarketInfoRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryPerpetualMarketInfoRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryPerpetualMarketInfoResponse. */
            interface IQueryPerpetualMarketInfoResponse {

                /** QueryPerpetualMarketInfoResponse info */
                info?: (injective.exchange.v1beta1.IPerpetualMarketInfo|null);
            }

            /** Represents a QueryPerpetualMarketInfoResponse. */
            class QueryPerpetualMarketInfoResponse implements IQueryPerpetualMarketInfoResponse {

                /**
                 * Constructs a new QueryPerpetualMarketInfoResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQueryPerpetualMarketInfoResponse);

                /** QueryPerpetualMarketInfoResponse info. */
                public info?: (injective.exchange.v1beta1.IPerpetualMarketInfo|null);

                /**
                 * Encodes the specified QueryPerpetualMarketInfoResponse message. Does not implicitly {@link injective.exchange.v1beta1.QueryPerpetualMarketInfoResponse.verify|verify} messages.
                 * @param message QueryPerpetualMarketInfoResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQueryPerpetualMarketInfoResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryPerpetualMarketInfoResponse message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QueryPerpetualMarketInfoResponse.verify|verify} messages.
                 * @param message QueryPerpetualMarketInfoResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQueryPerpetualMarketInfoResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryPerpetualMarketInfoResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryPerpetualMarketInfoResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QueryPerpetualMarketInfoResponse;

                /**
                 * Decodes a QueryPerpetualMarketInfoResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryPerpetualMarketInfoResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QueryPerpetualMarketInfoResponse;

                /**
                 * Verifies a QueryPerpetualMarketInfoResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryPerpetualMarketInfoResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryPerpetualMarketInfoResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QueryPerpetualMarketInfoResponse;

                /**
                 * Creates a plain object from a QueryPerpetualMarketInfoResponse message. Also converts values to other types if specified.
                 * @param message QueryPerpetualMarketInfoResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QueryPerpetualMarketInfoResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryPerpetualMarketInfoResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryExpiryFuturesMarketInfoRequest. */
            interface IQueryExpiryFuturesMarketInfoRequest {

                /** QueryExpiryFuturesMarketInfoRequest market_id */
                market_id?: (string|null);
            }

            /** Represents a QueryExpiryFuturesMarketInfoRequest. */
            class QueryExpiryFuturesMarketInfoRequest implements IQueryExpiryFuturesMarketInfoRequest {

                /**
                 * Constructs a new QueryExpiryFuturesMarketInfoRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQueryExpiryFuturesMarketInfoRequest);

                /** QueryExpiryFuturesMarketInfoRequest market_id. */
                public market_id: string;

                /**
                 * Encodes the specified QueryExpiryFuturesMarketInfoRequest message. Does not implicitly {@link injective.exchange.v1beta1.QueryExpiryFuturesMarketInfoRequest.verify|verify} messages.
                 * @param message QueryExpiryFuturesMarketInfoRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQueryExpiryFuturesMarketInfoRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryExpiryFuturesMarketInfoRequest message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QueryExpiryFuturesMarketInfoRequest.verify|verify} messages.
                 * @param message QueryExpiryFuturesMarketInfoRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQueryExpiryFuturesMarketInfoRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryExpiryFuturesMarketInfoRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryExpiryFuturesMarketInfoRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QueryExpiryFuturesMarketInfoRequest;

                /**
                 * Decodes a QueryExpiryFuturesMarketInfoRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryExpiryFuturesMarketInfoRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QueryExpiryFuturesMarketInfoRequest;

                /**
                 * Verifies a QueryExpiryFuturesMarketInfoRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryExpiryFuturesMarketInfoRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryExpiryFuturesMarketInfoRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QueryExpiryFuturesMarketInfoRequest;

                /**
                 * Creates a plain object from a QueryExpiryFuturesMarketInfoRequest message. Also converts values to other types if specified.
                 * @param message QueryExpiryFuturesMarketInfoRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QueryExpiryFuturesMarketInfoRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryExpiryFuturesMarketInfoRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryExpiryFuturesMarketInfoResponse. */
            interface IQueryExpiryFuturesMarketInfoResponse {

                /** QueryExpiryFuturesMarketInfoResponse info */
                info?: (injective.exchange.v1beta1.IExpiryFuturesMarketInfo|null);
            }

            /** Represents a QueryExpiryFuturesMarketInfoResponse. */
            class QueryExpiryFuturesMarketInfoResponse implements IQueryExpiryFuturesMarketInfoResponse {

                /**
                 * Constructs a new QueryExpiryFuturesMarketInfoResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQueryExpiryFuturesMarketInfoResponse);

                /** QueryExpiryFuturesMarketInfoResponse info. */
                public info?: (injective.exchange.v1beta1.IExpiryFuturesMarketInfo|null);

                /**
                 * Encodes the specified QueryExpiryFuturesMarketInfoResponse message. Does not implicitly {@link injective.exchange.v1beta1.QueryExpiryFuturesMarketInfoResponse.verify|verify} messages.
                 * @param message QueryExpiryFuturesMarketInfoResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQueryExpiryFuturesMarketInfoResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryExpiryFuturesMarketInfoResponse message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QueryExpiryFuturesMarketInfoResponse.verify|verify} messages.
                 * @param message QueryExpiryFuturesMarketInfoResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQueryExpiryFuturesMarketInfoResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryExpiryFuturesMarketInfoResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryExpiryFuturesMarketInfoResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QueryExpiryFuturesMarketInfoResponse;

                /**
                 * Decodes a QueryExpiryFuturesMarketInfoResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryExpiryFuturesMarketInfoResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QueryExpiryFuturesMarketInfoResponse;

                /**
                 * Verifies a QueryExpiryFuturesMarketInfoResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryExpiryFuturesMarketInfoResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryExpiryFuturesMarketInfoResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QueryExpiryFuturesMarketInfoResponse;

                /**
                 * Creates a plain object from a QueryExpiryFuturesMarketInfoResponse message. Also converts values to other types if specified.
                 * @param message QueryExpiryFuturesMarketInfoResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QueryExpiryFuturesMarketInfoResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryExpiryFuturesMarketInfoResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryPerpetualMarketFundingRequest. */
            interface IQueryPerpetualMarketFundingRequest {

                /** QueryPerpetualMarketFundingRequest market_id */
                market_id?: (string|null);
            }

            /** Represents a QueryPerpetualMarketFundingRequest. */
            class QueryPerpetualMarketFundingRequest implements IQueryPerpetualMarketFundingRequest {

                /**
                 * Constructs a new QueryPerpetualMarketFundingRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQueryPerpetualMarketFundingRequest);

                /** QueryPerpetualMarketFundingRequest market_id. */
                public market_id: string;

                /**
                 * Encodes the specified QueryPerpetualMarketFundingRequest message. Does not implicitly {@link injective.exchange.v1beta1.QueryPerpetualMarketFundingRequest.verify|verify} messages.
                 * @param message QueryPerpetualMarketFundingRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQueryPerpetualMarketFundingRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryPerpetualMarketFundingRequest message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QueryPerpetualMarketFundingRequest.verify|verify} messages.
                 * @param message QueryPerpetualMarketFundingRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQueryPerpetualMarketFundingRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryPerpetualMarketFundingRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryPerpetualMarketFundingRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QueryPerpetualMarketFundingRequest;

                /**
                 * Decodes a QueryPerpetualMarketFundingRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryPerpetualMarketFundingRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QueryPerpetualMarketFundingRequest;

                /**
                 * Verifies a QueryPerpetualMarketFundingRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryPerpetualMarketFundingRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryPerpetualMarketFundingRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QueryPerpetualMarketFundingRequest;

                /**
                 * Creates a plain object from a QueryPerpetualMarketFundingRequest message. Also converts values to other types if specified.
                 * @param message QueryPerpetualMarketFundingRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QueryPerpetualMarketFundingRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryPerpetualMarketFundingRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryPerpetualMarketFundingResponse. */
            interface IQueryPerpetualMarketFundingResponse {

                /** QueryPerpetualMarketFundingResponse state */
                state?: (injective.exchange.v1beta1.IPerpetualMarketFunding|null);
            }

            /** Represents a QueryPerpetualMarketFundingResponse. */
            class QueryPerpetualMarketFundingResponse implements IQueryPerpetualMarketFundingResponse {

                /**
                 * Constructs a new QueryPerpetualMarketFundingResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQueryPerpetualMarketFundingResponse);

                /** QueryPerpetualMarketFundingResponse state. */
                public state?: (injective.exchange.v1beta1.IPerpetualMarketFunding|null);

                /**
                 * Encodes the specified QueryPerpetualMarketFundingResponse message. Does not implicitly {@link injective.exchange.v1beta1.QueryPerpetualMarketFundingResponse.verify|verify} messages.
                 * @param message QueryPerpetualMarketFundingResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQueryPerpetualMarketFundingResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryPerpetualMarketFundingResponse message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QueryPerpetualMarketFundingResponse.verify|verify} messages.
                 * @param message QueryPerpetualMarketFundingResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQueryPerpetualMarketFundingResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryPerpetualMarketFundingResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryPerpetualMarketFundingResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QueryPerpetualMarketFundingResponse;

                /**
                 * Decodes a QueryPerpetualMarketFundingResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryPerpetualMarketFundingResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QueryPerpetualMarketFundingResponse;

                /**
                 * Verifies a QueryPerpetualMarketFundingResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryPerpetualMarketFundingResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryPerpetualMarketFundingResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QueryPerpetualMarketFundingResponse;

                /**
                 * Creates a plain object from a QueryPerpetualMarketFundingResponse message. Also converts values to other types if specified.
                 * @param message QueryPerpetualMarketFundingResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QueryPerpetualMarketFundingResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryPerpetualMarketFundingResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QuerySubaccountOrderMetadataResponse. */
            interface IQuerySubaccountOrderMetadataResponse {

                /** QuerySubaccountOrderMetadataResponse metadata */
                metadata?: (injective.exchange.v1beta1.ISubaccountOrderbookMetadataWithMarket[]|null);
            }

            /** Represents a QuerySubaccountOrderMetadataResponse. */
            class QuerySubaccountOrderMetadataResponse implements IQuerySubaccountOrderMetadataResponse {

                /**
                 * Constructs a new QuerySubaccountOrderMetadataResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQuerySubaccountOrderMetadataResponse);

                /** QuerySubaccountOrderMetadataResponse metadata. */
                public metadata: injective.exchange.v1beta1.ISubaccountOrderbookMetadataWithMarket[];

                /**
                 * Encodes the specified QuerySubaccountOrderMetadataResponse message. Does not implicitly {@link injective.exchange.v1beta1.QuerySubaccountOrderMetadataResponse.verify|verify} messages.
                 * @param message QuerySubaccountOrderMetadataResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQuerySubaccountOrderMetadataResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QuerySubaccountOrderMetadataResponse message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QuerySubaccountOrderMetadataResponse.verify|verify} messages.
                 * @param message QuerySubaccountOrderMetadataResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQuerySubaccountOrderMetadataResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QuerySubaccountOrderMetadataResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QuerySubaccountOrderMetadataResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QuerySubaccountOrderMetadataResponse;

                /**
                 * Decodes a QuerySubaccountOrderMetadataResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QuerySubaccountOrderMetadataResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QuerySubaccountOrderMetadataResponse;

                /**
                 * Verifies a QuerySubaccountOrderMetadataResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QuerySubaccountOrderMetadataResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QuerySubaccountOrderMetadataResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QuerySubaccountOrderMetadataResponse;

                /**
                 * Creates a plain object from a QuerySubaccountOrderMetadataResponse message. Also converts values to other types if specified.
                 * @param message QuerySubaccountOrderMetadataResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QuerySubaccountOrderMetadataResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QuerySubaccountOrderMetadataResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QuerySubaccountTradeNonceResponse. */
            interface IQuerySubaccountTradeNonceResponse {

                /** QuerySubaccountTradeNonceResponse nonce */
                nonce?: (number|null);
            }

            /** Represents a QuerySubaccountTradeNonceResponse. */
            class QuerySubaccountTradeNonceResponse implements IQuerySubaccountTradeNonceResponse {

                /**
                 * Constructs a new QuerySubaccountTradeNonceResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQuerySubaccountTradeNonceResponse);

                /** QuerySubaccountTradeNonceResponse nonce. */
                public nonce: number;

                /**
                 * Encodes the specified QuerySubaccountTradeNonceResponse message. Does not implicitly {@link injective.exchange.v1beta1.QuerySubaccountTradeNonceResponse.verify|verify} messages.
                 * @param message QuerySubaccountTradeNonceResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQuerySubaccountTradeNonceResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QuerySubaccountTradeNonceResponse message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QuerySubaccountTradeNonceResponse.verify|verify} messages.
                 * @param message QuerySubaccountTradeNonceResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQuerySubaccountTradeNonceResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QuerySubaccountTradeNonceResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QuerySubaccountTradeNonceResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QuerySubaccountTradeNonceResponse;

                /**
                 * Decodes a QuerySubaccountTradeNonceResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QuerySubaccountTradeNonceResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QuerySubaccountTradeNonceResponse;

                /**
                 * Verifies a QuerySubaccountTradeNonceResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QuerySubaccountTradeNonceResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QuerySubaccountTradeNonceResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QuerySubaccountTradeNonceResponse;

                /**
                 * Creates a plain object from a QuerySubaccountTradeNonceResponse message. Also converts values to other types if specified.
                 * @param message QuerySubaccountTradeNonceResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QuerySubaccountTradeNonceResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QuerySubaccountTradeNonceResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryModuleStateRequest. */
            interface IQueryModuleStateRequest {
            }

            /** Represents a QueryModuleStateRequest. */
            class QueryModuleStateRequest implements IQueryModuleStateRequest {

                /**
                 * Constructs a new QueryModuleStateRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQueryModuleStateRequest);

                /**
                 * Encodes the specified QueryModuleStateRequest message. Does not implicitly {@link injective.exchange.v1beta1.QueryModuleStateRequest.verify|verify} messages.
                 * @param message QueryModuleStateRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQueryModuleStateRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryModuleStateRequest message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QueryModuleStateRequest.verify|verify} messages.
                 * @param message QueryModuleStateRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQueryModuleStateRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryModuleStateRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryModuleStateRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QueryModuleStateRequest;

                /**
                 * Decodes a QueryModuleStateRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryModuleStateRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QueryModuleStateRequest;

                /**
                 * Verifies a QueryModuleStateRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryModuleStateRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryModuleStateRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QueryModuleStateRequest;

                /**
                 * Creates a plain object from a QueryModuleStateRequest message. Also converts values to other types if specified.
                 * @param message QueryModuleStateRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QueryModuleStateRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryModuleStateRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryModuleStateResponse. */
            interface IQueryModuleStateResponse {

                /** QueryModuleStateResponse state */
                state?: (injective.exchange.v1beta1.IGenesisState|null);
            }

            /** Represents a QueryModuleStateResponse. */
            class QueryModuleStateResponse implements IQueryModuleStateResponse {

                /**
                 * Constructs a new QueryModuleStateResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQueryModuleStateResponse);

                /** QueryModuleStateResponse state. */
                public state?: (injective.exchange.v1beta1.IGenesisState|null);

                /**
                 * Encodes the specified QueryModuleStateResponse message. Does not implicitly {@link injective.exchange.v1beta1.QueryModuleStateResponse.verify|verify} messages.
                 * @param message QueryModuleStateResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQueryModuleStateResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryModuleStateResponse message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QueryModuleStateResponse.verify|verify} messages.
                 * @param message QueryModuleStateResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQueryModuleStateResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryModuleStateResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryModuleStateResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QueryModuleStateResponse;

                /**
                 * Decodes a QueryModuleStateResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryModuleStateResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QueryModuleStateResponse;

                /**
                 * Verifies a QueryModuleStateResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryModuleStateResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryModuleStateResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QueryModuleStateResponse;

                /**
                 * Creates a plain object from a QueryModuleStateResponse message. Also converts values to other types if specified.
                 * @param message QueryModuleStateResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QueryModuleStateResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryModuleStateResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryPositionsRequest. */
            interface IQueryPositionsRequest {
            }

            /** Represents a QueryPositionsRequest. */
            class QueryPositionsRequest implements IQueryPositionsRequest {

                /**
                 * Constructs a new QueryPositionsRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQueryPositionsRequest);

                /**
                 * Encodes the specified QueryPositionsRequest message. Does not implicitly {@link injective.exchange.v1beta1.QueryPositionsRequest.verify|verify} messages.
                 * @param message QueryPositionsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQueryPositionsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryPositionsRequest message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QueryPositionsRequest.verify|verify} messages.
                 * @param message QueryPositionsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQueryPositionsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryPositionsRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryPositionsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QueryPositionsRequest;

                /**
                 * Decodes a QueryPositionsRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryPositionsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QueryPositionsRequest;

                /**
                 * Verifies a QueryPositionsRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryPositionsRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryPositionsRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QueryPositionsRequest;

                /**
                 * Creates a plain object from a QueryPositionsRequest message. Also converts values to other types if specified.
                 * @param message QueryPositionsRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QueryPositionsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryPositionsRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryPositionsResponse. */
            interface IQueryPositionsResponse {

                /** QueryPositionsResponse state */
                state?: (injective.exchange.v1beta1.IDerivativePosition[]|null);
            }

            /** Represents a QueryPositionsResponse. */
            class QueryPositionsResponse implements IQueryPositionsResponse {

                /**
                 * Constructs a new QueryPositionsResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQueryPositionsResponse);

                /** QueryPositionsResponse state. */
                public state: injective.exchange.v1beta1.IDerivativePosition[];

                /**
                 * Encodes the specified QueryPositionsResponse message. Does not implicitly {@link injective.exchange.v1beta1.QueryPositionsResponse.verify|verify} messages.
                 * @param message QueryPositionsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQueryPositionsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryPositionsResponse message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QueryPositionsResponse.verify|verify} messages.
                 * @param message QueryPositionsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQueryPositionsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryPositionsResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryPositionsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QueryPositionsResponse;

                /**
                 * Decodes a QueryPositionsResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryPositionsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QueryPositionsResponse;

                /**
                 * Verifies a QueryPositionsResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryPositionsResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryPositionsResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QueryPositionsResponse;

                /**
                 * Creates a plain object from a QueryPositionsResponse message. Also converts values to other types if specified.
                 * @param message QueryPositionsResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QueryPositionsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryPositionsResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryTradeRewardPointsRequest. */
            interface IQueryTradeRewardPointsRequest {

                /** QueryTradeRewardPointsRequest accounts */
                accounts?: (string[]|null);

                /** QueryTradeRewardPointsRequest pending_pool_timestamp */
                pending_pool_timestamp?: (number|null);
            }

            /** Represents a QueryTradeRewardPointsRequest. */
            class QueryTradeRewardPointsRequest implements IQueryTradeRewardPointsRequest {

                /**
                 * Constructs a new QueryTradeRewardPointsRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQueryTradeRewardPointsRequest);

                /** QueryTradeRewardPointsRequest accounts. */
                public accounts: string[];

                /** QueryTradeRewardPointsRequest pending_pool_timestamp. */
                public pending_pool_timestamp: number;

                /**
                 * Encodes the specified QueryTradeRewardPointsRequest message. Does not implicitly {@link injective.exchange.v1beta1.QueryTradeRewardPointsRequest.verify|verify} messages.
                 * @param message QueryTradeRewardPointsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQueryTradeRewardPointsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryTradeRewardPointsRequest message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QueryTradeRewardPointsRequest.verify|verify} messages.
                 * @param message QueryTradeRewardPointsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQueryTradeRewardPointsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryTradeRewardPointsRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryTradeRewardPointsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QueryTradeRewardPointsRequest;

                /**
                 * Decodes a QueryTradeRewardPointsRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryTradeRewardPointsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QueryTradeRewardPointsRequest;

                /**
                 * Verifies a QueryTradeRewardPointsRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryTradeRewardPointsRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryTradeRewardPointsRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QueryTradeRewardPointsRequest;

                /**
                 * Creates a plain object from a QueryTradeRewardPointsRequest message. Also converts values to other types if specified.
                 * @param message QueryTradeRewardPointsRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QueryTradeRewardPointsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryTradeRewardPointsRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryTradeRewardPointsResponse. */
            interface IQueryTradeRewardPointsResponse {

                /** QueryTradeRewardPointsResponse account_trade_reward_points */
                account_trade_reward_points?: (string[]|null);
            }

            /** Represents a QueryTradeRewardPointsResponse. */
            class QueryTradeRewardPointsResponse implements IQueryTradeRewardPointsResponse {

                /**
                 * Constructs a new QueryTradeRewardPointsResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQueryTradeRewardPointsResponse);

                /** QueryTradeRewardPointsResponse account_trade_reward_points. */
                public account_trade_reward_points: string[];

                /**
                 * Encodes the specified QueryTradeRewardPointsResponse message. Does not implicitly {@link injective.exchange.v1beta1.QueryTradeRewardPointsResponse.verify|verify} messages.
                 * @param message QueryTradeRewardPointsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQueryTradeRewardPointsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryTradeRewardPointsResponse message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QueryTradeRewardPointsResponse.verify|verify} messages.
                 * @param message QueryTradeRewardPointsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQueryTradeRewardPointsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryTradeRewardPointsResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryTradeRewardPointsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QueryTradeRewardPointsResponse;

                /**
                 * Decodes a QueryTradeRewardPointsResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryTradeRewardPointsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QueryTradeRewardPointsResponse;

                /**
                 * Verifies a QueryTradeRewardPointsResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryTradeRewardPointsResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryTradeRewardPointsResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QueryTradeRewardPointsResponse;

                /**
                 * Creates a plain object from a QueryTradeRewardPointsResponse message. Also converts values to other types if specified.
                 * @param message QueryTradeRewardPointsResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QueryTradeRewardPointsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryTradeRewardPointsResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryTradeRewardCampaignRequest. */
            interface IQueryTradeRewardCampaignRequest {
            }

            /** Represents a QueryTradeRewardCampaignRequest. */
            class QueryTradeRewardCampaignRequest implements IQueryTradeRewardCampaignRequest {

                /**
                 * Constructs a new QueryTradeRewardCampaignRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQueryTradeRewardCampaignRequest);

                /**
                 * Encodes the specified QueryTradeRewardCampaignRequest message. Does not implicitly {@link injective.exchange.v1beta1.QueryTradeRewardCampaignRequest.verify|verify} messages.
                 * @param message QueryTradeRewardCampaignRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQueryTradeRewardCampaignRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryTradeRewardCampaignRequest message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QueryTradeRewardCampaignRequest.verify|verify} messages.
                 * @param message QueryTradeRewardCampaignRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQueryTradeRewardCampaignRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryTradeRewardCampaignRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryTradeRewardCampaignRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QueryTradeRewardCampaignRequest;

                /**
                 * Decodes a QueryTradeRewardCampaignRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryTradeRewardCampaignRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QueryTradeRewardCampaignRequest;

                /**
                 * Verifies a QueryTradeRewardCampaignRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryTradeRewardCampaignRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryTradeRewardCampaignRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QueryTradeRewardCampaignRequest;

                /**
                 * Creates a plain object from a QueryTradeRewardCampaignRequest message. Also converts values to other types if specified.
                 * @param message QueryTradeRewardCampaignRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QueryTradeRewardCampaignRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryTradeRewardCampaignRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryTradeRewardCampaignResponse. */
            interface IQueryTradeRewardCampaignResponse {

                /** QueryTradeRewardCampaignResponse trading_reward_campaign_info */
                trading_reward_campaign_info?: (injective.exchange.v1beta1.ITradingRewardCampaignInfo|null);

                /** QueryTradeRewardCampaignResponse trading_reward_pool_campaign_schedule */
                trading_reward_pool_campaign_schedule?: (injective.exchange.v1beta1.ICampaignRewardPool[]|null);

                /** QueryTradeRewardCampaignResponse total_trade_reward_points */
                total_trade_reward_points?: (string|null);

                /** QueryTradeRewardCampaignResponse pending_trading_reward_pool_campaign_schedule */
                pending_trading_reward_pool_campaign_schedule?: (injective.exchange.v1beta1.ICampaignRewardPool[]|null);

                /** QueryTradeRewardCampaignResponse pending_total_trade_reward_points */
                pending_total_trade_reward_points?: (string[]|null);
            }

            /** Represents a QueryTradeRewardCampaignResponse. */
            class QueryTradeRewardCampaignResponse implements IQueryTradeRewardCampaignResponse {

                /**
                 * Constructs a new QueryTradeRewardCampaignResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQueryTradeRewardCampaignResponse);

                /** QueryTradeRewardCampaignResponse trading_reward_campaign_info. */
                public trading_reward_campaign_info?: (injective.exchange.v1beta1.ITradingRewardCampaignInfo|null);

                /** QueryTradeRewardCampaignResponse trading_reward_pool_campaign_schedule. */
                public trading_reward_pool_campaign_schedule: injective.exchange.v1beta1.ICampaignRewardPool[];

                /** QueryTradeRewardCampaignResponse total_trade_reward_points. */
                public total_trade_reward_points: string;

                /** QueryTradeRewardCampaignResponse pending_trading_reward_pool_campaign_schedule. */
                public pending_trading_reward_pool_campaign_schedule: injective.exchange.v1beta1.ICampaignRewardPool[];

                /** QueryTradeRewardCampaignResponse pending_total_trade_reward_points. */
                public pending_total_trade_reward_points: string[];

                /**
                 * Encodes the specified QueryTradeRewardCampaignResponse message. Does not implicitly {@link injective.exchange.v1beta1.QueryTradeRewardCampaignResponse.verify|verify} messages.
                 * @param message QueryTradeRewardCampaignResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQueryTradeRewardCampaignResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryTradeRewardCampaignResponse message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QueryTradeRewardCampaignResponse.verify|verify} messages.
                 * @param message QueryTradeRewardCampaignResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQueryTradeRewardCampaignResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryTradeRewardCampaignResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryTradeRewardCampaignResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QueryTradeRewardCampaignResponse;

                /**
                 * Decodes a QueryTradeRewardCampaignResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryTradeRewardCampaignResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QueryTradeRewardCampaignResponse;

                /**
                 * Verifies a QueryTradeRewardCampaignResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryTradeRewardCampaignResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryTradeRewardCampaignResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QueryTradeRewardCampaignResponse;

                /**
                 * Creates a plain object from a QueryTradeRewardCampaignResponse message. Also converts values to other types if specified.
                 * @param message QueryTradeRewardCampaignResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QueryTradeRewardCampaignResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryTradeRewardCampaignResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryIsOptedOutOfRewardsRequest. */
            interface IQueryIsOptedOutOfRewardsRequest {

                /** QueryIsOptedOutOfRewardsRequest account */
                account?: (string|null);
            }

            /** Represents a QueryIsOptedOutOfRewardsRequest. */
            class QueryIsOptedOutOfRewardsRequest implements IQueryIsOptedOutOfRewardsRequest {

                /**
                 * Constructs a new QueryIsOptedOutOfRewardsRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQueryIsOptedOutOfRewardsRequest);

                /** QueryIsOptedOutOfRewardsRequest account. */
                public account: string;

                /**
                 * Encodes the specified QueryIsOptedOutOfRewardsRequest message. Does not implicitly {@link injective.exchange.v1beta1.QueryIsOptedOutOfRewardsRequest.verify|verify} messages.
                 * @param message QueryIsOptedOutOfRewardsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQueryIsOptedOutOfRewardsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryIsOptedOutOfRewardsRequest message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QueryIsOptedOutOfRewardsRequest.verify|verify} messages.
                 * @param message QueryIsOptedOutOfRewardsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQueryIsOptedOutOfRewardsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryIsOptedOutOfRewardsRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryIsOptedOutOfRewardsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QueryIsOptedOutOfRewardsRequest;

                /**
                 * Decodes a QueryIsOptedOutOfRewardsRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryIsOptedOutOfRewardsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QueryIsOptedOutOfRewardsRequest;

                /**
                 * Verifies a QueryIsOptedOutOfRewardsRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryIsOptedOutOfRewardsRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryIsOptedOutOfRewardsRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QueryIsOptedOutOfRewardsRequest;

                /**
                 * Creates a plain object from a QueryIsOptedOutOfRewardsRequest message. Also converts values to other types if specified.
                 * @param message QueryIsOptedOutOfRewardsRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QueryIsOptedOutOfRewardsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryIsOptedOutOfRewardsRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryIsOptedOutOfRewardsResponse. */
            interface IQueryIsOptedOutOfRewardsResponse {

                /** QueryIsOptedOutOfRewardsResponse is_opted_out */
                is_opted_out?: (boolean|null);
            }

            /** Represents a QueryIsOptedOutOfRewardsResponse. */
            class QueryIsOptedOutOfRewardsResponse implements IQueryIsOptedOutOfRewardsResponse {

                /**
                 * Constructs a new QueryIsOptedOutOfRewardsResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQueryIsOptedOutOfRewardsResponse);

                /** QueryIsOptedOutOfRewardsResponse is_opted_out. */
                public is_opted_out: boolean;

                /**
                 * Encodes the specified QueryIsOptedOutOfRewardsResponse message. Does not implicitly {@link injective.exchange.v1beta1.QueryIsOptedOutOfRewardsResponse.verify|verify} messages.
                 * @param message QueryIsOptedOutOfRewardsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQueryIsOptedOutOfRewardsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryIsOptedOutOfRewardsResponse message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QueryIsOptedOutOfRewardsResponse.verify|verify} messages.
                 * @param message QueryIsOptedOutOfRewardsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQueryIsOptedOutOfRewardsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryIsOptedOutOfRewardsResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryIsOptedOutOfRewardsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QueryIsOptedOutOfRewardsResponse;

                /**
                 * Decodes a QueryIsOptedOutOfRewardsResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryIsOptedOutOfRewardsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QueryIsOptedOutOfRewardsResponse;

                /**
                 * Verifies a QueryIsOptedOutOfRewardsResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryIsOptedOutOfRewardsResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryIsOptedOutOfRewardsResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QueryIsOptedOutOfRewardsResponse;

                /**
                 * Creates a plain object from a QueryIsOptedOutOfRewardsResponse message. Also converts values to other types if specified.
                 * @param message QueryIsOptedOutOfRewardsResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QueryIsOptedOutOfRewardsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryIsOptedOutOfRewardsResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryOptedOutOfRewardsAccountsRequest. */
            interface IQueryOptedOutOfRewardsAccountsRequest {
            }

            /** Represents a QueryOptedOutOfRewardsAccountsRequest. */
            class QueryOptedOutOfRewardsAccountsRequest implements IQueryOptedOutOfRewardsAccountsRequest {

                /**
                 * Constructs a new QueryOptedOutOfRewardsAccountsRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQueryOptedOutOfRewardsAccountsRequest);

                /**
                 * Encodes the specified QueryOptedOutOfRewardsAccountsRequest message. Does not implicitly {@link injective.exchange.v1beta1.QueryOptedOutOfRewardsAccountsRequest.verify|verify} messages.
                 * @param message QueryOptedOutOfRewardsAccountsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQueryOptedOutOfRewardsAccountsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryOptedOutOfRewardsAccountsRequest message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QueryOptedOutOfRewardsAccountsRequest.verify|verify} messages.
                 * @param message QueryOptedOutOfRewardsAccountsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQueryOptedOutOfRewardsAccountsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryOptedOutOfRewardsAccountsRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryOptedOutOfRewardsAccountsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QueryOptedOutOfRewardsAccountsRequest;

                /**
                 * Decodes a QueryOptedOutOfRewardsAccountsRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryOptedOutOfRewardsAccountsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QueryOptedOutOfRewardsAccountsRequest;

                /**
                 * Verifies a QueryOptedOutOfRewardsAccountsRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryOptedOutOfRewardsAccountsRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryOptedOutOfRewardsAccountsRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QueryOptedOutOfRewardsAccountsRequest;

                /**
                 * Creates a plain object from a QueryOptedOutOfRewardsAccountsRequest message. Also converts values to other types if specified.
                 * @param message QueryOptedOutOfRewardsAccountsRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QueryOptedOutOfRewardsAccountsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryOptedOutOfRewardsAccountsRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryOptedOutOfRewardsAccountsResponse. */
            interface IQueryOptedOutOfRewardsAccountsResponse {

                /** QueryOptedOutOfRewardsAccountsResponse accounts */
                accounts?: (string[]|null);
            }

            /** Represents a QueryOptedOutOfRewardsAccountsResponse. */
            class QueryOptedOutOfRewardsAccountsResponse implements IQueryOptedOutOfRewardsAccountsResponse {

                /**
                 * Constructs a new QueryOptedOutOfRewardsAccountsResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQueryOptedOutOfRewardsAccountsResponse);

                /** QueryOptedOutOfRewardsAccountsResponse accounts. */
                public accounts: string[];

                /**
                 * Encodes the specified QueryOptedOutOfRewardsAccountsResponse message. Does not implicitly {@link injective.exchange.v1beta1.QueryOptedOutOfRewardsAccountsResponse.verify|verify} messages.
                 * @param message QueryOptedOutOfRewardsAccountsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQueryOptedOutOfRewardsAccountsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryOptedOutOfRewardsAccountsResponse message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QueryOptedOutOfRewardsAccountsResponse.verify|verify} messages.
                 * @param message QueryOptedOutOfRewardsAccountsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQueryOptedOutOfRewardsAccountsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryOptedOutOfRewardsAccountsResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryOptedOutOfRewardsAccountsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QueryOptedOutOfRewardsAccountsResponse;

                /**
                 * Decodes a QueryOptedOutOfRewardsAccountsResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryOptedOutOfRewardsAccountsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QueryOptedOutOfRewardsAccountsResponse;

                /**
                 * Verifies a QueryOptedOutOfRewardsAccountsResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryOptedOutOfRewardsAccountsResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryOptedOutOfRewardsAccountsResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QueryOptedOutOfRewardsAccountsResponse;

                /**
                 * Creates a plain object from a QueryOptedOutOfRewardsAccountsResponse message. Also converts values to other types if specified.
                 * @param message QueryOptedOutOfRewardsAccountsResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QueryOptedOutOfRewardsAccountsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryOptedOutOfRewardsAccountsResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryFeeDiscountAccountInfoRequest. */
            interface IQueryFeeDiscountAccountInfoRequest {

                /** QueryFeeDiscountAccountInfoRequest account */
                account?: (string|null);
            }

            /** Represents a QueryFeeDiscountAccountInfoRequest. */
            class QueryFeeDiscountAccountInfoRequest implements IQueryFeeDiscountAccountInfoRequest {

                /**
                 * Constructs a new QueryFeeDiscountAccountInfoRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQueryFeeDiscountAccountInfoRequest);

                /** QueryFeeDiscountAccountInfoRequest account. */
                public account: string;

                /**
                 * Encodes the specified QueryFeeDiscountAccountInfoRequest message. Does not implicitly {@link injective.exchange.v1beta1.QueryFeeDiscountAccountInfoRequest.verify|verify} messages.
                 * @param message QueryFeeDiscountAccountInfoRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQueryFeeDiscountAccountInfoRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryFeeDiscountAccountInfoRequest message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QueryFeeDiscountAccountInfoRequest.verify|verify} messages.
                 * @param message QueryFeeDiscountAccountInfoRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQueryFeeDiscountAccountInfoRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryFeeDiscountAccountInfoRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryFeeDiscountAccountInfoRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QueryFeeDiscountAccountInfoRequest;

                /**
                 * Decodes a QueryFeeDiscountAccountInfoRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryFeeDiscountAccountInfoRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QueryFeeDiscountAccountInfoRequest;

                /**
                 * Verifies a QueryFeeDiscountAccountInfoRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryFeeDiscountAccountInfoRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryFeeDiscountAccountInfoRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QueryFeeDiscountAccountInfoRequest;

                /**
                 * Creates a plain object from a QueryFeeDiscountAccountInfoRequest message. Also converts values to other types if specified.
                 * @param message QueryFeeDiscountAccountInfoRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QueryFeeDiscountAccountInfoRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryFeeDiscountAccountInfoRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryFeeDiscountAccountInfoResponse. */
            interface IQueryFeeDiscountAccountInfoResponse {

                /** QueryFeeDiscountAccountInfoResponse tier_level */
                tier_level?: (number|null);

                /** QueryFeeDiscountAccountInfoResponse account_info */
                account_info?: (injective.exchange.v1beta1.IFeeDiscountTierInfo|null);

                /** QueryFeeDiscountAccountInfoResponse account_ttl */
                account_ttl?: (injective.exchange.v1beta1.IFeeDiscountTierTTL|null);
            }

            /** Represents a QueryFeeDiscountAccountInfoResponse. */
            class QueryFeeDiscountAccountInfoResponse implements IQueryFeeDiscountAccountInfoResponse {

                /**
                 * Constructs a new QueryFeeDiscountAccountInfoResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQueryFeeDiscountAccountInfoResponse);

                /** QueryFeeDiscountAccountInfoResponse tier_level. */
                public tier_level: number;

                /** QueryFeeDiscountAccountInfoResponse account_info. */
                public account_info?: (injective.exchange.v1beta1.IFeeDiscountTierInfo|null);

                /** QueryFeeDiscountAccountInfoResponse account_ttl. */
                public account_ttl?: (injective.exchange.v1beta1.IFeeDiscountTierTTL|null);

                /**
                 * Encodes the specified QueryFeeDiscountAccountInfoResponse message. Does not implicitly {@link injective.exchange.v1beta1.QueryFeeDiscountAccountInfoResponse.verify|verify} messages.
                 * @param message QueryFeeDiscountAccountInfoResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQueryFeeDiscountAccountInfoResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryFeeDiscountAccountInfoResponse message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QueryFeeDiscountAccountInfoResponse.verify|verify} messages.
                 * @param message QueryFeeDiscountAccountInfoResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQueryFeeDiscountAccountInfoResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryFeeDiscountAccountInfoResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryFeeDiscountAccountInfoResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QueryFeeDiscountAccountInfoResponse;

                /**
                 * Decodes a QueryFeeDiscountAccountInfoResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryFeeDiscountAccountInfoResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QueryFeeDiscountAccountInfoResponse;

                /**
                 * Verifies a QueryFeeDiscountAccountInfoResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryFeeDiscountAccountInfoResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryFeeDiscountAccountInfoResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QueryFeeDiscountAccountInfoResponse;

                /**
                 * Creates a plain object from a QueryFeeDiscountAccountInfoResponse message. Also converts values to other types if specified.
                 * @param message QueryFeeDiscountAccountInfoResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QueryFeeDiscountAccountInfoResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryFeeDiscountAccountInfoResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryFeeDiscountScheduleRequest. */
            interface IQueryFeeDiscountScheduleRequest {
            }

            /** Represents a QueryFeeDiscountScheduleRequest. */
            class QueryFeeDiscountScheduleRequest implements IQueryFeeDiscountScheduleRequest {

                /**
                 * Constructs a new QueryFeeDiscountScheduleRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQueryFeeDiscountScheduleRequest);

                /**
                 * Encodes the specified QueryFeeDiscountScheduleRequest message. Does not implicitly {@link injective.exchange.v1beta1.QueryFeeDiscountScheduleRequest.verify|verify} messages.
                 * @param message QueryFeeDiscountScheduleRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQueryFeeDiscountScheduleRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryFeeDiscountScheduleRequest message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QueryFeeDiscountScheduleRequest.verify|verify} messages.
                 * @param message QueryFeeDiscountScheduleRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQueryFeeDiscountScheduleRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryFeeDiscountScheduleRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryFeeDiscountScheduleRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QueryFeeDiscountScheduleRequest;

                /**
                 * Decodes a QueryFeeDiscountScheduleRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryFeeDiscountScheduleRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QueryFeeDiscountScheduleRequest;

                /**
                 * Verifies a QueryFeeDiscountScheduleRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryFeeDiscountScheduleRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryFeeDiscountScheduleRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QueryFeeDiscountScheduleRequest;

                /**
                 * Creates a plain object from a QueryFeeDiscountScheduleRequest message. Also converts values to other types if specified.
                 * @param message QueryFeeDiscountScheduleRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QueryFeeDiscountScheduleRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryFeeDiscountScheduleRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryFeeDiscountScheduleResponse. */
            interface IQueryFeeDiscountScheduleResponse {

                /** QueryFeeDiscountScheduleResponse fee_discount_schedule */
                fee_discount_schedule?: (injective.exchange.v1beta1.IFeeDiscountSchedule|null);
            }

            /** Represents a QueryFeeDiscountScheduleResponse. */
            class QueryFeeDiscountScheduleResponse implements IQueryFeeDiscountScheduleResponse {

                /**
                 * Constructs a new QueryFeeDiscountScheduleResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQueryFeeDiscountScheduleResponse);

                /** QueryFeeDiscountScheduleResponse fee_discount_schedule. */
                public fee_discount_schedule?: (injective.exchange.v1beta1.IFeeDiscountSchedule|null);

                /**
                 * Encodes the specified QueryFeeDiscountScheduleResponse message. Does not implicitly {@link injective.exchange.v1beta1.QueryFeeDiscountScheduleResponse.verify|verify} messages.
                 * @param message QueryFeeDiscountScheduleResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQueryFeeDiscountScheduleResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryFeeDiscountScheduleResponse message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QueryFeeDiscountScheduleResponse.verify|verify} messages.
                 * @param message QueryFeeDiscountScheduleResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQueryFeeDiscountScheduleResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryFeeDiscountScheduleResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryFeeDiscountScheduleResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QueryFeeDiscountScheduleResponse;

                /**
                 * Decodes a QueryFeeDiscountScheduleResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryFeeDiscountScheduleResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QueryFeeDiscountScheduleResponse;

                /**
                 * Verifies a QueryFeeDiscountScheduleResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryFeeDiscountScheduleResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryFeeDiscountScheduleResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QueryFeeDiscountScheduleResponse;

                /**
                 * Creates a plain object from a QueryFeeDiscountScheduleResponse message. Also converts values to other types if specified.
                 * @param message QueryFeeDiscountScheduleResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QueryFeeDiscountScheduleResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryFeeDiscountScheduleResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryBalanceMismatchesRequest. */
            interface IQueryBalanceMismatchesRequest {

                /** QueryBalanceMismatchesRequest dust_factor */
                dust_factor?: (number|null);
            }

            /** Represents a QueryBalanceMismatchesRequest. */
            class QueryBalanceMismatchesRequest implements IQueryBalanceMismatchesRequest {

                /**
                 * Constructs a new QueryBalanceMismatchesRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQueryBalanceMismatchesRequest);

                /** QueryBalanceMismatchesRequest dust_factor. */
                public dust_factor: number;

                /**
                 * Encodes the specified QueryBalanceMismatchesRequest message. Does not implicitly {@link injective.exchange.v1beta1.QueryBalanceMismatchesRequest.verify|verify} messages.
                 * @param message QueryBalanceMismatchesRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQueryBalanceMismatchesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryBalanceMismatchesRequest message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QueryBalanceMismatchesRequest.verify|verify} messages.
                 * @param message QueryBalanceMismatchesRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQueryBalanceMismatchesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryBalanceMismatchesRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryBalanceMismatchesRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QueryBalanceMismatchesRequest;

                /**
                 * Decodes a QueryBalanceMismatchesRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryBalanceMismatchesRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QueryBalanceMismatchesRequest;

                /**
                 * Verifies a QueryBalanceMismatchesRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryBalanceMismatchesRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryBalanceMismatchesRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QueryBalanceMismatchesRequest;

                /**
                 * Creates a plain object from a QueryBalanceMismatchesRequest message. Also converts values to other types if specified.
                 * @param message QueryBalanceMismatchesRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QueryBalanceMismatchesRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryBalanceMismatchesRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a BalanceMismatch. */
            interface IBalanceMismatch {

                /** BalanceMismatch subaccountId */
                subaccountId?: (string|null);

                /** BalanceMismatch denom */
                denom?: (string|null);

                /** BalanceMismatch available */
                available?: (string|null);

                /** BalanceMismatch total */
                total?: (string|null);

                /** BalanceMismatch balance_hold */
                balance_hold?: (string|null);

                /** BalanceMismatch expected_total */
                expected_total?: (string|null);

                /** BalanceMismatch difference */
                difference?: (string|null);
            }

            /** Represents a BalanceMismatch. */
            class BalanceMismatch implements IBalanceMismatch {

                /**
                 * Constructs a new BalanceMismatch.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IBalanceMismatch);

                /** BalanceMismatch subaccountId. */
                public subaccountId: string;

                /** BalanceMismatch denom. */
                public denom: string;

                /** BalanceMismatch available. */
                public available: string;

                /** BalanceMismatch total. */
                public total: string;

                /** BalanceMismatch balance_hold. */
                public balance_hold: string;

                /** BalanceMismatch expected_total. */
                public expected_total: string;

                /** BalanceMismatch difference. */
                public difference: string;

                /**
                 * Encodes the specified BalanceMismatch message. Does not implicitly {@link injective.exchange.v1beta1.BalanceMismatch.verify|verify} messages.
                 * @param message BalanceMismatch message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IBalanceMismatch, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified BalanceMismatch message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.BalanceMismatch.verify|verify} messages.
                 * @param message BalanceMismatch message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IBalanceMismatch, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a BalanceMismatch message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns BalanceMismatch
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.BalanceMismatch;

                /**
                 * Decodes a BalanceMismatch message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns BalanceMismatch
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.BalanceMismatch;

                /**
                 * Verifies a BalanceMismatch message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a BalanceMismatch message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns BalanceMismatch
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.BalanceMismatch;

                /**
                 * Creates a plain object from a BalanceMismatch message. Also converts values to other types if specified.
                 * @param message BalanceMismatch
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.BalanceMismatch, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this BalanceMismatch to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryBalanceMismatchesResponse. */
            interface IQueryBalanceMismatchesResponse {

                /** QueryBalanceMismatchesResponse balance_mismatches */
                balance_mismatches?: (injective.exchange.v1beta1.IBalanceMismatch[]|null);
            }

            /** Represents a QueryBalanceMismatchesResponse. */
            class QueryBalanceMismatchesResponse implements IQueryBalanceMismatchesResponse {

                /**
                 * Constructs a new QueryBalanceMismatchesResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQueryBalanceMismatchesResponse);

                /** QueryBalanceMismatchesResponse balance_mismatches. */
                public balance_mismatches: injective.exchange.v1beta1.IBalanceMismatch[];

                /**
                 * Encodes the specified QueryBalanceMismatchesResponse message. Does not implicitly {@link injective.exchange.v1beta1.QueryBalanceMismatchesResponse.verify|verify} messages.
                 * @param message QueryBalanceMismatchesResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQueryBalanceMismatchesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryBalanceMismatchesResponse message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QueryBalanceMismatchesResponse.verify|verify} messages.
                 * @param message QueryBalanceMismatchesResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQueryBalanceMismatchesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryBalanceMismatchesResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryBalanceMismatchesResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QueryBalanceMismatchesResponse;

                /**
                 * Decodes a QueryBalanceMismatchesResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryBalanceMismatchesResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QueryBalanceMismatchesResponse;

                /**
                 * Verifies a QueryBalanceMismatchesResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryBalanceMismatchesResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryBalanceMismatchesResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QueryBalanceMismatchesResponse;

                /**
                 * Creates a plain object from a QueryBalanceMismatchesResponse message. Also converts values to other types if specified.
                 * @param message QueryBalanceMismatchesResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QueryBalanceMismatchesResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryBalanceMismatchesResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryBalanceWithBalanceHoldsRequest. */
            interface IQueryBalanceWithBalanceHoldsRequest {
            }

            /** Represents a QueryBalanceWithBalanceHoldsRequest. */
            class QueryBalanceWithBalanceHoldsRequest implements IQueryBalanceWithBalanceHoldsRequest {

                /**
                 * Constructs a new QueryBalanceWithBalanceHoldsRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQueryBalanceWithBalanceHoldsRequest);

                /**
                 * Encodes the specified QueryBalanceWithBalanceHoldsRequest message. Does not implicitly {@link injective.exchange.v1beta1.QueryBalanceWithBalanceHoldsRequest.verify|verify} messages.
                 * @param message QueryBalanceWithBalanceHoldsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQueryBalanceWithBalanceHoldsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryBalanceWithBalanceHoldsRequest message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QueryBalanceWithBalanceHoldsRequest.verify|verify} messages.
                 * @param message QueryBalanceWithBalanceHoldsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQueryBalanceWithBalanceHoldsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryBalanceWithBalanceHoldsRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryBalanceWithBalanceHoldsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QueryBalanceWithBalanceHoldsRequest;

                /**
                 * Decodes a QueryBalanceWithBalanceHoldsRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryBalanceWithBalanceHoldsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QueryBalanceWithBalanceHoldsRequest;

                /**
                 * Verifies a QueryBalanceWithBalanceHoldsRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryBalanceWithBalanceHoldsRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryBalanceWithBalanceHoldsRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QueryBalanceWithBalanceHoldsRequest;

                /**
                 * Creates a plain object from a QueryBalanceWithBalanceHoldsRequest message. Also converts values to other types if specified.
                 * @param message QueryBalanceWithBalanceHoldsRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QueryBalanceWithBalanceHoldsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryBalanceWithBalanceHoldsRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a BalanceWithMarginHold. */
            interface IBalanceWithMarginHold {

                /** BalanceWithMarginHold subaccountId */
                subaccountId?: (string|null);

                /** BalanceWithMarginHold denom */
                denom?: (string|null);

                /** BalanceWithMarginHold available */
                available?: (string|null);

                /** BalanceWithMarginHold total */
                total?: (string|null);

                /** BalanceWithMarginHold balance_hold */
                balance_hold?: (string|null);
            }

            /** Represents a BalanceWithMarginHold. */
            class BalanceWithMarginHold implements IBalanceWithMarginHold {

                /**
                 * Constructs a new BalanceWithMarginHold.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IBalanceWithMarginHold);

                /** BalanceWithMarginHold subaccountId. */
                public subaccountId: string;

                /** BalanceWithMarginHold denom. */
                public denom: string;

                /** BalanceWithMarginHold available. */
                public available: string;

                /** BalanceWithMarginHold total. */
                public total: string;

                /** BalanceWithMarginHold balance_hold. */
                public balance_hold: string;

                /**
                 * Encodes the specified BalanceWithMarginHold message. Does not implicitly {@link injective.exchange.v1beta1.BalanceWithMarginHold.verify|verify} messages.
                 * @param message BalanceWithMarginHold message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IBalanceWithMarginHold, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified BalanceWithMarginHold message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.BalanceWithMarginHold.verify|verify} messages.
                 * @param message BalanceWithMarginHold message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IBalanceWithMarginHold, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a BalanceWithMarginHold message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns BalanceWithMarginHold
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.BalanceWithMarginHold;

                /**
                 * Decodes a BalanceWithMarginHold message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns BalanceWithMarginHold
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.BalanceWithMarginHold;

                /**
                 * Verifies a BalanceWithMarginHold message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a BalanceWithMarginHold message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns BalanceWithMarginHold
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.BalanceWithMarginHold;

                /**
                 * Creates a plain object from a BalanceWithMarginHold message. Also converts values to other types if specified.
                 * @param message BalanceWithMarginHold
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.BalanceWithMarginHold, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this BalanceWithMarginHold to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryBalanceWithBalanceHoldsResponse. */
            interface IQueryBalanceWithBalanceHoldsResponse {

                /** QueryBalanceWithBalanceHoldsResponse balance_with_balance_holds */
                balance_with_balance_holds?: (injective.exchange.v1beta1.IBalanceWithMarginHold[]|null);
            }

            /** Represents a QueryBalanceWithBalanceHoldsResponse. */
            class QueryBalanceWithBalanceHoldsResponse implements IQueryBalanceWithBalanceHoldsResponse {

                /**
                 * Constructs a new QueryBalanceWithBalanceHoldsResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQueryBalanceWithBalanceHoldsResponse);

                /** QueryBalanceWithBalanceHoldsResponse balance_with_balance_holds. */
                public balance_with_balance_holds: injective.exchange.v1beta1.IBalanceWithMarginHold[];

                /**
                 * Encodes the specified QueryBalanceWithBalanceHoldsResponse message. Does not implicitly {@link injective.exchange.v1beta1.QueryBalanceWithBalanceHoldsResponse.verify|verify} messages.
                 * @param message QueryBalanceWithBalanceHoldsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQueryBalanceWithBalanceHoldsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryBalanceWithBalanceHoldsResponse message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QueryBalanceWithBalanceHoldsResponse.verify|verify} messages.
                 * @param message QueryBalanceWithBalanceHoldsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQueryBalanceWithBalanceHoldsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryBalanceWithBalanceHoldsResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryBalanceWithBalanceHoldsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QueryBalanceWithBalanceHoldsResponse;

                /**
                 * Decodes a QueryBalanceWithBalanceHoldsResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryBalanceWithBalanceHoldsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QueryBalanceWithBalanceHoldsResponse;

                /**
                 * Verifies a QueryBalanceWithBalanceHoldsResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryBalanceWithBalanceHoldsResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryBalanceWithBalanceHoldsResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QueryBalanceWithBalanceHoldsResponse;

                /**
                 * Creates a plain object from a QueryBalanceWithBalanceHoldsResponse message. Also converts values to other types if specified.
                 * @param message QueryBalanceWithBalanceHoldsResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QueryBalanceWithBalanceHoldsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryBalanceWithBalanceHoldsResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryFeeDiscountTierStatisticsRequest. */
            interface IQueryFeeDiscountTierStatisticsRequest {
            }

            /** Represents a QueryFeeDiscountTierStatisticsRequest. */
            class QueryFeeDiscountTierStatisticsRequest implements IQueryFeeDiscountTierStatisticsRequest {

                /**
                 * Constructs a new QueryFeeDiscountTierStatisticsRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQueryFeeDiscountTierStatisticsRequest);

                /**
                 * Encodes the specified QueryFeeDiscountTierStatisticsRequest message. Does not implicitly {@link injective.exchange.v1beta1.QueryFeeDiscountTierStatisticsRequest.verify|verify} messages.
                 * @param message QueryFeeDiscountTierStatisticsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQueryFeeDiscountTierStatisticsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryFeeDiscountTierStatisticsRequest message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QueryFeeDiscountTierStatisticsRequest.verify|verify} messages.
                 * @param message QueryFeeDiscountTierStatisticsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQueryFeeDiscountTierStatisticsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryFeeDiscountTierStatisticsRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryFeeDiscountTierStatisticsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QueryFeeDiscountTierStatisticsRequest;

                /**
                 * Decodes a QueryFeeDiscountTierStatisticsRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryFeeDiscountTierStatisticsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QueryFeeDiscountTierStatisticsRequest;

                /**
                 * Verifies a QueryFeeDiscountTierStatisticsRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryFeeDiscountTierStatisticsRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryFeeDiscountTierStatisticsRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QueryFeeDiscountTierStatisticsRequest;

                /**
                 * Creates a plain object from a QueryFeeDiscountTierStatisticsRequest message. Also converts values to other types if specified.
                 * @param message QueryFeeDiscountTierStatisticsRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QueryFeeDiscountTierStatisticsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryFeeDiscountTierStatisticsRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a TierStatistic. */
            interface ITierStatistic {

                /** TierStatistic tier */
                tier?: (number|null);

                /** TierStatistic count */
                count?: (number|null);
            }

            /** Represents a TierStatistic. */
            class TierStatistic implements ITierStatistic {

                /**
                 * Constructs a new TierStatistic.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.ITierStatistic);

                /** TierStatistic tier. */
                public tier: number;

                /** TierStatistic count. */
                public count: number;

                /**
                 * Encodes the specified TierStatistic message. Does not implicitly {@link injective.exchange.v1beta1.TierStatistic.verify|verify} messages.
                 * @param message TierStatistic message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.ITierStatistic, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified TierStatistic message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.TierStatistic.verify|verify} messages.
                 * @param message TierStatistic message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.ITierStatistic, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a TierStatistic message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns TierStatistic
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.TierStatistic;

                /**
                 * Decodes a TierStatistic message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns TierStatistic
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.TierStatistic;

                /**
                 * Verifies a TierStatistic message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a TierStatistic message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns TierStatistic
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.TierStatistic;

                /**
                 * Creates a plain object from a TierStatistic message. Also converts values to other types if specified.
                 * @param message TierStatistic
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.TierStatistic, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this TierStatistic to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryFeeDiscountTierStatisticsResponse. */
            interface IQueryFeeDiscountTierStatisticsResponse {

                /** QueryFeeDiscountTierStatisticsResponse statistics */
                statistics?: (injective.exchange.v1beta1.ITierStatistic[]|null);
            }

            /** Represents a QueryFeeDiscountTierStatisticsResponse. */
            class QueryFeeDiscountTierStatisticsResponse implements IQueryFeeDiscountTierStatisticsResponse {

                /**
                 * Constructs a new QueryFeeDiscountTierStatisticsResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQueryFeeDiscountTierStatisticsResponse);

                /** QueryFeeDiscountTierStatisticsResponse statistics. */
                public statistics: injective.exchange.v1beta1.ITierStatistic[];

                /**
                 * Encodes the specified QueryFeeDiscountTierStatisticsResponse message. Does not implicitly {@link injective.exchange.v1beta1.QueryFeeDiscountTierStatisticsResponse.verify|verify} messages.
                 * @param message QueryFeeDiscountTierStatisticsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQueryFeeDiscountTierStatisticsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryFeeDiscountTierStatisticsResponse message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QueryFeeDiscountTierStatisticsResponse.verify|verify} messages.
                 * @param message QueryFeeDiscountTierStatisticsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQueryFeeDiscountTierStatisticsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryFeeDiscountTierStatisticsResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryFeeDiscountTierStatisticsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QueryFeeDiscountTierStatisticsResponse;

                /**
                 * Decodes a QueryFeeDiscountTierStatisticsResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryFeeDiscountTierStatisticsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QueryFeeDiscountTierStatisticsResponse;

                /**
                 * Verifies a QueryFeeDiscountTierStatisticsResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryFeeDiscountTierStatisticsResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryFeeDiscountTierStatisticsResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QueryFeeDiscountTierStatisticsResponse;

                /**
                 * Creates a plain object from a QueryFeeDiscountTierStatisticsResponse message. Also converts values to other types if specified.
                 * @param message QueryFeeDiscountTierStatisticsResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QueryFeeDiscountTierStatisticsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryFeeDiscountTierStatisticsResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MitoVaultInfosRequest. */
            interface IMitoVaultInfosRequest {
            }

            /** Represents a MitoVaultInfosRequest. */
            class MitoVaultInfosRequest implements IMitoVaultInfosRequest {

                /**
                 * Constructs a new MitoVaultInfosRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IMitoVaultInfosRequest);

                /**
                 * Encodes the specified MitoVaultInfosRequest message. Does not implicitly {@link injective.exchange.v1beta1.MitoVaultInfosRequest.verify|verify} messages.
                 * @param message MitoVaultInfosRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IMitoVaultInfosRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MitoVaultInfosRequest message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.MitoVaultInfosRequest.verify|verify} messages.
                 * @param message MitoVaultInfosRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IMitoVaultInfosRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MitoVaultInfosRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MitoVaultInfosRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.MitoVaultInfosRequest;

                /**
                 * Decodes a MitoVaultInfosRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MitoVaultInfosRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.MitoVaultInfosRequest;

                /**
                 * Verifies a MitoVaultInfosRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MitoVaultInfosRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MitoVaultInfosRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.MitoVaultInfosRequest;

                /**
                 * Creates a plain object from a MitoVaultInfosRequest message. Also converts values to other types if specified.
                 * @param message MitoVaultInfosRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.MitoVaultInfosRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MitoVaultInfosRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MitoVaultInfosResponse. */
            interface IMitoVaultInfosResponse {

                /** MitoVaultInfosResponse master_addresses */
                master_addresses?: (string[]|null);

                /** MitoVaultInfosResponse derivative_addresses */
                derivative_addresses?: (string[]|null);

                /** MitoVaultInfosResponse spot_addresses */
                spot_addresses?: (string[]|null);

                /** MitoVaultInfosResponse cw20_addresses */
                cw20_addresses?: (string[]|null);
            }

            /** Represents a MitoVaultInfosResponse. */
            class MitoVaultInfosResponse implements IMitoVaultInfosResponse {

                /**
                 * Constructs a new MitoVaultInfosResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IMitoVaultInfosResponse);

                /** MitoVaultInfosResponse master_addresses. */
                public master_addresses: string[];

                /** MitoVaultInfosResponse derivative_addresses. */
                public derivative_addresses: string[];

                /** MitoVaultInfosResponse spot_addresses. */
                public spot_addresses: string[];

                /** MitoVaultInfosResponse cw20_addresses. */
                public cw20_addresses: string[];

                /**
                 * Encodes the specified MitoVaultInfosResponse message. Does not implicitly {@link injective.exchange.v1beta1.MitoVaultInfosResponse.verify|verify} messages.
                 * @param message MitoVaultInfosResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IMitoVaultInfosResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MitoVaultInfosResponse message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.MitoVaultInfosResponse.verify|verify} messages.
                 * @param message MitoVaultInfosResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IMitoVaultInfosResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MitoVaultInfosResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MitoVaultInfosResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.MitoVaultInfosResponse;

                /**
                 * Decodes a MitoVaultInfosResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MitoVaultInfosResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.MitoVaultInfosResponse;

                /**
                 * Verifies a MitoVaultInfosResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MitoVaultInfosResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MitoVaultInfosResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.MitoVaultInfosResponse;

                /**
                 * Creates a plain object from a MitoVaultInfosResponse message. Also converts values to other types if specified.
                 * @param message MitoVaultInfosResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.MitoVaultInfosResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MitoVaultInfosResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryMarketIDFromVaultRequest. */
            interface IQueryMarketIDFromVaultRequest {

                /** QueryMarketIDFromVaultRequest vault_address */
                vault_address?: (string|null);
            }

            /** Represents a QueryMarketIDFromVaultRequest. */
            class QueryMarketIDFromVaultRequest implements IQueryMarketIDFromVaultRequest {

                /**
                 * Constructs a new QueryMarketIDFromVaultRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQueryMarketIDFromVaultRequest);

                /** QueryMarketIDFromVaultRequest vault_address. */
                public vault_address: string;

                /**
                 * Encodes the specified QueryMarketIDFromVaultRequest message. Does not implicitly {@link injective.exchange.v1beta1.QueryMarketIDFromVaultRequest.verify|verify} messages.
                 * @param message QueryMarketIDFromVaultRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQueryMarketIDFromVaultRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryMarketIDFromVaultRequest message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QueryMarketIDFromVaultRequest.verify|verify} messages.
                 * @param message QueryMarketIDFromVaultRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQueryMarketIDFromVaultRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryMarketIDFromVaultRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryMarketIDFromVaultRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QueryMarketIDFromVaultRequest;

                /**
                 * Decodes a QueryMarketIDFromVaultRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryMarketIDFromVaultRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QueryMarketIDFromVaultRequest;

                /**
                 * Verifies a QueryMarketIDFromVaultRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryMarketIDFromVaultRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryMarketIDFromVaultRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QueryMarketIDFromVaultRequest;

                /**
                 * Creates a plain object from a QueryMarketIDFromVaultRequest message. Also converts values to other types if specified.
                 * @param message QueryMarketIDFromVaultRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QueryMarketIDFromVaultRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryMarketIDFromVaultRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryMarketIDFromVaultResponse. */
            interface IQueryMarketIDFromVaultResponse {

                /** QueryMarketIDFromVaultResponse market_id */
                market_id?: (string|null);
            }

            /** Represents a QueryMarketIDFromVaultResponse. */
            class QueryMarketIDFromVaultResponse implements IQueryMarketIDFromVaultResponse {

                /**
                 * Constructs a new QueryMarketIDFromVaultResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQueryMarketIDFromVaultResponse);

                /** QueryMarketIDFromVaultResponse market_id. */
                public market_id: string;

                /**
                 * Encodes the specified QueryMarketIDFromVaultResponse message. Does not implicitly {@link injective.exchange.v1beta1.QueryMarketIDFromVaultResponse.verify|verify} messages.
                 * @param message QueryMarketIDFromVaultResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQueryMarketIDFromVaultResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryMarketIDFromVaultResponse message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QueryMarketIDFromVaultResponse.verify|verify} messages.
                 * @param message QueryMarketIDFromVaultResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQueryMarketIDFromVaultResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryMarketIDFromVaultResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryMarketIDFromVaultResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QueryMarketIDFromVaultResponse;

                /**
                 * Decodes a QueryMarketIDFromVaultResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryMarketIDFromVaultResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QueryMarketIDFromVaultResponse;

                /**
                 * Verifies a QueryMarketIDFromVaultResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryMarketIDFromVaultResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryMarketIDFromVaultResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QueryMarketIDFromVaultResponse;

                /**
                 * Creates a plain object from a QueryMarketIDFromVaultResponse message. Also converts values to other types if specified.
                 * @param message QueryMarketIDFromVaultResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QueryMarketIDFromVaultResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryMarketIDFromVaultResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryHistoricalTradeRecordsRequest. */
            interface IQueryHistoricalTradeRecordsRequest {

                /** QueryHistoricalTradeRecordsRequest market_id */
                market_id?: (string|null);
            }

            /** Represents a QueryHistoricalTradeRecordsRequest. */
            class QueryHistoricalTradeRecordsRequest implements IQueryHistoricalTradeRecordsRequest {

                /**
                 * Constructs a new QueryHistoricalTradeRecordsRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQueryHistoricalTradeRecordsRequest);

                /** QueryHistoricalTradeRecordsRequest market_id. */
                public market_id: string;

                /**
                 * Encodes the specified QueryHistoricalTradeRecordsRequest message. Does not implicitly {@link injective.exchange.v1beta1.QueryHistoricalTradeRecordsRequest.verify|verify} messages.
                 * @param message QueryHistoricalTradeRecordsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQueryHistoricalTradeRecordsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryHistoricalTradeRecordsRequest message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QueryHistoricalTradeRecordsRequest.verify|verify} messages.
                 * @param message QueryHistoricalTradeRecordsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQueryHistoricalTradeRecordsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryHistoricalTradeRecordsRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryHistoricalTradeRecordsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QueryHistoricalTradeRecordsRequest;

                /**
                 * Decodes a QueryHistoricalTradeRecordsRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryHistoricalTradeRecordsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QueryHistoricalTradeRecordsRequest;

                /**
                 * Verifies a QueryHistoricalTradeRecordsRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryHistoricalTradeRecordsRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryHistoricalTradeRecordsRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QueryHistoricalTradeRecordsRequest;

                /**
                 * Creates a plain object from a QueryHistoricalTradeRecordsRequest message. Also converts values to other types if specified.
                 * @param message QueryHistoricalTradeRecordsRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QueryHistoricalTradeRecordsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryHistoricalTradeRecordsRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryHistoricalTradeRecordsResponse. */
            interface IQueryHistoricalTradeRecordsResponse {

                /** QueryHistoricalTradeRecordsResponse trade_records */
                trade_records?: (injective.exchange.v1beta1.ITradeRecords[]|null);
            }

            /** Represents a QueryHistoricalTradeRecordsResponse. */
            class QueryHistoricalTradeRecordsResponse implements IQueryHistoricalTradeRecordsResponse {

                /**
                 * Constructs a new QueryHistoricalTradeRecordsResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQueryHistoricalTradeRecordsResponse);

                /** QueryHistoricalTradeRecordsResponse trade_records. */
                public trade_records: injective.exchange.v1beta1.ITradeRecords[];

                /**
                 * Encodes the specified QueryHistoricalTradeRecordsResponse message. Does not implicitly {@link injective.exchange.v1beta1.QueryHistoricalTradeRecordsResponse.verify|verify} messages.
                 * @param message QueryHistoricalTradeRecordsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQueryHistoricalTradeRecordsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryHistoricalTradeRecordsResponse message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QueryHistoricalTradeRecordsResponse.verify|verify} messages.
                 * @param message QueryHistoricalTradeRecordsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQueryHistoricalTradeRecordsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryHistoricalTradeRecordsResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryHistoricalTradeRecordsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QueryHistoricalTradeRecordsResponse;

                /**
                 * Decodes a QueryHistoricalTradeRecordsResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryHistoricalTradeRecordsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QueryHistoricalTradeRecordsResponse;

                /**
                 * Verifies a QueryHistoricalTradeRecordsResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryHistoricalTradeRecordsResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryHistoricalTradeRecordsResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QueryHistoricalTradeRecordsResponse;

                /**
                 * Creates a plain object from a QueryHistoricalTradeRecordsResponse message. Also converts values to other types if specified.
                 * @param message QueryHistoricalTradeRecordsResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QueryHistoricalTradeRecordsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryHistoricalTradeRecordsResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a TradeHistoryOptions. */
            interface ITradeHistoryOptions {

                /** TradeHistoryOptions trade_grouping_sec */
                trade_grouping_sec?: (number|null);

                /** TradeHistoryOptions max_age */
                max_age?: (number|null);

                /** TradeHistoryOptions include_raw_history */
                include_raw_history?: (boolean|null);

                /** TradeHistoryOptions include_metadata */
                include_metadata?: (boolean|null);
            }

            /** Represents a TradeHistoryOptions. */
            class TradeHistoryOptions implements ITradeHistoryOptions {

                /**
                 * Constructs a new TradeHistoryOptions.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.ITradeHistoryOptions);

                /** TradeHistoryOptions trade_grouping_sec. */
                public trade_grouping_sec: number;

                /** TradeHistoryOptions max_age. */
                public max_age: number;

                /** TradeHistoryOptions include_raw_history. */
                public include_raw_history: boolean;

                /** TradeHistoryOptions include_metadata. */
                public include_metadata: boolean;

                /**
                 * Encodes the specified TradeHistoryOptions message. Does not implicitly {@link injective.exchange.v1beta1.TradeHistoryOptions.verify|verify} messages.
                 * @param message TradeHistoryOptions message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.ITradeHistoryOptions, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified TradeHistoryOptions message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.TradeHistoryOptions.verify|verify} messages.
                 * @param message TradeHistoryOptions message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.ITradeHistoryOptions, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a TradeHistoryOptions message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns TradeHistoryOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.TradeHistoryOptions;

                /**
                 * Decodes a TradeHistoryOptions message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns TradeHistoryOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.TradeHistoryOptions;

                /**
                 * Verifies a TradeHistoryOptions message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a TradeHistoryOptions message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns TradeHistoryOptions
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.TradeHistoryOptions;

                /**
                 * Creates a plain object from a TradeHistoryOptions message. Also converts values to other types if specified.
                 * @param message TradeHistoryOptions
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.TradeHistoryOptions, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this TradeHistoryOptions to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryMarketVolatilityRequest. */
            interface IQueryMarketVolatilityRequest {

                /** QueryMarketVolatilityRequest market_id */
                market_id?: (string|null);

                /** QueryMarketVolatilityRequest trade_history_options */
                trade_history_options?: (injective.exchange.v1beta1.ITradeHistoryOptions|null);
            }

            /** Represents a QueryMarketVolatilityRequest. */
            class QueryMarketVolatilityRequest implements IQueryMarketVolatilityRequest {

                /**
                 * Constructs a new QueryMarketVolatilityRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQueryMarketVolatilityRequest);

                /** QueryMarketVolatilityRequest market_id. */
                public market_id: string;

                /** QueryMarketVolatilityRequest trade_history_options. */
                public trade_history_options?: (injective.exchange.v1beta1.ITradeHistoryOptions|null);

                /**
                 * Encodes the specified QueryMarketVolatilityRequest message. Does not implicitly {@link injective.exchange.v1beta1.QueryMarketVolatilityRequest.verify|verify} messages.
                 * @param message QueryMarketVolatilityRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQueryMarketVolatilityRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryMarketVolatilityRequest message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QueryMarketVolatilityRequest.verify|verify} messages.
                 * @param message QueryMarketVolatilityRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQueryMarketVolatilityRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryMarketVolatilityRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryMarketVolatilityRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QueryMarketVolatilityRequest;

                /**
                 * Decodes a QueryMarketVolatilityRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryMarketVolatilityRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QueryMarketVolatilityRequest;

                /**
                 * Verifies a QueryMarketVolatilityRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryMarketVolatilityRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryMarketVolatilityRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QueryMarketVolatilityRequest;

                /**
                 * Creates a plain object from a QueryMarketVolatilityRequest message. Also converts values to other types if specified.
                 * @param message QueryMarketVolatilityRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QueryMarketVolatilityRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryMarketVolatilityRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryMarketVolatilityResponse. */
            interface IQueryMarketVolatilityResponse {

                /** QueryMarketVolatilityResponse volatility */
                volatility?: (string|null);

                /** QueryMarketVolatilityResponse history_metadata */
                history_metadata?: (injective.oracle.v1beta1.IMetadataStatistics|null);

                /** QueryMarketVolatilityResponse raw_history */
                raw_history?: (injective.exchange.v1beta1.ITradeRecord[]|null);
            }

            /** Represents a QueryMarketVolatilityResponse. */
            class QueryMarketVolatilityResponse implements IQueryMarketVolatilityResponse {

                /**
                 * Constructs a new QueryMarketVolatilityResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQueryMarketVolatilityResponse);

                /** QueryMarketVolatilityResponse volatility. */
                public volatility: string;

                /** QueryMarketVolatilityResponse history_metadata. */
                public history_metadata?: (injective.oracle.v1beta1.IMetadataStatistics|null);

                /** QueryMarketVolatilityResponse raw_history. */
                public raw_history: injective.exchange.v1beta1.ITradeRecord[];

                /**
                 * Encodes the specified QueryMarketVolatilityResponse message. Does not implicitly {@link injective.exchange.v1beta1.QueryMarketVolatilityResponse.verify|verify} messages.
                 * @param message QueryMarketVolatilityResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQueryMarketVolatilityResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryMarketVolatilityResponse message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QueryMarketVolatilityResponse.verify|verify} messages.
                 * @param message QueryMarketVolatilityResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQueryMarketVolatilityResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryMarketVolatilityResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryMarketVolatilityResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QueryMarketVolatilityResponse;

                /**
                 * Decodes a QueryMarketVolatilityResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryMarketVolatilityResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QueryMarketVolatilityResponse;

                /**
                 * Verifies a QueryMarketVolatilityResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryMarketVolatilityResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryMarketVolatilityResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QueryMarketVolatilityResponse;

                /**
                 * Creates a plain object from a QueryMarketVolatilityResponse message. Also converts values to other types if specified.
                 * @param message QueryMarketVolatilityResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QueryMarketVolatilityResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryMarketVolatilityResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryBinaryMarketsRequest. */
            interface IQueryBinaryMarketsRequest {

                /** QueryBinaryMarketsRequest status */
                status?: (string|null);
            }

            /** Represents a QueryBinaryMarketsRequest. */
            class QueryBinaryMarketsRequest implements IQueryBinaryMarketsRequest {

                /**
                 * Constructs a new QueryBinaryMarketsRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQueryBinaryMarketsRequest);

                /** QueryBinaryMarketsRequest status. */
                public status: string;

                /**
                 * Encodes the specified QueryBinaryMarketsRequest message. Does not implicitly {@link injective.exchange.v1beta1.QueryBinaryMarketsRequest.verify|verify} messages.
                 * @param message QueryBinaryMarketsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQueryBinaryMarketsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryBinaryMarketsRequest message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QueryBinaryMarketsRequest.verify|verify} messages.
                 * @param message QueryBinaryMarketsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQueryBinaryMarketsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryBinaryMarketsRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryBinaryMarketsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QueryBinaryMarketsRequest;

                /**
                 * Decodes a QueryBinaryMarketsRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryBinaryMarketsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QueryBinaryMarketsRequest;

                /**
                 * Verifies a QueryBinaryMarketsRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryBinaryMarketsRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryBinaryMarketsRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QueryBinaryMarketsRequest;

                /**
                 * Creates a plain object from a QueryBinaryMarketsRequest message. Also converts values to other types if specified.
                 * @param message QueryBinaryMarketsRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QueryBinaryMarketsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryBinaryMarketsRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryBinaryMarketsResponse. */
            interface IQueryBinaryMarketsResponse {

                /** QueryBinaryMarketsResponse markets */
                markets?: (injective.exchange.v1beta1.IBinaryOptionsMarket[]|null);
            }

            /** Represents a QueryBinaryMarketsResponse. */
            class QueryBinaryMarketsResponse implements IQueryBinaryMarketsResponse {

                /**
                 * Constructs a new QueryBinaryMarketsResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQueryBinaryMarketsResponse);

                /** QueryBinaryMarketsResponse markets. */
                public markets: injective.exchange.v1beta1.IBinaryOptionsMarket[];

                /**
                 * Encodes the specified QueryBinaryMarketsResponse message. Does not implicitly {@link injective.exchange.v1beta1.QueryBinaryMarketsResponse.verify|verify} messages.
                 * @param message QueryBinaryMarketsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQueryBinaryMarketsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryBinaryMarketsResponse message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QueryBinaryMarketsResponse.verify|verify} messages.
                 * @param message QueryBinaryMarketsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQueryBinaryMarketsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryBinaryMarketsResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryBinaryMarketsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QueryBinaryMarketsResponse;

                /**
                 * Decodes a QueryBinaryMarketsResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryBinaryMarketsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QueryBinaryMarketsResponse;

                /**
                 * Verifies a QueryBinaryMarketsResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryBinaryMarketsResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryBinaryMarketsResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QueryBinaryMarketsResponse;

                /**
                 * Creates a plain object from a QueryBinaryMarketsResponse message. Also converts values to other types if specified.
                 * @param message QueryBinaryMarketsResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QueryBinaryMarketsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryBinaryMarketsResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryTraderDerivativeConditionalOrdersRequest. */
            interface IQueryTraderDerivativeConditionalOrdersRequest {

                /** QueryTraderDerivativeConditionalOrdersRequest subaccount_id */
                subaccount_id?: (string|null);

                /** QueryTraderDerivativeConditionalOrdersRequest market_id */
                market_id?: (string|null);
            }

            /** Represents a QueryTraderDerivativeConditionalOrdersRequest. */
            class QueryTraderDerivativeConditionalOrdersRequest implements IQueryTraderDerivativeConditionalOrdersRequest {

                /**
                 * Constructs a new QueryTraderDerivativeConditionalOrdersRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQueryTraderDerivativeConditionalOrdersRequest);

                /** QueryTraderDerivativeConditionalOrdersRequest subaccount_id. */
                public subaccount_id: string;

                /** QueryTraderDerivativeConditionalOrdersRequest market_id. */
                public market_id: string;

                /**
                 * Encodes the specified QueryTraderDerivativeConditionalOrdersRequest message. Does not implicitly {@link injective.exchange.v1beta1.QueryTraderDerivativeConditionalOrdersRequest.verify|verify} messages.
                 * @param message QueryTraderDerivativeConditionalOrdersRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQueryTraderDerivativeConditionalOrdersRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryTraderDerivativeConditionalOrdersRequest message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QueryTraderDerivativeConditionalOrdersRequest.verify|verify} messages.
                 * @param message QueryTraderDerivativeConditionalOrdersRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQueryTraderDerivativeConditionalOrdersRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryTraderDerivativeConditionalOrdersRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryTraderDerivativeConditionalOrdersRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QueryTraderDerivativeConditionalOrdersRequest;

                /**
                 * Decodes a QueryTraderDerivativeConditionalOrdersRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryTraderDerivativeConditionalOrdersRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QueryTraderDerivativeConditionalOrdersRequest;

                /**
                 * Verifies a QueryTraderDerivativeConditionalOrdersRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryTraderDerivativeConditionalOrdersRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryTraderDerivativeConditionalOrdersRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QueryTraderDerivativeConditionalOrdersRequest;

                /**
                 * Creates a plain object from a QueryTraderDerivativeConditionalOrdersRequest message. Also converts values to other types if specified.
                 * @param message QueryTraderDerivativeConditionalOrdersRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QueryTraderDerivativeConditionalOrdersRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryTraderDerivativeConditionalOrdersRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a TrimmedDerivativeConditionalOrder. */
            interface ITrimmedDerivativeConditionalOrder {

                /** TrimmedDerivativeConditionalOrder price */
                price?: (string|null);

                /** TrimmedDerivativeConditionalOrder quantity */
                quantity?: (string|null);

                /** TrimmedDerivativeConditionalOrder margin */
                margin?: (string|null);

                /** TrimmedDerivativeConditionalOrder triggerPrice */
                triggerPrice?: (string|null);

                /** TrimmedDerivativeConditionalOrder isBuy */
                isBuy?: (boolean|null);

                /** TrimmedDerivativeConditionalOrder isLimit */
                isLimit?: (boolean|null);

                /** TrimmedDerivativeConditionalOrder order_hash */
                order_hash?: (string|null);
            }

            /** Represents a TrimmedDerivativeConditionalOrder. */
            class TrimmedDerivativeConditionalOrder implements ITrimmedDerivativeConditionalOrder {

                /**
                 * Constructs a new TrimmedDerivativeConditionalOrder.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.ITrimmedDerivativeConditionalOrder);

                /** TrimmedDerivativeConditionalOrder price. */
                public price: string;

                /** TrimmedDerivativeConditionalOrder quantity. */
                public quantity: string;

                /** TrimmedDerivativeConditionalOrder margin. */
                public margin: string;

                /** TrimmedDerivativeConditionalOrder triggerPrice. */
                public triggerPrice: string;

                /** TrimmedDerivativeConditionalOrder isBuy. */
                public isBuy: boolean;

                /** TrimmedDerivativeConditionalOrder isLimit. */
                public isLimit: boolean;

                /** TrimmedDerivativeConditionalOrder order_hash. */
                public order_hash: string;

                /**
                 * Encodes the specified TrimmedDerivativeConditionalOrder message. Does not implicitly {@link injective.exchange.v1beta1.TrimmedDerivativeConditionalOrder.verify|verify} messages.
                 * @param message TrimmedDerivativeConditionalOrder message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.ITrimmedDerivativeConditionalOrder, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified TrimmedDerivativeConditionalOrder message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.TrimmedDerivativeConditionalOrder.verify|verify} messages.
                 * @param message TrimmedDerivativeConditionalOrder message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.ITrimmedDerivativeConditionalOrder, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a TrimmedDerivativeConditionalOrder message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns TrimmedDerivativeConditionalOrder
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.TrimmedDerivativeConditionalOrder;

                /**
                 * Decodes a TrimmedDerivativeConditionalOrder message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns TrimmedDerivativeConditionalOrder
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.TrimmedDerivativeConditionalOrder;

                /**
                 * Verifies a TrimmedDerivativeConditionalOrder message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a TrimmedDerivativeConditionalOrder message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns TrimmedDerivativeConditionalOrder
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.TrimmedDerivativeConditionalOrder;

                /**
                 * Creates a plain object from a TrimmedDerivativeConditionalOrder message. Also converts values to other types if specified.
                 * @param message TrimmedDerivativeConditionalOrder
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.TrimmedDerivativeConditionalOrder, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this TrimmedDerivativeConditionalOrder to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryTraderDerivativeConditionalOrdersResponse. */
            interface IQueryTraderDerivativeConditionalOrdersResponse {

                /** QueryTraderDerivativeConditionalOrdersResponse orders */
                orders?: (injective.exchange.v1beta1.ITrimmedDerivativeConditionalOrder[]|null);
            }

            /** Represents a QueryTraderDerivativeConditionalOrdersResponse. */
            class QueryTraderDerivativeConditionalOrdersResponse implements IQueryTraderDerivativeConditionalOrdersResponse {

                /**
                 * Constructs a new QueryTraderDerivativeConditionalOrdersResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQueryTraderDerivativeConditionalOrdersResponse);

                /** QueryTraderDerivativeConditionalOrdersResponse orders. */
                public orders: injective.exchange.v1beta1.ITrimmedDerivativeConditionalOrder[];

                /**
                 * Encodes the specified QueryTraderDerivativeConditionalOrdersResponse message. Does not implicitly {@link injective.exchange.v1beta1.QueryTraderDerivativeConditionalOrdersResponse.verify|verify} messages.
                 * @param message QueryTraderDerivativeConditionalOrdersResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQueryTraderDerivativeConditionalOrdersResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryTraderDerivativeConditionalOrdersResponse message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QueryTraderDerivativeConditionalOrdersResponse.verify|verify} messages.
                 * @param message QueryTraderDerivativeConditionalOrdersResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQueryTraderDerivativeConditionalOrdersResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryTraderDerivativeConditionalOrdersResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryTraderDerivativeConditionalOrdersResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QueryTraderDerivativeConditionalOrdersResponse;

                /**
                 * Decodes a QueryTraderDerivativeConditionalOrdersResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryTraderDerivativeConditionalOrdersResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QueryTraderDerivativeConditionalOrdersResponse;

                /**
                 * Verifies a QueryTraderDerivativeConditionalOrdersResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryTraderDerivativeConditionalOrdersResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryTraderDerivativeConditionalOrdersResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QueryTraderDerivativeConditionalOrdersResponse;

                /**
                 * Creates a plain object from a QueryTraderDerivativeConditionalOrdersResponse message. Also converts values to other types if specified.
                 * @param message QueryTraderDerivativeConditionalOrdersResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QueryTraderDerivativeConditionalOrdersResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryTraderDerivativeConditionalOrdersResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryMarketAtomicExecutionFeeMultiplierRequest. */
            interface IQueryMarketAtomicExecutionFeeMultiplierRequest {

                /** QueryMarketAtomicExecutionFeeMultiplierRequest market_id */
                market_id?: (string|null);
            }

            /** Represents a QueryMarketAtomicExecutionFeeMultiplierRequest. */
            class QueryMarketAtomicExecutionFeeMultiplierRequest implements IQueryMarketAtomicExecutionFeeMultiplierRequest {

                /**
                 * Constructs a new QueryMarketAtomicExecutionFeeMultiplierRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQueryMarketAtomicExecutionFeeMultiplierRequest);

                /** QueryMarketAtomicExecutionFeeMultiplierRequest market_id. */
                public market_id: string;

                /**
                 * Encodes the specified QueryMarketAtomicExecutionFeeMultiplierRequest message. Does not implicitly {@link injective.exchange.v1beta1.QueryMarketAtomicExecutionFeeMultiplierRequest.verify|verify} messages.
                 * @param message QueryMarketAtomicExecutionFeeMultiplierRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQueryMarketAtomicExecutionFeeMultiplierRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryMarketAtomicExecutionFeeMultiplierRequest message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QueryMarketAtomicExecutionFeeMultiplierRequest.verify|verify} messages.
                 * @param message QueryMarketAtomicExecutionFeeMultiplierRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQueryMarketAtomicExecutionFeeMultiplierRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryMarketAtomicExecutionFeeMultiplierRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryMarketAtomicExecutionFeeMultiplierRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QueryMarketAtomicExecutionFeeMultiplierRequest;

                /**
                 * Decodes a QueryMarketAtomicExecutionFeeMultiplierRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryMarketAtomicExecutionFeeMultiplierRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QueryMarketAtomicExecutionFeeMultiplierRequest;

                /**
                 * Verifies a QueryMarketAtomicExecutionFeeMultiplierRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryMarketAtomicExecutionFeeMultiplierRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryMarketAtomicExecutionFeeMultiplierRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QueryMarketAtomicExecutionFeeMultiplierRequest;

                /**
                 * Creates a plain object from a QueryMarketAtomicExecutionFeeMultiplierRequest message. Also converts values to other types if specified.
                 * @param message QueryMarketAtomicExecutionFeeMultiplierRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QueryMarketAtomicExecutionFeeMultiplierRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryMarketAtomicExecutionFeeMultiplierRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryMarketAtomicExecutionFeeMultiplierResponse. */
            interface IQueryMarketAtomicExecutionFeeMultiplierResponse {

                /** QueryMarketAtomicExecutionFeeMultiplierResponse multiplier */
                multiplier?: (string|null);
            }

            /** Represents a QueryMarketAtomicExecutionFeeMultiplierResponse. */
            class QueryMarketAtomicExecutionFeeMultiplierResponse implements IQueryMarketAtomicExecutionFeeMultiplierResponse {

                /**
                 * Constructs a new QueryMarketAtomicExecutionFeeMultiplierResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IQueryMarketAtomicExecutionFeeMultiplierResponse);

                /** QueryMarketAtomicExecutionFeeMultiplierResponse multiplier. */
                public multiplier: string;

                /**
                 * Encodes the specified QueryMarketAtomicExecutionFeeMultiplierResponse message. Does not implicitly {@link injective.exchange.v1beta1.QueryMarketAtomicExecutionFeeMultiplierResponse.verify|verify} messages.
                 * @param message QueryMarketAtomicExecutionFeeMultiplierResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IQueryMarketAtomicExecutionFeeMultiplierResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryMarketAtomicExecutionFeeMultiplierResponse message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.QueryMarketAtomicExecutionFeeMultiplierResponse.verify|verify} messages.
                 * @param message QueryMarketAtomicExecutionFeeMultiplierResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IQueryMarketAtomicExecutionFeeMultiplierResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryMarketAtomicExecutionFeeMultiplierResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryMarketAtomicExecutionFeeMultiplierResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.QueryMarketAtomicExecutionFeeMultiplierResponse;

                /**
                 * Decodes a QueryMarketAtomicExecutionFeeMultiplierResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryMarketAtomicExecutionFeeMultiplierResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.QueryMarketAtomicExecutionFeeMultiplierResponse;

                /**
                 * Verifies a QueryMarketAtomicExecutionFeeMultiplierResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryMarketAtomicExecutionFeeMultiplierResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryMarketAtomicExecutionFeeMultiplierResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.QueryMarketAtomicExecutionFeeMultiplierResponse;

                /**
                 * Creates a plain object from a QueryMarketAtomicExecutionFeeMultiplierResponse message. Also converts values to other types if specified.
                 * @param message QueryMarketAtomicExecutionFeeMultiplierResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.QueryMarketAtomicExecutionFeeMultiplierResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryMarketAtomicExecutionFeeMultiplierResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a GenesisState. */
            interface IGenesisState {

                /** GenesisState params */
                params?: (injective.exchange.v1beta1.IParams|null);

                /** GenesisState spot_markets */
                spot_markets?: (injective.exchange.v1beta1.ISpotMarket[]|null);

                /** GenesisState derivative_markets */
                derivative_markets?: (injective.exchange.v1beta1.IDerivativeMarket[]|null);

                /** GenesisState spot_orderbook */
                spot_orderbook?: (injective.exchange.v1beta1.ISpotOrderBook[]|null);

                /** GenesisState derivative_orderbook */
                derivative_orderbook?: (injective.exchange.v1beta1.IDerivativeOrderBook[]|null);

                /** GenesisState balances */
                balances?: (injective.exchange.v1beta1.IBalance[]|null);

                /** GenesisState positions */
                positions?: (injective.exchange.v1beta1.IDerivativePosition[]|null);

                /** GenesisState subaccount_trade_nonces */
                subaccount_trade_nonces?: (injective.exchange.v1beta1.ISubaccountNonce[]|null);

                /** GenesisState expiry_futures_market_info_state */
                expiry_futures_market_info_state?: (injective.exchange.v1beta1.IExpiryFuturesMarketInfoState[]|null);

                /** GenesisState perpetual_market_info */
                perpetual_market_info?: (injective.exchange.v1beta1.IPerpetualMarketInfo[]|null);

                /** GenesisState perpetual_market_funding_state */
                perpetual_market_funding_state?: (injective.exchange.v1beta1.IPerpetualMarketFundingState[]|null);

                /** GenesisState derivative_market_settlement_scheduled */
                derivative_market_settlement_scheduled?: (injective.exchange.v1beta1.IDerivativeMarketSettlementInfo[]|null);

                /** GenesisState is_spot_exchange_enabled */
                is_spot_exchange_enabled?: (boolean|null);

                /** GenesisState is_derivatives_exchange_enabled */
                is_derivatives_exchange_enabled?: (boolean|null);

                /** GenesisState trading_reward_campaign_info */
                trading_reward_campaign_info?: (injective.exchange.v1beta1.ITradingRewardCampaignInfo|null);

                /** GenesisState trading_reward_pool_campaign_schedule */
                trading_reward_pool_campaign_schedule?: (injective.exchange.v1beta1.ICampaignRewardPool[]|null);

                /** GenesisState trading_reward_campaign_account_points */
                trading_reward_campaign_account_points?: (injective.exchange.v1beta1.ITradingRewardCampaignAccountPoints[]|null);

                /** GenesisState fee_discount_schedule */
                fee_discount_schedule?: (injective.exchange.v1beta1.IFeeDiscountSchedule|null);

                /** GenesisState fee_discount_account_tier_ttl */
                fee_discount_account_tier_ttl?: (injective.exchange.v1beta1.IFeeDiscountAccountTierTTL[]|null);

                /** GenesisState fee_discount_bucket_volume_accounts */
                fee_discount_bucket_volume_accounts?: (injective.exchange.v1beta1.IFeeDiscountBucketVolumeAccounts[]|null);

                /** GenesisState is_first_fee_cycle_finished */
                is_first_fee_cycle_finished?: (boolean|null);

                /** GenesisState pending_trading_reward_pool_campaign_schedule */
                pending_trading_reward_pool_campaign_schedule?: (injective.exchange.v1beta1.ICampaignRewardPool[]|null);

                /** GenesisState pending_trading_reward_campaign_account_points */
                pending_trading_reward_campaign_account_points?: (injective.exchange.v1beta1.ITradingRewardCampaignAccountPendingPoints[]|null);

                /** GenesisState rewards_opt_out_addresses */
                rewards_opt_out_addresses?: (string[]|null);

                /** GenesisState historical_trade_records */
                historical_trade_records?: (injective.exchange.v1beta1.ITradeRecords[]|null);

                /** GenesisState binary_options_markets */
                binary_options_markets?: (injective.exchange.v1beta1.IBinaryOptionsMarket[]|null);

                /** GenesisState binary_options_market_ids_scheduled_for_settlement */
                binary_options_market_ids_scheduled_for_settlement?: (string[]|null);

                /** GenesisState spot_market_ids_scheduled_to_force_close */
                spot_market_ids_scheduled_to_force_close?: (string[]|null);

                /** GenesisState denom_decimals */
                denom_decimals?: (injective.exchange.v1beta1.IDenomDecimals[]|null);

                /** GenesisState conditional_derivative_orderbooks */
                conditional_derivative_orderbooks?: (injective.exchange.v1beta1.IConditionalDerivativeOrderBook[]|null);

                /** GenesisState market_fee_multipliers */
                market_fee_multipliers?: (injective.exchange.v1beta1.IMarketFeeMultiplier[]|null);

                /** GenesisState orderbook_sequences */
                orderbook_sequences?: (injective.exchange.v1beta1.IOrderbookSequence[]|null);

                /** GenesisState subaccount_volumes */
                subaccount_volumes?: (injective.exchange.v1beta1.IAggregateSubaccountVolumeRecord[]|null);

                /** GenesisState market_volumes */
                market_volumes?: (injective.exchange.v1beta1.IMarketVolume[]|null);
            }

            /** Represents a GenesisState. */
            class GenesisState implements IGenesisState {

                /**
                 * Constructs a new GenesisState.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IGenesisState);

                /** GenesisState params. */
                public params?: (injective.exchange.v1beta1.IParams|null);

                /** GenesisState spot_markets. */
                public spot_markets: injective.exchange.v1beta1.ISpotMarket[];

                /** GenesisState derivative_markets. */
                public derivative_markets: injective.exchange.v1beta1.IDerivativeMarket[];

                /** GenesisState spot_orderbook. */
                public spot_orderbook: injective.exchange.v1beta1.ISpotOrderBook[];

                /** GenesisState derivative_orderbook. */
                public derivative_orderbook: injective.exchange.v1beta1.IDerivativeOrderBook[];

                /** GenesisState balances. */
                public balances: injective.exchange.v1beta1.IBalance[];

                /** GenesisState positions. */
                public positions: injective.exchange.v1beta1.IDerivativePosition[];

                /** GenesisState subaccount_trade_nonces. */
                public subaccount_trade_nonces: injective.exchange.v1beta1.ISubaccountNonce[];

                /** GenesisState expiry_futures_market_info_state. */
                public expiry_futures_market_info_state: injective.exchange.v1beta1.IExpiryFuturesMarketInfoState[];

                /** GenesisState perpetual_market_info. */
                public perpetual_market_info: injective.exchange.v1beta1.IPerpetualMarketInfo[];

                /** GenesisState perpetual_market_funding_state. */
                public perpetual_market_funding_state: injective.exchange.v1beta1.IPerpetualMarketFundingState[];

                /** GenesisState derivative_market_settlement_scheduled. */
                public derivative_market_settlement_scheduled: injective.exchange.v1beta1.IDerivativeMarketSettlementInfo[];

                /** GenesisState is_spot_exchange_enabled. */
                public is_spot_exchange_enabled: boolean;

                /** GenesisState is_derivatives_exchange_enabled. */
                public is_derivatives_exchange_enabled: boolean;

                /** GenesisState trading_reward_campaign_info. */
                public trading_reward_campaign_info?: (injective.exchange.v1beta1.ITradingRewardCampaignInfo|null);

                /** GenesisState trading_reward_pool_campaign_schedule. */
                public trading_reward_pool_campaign_schedule: injective.exchange.v1beta1.ICampaignRewardPool[];

                /** GenesisState trading_reward_campaign_account_points. */
                public trading_reward_campaign_account_points: injective.exchange.v1beta1.ITradingRewardCampaignAccountPoints[];

                /** GenesisState fee_discount_schedule. */
                public fee_discount_schedule?: (injective.exchange.v1beta1.IFeeDiscountSchedule|null);

                /** GenesisState fee_discount_account_tier_ttl. */
                public fee_discount_account_tier_ttl: injective.exchange.v1beta1.IFeeDiscountAccountTierTTL[];

                /** GenesisState fee_discount_bucket_volume_accounts. */
                public fee_discount_bucket_volume_accounts: injective.exchange.v1beta1.IFeeDiscountBucketVolumeAccounts[];

                /** GenesisState is_first_fee_cycle_finished. */
                public is_first_fee_cycle_finished: boolean;

                /** GenesisState pending_trading_reward_pool_campaign_schedule. */
                public pending_trading_reward_pool_campaign_schedule: injective.exchange.v1beta1.ICampaignRewardPool[];

                /** GenesisState pending_trading_reward_campaign_account_points. */
                public pending_trading_reward_campaign_account_points: injective.exchange.v1beta1.ITradingRewardCampaignAccountPendingPoints[];

                /** GenesisState rewards_opt_out_addresses. */
                public rewards_opt_out_addresses: string[];

                /** GenesisState historical_trade_records. */
                public historical_trade_records: injective.exchange.v1beta1.ITradeRecords[];

                /** GenesisState binary_options_markets. */
                public binary_options_markets: injective.exchange.v1beta1.IBinaryOptionsMarket[];

                /** GenesisState binary_options_market_ids_scheduled_for_settlement. */
                public binary_options_market_ids_scheduled_for_settlement: string[];

                /** GenesisState spot_market_ids_scheduled_to_force_close. */
                public spot_market_ids_scheduled_to_force_close: string[];

                /** GenesisState denom_decimals. */
                public denom_decimals: injective.exchange.v1beta1.IDenomDecimals[];

                /** GenesisState conditional_derivative_orderbooks. */
                public conditional_derivative_orderbooks: injective.exchange.v1beta1.IConditionalDerivativeOrderBook[];

                /** GenesisState market_fee_multipliers. */
                public market_fee_multipliers: injective.exchange.v1beta1.IMarketFeeMultiplier[];

                /** GenesisState orderbook_sequences. */
                public orderbook_sequences: injective.exchange.v1beta1.IOrderbookSequence[];

                /** GenesisState subaccount_volumes. */
                public subaccount_volumes: injective.exchange.v1beta1.IAggregateSubaccountVolumeRecord[];

                /** GenesisState market_volumes. */
                public market_volumes: injective.exchange.v1beta1.IMarketVolume[];

                /**
                 * Encodes the specified GenesisState message. Does not implicitly {@link injective.exchange.v1beta1.GenesisState.verify|verify} messages.
                 * @param message GenesisState message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IGenesisState, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified GenesisState message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.GenesisState.verify|verify} messages.
                 * @param message GenesisState message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IGenesisState, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a GenesisState message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns GenesisState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.GenesisState;

                /**
                 * Decodes a GenesisState message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns GenesisState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.GenesisState;

                /**
                 * Verifies a GenesisState message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a GenesisState message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns GenesisState
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.GenesisState;

                /**
                 * Creates a plain object from a GenesisState message. Also converts values to other types if specified.
                 * @param message GenesisState
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.GenesisState, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this GenesisState to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an OrderbookSequence. */
            interface IOrderbookSequence {

                /** OrderbookSequence sequence */
                sequence?: (number|null);

                /** OrderbookSequence market_id */
                market_id?: (string|null);
            }

            /** Represents an OrderbookSequence. */
            class OrderbookSequence implements IOrderbookSequence {

                /**
                 * Constructs a new OrderbookSequence.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IOrderbookSequence);

                /** OrderbookSequence sequence. */
                public sequence: number;

                /** OrderbookSequence market_id. */
                public market_id: string;

                /**
                 * Encodes the specified OrderbookSequence message. Does not implicitly {@link injective.exchange.v1beta1.OrderbookSequence.verify|verify} messages.
                 * @param message OrderbookSequence message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IOrderbookSequence, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified OrderbookSequence message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.OrderbookSequence.verify|verify} messages.
                 * @param message OrderbookSequence message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IOrderbookSequence, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an OrderbookSequence message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns OrderbookSequence
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.OrderbookSequence;

                /**
                 * Decodes an OrderbookSequence message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns OrderbookSequence
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.OrderbookSequence;

                /**
                 * Verifies an OrderbookSequence message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an OrderbookSequence message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns OrderbookSequence
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.OrderbookSequence;

                /**
                 * Creates a plain object from an OrderbookSequence message. Also converts values to other types if specified.
                 * @param message OrderbookSequence
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.OrderbookSequence, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this OrderbookSequence to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a FeeDiscountAccountTierTTL. */
            interface IFeeDiscountAccountTierTTL {

                /** FeeDiscountAccountTierTTL account */
                account?: (string|null);

                /** FeeDiscountAccountTierTTL tier_ttl */
                tier_ttl?: (injective.exchange.v1beta1.IFeeDiscountTierTTL|null);
            }

            /** Represents a FeeDiscountAccountTierTTL. */
            class FeeDiscountAccountTierTTL implements IFeeDiscountAccountTierTTL {

                /**
                 * Constructs a new FeeDiscountAccountTierTTL.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IFeeDiscountAccountTierTTL);

                /** FeeDiscountAccountTierTTL account. */
                public account: string;

                /** FeeDiscountAccountTierTTL tier_ttl. */
                public tier_ttl?: (injective.exchange.v1beta1.IFeeDiscountTierTTL|null);

                /**
                 * Encodes the specified FeeDiscountAccountTierTTL message. Does not implicitly {@link injective.exchange.v1beta1.FeeDiscountAccountTierTTL.verify|verify} messages.
                 * @param message FeeDiscountAccountTierTTL message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IFeeDiscountAccountTierTTL, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified FeeDiscountAccountTierTTL message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.FeeDiscountAccountTierTTL.verify|verify} messages.
                 * @param message FeeDiscountAccountTierTTL message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IFeeDiscountAccountTierTTL, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a FeeDiscountAccountTierTTL message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns FeeDiscountAccountTierTTL
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.FeeDiscountAccountTierTTL;

                /**
                 * Decodes a FeeDiscountAccountTierTTL message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns FeeDiscountAccountTierTTL
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.FeeDiscountAccountTierTTL;

                /**
                 * Verifies a FeeDiscountAccountTierTTL message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a FeeDiscountAccountTierTTL message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns FeeDiscountAccountTierTTL
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.FeeDiscountAccountTierTTL;

                /**
                 * Creates a plain object from a FeeDiscountAccountTierTTL message. Also converts values to other types if specified.
                 * @param message FeeDiscountAccountTierTTL
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.FeeDiscountAccountTierTTL, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this FeeDiscountAccountTierTTL to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a FeeDiscountBucketVolumeAccounts. */
            interface IFeeDiscountBucketVolumeAccounts {

                /** FeeDiscountBucketVolumeAccounts bucket_start_timestamp */
                bucket_start_timestamp?: (number|null);

                /** FeeDiscountBucketVolumeAccounts account_volume */
                account_volume?: (injective.exchange.v1beta1.IAccountVolume[]|null);
            }

            /** Represents a FeeDiscountBucketVolumeAccounts. */
            class FeeDiscountBucketVolumeAccounts implements IFeeDiscountBucketVolumeAccounts {

                /**
                 * Constructs a new FeeDiscountBucketVolumeAccounts.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IFeeDiscountBucketVolumeAccounts);

                /** FeeDiscountBucketVolumeAccounts bucket_start_timestamp. */
                public bucket_start_timestamp: number;

                /** FeeDiscountBucketVolumeAccounts account_volume. */
                public account_volume: injective.exchange.v1beta1.IAccountVolume[];

                /**
                 * Encodes the specified FeeDiscountBucketVolumeAccounts message. Does not implicitly {@link injective.exchange.v1beta1.FeeDiscountBucketVolumeAccounts.verify|verify} messages.
                 * @param message FeeDiscountBucketVolumeAccounts message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IFeeDiscountBucketVolumeAccounts, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified FeeDiscountBucketVolumeAccounts message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.FeeDiscountBucketVolumeAccounts.verify|verify} messages.
                 * @param message FeeDiscountBucketVolumeAccounts message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IFeeDiscountBucketVolumeAccounts, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a FeeDiscountBucketVolumeAccounts message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns FeeDiscountBucketVolumeAccounts
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.FeeDiscountBucketVolumeAccounts;

                /**
                 * Decodes a FeeDiscountBucketVolumeAccounts message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns FeeDiscountBucketVolumeAccounts
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.FeeDiscountBucketVolumeAccounts;

                /**
                 * Verifies a FeeDiscountBucketVolumeAccounts message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a FeeDiscountBucketVolumeAccounts message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns FeeDiscountBucketVolumeAccounts
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.FeeDiscountBucketVolumeAccounts;

                /**
                 * Creates a plain object from a FeeDiscountBucketVolumeAccounts message. Also converts values to other types if specified.
                 * @param message FeeDiscountBucketVolumeAccounts
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.FeeDiscountBucketVolumeAccounts, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this FeeDiscountBucketVolumeAccounts to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an AccountVolume. */
            interface IAccountVolume {

                /** AccountVolume account */
                account?: (string|null);

                /** AccountVolume volume */
                volume?: (string|null);
            }

            /** Represents an AccountVolume. */
            class AccountVolume implements IAccountVolume {

                /**
                 * Constructs a new AccountVolume.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IAccountVolume);

                /** AccountVolume account. */
                public account: string;

                /** AccountVolume volume. */
                public volume: string;

                /**
                 * Encodes the specified AccountVolume message. Does not implicitly {@link injective.exchange.v1beta1.AccountVolume.verify|verify} messages.
                 * @param message AccountVolume message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IAccountVolume, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified AccountVolume message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.AccountVolume.verify|verify} messages.
                 * @param message AccountVolume message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IAccountVolume, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an AccountVolume message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns AccountVolume
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.AccountVolume;

                /**
                 * Decodes an AccountVolume message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns AccountVolume
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.AccountVolume;

                /**
                 * Verifies an AccountVolume message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an AccountVolume message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns AccountVolume
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.AccountVolume;

                /**
                 * Creates a plain object from an AccountVolume message. Also converts values to other types if specified.
                 * @param message AccountVolume
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.AccountVolume, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this AccountVolume to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a TradingRewardCampaignAccountPoints. */
            interface ITradingRewardCampaignAccountPoints {

                /** TradingRewardCampaignAccountPoints account */
                account?: (string|null);

                /** TradingRewardCampaignAccountPoints points */
                points?: (string|null);
            }

            /** Represents a TradingRewardCampaignAccountPoints. */
            class TradingRewardCampaignAccountPoints implements ITradingRewardCampaignAccountPoints {

                /**
                 * Constructs a new TradingRewardCampaignAccountPoints.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.ITradingRewardCampaignAccountPoints);

                /** TradingRewardCampaignAccountPoints account. */
                public account: string;

                /** TradingRewardCampaignAccountPoints points. */
                public points: string;

                /**
                 * Encodes the specified TradingRewardCampaignAccountPoints message. Does not implicitly {@link injective.exchange.v1beta1.TradingRewardCampaignAccountPoints.verify|verify} messages.
                 * @param message TradingRewardCampaignAccountPoints message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.ITradingRewardCampaignAccountPoints, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified TradingRewardCampaignAccountPoints message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.TradingRewardCampaignAccountPoints.verify|verify} messages.
                 * @param message TradingRewardCampaignAccountPoints message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.ITradingRewardCampaignAccountPoints, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a TradingRewardCampaignAccountPoints message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns TradingRewardCampaignAccountPoints
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.TradingRewardCampaignAccountPoints;

                /**
                 * Decodes a TradingRewardCampaignAccountPoints message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns TradingRewardCampaignAccountPoints
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.TradingRewardCampaignAccountPoints;

                /**
                 * Verifies a TradingRewardCampaignAccountPoints message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a TradingRewardCampaignAccountPoints message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns TradingRewardCampaignAccountPoints
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.TradingRewardCampaignAccountPoints;

                /**
                 * Creates a plain object from a TradingRewardCampaignAccountPoints message. Also converts values to other types if specified.
                 * @param message TradingRewardCampaignAccountPoints
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.TradingRewardCampaignAccountPoints, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this TradingRewardCampaignAccountPoints to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a TradingRewardCampaignAccountPendingPoints. */
            interface ITradingRewardCampaignAccountPendingPoints {

                /** TradingRewardCampaignAccountPendingPoints reward_pool_start_timestamp */
                reward_pool_start_timestamp?: (number|null);

                /** TradingRewardCampaignAccountPendingPoints account_points */
                account_points?: (injective.exchange.v1beta1.ITradingRewardCampaignAccountPoints[]|null);
            }

            /** Represents a TradingRewardCampaignAccountPendingPoints. */
            class TradingRewardCampaignAccountPendingPoints implements ITradingRewardCampaignAccountPendingPoints {

                /**
                 * Constructs a new TradingRewardCampaignAccountPendingPoints.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.ITradingRewardCampaignAccountPendingPoints);

                /** TradingRewardCampaignAccountPendingPoints reward_pool_start_timestamp. */
                public reward_pool_start_timestamp: number;

                /** TradingRewardCampaignAccountPendingPoints account_points. */
                public account_points: injective.exchange.v1beta1.ITradingRewardCampaignAccountPoints[];

                /**
                 * Encodes the specified TradingRewardCampaignAccountPendingPoints message. Does not implicitly {@link injective.exchange.v1beta1.TradingRewardCampaignAccountPendingPoints.verify|verify} messages.
                 * @param message TradingRewardCampaignAccountPendingPoints message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.ITradingRewardCampaignAccountPendingPoints, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified TradingRewardCampaignAccountPendingPoints message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.TradingRewardCampaignAccountPendingPoints.verify|verify} messages.
                 * @param message TradingRewardCampaignAccountPendingPoints message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.ITradingRewardCampaignAccountPendingPoints, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a TradingRewardCampaignAccountPendingPoints message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns TradingRewardCampaignAccountPendingPoints
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.TradingRewardCampaignAccountPendingPoints;

                /**
                 * Decodes a TradingRewardCampaignAccountPendingPoints message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns TradingRewardCampaignAccountPendingPoints
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.TradingRewardCampaignAccountPendingPoints;

                /**
                 * Verifies a TradingRewardCampaignAccountPendingPoints message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a TradingRewardCampaignAccountPendingPoints message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns TradingRewardCampaignAccountPendingPoints
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.TradingRewardCampaignAccountPendingPoints;

                /**
                 * Creates a plain object from a TradingRewardCampaignAccountPendingPoints message. Also converts values to other types if specified.
                 * @param message TradingRewardCampaignAccountPendingPoints
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.TradingRewardCampaignAccountPendingPoints, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this TradingRewardCampaignAccountPendingPoints to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a SpotOrderBook. */
            interface ISpotOrderBook {

                /** SpotOrderBook market_id */
                market_id?: (string|null);

                /** SpotOrderBook isBuySide */
                isBuySide?: (boolean|null);

                /** SpotOrderBook orders */
                orders?: (injective.exchange.v1beta1.ISpotLimitOrder[]|null);
            }

            /** Represents a SpotOrderBook. */
            class SpotOrderBook implements ISpotOrderBook {

                /**
                 * Constructs a new SpotOrderBook.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.ISpotOrderBook);

                /** SpotOrderBook market_id. */
                public market_id: string;

                /** SpotOrderBook isBuySide. */
                public isBuySide: boolean;

                /** SpotOrderBook orders. */
                public orders: injective.exchange.v1beta1.ISpotLimitOrder[];

                /**
                 * Encodes the specified SpotOrderBook message. Does not implicitly {@link injective.exchange.v1beta1.SpotOrderBook.verify|verify} messages.
                 * @param message SpotOrderBook message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.ISpotOrderBook, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified SpotOrderBook message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.SpotOrderBook.verify|verify} messages.
                 * @param message SpotOrderBook message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.ISpotOrderBook, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a SpotOrderBook message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns SpotOrderBook
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.SpotOrderBook;

                /**
                 * Decodes a SpotOrderBook message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns SpotOrderBook
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.SpotOrderBook;

                /**
                 * Verifies a SpotOrderBook message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a SpotOrderBook message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns SpotOrderBook
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.SpotOrderBook;

                /**
                 * Creates a plain object from a SpotOrderBook message. Also converts values to other types if specified.
                 * @param message SpotOrderBook
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.SpotOrderBook, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this SpotOrderBook to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a DerivativeOrderBook. */
            interface IDerivativeOrderBook {

                /** DerivativeOrderBook market_id */
                market_id?: (string|null);

                /** DerivativeOrderBook isBuySide */
                isBuySide?: (boolean|null);

                /** DerivativeOrderBook orders */
                orders?: (injective.exchange.v1beta1.IDerivativeLimitOrder[]|null);
            }

            /** Represents a DerivativeOrderBook. */
            class DerivativeOrderBook implements IDerivativeOrderBook {

                /**
                 * Constructs a new DerivativeOrderBook.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IDerivativeOrderBook);

                /** DerivativeOrderBook market_id. */
                public market_id: string;

                /** DerivativeOrderBook isBuySide. */
                public isBuySide: boolean;

                /** DerivativeOrderBook orders. */
                public orders: injective.exchange.v1beta1.IDerivativeLimitOrder[];

                /**
                 * Encodes the specified DerivativeOrderBook message. Does not implicitly {@link injective.exchange.v1beta1.DerivativeOrderBook.verify|verify} messages.
                 * @param message DerivativeOrderBook message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IDerivativeOrderBook, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DerivativeOrderBook message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.DerivativeOrderBook.verify|verify} messages.
                 * @param message DerivativeOrderBook message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IDerivativeOrderBook, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DerivativeOrderBook message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DerivativeOrderBook
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.DerivativeOrderBook;

                /**
                 * Decodes a DerivativeOrderBook message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DerivativeOrderBook
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.DerivativeOrderBook;

                /**
                 * Verifies a DerivativeOrderBook message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DerivativeOrderBook message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DerivativeOrderBook
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.DerivativeOrderBook;

                /**
                 * Creates a plain object from a DerivativeOrderBook message. Also converts values to other types if specified.
                 * @param message DerivativeOrderBook
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.DerivativeOrderBook, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DerivativeOrderBook to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a ConditionalDerivativeOrderBook. */
            interface IConditionalDerivativeOrderBook {

                /** ConditionalDerivativeOrderBook market_id */
                market_id?: (string|null);

                /** ConditionalDerivativeOrderBook limit_buy_orders */
                limit_buy_orders?: (injective.exchange.v1beta1.IDerivativeLimitOrder[]|null);

                /** ConditionalDerivativeOrderBook market_buy_orders */
                market_buy_orders?: (injective.exchange.v1beta1.IDerivativeMarketOrder[]|null);

                /** ConditionalDerivativeOrderBook limit_sell_orders */
                limit_sell_orders?: (injective.exchange.v1beta1.IDerivativeLimitOrder[]|null);

                /** ConditionalDerivativeOrderBook market_sell_orders */
                market_sell_orders?: (injective.exchange.v1beta1.IDerivativeMarketOrder[]|null);
            }

            /** Represents a ConditionalDerivativeOrderBook. */
            class ConditionalDerivativeOrderBook implements IConditionalDerivativeOrderBook {

                /**
                 * Constructs a new ConditionalDerivativeOrderBook.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IConditionalDerivativeOrderBook);

                /** ConditionalDerivativeOrderBook market_id. */
                public market_id: string;

                /** ConditionalDerivativeOrderBook limit_buy_orders. */
                public limit_buy_orders: injective.exchange.v1beta1.IDerivativeLimitOrder[];

                /** ConditionalDerivativeOrderBook market_buy_orders. */
                public market_buy_orders: injective.exchange.v1beta1.IDerivativeMarketOrder[];

                /** ConditionalDerivativeOrderBook limit_sell_orders. */
                public limit_sell_orders: injective.exchange.v1beta1.IDerivativeLimitOrder[];

                /** ConditionalDerivativeOrderBook market_sell_orders. */
                public market_sell_orders: injective.exchange.v1beta1.IDerivativeMarketOrder[];

                /**
                 * Encodes the specified ConditionalDerivativeOrderBook message. Does not implicitly {@link injective.exchange.v1beta1.ConditionalDerivativeOrderBook.verify|verify} messages.
                 * @param message ConditionalDerivativeOrderBook message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IConditionalDerivativeOrderBook, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ConditionalDerivativeOrderBook message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.ConditionalDerivativeOrderBook.verify|verify} messages.
                 * @param message ConditionalDerivativeOrderBook message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IConditionalDerivativeOrderBook, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ConditionalDerivativeOrderBook message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ConditionalDerivativeOrderBook
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.ConditionalDerivativeOrderBook;

                /**
                 * Decodes a ConditionalDerivativeOrderBook message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ConditionalDerivativeOrderBook
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.ConditionalDerivativeOrderBook;

                /**
                 * Verifies a ConditionalDerivativeOrderBook message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ConditionalDerivativeOrderBook message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ConditionalDerivativeOrderBook
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.ConditionalDerivativeOrderBook;

                /**
                 * Creates a plain object from a ConditionalDerivativeOrderBook message. Also converts values to other types if specified.
                 * @param message ConditionalDerivativeOrderBook
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.ConditionalDerivativeOrderBook, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ConditionalDerivativeOrderBook to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a Balance. */
            interface IBalance {

                /** Balance subaccount_id */
                subaccount_id?: (string|null);

                /** Balance denom */
                denom?: (string|null);

                /** Balance deposits */
                deposits?: (injective.exchange.v1beta1.IDeposit|null);
            }

            /** Represents a Balance. */
            class Balance implements IBalance {

                /**
                 * Constructs a new Balance.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IBalance);

                /** Balance subaccount_id. */
                public subaccount_id: string;

                /** Balance denom. */
                public denom: string;

                /** Balance deposits. */
                public deposits?: (injective.exchange.v1beta1.IDeposit|null);

                /**
                 * Encodes the specified Balance message. Does not implicitly {@link injective.exchange.v1beta1.Balance.verify|verify} messages.
                 * @param message Balance message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IBalance, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Balance message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.Balance.verify|verify} messages.
                 * @param message Balance message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IBalance, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Balance message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Balance
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.Balance;

                /**
                 * Decodes a Balance message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Balance
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.Balance;

                /**
                 * Verifies a Balance message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Balance message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Balance
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.Balance;

                /**
                 * Creates a plain object from a Balance message. Also converts values to other types if specified.
                 * @param message Balance
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.Balance, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Balance to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a DerivativePosition. */
            interface IDerivativePosition {

                /** DerivativePosition subaccount_id */
                subaccount_id?: (string|null);

                /** DerivativePosition market_id */
                market_id?: (string|null);

                /** DerivativePosition position */
                position?: (injective.exchange.v1beta1.IPosition|null);
            }

            /** Represents a DerivativePosition. */
            class DerivativePosition implements IDerivativePosition {

                /**
                 * Constructs a new DerivativePosition.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IDerivativePosition);

                /** DerivativePosition subaccount_id. */
                public subaccount_id: string;

                /** DerivativePosition market_id. */
                public market_id: string;

                /** DerivativePosition position. */
                public position?: (injective.exchange.v1beta1.IPosition|null);

                /**
                 * Encodes the specified DerivativePosition message. Does not implicitly {@link injective.exchange.v1beta1.DerivativePosition.verify|verify} messages.
                 * @param message DerivativePosition message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IDerivativePosition, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DerivativePosition message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.DerivativePosition.verify|verify} messages.
                 * @param message DerivativePosition message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IDerivativePosition, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DerivativePosition message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DerivativePosition
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.DerivativePosition;

                /**
                 * Decodes a DerivativePosition message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DerivativePosition
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.DerivativePosition;

                /**
                 * Verifies a DerivativePosition message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DerivativePosition message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DerivativePosition
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.DerivativePosition;

                /**
                 * Creates a plain object from a DerivativePosition message. Also converts values to other types if specified.
                 * @param message DerivativePosition
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.DerivativePosition, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DerivativePosition to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a SubaccountNonce. */
            interface ISubaccountNonce {

                /** SubaccountNonce subaccount_id */
                subaccount_id?: (string|null);

                /** SubaccountNonce subaccount_trade_nonce */
                subaccount_trade_nonce?: (injective.exchange.v1beta1.ISubaccountTradeNonce|null);
            }

            /** Represents a SubaccountNonce. */
            class SubaccountNonce implements ISubaccountNonce {

                /**
                 * Constructs a new SubaccountNonce.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.ISubaccountNonce);

                /** SubaccountNonce subaccount_id. */
                public subaccount_id: string;

                /** SubaccountNonce subaccount_trade_nonce. */
                public subaccount_trade_nonce?: (injective.exchange.v1beta1.ISubaccountTradeNonce|null);

                /**
                 * Encodes the specified SubaccountNonce message. Does not implicitly {@link injective.exchange.v1beta1.SubaccountNonce.verify|verify} messages.
                 * @param message SubaccountNonce message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.ISubaccountNonce, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified SubaccountNonce message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.SubaccountNonce.verify|verify} messages.
                 * @param message SubaccountNonce message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.ISubaccountNonce, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a SubaccountNonce message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns SubaccountNonce
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.SubaccountNonce;

                /**
                 * Decodes a SubaccountNonce message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns SubaccountNonce
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.SubaccountNonce;

                /**
                 * Verifies a SubaccountNonce message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a SubaccountNonce message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns SubaccountNonce
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.SubaccountNonce;

                /**
                 * Creates a plain object from a SubaccountNonce message. Also converts values to other types if specified.
                 * @param message SubaccountNonce
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.SubaccountNonce, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this SubaccountNonce to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an ExpiryFuturesMarketInfoState. */
            interface IExpiryFuturesMarketInfoState {

                /** ExpiryFuturesMarketInfoState market_id */
                market_id?: (string|null);

                /** ExpiryFuturesMarketInfoState market_info */
                market_info?: (injective.exchange.v1beta1.IExpiryFuturesMarketInfo|null);
            }

            /** Represents an ExpiryFuturesMarketInfoState. */
            class ExpiryFuturesMarketInfoState implements IExpiryFuturesMarketInfoState {

                /**
                 * Constructs a new ExpiryFuturesMarketInfoState.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IExpiryFuturesMarketInfoState);

                /** ExpiryFuturesMarketInfoState market_id. */
                public market_id: string;

                /** ExpiryFuturesMarketInfoState market_info. */
                public market_info?: (injective.exchange.v1beta1.IExpiryFuturesMarketInfo|null);

                /**
                 * Encodes the specified ExpiryFuturesMarketInfoState message. Does not implicitly {@link injective.exchange.v1beta1.ExpiryFuturesMarketInfoState.verify|verify} messages.
                 * @param message ExpiryFuturesMarketInfoState message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IExpiryFuturesMarketInfoState, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ExpiryFuturesMarketInfoState message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.ExpiryFuturesMarketInfoState.verify|verify} messages.
                 * @param message ExpiryFuturesMarketInfoState message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IExpiryFuturesMarketInfoState, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an ExpiryFuturesMarketInfoState message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ExpiryFuturesMarketInfoState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.ExpiryFuturesMarketInfoState;

                /**
                 * Decodes an ExpiryFuturesMarketInfoState message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ExpiryFuturesMarketInfoState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.ExpiryFuturesMarketInfoState;

                /**
                 * Verifies an ExpiryFuturesMarketInfoState message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an ExpiryFuturesMarketInfoState message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ExpiryFuturesMarketInfoState
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.ExpiryFuturesMarketInfoState;

                /**
                 * Creates a plain object from an ExpiryFuturesMarketInfoState message. Also converts values to other types if specified.
                 * @param message ExpiryFuturesMarketInfoState
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.ExpiryFuturesMarketInfoState, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ExpiryFuturesMarketInfoState to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a PerpetualMarketFundingState. */
            interface IPerpetualMarketFundingState {

                /** PerpetualMarketFundingState market_id */
                market_id?: (string|null);

                /** PerpetualMarketFundingState funding */
                funding?: (injective.exchange.v1beta1.IPerpetualMarketFunding|null);
            }

            /** Represents a PerpetualMarketFundingState. */
            class PerpetualMarketFundingState implements IPerpetualMarketFundingState {

                /**
                 * Constructs a new PerpetualMarketFundingState.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IPerpetualMarketFundingState);

                /** PerpetualMarketFundingState market_id. */
                public market_id: string;

                /** PerpetualMarketFundingState funding. */
                public funding?: (injective.exchange.v1beta1.IPerpetualMarketFunding|null);

                /**
                 * Encodes the specified PerpetualMarketFundingState message. Does not implicitly {@link injective.exchange.v1beta1.PerpetualMarketFundingState.verify|verify} messages.
                 * @param message PerpetualMarketFundingState message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IPerpetualMarketFundingState, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified PerpetualMarketFundingState message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.PerpetualMarketFundingState.verify|verify} messages.
                 * @param message PerpetualMarketFundingState message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IPerpetualMarketFundingState, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a PerpetualMarketFundingState message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns PerpetualMarketFundingState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.PerpetualMarketFundingState;

                /**
                 * Decodes a PerpetualMarketFundingState message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns PerpetualMarketFundingState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.PerpetualMarketFundingState;

                /**
                 * Verifies a PerpetualMarketFundingState message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a PerpetualMarketFundingState message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns PerpetualMarketFundingState
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.PerpetualMarketFundingState;

                /**
                 * Creates a plain object from a PerpetualMarketFundingState message. Also converts values to other types if specified.
                 * @param message PerpetualMarketFundingState
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.PerpetualMarketFundingState, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this PerpetualMarketFundingState to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a CreateSpotLimitOrderAuthz. */
            interface ICreateSpotLimitOrderAuthz {

                /** CreateSpotLimitOrderAuthz subaccount_id */
                subaccount_id?: (string|null);

                /** CreateSpotLimitOrderAuthz market_ids */
                market_ids?: (string[]|null);
            }

            /** Represents a CreateSpotLimitOrderAuthz. */
            class CreateSpotLimitOrderAuthz implements ICreateSpotLimitOrderAuthz {

                /**
                 * Constructs a new CreateSpotLimitOrderAuthz.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.ICreateSpotLimitOrderAuthz);

                /** CreateSpotLimitOrderAuthz subaccount_id. */
                public subaccount_id: string;

                /** CreateSpotLimitOrderAuthz market_ids. */
                public market_ids: string[];

                /**
                 * Encodes the specified CreateSpotLimitOrderAuthz message. Does not implicitly {@link injective.exchange.v1beta1.CreateSpotLimitOrderAuthz.verify|verify} messages.
                 * @param message CreateSpotLimitOrderAuthz message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.ICreateSpotLimitOrderAuthz, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified CreateSpotLimitOrderAuthz message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.CreateSpotLimitOrderAuthz.verify|verify} messages.
                 * @param message CreateSpotLimitOrderAuthz message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.ICreateSpotLimitOrderAuthz, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a CreateSpotLimitOrderAuthz message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns CreateSpotLimitOrderAuthz
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.CreateSpotLimitOrderAuthz;

                /**
                 * Decodes a CreateSpotLimitOrderAuthz message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns CreateSpotLimitOrderAuthz
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.CreateSpotLimitOrderAuthz;

                /**
                 * Verifies a CreateSpotLimitOrderAuthz message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a CreateSpotLimitOrderAuthz message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns CreateSpotLimitOrderAuthz
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.CreateSpotLimitOrderAuthz;

                /**
                 * Creates a plain object from a CreateSpotLimitOrderAuthz message. Also converts values to other types if specified.
                 * @param message CreateSpotLimitOrderAuthz
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.CreateSpotLimitOrderAuthz, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this CreateSpotLimitOrderAuthz to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a CreateSpotMarketOrderAuthz. */
            interface ICreateSpotMarketOrderAuthz {

                /** CreateSpotMarketOrderAuthz subaccount_id */
                subaccount_id?: (string|null);

                /** CreateSpotMarketOrderAuthz market_ids */
                market_ids?: (string[]|null);
            }

            /** Represents a CreateSpotMarketOrderAuthz. */
            class CreateSpotMarketOrderAuthz implements ICreateSpotMarketOrderAuthz {

                /**
                 * Constructs a new CreateSpotMarketOrderAuthz.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.ICreateSpotMarketOrderAuthz);

                /** CreateSpotMarketOrderAuthz subaccount_id. */
                public subaccount_id: string;

                /** CreateSpotMarketOrderAuthz market_ids. */
                public market_ids: string[];

                /**
                 * Encodes the specified CreateSpotMarketOrderAuthz message. Does not implicitly {@link injective.exchange.v1beta1.CreateSpotMarketOrderAuthz.verify|verify} messages.
                 * @param message CreateSpotMarketOrderAuthz message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.ICreateSpotMarketOrderAuthz, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified CreateSpotMarketOrderAuthz message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.CreateSpotMarketOrderAuthz.verify|verify} messages.
                 * @param message CreateSpotMarketOrderAuthz message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.ICreateSpotMarketOrderAuthz, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a CreateSpotMarketOrderAuthz message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns CreateSpotMarketOrderAuthz
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.CreateSpotMarketOrderAuthz;

                /**
                 * Decodes a CreateSpotMarketOrderAuthz message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns CreateSpotMarketOrderAuthz
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.CreateSpotMarketOrderAuthz;

                /**
                 * Verifies a CreateSpotMarketOrderAuthz message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a CreateSpotMarketOrderAuthz message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns CreateSpotMarketOrderAuthz
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.CreateSpotMarketOrderAuthz;

                /**
                 * Creates a plain object from a CreateSpotMarketOrderAuthz message. Also converts values to other types if specified.
                 * @param message CreateSpotMarketOrderAuthz
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.CreateSpotMarketOrderAuthz, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this CreateSpotMarketOrderAuthz to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a BatchCreateSpotLimitOrdersAuthz. */
            interface IBatchCreateSpotLimitOrdersAuthz {

                /** BatchCreateSpotLimitOrdersAuthz subaccount_id */
                subaccount_id?: (string|null);

                /** BatchCreateSpotLimitOrdersAuthz market_ids */
                market_ids?: (string[]|null);
            }

            /** Represents a BatchCreateSpotLimitOrdersAuthz. */
            class BatchCreateSpotLimitOrdersAuthz implements IBatchCreateSpotLimitOrdersAuthz {

                /**
                 * Constructs a new BatchCreateSpotLimitOrdersAuthz.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IBatchCreateSpotLimitOrdersAuthz);

                /** BatchCreateSpotLimitOrdersAuthz subaccount_id. */
                public subaccount_id: string;

                /** BatchCreateSpotLimitOrdersAuthz market_ids. */
                public market_ids: string[];

                /**
                 * Encodes the specified BatchCreateSpotLimitOrdersAuthz message. Does not implicitly {@link injective.exchange.v1beta1.BatchCreateSpotLimitOrdersAuthz.verify|verify} messages.
                 * @param message BatchCreateSpotLimitOrdersAuthz message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IBatchCreateSpotLimitOrdersAuthz, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified BatchCreateSpotLimitOrdersAuthz message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.BatchCreateSpotLimitOrdersAuthz.verify|verify} messages.
                 * @param message BatchCreateSpotLimitOrdersAuthz message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IBatchCreateSpotLimitOrdersAuthz, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a BatchCreateSpotLimitOrdersAuthz message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns BatchCreateSpotLimitOrdersAuthz
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.BatchCreateSpotLimitOrdersAuthz;

                /**
                 * Decodes a BatchCreateSpotLimitOrdersAuthz message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns BatchCreateSpotLimitOrdersAuthz
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.BatchCreateSpotLimitOrdersAuthz;

                /**
                 * Verifies a BatchCreateSpotLimitOrdersAuthz message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a BatchCreateSpotLimitOrdersAuthz message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns BatchCreateSpotLimitOrdersAuthz
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.BatchCreateSpotLimitOrdersAuthz;

                /**
                 * Creates a plain object from a BatchCreateSpotLimitOrdersAuthz message. Also converts values to other types if specified.
                 * @param message BatchCreateSpotLimitOrdersAuthz
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.BatchCreateSpotLimitOrdersAuthz, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this BatchCreateSpotLimitOrdersAuthz to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a CancelSpotOrderAuthz. */
            interface ICancelSpotOrderAuthz {

                /** CancelSpotOrderAuthz subaccount_id */
                subaccount_id?: (string|null);

                /** CancelSpotOrderAuthz market_ids */
                market_ids?: (string[]|null);
            }

            /** Represents a CancelSpotOrderAuthz. */
            class CancelSpotOrderAuthz implements ICancelSpotOrderAuthz {

                /**
                 * Constructs a new CancelSpotOrderAuthz.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.ICancelSpotOrderAuthz);

                /** CancelSpotOrderAuthz subaccount_id. */
                public subaccount_id: string;

                /** CancelSpotOrderAuthz market_ids. */
                public market_ids: string[];

                /**
                 * Encodes the specified CancelSpotOrderAuthz message. Does not implicitly {@link injective.exchange.v1beta1.CancelSpotOrderAuthz.verify|verify} messages.
                 * @param message CancelSpotOrderAuthz message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.ICancelSpotOrderAuthz, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified CancelSpotOrderAuthz message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.CancelSpotOrderAuthz.verify|verify} messages.
                 * @param message CancelSpotOrderAuthz message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.ICancelSpotOrderAuthz, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a CancelSpotOrderAuthz message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns CancelSpotOrderAuthz
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.CancelSpotOrderAuthz;

                /**
                 * Decodes a CancelSpotOrderAuthz message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns CancelSpotOrderAuthz
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.CancelSpotOrderAuthz;

                /**
                 * Verifies a CancelSpotOrderAuthz message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a CancelSpotOrderAuthz message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns CancelSpotOrderAuthz
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.CancelSpotOrderAuthz;

                /**
                 * Creates a plain object from a CancelSpotOrderAuthz message. Also converts values to other types if specified.
                 * @param message CancelSpotOrderAuthz
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.CancelSpotOrderAuthz, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this CancelSpotOrderAuthz to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a BatchCancelSpotOrdersAuthz. */
            interface IBatchCancelSpotOrdersAuthz {

                /** BatchCancelSpotOrdersAuthz subaccount_id */
                subaccount_id?: (string|null);

                /** BatchCancelSpotOrdersAuthz market_ids */
                market_ids?: (string[]|null);
            }

            /** Represents a BatchCancelSpotOrdersAuthz. */
            class BatchCancelSpotOrdersAuthz implements IBatchCancelSpotOrdersAuthz {

                /**
                 * Constructs a new BatchCancelSpotOrdersAuthz.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IBatchCancelSpotOrdersAuthz);

                /** BatchCancelSpotOrdersAuthz subaccount_id. */
                public subaccount_id: string;

                /** BatchCancelSpotOrdersAuthz market_ids. */
                public market_ids: string[];

                /**
                 * Encodes the specified BatchCancelSpotOrdersAuthz message. Does not implicitly {@link injective.exchange.v1beta1.BatchCancelSpotOrdersAuthz.verify|verify} messages.
                 * @param message BatchCancelSpotOrdersAuthz message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IBatchCancelSpotOrdersAuthz, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified BatchCancelSpotOrdersAuthz message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.BatchCancelSpotOrdersAuthz.verify|verify} messages.
                 * @param message BatchCancelSpotOrdersAuthz message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IBatchCancelSpotOrdersAuthz, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a BatchCancelSpotOrdersAuthz message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns BatchCancelSpotOrdersAuthz
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.BatchCancelSpotOrdersAuthz;

                /**
                 * Decodes a BatchCancelSpotOrdersAuthz message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns BatchCancelSpotOrdersAuthz
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.BatchCancelSpotOrdersAuthz;

                /**
                 * Verifies a BatchCancelSpotOrdersAuthz message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a BatchCancelSpotOrdersAuthz message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns BatchCancelSpotOrdersAuthz
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.BatchCancelSpotOrdersAuthz;

                /**
                 * Creates a plain object from a BatchCancelSpotOrdersAuthz message. Also converts values to other types if specified.
                 * @param message BatchCancelSpotOrdersAuthz
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.BatchCancelSpotOrdersAuthz, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this BatchCancelSpotOrdersAuthz to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a CreateDerivativeLimitOrderAuthz. */
            interface ICreateDerivativeLimitOrderAuthz {

                /** CreateDerivativeLimitOrderAuthz subaccount_id */
                subaccount_id?: (string|null);

                /** CreateDerivativeLimitOrderAuthz market_ids */
                market_ids?: (string[]|null);
            }

            /** Represents a CreateDerivativeLimitOrderAuthz. */
            class CreateDerivativeLimitOrderAuthz implements ICreateDerivativeLimitOrderAuthz {

                /**
                 * Constructs a new CreateDerivativeLimitOrderAuthz.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.ICreateDerivativeLimitOrderAuthz);

                /** CreateDerivativeLimitOrderAuthz subaccount_id. */
                public subaccount_id: string;

                /** CreateDerivativeLimitOrderAuthz market_ids. */
                public market_ids: string[];

                /**
                 * Encodes the specified CreateDerivativeLimitOrderAuthz message. Does not implicitly {@link injective.exchange.v1beta1.CreateDerivativeLimitOrderAuthz.verify|verify} messages.
                 * @param message CreateDerivativeLimitOrderAuthz message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.ICreateDerivativeLimitOrderAuthz, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified CreateDerivativeLimitOrderAuthz message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.CreateDerivativeLimitOrderAuthz.verify|verify} messages.
                 * @param message CreateDerivativeLimitOrderAuthz message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.ICreateDerivativeLimitOrderAuthz, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a CreateDerivativeLimitOrderAuthz message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns CreateDerivativeLimitOrderAuthz
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.CreateDerivativeLimitOrderAuthz;

                /**
                 * Decodes a CreateDerivativeLimitOrderAuthz message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns CreateDerivativeLimitOrderAuthz
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.CreateDerivativeLimitOrderAuthz;

                /**
                 * Verifies a CreateDerivativeLimitOrderAuthz message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a CreateDerivativeLimitOrderAuthz message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns CreateDerivativeLimitOrderAuthz
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.CreateDerivativeLimitOrderAuthz;

                /**
                 * Creates a plain object from a CreateDerivativeLimitOrderAuthz message. Also converts values to other types if specified.
                 * @param message CreateDerivativeLimitOrderAuthz
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.CreateDerivativeLimitOrderAuthz, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this CreateDerivativeLimitOrderAuthz to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a CreateDerivativeMarketOrderAuthz. */
            interface ICreateDerivativeMarketOrderAuthz {

                /** CreateDerivativeMarketOrderAuthz subaccount_id */
                subaccount_id?: (string|null);

                /** CreateDerivativeMarketOrderAuthz market_ids */
                market_ids?: (string[]|null);
            }

            /** Represents a CreateDerivativeMarketOrderAuthz. */
            class CreateDerivativeMarketOrderAuthz implements ICreateDerivativeMarketOrderAuthz {

                /**
                 * Constructs a new CreateDerivativeMarketOrderAuthz.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.ICreateDerivativeMarketOrderAuthz);

                /** CreateDerivativeMarketOrderAuthz subaccount_id. */
                public subaccount_id: string;

                /** CreateDerivativeMarketOrderAuthz market_ids. */
                public market_ids: string[];

                /**
                 * Encodes the specified CreateDerivativeMarketOrderAuthz message. Does not implicitly {@link injective.exchange.v1beta1.CreateDerivativeMarketOrderAuthz.verify|verify} messages.
                 * @param message CreateDerivativeMarketOrderAuthz message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.ICreateDerivativeMarketOrderAuthz, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified CreateDerivativeMarketOrderAuthz message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.CreateDerivativeMarketOrderAuthz.verify|verify} messages.
                 * @param message CreateDerivativeMarketOrderAuthz message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.ICreateDerivativeMarketOrderAuthz, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a CreateDerivativeMarketOrderAuthz message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns CreateDerivativeMarketOrderAuthz
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.CreateDerivativeMarketOrderAuthz;

                /**
                 * Decodes a CreateDerivativeMarketOrderAuthz message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns CreateDerivativeMarketOrderAuthz
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.CreateDerivativeMarketOrderAuthz;

                /**
                 * Verifies a CreateDerivativeMarketOrderAuthz message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a CreateDerivativeMarketOrderAuthz message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns CreateDerivativeMarketOrderAuthz
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.CreateDerivativeMarketOrderAuthz;

                /**
                 * Creates a plain object from a CreateDerivativeMarketOrderAuthz message. Also converts values to other types if specified.
                 * @param message CreateDerivativeMarketOrderAuthz
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.CreateDerivativeMarketOrderAuthz, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this CreateDerivativeMarketOrderAuthz to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a BatchCreateDerivativeLimitOrdersAuthz. */
            interface IBatchCreateDerivativeLimitOrdersAuthz {

                /** BatchCreateDerivativeLimitOrdersAuthz subaccount_id */
                subaccount_id?: (string|null);

                /** BatchCreateDerivativeLimitOrdersAuthz market_ids */
                market_ids?: (string[]|null);
            }

            /** Represents a BatchCreateDerivativeLimitOrdersAuthz. */
            class BatchCreateDerivativeLimitOrdersAuthz implements IBatchCreateDerivativeLimitOrdersAuthz {

                /**
                 * Constructs a new BatchCreateDerivativeLimitOrdersAuthz.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IBatchCreateDerivativeLimitOrdersAuthz);

                /** BatchCreateDerivativeLimitOrdersAuthz subaccount_id. */
                public subaccount_id: string;

                /** BatchCreateDerivativeLimitOrdersAuthz market_ids. */
                public market_ids: string[];

                /**
                 * Encodes the specified BatchCreateDerivativeLimitOrdersAuthz message. Does not implicitly {@link injective.exchange.v1beta1.BatchCreateDerivativeLimitOrdersAuthz.verify|verify} messages.
                 * @param message BatchCreateDerivativeLimitOrdersAuthz message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IBatchCreateDerivativeLimitOrdersAuthz, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified BatchCreateDerivativeLimitOrdersAuthz message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.BatchCreateDerivativeLimitOrdersAuthz.verify|verify} messages.
                 * @param message BatchCreateDerivativeLimitOrdersAuthz message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IBatchCreateDerivativeLimitOrdersAuthz, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a BatchCreateDerivativeLimitOrdersAuthz message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns BatchCreateDerivativeLimitOrdersAuthz
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.BatchCreateDerivativeLimitOrdersAuthz;

                /**
                 * Decodes a BatchCreateDerivativeLimitOrdersAuthz message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns BatchCreateDerivativeLimitOrdersAuthz
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.BatchCreateDerivativeLimitOrdersAuthz;

                /**
                 * Verifies a BatchCreateDerivativeLimitOrdersAuthz message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a BatchCreateDerivativeLimitOrdersAuthz message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns BatchCreateDerivativeLimitOrdersAuthz
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.BatchCreateDerivativeLimitOrdersAuthz;

                /**
                 * Creates a plain object from a BatchCreateDerivativeLimitOrdersAuthz message. Also converts values to other types if specified.
                 * @param message BatchCreateDerivativeLimitOrdersAuthz
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.BatchCreateDerivativeLimitOrdersAuthz, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this BatchCreateDerivativeLimitOrdersAuthz to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a CancelDerivativeOrderAuthz. */
            interface ICancelDerivativeOrderAuthz {

                /** CancelDerivativeOrderAuthz subaccount_id */
                subaccount_id?: (string|null);

                /** CancelDerivativeOrderAuthz market_ids */
                market_ids?: (string[]|null);
            }

            /** Represents a CancelDerivativeOrderAuthz. */
            class CancelDerivativeOrderAuthz implements ICancelDerivativeOrderAuthz {

                /**
                 * Constructs a new CancelDerivativeOrderAuthz.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.ICancelDerivativeOrderAuthz);

                /** CancelDerivativeOrderAuthz subaccount_id. */
                public subaccount_id: string;

                /** CancelDerivativeOrderAuthz market_ids. */
                public market_ids: string[];

                /**
                 * Encodes the specified CancelDerivativeOrderAuthz message. Does not implicitly {@link injective.exchange.v1beta1.CancelDerivativeOrderAuthz.verify|verify} messages.
                 * @param message CancelDerivativeOrderAuthz message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.ICancelDerivativeOrderAuthz, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified CancelDerivativeOrderAuthz message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.CancelDerivativeOrderAuthz.verify|verify} messages.
                 * @param message CancelDerivativeOrderAuthz message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.ICancelDerivativeOrderAuthz, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a CancelDerivativeOrderAuthz message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns CancelDerivativeOrderAuthz
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.CancelDerivativeOrderAuthz;

                /**
                 * Decodes a CancelDerivativeOrderAuthz message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns CancelDerivativeOrderAuthz
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.CancelDerivativeOrderAuthz;

                /**
                 * Verifies a CancelDerivativeOrderAuthz message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a CancelDerivativeOrderAuthz message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns CancelDerivativeOrderAuthz
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.CancelDerivativeOrderAuthz;

                /**
                 * Creates a plain object from a CancelDerivativeOrderAuthz message. Also converts values to other types if specified.
                 * @param message CancelDerivativeOrderAuthz
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.CancelDerivativeOrderAuthz, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this CancelDerivativeOrderAuthz to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a BatchCancelDerivativeOrdersAuthz. */
            interface IBatchCancelDerivativeOrdersAuthz {

                /** BatchCancelDerivativeOrdersAuthz subaccount_id */
                subaccount_id?: (string|null);

                /** BatchCancelDerivativeOrdersAuthz market_ids */
                market_ids?: (string[]|null);
            }

            /** Represents a BatchCancelDerivativeOrdersAuthz. */
            class BatchCancelDerivativeOrdersAuthz implements IBatchCancelDerivativeOrdersAuthz {

                /**
                 * Constructs a new BatchCancelDerivativeOrdersAuthz.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IBatchCancelDerivativeOrdersAuthz);

                /** BatchCancelDerivativeOrdersAuthz subaccount_id. */
                public subaccount_id: string;

                /** BatchCancelDerivativeOrdersAuthz market_ids. */
                public market_ids: string[];

                /**
                 * Encodes the specified BatchCancelDerivativeOrdersAuthz message. Does not implicitly {@link injective.exchange.v1beta1.BatchCancelDerivativeOrdersAuthz.verify|verify} messages.
                 * @param message BatchCancelDerivativeOrdersAuthz message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IBatchCancelDerivativeOrdersAuthz, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified BatchCancelDerivativeOrdersAuthz message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.BatchCancelDerivativeOrdersAuthz.verify|verify} messages.
                 * @param message BatchCancelDerivativeOrdersAuthz message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IBatchCancelDerivativeOrdersAuthz, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a BatchCancelDerivativeOrdersAuthz message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns BatchCancelDerivativeOrdersAuthz
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.BatchCancelDerivativeOrdersAuthz;

                /**
                 * Decodes a BatchCancelDerivativeOrdersAuthz message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns BatchCancelDerivativeOrdersAuthz
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.BatchCancelDerivativeOrdersAuthz;

                /**
                 * Verifies a BatchCancelDerivativeOrdersAuthz message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a BatchCancelDerivativeOrdersAuthz message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns BatchCancelDerivativeOrdersAuthz
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.BatchCancelDerivativeOrdersAuthz;

                /**
                 * Creates a plain object from a BatchCancelDerivativeOrdersAuthz message. Also converts values to other types if specified.
                 * @param message BatchCancelDerivativeOrdersAuthz
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.BatchCancelDerivativeOrdersAuthz, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this BatchCancelDerivativeOrdersAuthz to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a BatchUpdateOrdersAuthz. */
            interface IBatchUpdateOrdersAuthz {

                /** BatchUpdateOrdersAuthz subaccount_id */
                subaccount_id?: (string|null);

                /** BatchUpdateOrdersAuthz spot_markets */
                spot_markets?: (string[]|null);

                /** BatchUpdateOrdersAuthz derivative_markets */
                derivative_markets?: (string[]|null);
            }

            /** Represents a BatchUpdateOrdersAuthz. */
            class BatchUpdateOrdersAuthz implements IBatchUpdateOrdersAuthz {

                /**
                 * Constructs a new BatchUpdateOrdersAuthz.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.exchange.v1beta1.IBatchUpdateOrdersAuthz);

                /** BatchUpdateOrdersAuthz subaccount_id. */
                public subaccount_id: string;

                /** BatchUpdateOrdersAuthz spot_markets. */
                public spot_markets: string[];

                /** BatchUpdateOrdersAuthz derivative_markets. */
                public derivative_markets: string[];

                /**
                 * Encodes the specified BatchUpdateOrdersAuthz message. Does not implicitly {@link injective.exchange.v1beta1.BatchUpdateOrdersAuthz.verify|verify} messages.
                 * @param message BatchUpdateOrdersAuthz message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.exchange.v1beta1.IBatchUpdateOrdersAuthz, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified BatchUpdateOrdersAuthz message, length delimited. Does not implicitly {@link injective.exchange.v1beta1.BatchUpdateOrdersAuthz.verify|verify} messages.
                 * @param message BatchUpdateOrdersAuthz message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.exchange.v1beta1.IBatchUpdateOrdersAuthz, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a BatchUpdateOrdersAuthz message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns BatchUpdateOrdersAuthz
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.exchange.v1beta1.BatchUpdateOrdersAuthz;

                /**
                 * Decodes a BatchUpdateOrdersAuthz message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns BatchUpdateOrdersAuthz
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.exchange.v1beta1.BatchUpdateOrdersAuthz;

                /**
                 * Verifies a BatchUpdateOrdersAuthz message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a BatchUpdateOrdersAuthz message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns BatchUpdateOrdersAuthz
                 */
                public static fromObject(object: { [k: string]: any }): injective.exchange.v1beta1.BatchUpdateOrdersAuthz;

                /**
                 * Creates a plain object from a BatchUpdateOrdersAuthz message. Also converts values to other types if specified.
                 * @param message BatchUpdateOrdersAuthz
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.exchange.v1beta1.BatchUpdateOrdersAuthz, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this BatchUpdateOrdersAuthz to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }
    }

    /** Namespace oracle. */
    namespace oracle {

        /** Namespace v1beta1. */
        namespace v1beta1 {

            /** Properties of a Params. */
            interface IParams {

                /** Params pyth_contract */
                pyth_contract?: (string|null);
            }

            /** Represents a Params. */
            class Params implements IParams {

                /**
                 * Constructs a new Params.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.oracle.v1beta1.IParams);

                /** Params pyth_contract. */
                public pyth_contract: string;

                /**
                 * Encodes the specified Params message. Does not implicitly {@link injective.oracle.v1beta1.Params.verify|verify} messages.
                 * @param message Params message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.oracle.v1beta1.IParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Params message, length delimited. Does not implicitly {@link injective.oracle.v1beta1.Params.verify|verify} messages.
                 * @param message Params message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.oracle.v1beta1.IParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Params message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Params
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.oracle.v1beta1.Params;

                /**
                 * Decodes a Params message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Params
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.oracle.v1beta1.Params;

                /**
                 * Verifies a Params message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Params message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Params
                 */
                public static fromObject(object: { [k: string]: any }): injective.oracle.v1beta1.Params;

                /**
                 * Creates a plain object from a Params message. Also converts values to other types if specified.
                 * @param message Params
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.oracle.v1beta1.Params, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Params to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** OracleType enum. */
            enum OracleType {
                Unspecified = 0,
                Band = 1,
                PriceFeed = 2,
                Coinbase = 3,
                Chainlink = 4,
                Razor = 5,
                Dia = 6,
                API3 = 7,
                Uma = 8,
                Pyth = 9,
                BandIBC = 10,
                Provider = 11
            }

            /** Properties of an OracleInfo. */
            interface IOracleInfo {

                /** OracleInfo symbol */
                symbol?: (string|null);

                /** OracleInfo oracle_type */
                oracle_type?: (injective.oracle.v1beta1.OracleType|null);

                /** OracleInfo scale_factor */
                scale_factor?: (number|null);
            }

            /** Represents an OracleInfo. */
            class OracleInfo implements IOracleInfo {

                /**
                 * Constructs a new OracleInfo.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.oracle.v1beta1.IOracleInfo);

                /** OracleInfo symbol. */
                public symbol: string;

                /** OracleInfo oracle_type. */
                public oracle_type: injective.oracle.v1beta1.OracleType;

                /** OracleInfo scale_factor. */
                public scale_factor: number;

                /**
                 * Encodes the specified OracleInfo message. Does not implicitly {@link injective.oracle.v1beta1.OracleInfo.verify|verify} messages.
                 * @param message OracleInfo message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.oracle.v1beta1.IOracleInfo, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified OracleInfo message, length delimited. Does not implicitly {@link injective.oracle.v1beta1.OracleInfo.verify|verify} messages.
                 * @param message OracleInfo message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.oracle.v1beta1.IOracleInfo, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an OracleInfo message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns OracleInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.oracle.v1beta1.OracleInfo;

                /**
                 * Decodes an OracleInfo message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns OracleInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.oracle.v1beta1.OracleInfo;

                /**
                 * Verifies an OracleInfo message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an OracleInfo message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns OracleInfo
                 */
                public static fromObject(object: { [k: string]: any }): injective.oracle.v1beta1.OracleInfo;

                /**
                 * Creates a plain object from an OracleInfo message. Also converts values to other types if specified.
                 * @param message OracleInfo
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.oracle.v1beta1.OracleInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this OracleInfo to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a ChainlinkPriceState. */
            interface IChainlinkPriceState {

                /** ChainlinkPriceState feed_id */
                feed_id?: (string|null);

                /** ChainlinkPriceState answer */
                answer?: (string|null);

                /** ChainlinkPriceState timestamp */
                timestamp?: (number|null);

                /** ChainlinkPriceState price_state */
                price_state?: (injective.oracle.v1beta1.IPriceState|null);
            }

            /** Represents a ChainlinkPriceState. */
            class ChainlinkPriceState implements IChainlinkPriceState {

                /**
                 * Constructs a new ChainlinkPriceState.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.oracle.v1beta1.IChainlinkPriceState);

                /** ChainlinkPriceState feed_id. */
                public feed_id: string;

                /** ChainlinkPriceState answer. */
                public answer: string;

                /** ChainlinkPriceState timestamp. */
                public timestamp: number;

                /** ChainlinkPriceState price_state. */
                public price_state?: (injective.oracle.v1beta1.IPriceState|null);

                /**
                 * Encodes the specified ChainlinkPriceState message. Does not implicitly {@link injective.oracle.v1beta1.ChainlinkPriceState.verify|verify} messages.
                 * @param message ChainlinkPriceState message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.oracle.v1beta1.IChainlinkPriceState, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ChainlinkPriceState message, length delimited. Does not implicitly {@link injective.oracle.v1beta1.ChainlinkPriceState.verify|verify} messages.
                 * @param message ChainlinkPriceState message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.oracle.v1beta1.IChainlinkPriceState, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ChainlinkPriceState message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ChainlinkPriceState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.oracle.v1beta1.ChainlinkPriceState;

                /**
                 * Decodes a ChainlinkPriceState message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ChainlinkPriceState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.oracle.v1beta1.ChainlinkPriceState;

                /**
                 * Verifies a ChainlinkPriceState message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ChainlinkPriceState message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ChainlinkPriceState
                 */
                public static fromObject(object: { [k: string]: any }): injective.oracle.v1beta1.ChainlinkPriceState;

                /**
                 * Creates a plain object from a ChainlinkPriceState message. Also converts values to other types if specified.
                 * @param message ChainlinkPriceState
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.oracle.v1beta1.ChainlinkPriceState, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ChainlinkPriceState to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a BandPriceState. */
            interface IBandPriceState {

                /** BandPriceState symbol */
                symbol?: (string|null);

                /** BandPriceState rate */
                rate?: (string|null);

                /** BandPriceState resolve_time */
                resolve_time?: (number|null);

                /** BandPriceState request_ID */
                request_ID?: (number|null);

                /** BandPriceState price_state */
                price_state?: (injective.oracle.v1beta1.IPriceState|null);
            }

            /** Represents a BandPriceState. */
            class BandPriceState implements IBandPriceState {

                /**
                 * Constructs a new BandPriceState.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.oracle.v1beta1.IBandPriceState);

                /** BandPriceState symbol. */
                public symbol: string;

                /** BandPriceState rate. */
                public rate: string;

                /** BandPriceState resolve_time. */
                public resolve_time: number;

                /** BandPriceState request_ID. */
                public request_ID: number;

                /** BandPriceState price_state. */
                public price_state?: (injective.oracle.v1beta1.IPriceState|null);

                /**
                 * Encodes the specified BandPriceState message. Does not implicitly {@link injective.oracle.v1beta1.BandPriceState.verify|verify} messages.
                 * @param message BandPriceState message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.oracle.v1beta1.IBandPriceState, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified BandPriceState message, length delimited. Does not implicitly {@link injective.oracle.v1beta1.BandPriceState.verify|verify} messages.
                 * @param message BandPriceState message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.oracle.v1beta1.IBandPriceState, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a BandPriceState message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns BandPriceState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.oracle.v1beta1.BandPriceState;

                /**
                 * Decodes a BandPriceState message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns BandPriceState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.oracle.v1beta1.BandPriceState;

                /**
                 * Verifies a BandPriceState message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a BandPriceState message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns BandPriceState
                 */
                public static fromObject(object: { [k: string]: any }): injective.oracle.v1beta1.BandPriceState;

                /**
                 * Creates a plain object from a BandPriceState message. Also converts values to other types if specified.
                 * @param message BandPriceState
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.oracle.v1beta1.BandPriceState, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this BandPriceState to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a PriceFeedState. */
            interface IPriceFeedState {

                /** PriceFeedState base */
                base?: (string|null);

                /** PriceFeedState quote */
                quote?: (string|null);

                /** PriceFeedState price_state */
                price_state?: (injective.oracle.v1beta1.IPriceState|null);

                /** PriceFeedState relayers */
                relayers?: (string[]|null);
            }

            /** Represents a PriceFeedState. */
            class PriceFeedState implements IPriceFeedState {

                /**
                 * Constructs a new PriceFeedState.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.oracle.v1beta1.IPriceFeedState);

                /** PriceFeedState base. */
                public base: string;

                /** PriceFeedState quote. */
                public quote: string;

                /** PriceFeedState price_state. */
                public price_state?: (injective.oracle.v1beta1.IPriceState|null);

                /** PriceFeedState relayers. */
                public relayers: string[];

                /**
                 * Encodes the specified PriceFeedState message. Does not implicitly {@link injective.oracle.v1beta1.PriceFeedState.verify|verify} messages.
                 * @param message PriceFeedState message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.oracle.v1beta1.IPriceFeedState, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified PriceFeedState message, length delimited. Does not implicitly {@link injective.oracle.v1beta1.PriceFeedState.verify|verify} messages.
                 * @param message PriceFeedState message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.oracle.v1beta1.IPriceFeedState, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a PriceFeedState message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns PriceFeedState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.oracle.v1beta1.PriceFeedState;

                /**
                 * Decodes a PriceFeedState message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns PriceFeedState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.oracle.v1beta1.PriceFeedState;

                /**
                 * Verifies a PriceFeedState message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a PriceFeedState message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns PriceFeedState
                 */
                public static fromObject(object: { [k: string]: any }): injective.oracle.v1beta1.PriceFeedState;

                /**
                 * Creates a plain object from a PriceFeedState message. Also converts values to other types if specified.
                 * @param message PriceFeedState
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.oracle.v1beta1.PriceFeedState, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this PriceFeedState to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a ProviderInfo. */
            interface IProviderInfo {

                /** ProviderInfo provider */
                provider?: (string|null);

                /** ProviderInfo relayers */
                relayers?: (string[]|null);
            }

            /** Represents a ProviderInfo. */
            class ProviderInfo implements IProviderInfo {

                /**
                 * Constructs a new ProviderInfo.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.oracle.v1beta1.IProviderInfo);

                /** ProviderInfo provider. */
                public provider: string;

                /** ProviderInfo relayers. */
                public relayers: string[];

                /**
                 * Encodes the specified ProviderInfo message. Does not implicitly {@link injective.oracle.v1beta1.ProviderInfo.verify|verify} messages.
                 * @param message ProviderInfo message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.oracle.v1beta1.IProviderInfo, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ProviderInfo message, length delimited. Does not implicitly {@link injective.oracle.v1beta1.ProviderInfo.verify|verify} messages.
                 * @param message ProviderInfo message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.oracle.v1beta1.IProviderInfo, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ProviderInfo message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ProviderInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.oracle.v1beta1.ProviderInfo;

                /**
                 * Decodes a ProviderInfo message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ProviderInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.oracle.v1beta1.ProviderInfo;

                /**
                 * Verifies a ProviderInfo message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ProviderInfo message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ProviderInfo
                 */
                public static fromObject(object: { [k: string]: any }): injective.oracle.v1beta1.ProviderInfo;

                /**
                 * Creates a plain object from a ProviderInfo message. Also converts values to other types if specified.
                 * @param message ProviderInfo
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.oracle.v1beta1.ProviderInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ProviderInfo to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a ProviderState. */
            interface IProviderState {

                /** ProviderState provider_info */
                provider_info?: (injective.oracle.v1beta1.IProviderInfo|null);

                /** ProviderState provider_price_states */
                provider_price_states?: (injective.oracle.v1beta1.IProviderPriceState[]|null);
            }

            /** Represents a ProviderState. */
            class ProviderState implements IProviderState {

                /**
                 * Constructs a new ProviderState.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.oracle.v1beta1.IProviderState);

                /** ProviderState provider_info. */
                public provider_info?: (injective.oracle.v1beta1.IProviderInfo|null);

                /** ProviderState provider_price_states. */
                public provider_price_states: injective.oracle.v1beta1.IProviderPriceState[];

                /**
                 * Encodes the specified ProviderState message. Does not implicitly {@link injective.oracle.v1beta1.ProviderState.verify|verify} messages.
                 * @param message ProviderState message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.oracle.v1beta1.IProviderState, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ProviderState message, length delimited. Does not implicitly {@link injective.oracle.v1beta1.ProviderState.verify|verify} messages.
                 * @param message ProviderState message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.oracle.v1beta1.IProviderState, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ProviderState message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ProviderState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.oracle.v1beta1.ProviderState;

                /**
                 * Decodes a ProviderState message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ProviderState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.oracle.v1beta1.ProviderState;

                /**
                 * Verifies a ProviderState message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ProviderState message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ProviderState
                 */
                public static fromObject(object: { [k: string]: any }): injective.oracle.v1beta1.ProviderState;

                /**
                 * Creates a plain object from a ProviderState message. Also converts values to other types if specified.
                 * @param message ProviderState
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.oracle.v1beta1.ProviderState, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ProviderState to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a ProviderPriceState. */
            interface IProviderPriceState {

                /** ProviderPriceState symbol */
                symbol?: (string|null);

                /** ProviderPriceState state */
                state?: (injective.oracle.v1beta1.IPriceState|null);
            }

            /** Represents a ProviderPriceState. */
            class ProviderPriceState implements IProviderPriceState {

                /**
                 * Constructs a new ProviderPriceState.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.oracle.v1beta1.IProviderPriceState);

                /** ProviderPriceState symbol. */
                public symbol: string;

                /** ProviderPriceState state. */
                public state?: (injective.oracle.v1beta1.IPriceState|null);

                /**
                 * Encodes the specified ProviderPriceState message. Does not implicitly {@link injective.oracle.v1beta1.ProviderPriceState.verify|verify} messages.
                 * @param message ProviderPriceState message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.oracle.v1beta1.IProviderPriceState, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ProviderPriceState message, length delimited. Does not implicitly {@link injective.oracle.v1beta1.ProviderPriceState.verify|verify} messages.
                 * @param message ProviderPriceState message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.oracle.v1beta1.IProviderPriceState, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ProviderPriceState message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ProviderPriceState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.oracle.v1beta1.ProviderPriceState;

                /**
                 * Decodes a ProviderPriceState message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ProviderPriceState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.oracle.v1beta1.ProviderPriceState;

                /**
                 * Verifies a ProviderPriceState message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ProviderPriceState message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ProviderPriceState
                 */
                public static fromObject(object: { [k: string]: any }): injective.oracle.v1beta1.ProviderPriceState;

                /**
                 * Creates a plain object from a ProviderPriceState message. Also converts values to other types if specified.
                 * @param message ProviderPriceState
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.oracle.v1beta1.ProviderPriceState, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ProviderPriceState to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a PriceFeedInfo. */
            interface IPriceFeedInfo {

                /** PriceFeedInfo base */
                base?: (string|null);

                /** PriceFeedInfo quote */
                quote?: (string|null);
            }

            /** Represents a PriceFeedInfo. */
            class PriceFeedInfo implements IPriceFeedInfo {

                /**
                 * Constructs a new PriceFeedInfo.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.oracle.v1beta1.IPriceFeedInfo);

                /** PriceFeedInfo base. */
                public base: string;

                /** PriceFeedInfo quote. */
                public quote: string;

                /**
                 * Encodes the specified PriceFeedInfo message. Does not implicitly {@link injective.oracle.v1beta1.PriceFeedInfo.verify|verify} messages.
                 * @param message PriceFeedInfo message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.oracle.v1beta1.IPriceFeedInfo, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified PriceFeedInfo message, length delimited. Does not implicitly {@link injective.oracle.v1beta1.PriceFeedInfo.verify|verify} messages.
                 * @param message PriceFeedInfo message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.oracle.v1beta1.IPriceFeedInfo, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a PriceFeedInfo message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns PriceFeedInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.oracle.v1beta1.PriceFeedInfo;

                /**
                 * Decodes a PriceFeedInfo message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns PriceFeedInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.oracle.v1beta1.PriceFeedInfo;

                /**
                 * Verifies a PriceFeedInfo message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a PriceFeedInfo message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns PriceFeedInfo
                 */
                public static fromObject(object: { [k: string]: any }): injective.oracle.v1beta1.PriceFeedInfo;

                /**
                 * Creates a plain object from a PriceFeedInfo message. Also converts values to other types if specified.
                 * @param message PriceFeedInfo
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.oracle.v1beta1.PriceFeedInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this PriceFeedInfo to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a PriceFeedPrice. */
            interface IPriceFeedPrice {

                /** PriceFeedPrice price */
                price?: (string|null);
            }

            /** Represents a PriceFeedPrice. */
            class PriceFeedPrice implements IPriceFeedPrice {

                /**
                 * Constructs a new PriceFeedPrice.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.oracle.v1beta1.IPriceFeedPrice);

                /** PriceFeedPrice price. */
                public price: string;

                /**
                 * Encodes the specified PriceFeedPrice message. Does not implicitly {@link injective.oracle.v1beta1.PriceFeedPrice.verify|verify} messages.
                 * @param message PriceFeedPrice message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.oracle.v1beta1.IPriceFeedPrice, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified PriceFeedPrice message, length delimited. Does not implicitly {@link injective.oracle.v1beta1.PriceFeedPrice.verify|verify} messages.
                 * @param message PriceFeedPrice message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.oracle.v1beta1.IPriceFeedPrice, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a PriceFeedPrice message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns PriceFeedPrice
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.oracle.v1beta1.PriceFeedPrice;

                /**
                 * Decodes a PriceFeedPrice message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns PriceFeedPrice
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.oracle.v1beta1.PriceFeedPrice;

                /**
                 * Verifies a PriceFeedPrice message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a PriceFeedPrice message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns PriceFeedPrice
                 */
                public static fromObject(object: { [k: string]: any }): injective.oracle.v1beta1.PriceFeedPrice;

                /**
                 * Creates a plain object from a PriceFeedPrice message. Also converts values to other types if specified.
                 * @param message PriceFeedPrice
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.oracle.v1beta1.PriceFeedPrice, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this PriceFeedPrice to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a CoinbasePriceState. */
            interface ICoinbasePriceState {

                /** CoinbasePriceState kind */
                kind?: (string|null);

                /** CoinbasePriceState timestamp */
                timestamp?: (number|null);

                /** CoinbasePriceState key */
                key?: (string|null);

                /** CoinbasePriceState value */
                value?: (number|null);

                /** CoinbasePriceState price_state */
                price_state?: (injective.oracle.v1beta1.IPriceState|null);
            }

            /** Represents a CoinbasePriceState. */
            class CoinbasePriceState implements ICoinbasePriceState {

                /**
                 * Constructs a new CoinbasePriceState.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.oracle.v1beta1.ICoinbasePriceState);

                /** CoinbasePriceState kind. */
                public kind: string;

                /** CoinbasePriceState timestamp. */
                public timestamp: number;

                /** CoinbasePriceState key. */
                public key: string;

                /** CoinbasePriceState value. */
                public value: number;

                /** CoinbasePriceState price_state. */
                public price_state?: (injective.oracle.v1beta1.IPriceState|null);

                /**
                 * Encodes the specified CoinbasePriceState message. Does not implicitly {@link injective.oracle.v1beta1.CoinbasePriceState.verify|verify} messages.
                 * @param message CoinbasePriceState message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.oracle.v1beta1.ICoinbasePriceState, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified CoinbasePriceState message, length delimited. Does not implicitly {@link injective.oracle.v1beta1.CoinbasePriceState.verify|verify} messages.
                 * @param message CoinbasePriceState message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.oracle.v1beta1.ICoinbasePriceState, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a CoinbasePriceState message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns CoinbasePriceState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.oracle.v1beta1.CoinbasePriceState;

                /**
                 * Decodes a CoinbasePriceState message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns CoinbasePriceState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.oracle.v1beta1.CoinbasePriceState;

                /**
                 * Verifies a CoinbasePriceState message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a CoinbasePriceState message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns CoinbasePriceState
                 */
                public static fromObject(object: { [k: string]: any }): injective.oracle.v1beta1.CoinbasePriceState;

                /**
                 * Creates a plain object from a CoinbasePriceState message. Also converts values to other types if specified.
                 * @param message CoinbasePriceState
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.oracle.v1beta1.CoinbasePriceState, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this CoinbasePriceState to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a PriceState. */
            interface IPriceState {

                /** PriceState price */
                price?: (string|null);

                /** PriceState cumulative_price */
                cumulative_price?: (string|null);

                /** PriceState timestamp */
                timestamp?: (number|null);
            }

            /** Represents a PriceState. */
            class PriceState implements IPriceState {

                /**
                 * Constructs a new PriceState.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.oracle.v1beta1.IPriceState);

                /** PriceState price. */
                public price: string;

                /** PriceState cumulative_price. */
                public cumulative_price: string;

                /** PriceState timestamp. */
                public timestamp: number;

                /**
                 * Encodes the specified PriceState message. Does not implicitly {@link injective.oracle.v1beta1.PriceState.verify|verify} messages.
                 * @param message PriceState message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.oracle.v1beta1.IPriceState, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified PriceState message, length delimited. Does not implicitly {@link injective.oracle.v1beta1.PriceState.verify|verify} messages.
                 * @param message PriceState message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.oracle.v1beta1.IPriceState, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a PriceState message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns PriceState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.oracle.v1beta1.PriceState;

                /**
                 * Decodes a PriceState message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns PriceState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.oracle.v1beta1.PriceState;

                /**
                 * Verifies a PriceState message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a PriceState message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns PriceState
                 */
                public static fromObject(object: { [k: string]: any }): injective.oracle.v1beta1.PriceState;

                /**
                 * Creates a plain object from a PriceState message. Also converts values to other types if specified.
                 * @param message PriceState
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.oracle.v1beta1.PriceState, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this PriceState to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a PythPriceState. */
            interface IPythPriceState {

                /** PythPriceState price_id */
                price_id?: (string|null);

                /** PythPriceState ema_price */
                ema_price?: (string|null);

                /** PythPriceState ema_conf */
                ema_conf?: (string|null);

                /** PythPriceState conf */
                conf?: (string|null);

                /** PythPriceState publish_time */
                publish_time?: (number|null);

                /** PythPriceState price_state */
                price_state?: (injective.oracle.v1beta1.IPriceState|null);
            }

            /** Represents a PythPriceState. */
            class PythPriceState implements IPythPriceState {

                /**
                 * Constructs a new PythPriceState.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.oracle.v1beta1.IPythPriceState);

                /** PythPriceState price_id. */
                public price_id: string;

                /** PythPriceState ema_price. */
                public ema_price: string;

                /** PythPriceState ema_conf. */
                public ema_conf: string;

                /** PythPriceState conf. */
                public conf: string;

                /** PythPriceState publish_time. */
                public publish_time: number;

                /** PythPriceState price_state. */
                public price_state?: (injective.oracle.v1beta1.IPriceState|null);

                /**
                 * Encodes the specified PythPriceState message. Does not implicitly {@link injective.oracle.v1beta1.PythPriceState.verify|verify} messages.
                 * @param message PythPriceState message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.oracle.v1beta1.IPythPriceState, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified PythPriceState message, length delimited. Does not implicitly {@link injective.oracle.v1beta1.PythPriceState.verify|verify} messages.
                 * @param message PythPriceState message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.oracle.v1beta1.IPythPriceState, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a PythPriceState message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns PythPriceState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.oracle.v1beta1.PythPriceState;

                /**
                 * Decodes a PythPriceState message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns PythPriceState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.oracle.v1beta1.PythPriceState;

                /**
                 * Verifies a PythPriceState message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a PythPriceState message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns PythPriceState
                 */
                public static fromObject(object: { [k: string]: any }): injective.oracle.v1beta1.PythPriceState;

                /**
                 * Creates a plain object from a PythPriceState message. Also converts values to other types if specified.
                 * @param message PythPriceState
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.oracle.v1beta1.PythPriceState, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this PythPriceState to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a BandOracleRequest. */
            interface IBandOracleRequest {

                /** BandOracleRequest request_id */
                request_id?: (number|null);

                /** BandOracleRequest oracle_script_id */
                oracle_script_id?: (number|null);

                /** BandOracleRequest symbols */
                symbols?: (string[]|null);

                /** BandOracleRequest ask_count */
                ask_count?: (number|null);

                /** BandOracleRequest min_count */
                min_count?: (number|null);

                /** BandOracleRequest fee_limit */
                fee_limit?: (cosmos.base.v1beta1.ICoin[]|null);

                /** BandOracleRequest prepare_gas */
                prepare_gas?: (number|null);

                /** BandOracleRequest execute_gas */
                execute_gas?: (number|null);

                /** BandOracleRequest min_source_count */
                min_source_count?: (number|null);
            }

            /** Represents a BandOracleRequest. */
            class BandOracleRequest implements IBandOracleRequest {

                /**
                 * Constructs a new BandOracleRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.oracle.v1beta1.IBandOracleRequest);

                /** BandOracleRequest request_id. */
                public request_id: number;

                /** BandOracleRequest oracle_script_id. */
                public oracle_script_id: number;

                /** BandOracleRequest symbols. */
                public symbols: string[];

                /** BandOracleRequest ask_count. */
                public ask_count: number;

                /** BandOracleRequest min_count. */
                public min_count: number;

                /** BandOracleRequest fee_limit. */
                public fee_limit: cosmos.base.v1beta1.ICoin[];

                /** BandOracleRequest prepare_gas. */
                public prepare_gas: number;

                /** BandOracleRequest execute_gas. */
                public execute_gas: number;

                /** BandOracleRequest min_source_count. */
                public min_source_count: number;

                /**
                 * Encodes the specified BandOracleRequest message. Does not implicitly {@link injective.oracle.v1beta1.BandOracleRequest.verify|verify} messages.
                 * @param message BandOracleRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.oracle.v1beta1.IBandOracleRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified BandOracleRequest message, length delimited. Does not implicitly {@link injective.oracle.v1beta1.BandOracleRequest.verify|verify} messages.
                 * @param message BandOracleRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.oracle.v1beta1.IBandOracleRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a BandOracleRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns BandOracleRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.oracle.v1beta1.BandOracleRequest;

                /**
                 * Decodes a BandOracleRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns BandOracleRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.oracle.v1beta1.BandOracleRequest;

                /**
                 * Verifies a BandOracleRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a BandOracleRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns BandOracleRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.oracle.v1beta1.BandOracleRequest;

                /**
                 * Creates a plain object from a BandOracleRequest message. Also converts values to other types if specified.
                 * @param message BandOracleRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.oracle.v1beta1.BandOracleRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this BandOracleRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a BandIBCParams. */
            interface IBandIBCParams {

                /** BandIBCParams band_ibc_enabled */
                band_ibc_enabled?: (boolean|null);

                /** BandIBCParams ibc_request_interval */
                ibc_request_interval?: (number|null);

                /** BandIBCParams ibc_source_channel */
                ibc_source_channel?: (string|null);

                /** BandIBCParams ibc_version */
                ibc_version?: (string|null);

                /** BandIBCParams ibc_port_id */
                ibc_port_id?: (string|null);

                /** BandIBCParams legacy_oracle_ids */
                legacy_oracle_ids?: (number[]|null);
            }

            /** Represents a BandIBCParams. */
            class BandIBCParams implements IBandIBCParams {

                /**
                 * Constructs a new BandIBCParams.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.oracle.v1beta1.IBandIBCParams);

                /** BandIBCParams band_ibc_enabled. */
                public band_ibc_enabled: boolean;

                /** BandIBCParams ibc_request_interval. */
                public ibc_request_interval: number;

                /** BandIBCParams ibc_source_channel. */
                public ibc_source_channel: string;

                /** BandIBCParams ibc_version. */
                public ibc_version: string;

                /** BandIBCParams ibc_port_id. */
                public ibc_port_id: string;

                /** BandIBCParams legacy_oracle_ids. */
                public legacy_oracle_ids: number[];

                /**
                 * Encodes the specified BandIBCParams message. Does not implicitly {@link injective.oracle.v1beta1.BandIBCParams.verify|verify} messages.
                 * @param message BandIBCParams message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.oracle.v1beta1.IBandIBCParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified BandIBCParams message, length delimited. Does not implicitly {@link injective.oracle.v1beta1.BandIBCParams.verify|verify} messages.
                 * @param message BandIBCParams message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.oracle.v1beta1.IBandIBCParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a BandIBCParams message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns BandIBCParams
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.oracle.v1beta1.BandIBCParams;

                /**
                 * Decodes a BandIBCParams message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns BandIBCParams
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.oracle.v1beta1.BandIBCParams;

                /**
                 * Verifies a BandIBCParams message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a BandIBCParams message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns BandIBCParams
                 */
                public static fromObject(object: { [k: string]: any }): injective.oracle.v1beta1.BandIBCParams;

                /**
                 * Creates a plain object from a BandIBCParams message. Also converts values to other types if specified.
                 * @param message BandIBCParams
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.oracle.v1beta1.BandIBCParams, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this BandIBCParams to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a SymbolPriceTimestamp. */
            interface ISymbolPriceTimestamp {

                /** SymbolPriceTimestamp oracle */
                oracle?: (injective.oracle.v1beta1.OracleType|null);

                /** SymbolPriceTimestamp symbol_id */
                symbol_id?: (string|null);

                /** SymbolPriceTimestamp timestamp */
                timestamp?: (number|null);
            }

            /** Represents a SymbolPriceTimestamp. */
            class SymbolPriceTimestamp implements ISymbolPriceTimestamp {

                /**
                 * Constructs a new SymbolPriceTimestamp.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.oracle.v1beta1.ISymbolPriceTimestamp);

                /** SymbolPriceTimestamp oracle. */
                public oracle: injective.oracle.v1beta1.OracleType;

                /** SymbolPriceTimestamp symbol_id. */
                public symbol_id: string;

                /** SymbolPriceTimestamp timestamp. */
                public timestamp: number;

                /**
                 * Encodes the specified SymbolPriceTimestamp message. Does not implicitly {@link injective.oracle.v1beta1.SymbolPriceTimestamp.verify|verify} messages.
                 * @param message SymbolPriceTimestamp message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.oracle.v1beta1.ISymbolPriceTimestamp, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified SymbolPriceTimestamp message, length delimited. Does not implicitly {@link injective.oracle.v1beta1.SymbolPriceTimestamp.verify|verify} messages.
                 * @param message SymbolPriceTimestamp message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.oracle.v1beta1.ISymbolPriceTimestamp, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a SymbolPriceTimestamp message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns SymbolPriceTimestamp
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.oracle.v1beta1.SymbolPriceTimestamp;

                /**
                 * Decodes a SymbolPriceTimestamp message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns SymbolPriceTimestamp
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.oracle.v1beta1.SymbolPriceTimestamp;

                /**
                 * Verifies a SymbolPriceTimestamp message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a SymbolPriceTimestamp message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns SymbolPriceTimestamp
                 */
                public static fromObject(object: { [k: string]: any }): injective.oracle.v1beta1.SymbolPriceTimestamp;

                /**
                 * Creates a plain object from a SymbolPriceTimestamp message. Also converts values to other types if specified.
                 * @param message SymbolPriceTimestamp
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.oracle.v1beta1.SymbolPriceTimestamp, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this SymbolPriceTimestamp to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a LastPriceTimestamps. */
            interface ILastPriceTimestamps {

                /** LastPriceTimestamps last_price_timestamps */
                last_price_timestamps?: (injective.oracle.v1beta1.ISymbolPriceTimestamp[]|null);
            }

            /** Represents a LastPriceTimestamps. */
            class LastPriceTimestamps implements ILastPriceTimestamps {

                /**
                 * Constructs a new LastPriceTimestamps.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.oracle.v1beta1.ILastPriceTimestamps);

                /** LastPriceTimestamps last_price_timestamps. */
                public last_price_timestamps: injective.oracle.v1beta1.ISymbolPriceTimestamp[];

                /**
                 * Encodes the specified LastPriceTimestamps message. Does not implicitly {@link injective.oracle.v1beta1.LastPriceTimestamps.verify|verify} messages.
                 * @param message LastPriceTimestamps message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.oracle.v1beta1.ILastPriceTimestamps, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified LastPriceTimestamps message, length delimited. Does not implicitly {@link injective.oracle.v1beta1.LastPriceTimestamps.verify|verify} messages.
                 * @param message LastPriceTimestamps message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.oracle.v1beta1.ILastPriceTimestamps, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a LastPriceTimestamps message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns LastPriceTimestamps
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.oracle.v1beta1.LastPriceTimestamps;

                /**
                 * Decodes a LastPriceTimestamps message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns LastPriceTimestamps
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.oracle.v1beta1.LastPriceTimestamps;

                /**
                 * Verifies a LastPriceTimestamps message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a LastPriceTimestamps message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns LastPriceTimestamps
                 */
                public static fromObject(object: { [k: string]: any }): injective.oracle.v1beta1.LastPriceTimestamps;

                /**
                 * Creates a plain object from a LastPriceTimestamps message. Also converts values to other types if specified.
                 * @param message LastPriceTimestamps
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.oracle.v1beta1.LastPriceTimestamps, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this LastPriceTimestamps to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a PriceRecords. */
            interface IPriceRecords {

                /** PriceRecords oracle */
                oracle?: (injective.oracle.v1beta1.OracleType|null);

                /** PriceRecords symbol_id */
                symbol_id?: (string|null);

                /** PriceRecords latest_price_records */
                latest_price_records?: (injective.oracle.v1beta1.IPriceRecord[]|null);
            }

            /** Represents a PriceRecords. */
            class PriceRecords implements IPriceRecords {

                /**
                 * Constructs a new PriceRecords.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.oracle.v1beta1.IPriceRecords);

                /** PriceRecords oracle. */
                public oracle: injective.oracle.v1beta1.OracleType;

                /** PriceRecords symbol_id. */
                public symbol_id: string;

                /** PriceRecords latest_price_records. */
                public latest_price_records: injective.oracle.v1beta1.IPriceRecord[];

                /**
                 * Encodes the specified PriceRecords message. Does not implicitly {@link injective.oracle.v1beta1.PriceRecords.verify|verify} messages.
                 * @param message PriceRecords message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.oracle.v1beta1.IPriceRecords, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified PriceRecords message, length delimited. Does not implicitly {@link injective.oracle.v1beta1.PriceRecords.verify|verify} messages.
                 * @param message PriceRecords message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.oracle.v1beta1.IPriceRecords, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a PriceRecords message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns PriceRecords
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.oracle.v1beta1.PriceRecords;

                /**
                 * Decodes a PriceRecords message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns PriceRecords
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.oracle.v1beta1.PriceRecords;

                /**
                 * Verifies a PriceRecords message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a PriceRecords message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns PriceRecords
                 */
                public static fromObject(object: { [k: string]: any }): injective.oracle.v1beta1.PriceRecords;

                /**
                 * Creates a plain object from a PriceRecords message. Also converts values to other types if specified.
                 * @param message PriceRecords
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.oracle.v1beta1.PriceRecords, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this PriceRecords to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a PriceRecord. */
            interface IPriceRecord {

                /** PriceRecord timestamp */
                timestamp?: (number|null);

                /** PriceRecord price */
                price?: (string|null);
            }

            /** Represents a PriceRecord. */
            class PriceRecord implements IPriceRecord {

                /**
                 * Constructs a new PriceRecord.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.oracle.v1beta1.IPriceRecord);

                /** PriceRecord timestamp. */
                public timestamp: number;

                /** PriceRecord price. */
                public price: string;

                /**
                 * Encodes the specified PriceRecord message. Does not implicitly {@link injective.oracle.v1beta1.PriceRecord.verify|verify} messages.
                 * @param message PriceRecord message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.oracle.v1beta1.IPriceRecord, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified PriceRecord message, length delimited. Does not implicitly {@link injective.oracle.v1beta1.PriceRecord.verify|verify} messages.
                 * @param message PriceRecord message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.oracle.v1beta1.IPriceRecord, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a PriceRecord message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns PriceRecord
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.oracle.v1beta1.PriceRecord;

                /**
                 * Decodes a PriceRecord message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns PriceRecord
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.oracle.v1beta1.PriceRecord;

                /**
                 * Verifies a PriceRecord message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a PriceRecord message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns PriceRecord
                 */
                public static fromObject(object: { [k: string]: any }): injective.oracle.v1beta1.PriceRecord;

                /**
                 * Creates a plain object from a PriceRecord message. Also converts values to other types if specified.
                 * @param message PriceRecord
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.oracle.v1beta1.PriceRecord, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this PriceRecord to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MetadataStatistics. */
            interface IMetadataStatistics {

                /** MetadataStatistics group_count */
                group_count?: (number|null);

                /** MetadataStatistics records_sample_size */
                records_sample_size?: (number|null);

                /** MetadataStatistics mean */
                mean?: (string|null);

                /** MetadataStatistics twap */
                twap?: (string|null);

                /** MetadataStatistics first_timestamp */
                first_timestamp?: (number|null);

                /** MetadataStatistics last_timestamp */
                last_timestamp?: (number|null);

                /** MetadataStatistics min_price */
                min_price?: (string|null);

                /** MetadataStatistics max_price */
                max_price?: (string|null);

                /** MetadataStatistics median_price */
                median_price?: (string|null);
            }

            /** Represents a MetadataStatistics. */
            class MetadataStatistics implements IMetadataStatistics {

                /**
                 * Constructs a new MetadataStatistics.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.oracle.v1beta1.IMetadataStatistics);

                /** MetadataStatistics group_count. */
                public group_count: number;

                /** MetadataStatistics records_sample_size. */
                public records_sample_size: number;

                /** MetadataStatistics mean. */
                public mean: string;

                /** MetadataStatistics twap. */
                public twap: string;

                /** MetadataStatistics first_timestamp. */
                public first_timestamp: number;

                /** MetadataStatistics last_timestamp. */
                public last_timestamp: number;

                /** MetadataStatistics min_price. */
                public min_price: string;

                /** MetadataStatistics max_price. */
                public max_price: string;

                /** MetadataStatistics median_price. */
                public median_price: string;

                /**
                 * Encodes the specified MetadataStatistics message. Does not implicitly {@link injective.oracle.v1beta1.MetadataStatistics.verify|verify} messages.
                 * @param message MetadataStatistics message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.oracle.v1beta1.IMetadataStatistics, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MetadataStatistics message, length delimited. Does not implicitly {@link injective.oracle.v1beta1.MetadataStatistics.verify|verify} messages.
                 * @param message MetadataStatistics message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.oracle.v1beta1.IMetadataStatistics, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MetadataStatistics message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MetadataStatistics
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.oracle.v1beta1.MetadataStatistics;

                /**
                 * Decodes a MetadataStatistics message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MetadataStatistics
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.oracle.v1beta1.MetadataStatistics;

                /**
                 * Verifies a MetadataStatistics message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MetadataStatistics message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MetadataStatistics
                 */
                public static fromObject(object: { [k: string]: any }): injective.oracle.v1beta1.MetadataStatistics;

                /**
                 * Creates a plain object from a MetadataStatistics message. Also converts values to other types if specified.
                 * @param message MetadataStatistics
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.oracle.v1beta1.MetadataStatistics, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MetadataStatistics to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a PriceAttestation. */
            interface IPriceAttestation {

                /** PriceAttestation price_id */
                price_id?: (string|null);

                /** PriceAttestation price */
                price?: (number|null);

                /** PriceAttestation conf */
                conf?: (number|null);

                /** PriceAttestation expo */
                expo?: (number|null);

                /** PriceAttestation ema_price */
                ema_price?: (number|null);

                /** PriceAttestation ema_conf */
                ema_conf?: (number|null);

                /** PriceAttestation ema_expo */
                ema_expo?: (number|null);

                /** PriceAttestation publish_time */
                publish_time?: (number|null);
            }

            /** Represents a PriceAttestation. */
            class PriceAttestation implements IPriceAttestation {

                /**
                 * Constructs a new PriceAttestation.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.oracle.v1beta1.IPriceAttestation);

                /** PriceAttestation price_id. */
                public price_id: string;

                /** PriceAttestation price. */
                public price: number;

                /** PriceAttestation conf. */
                public conf: number;

                /** PriceAttestation expo. */
                public expo: number;

                /** PriceAttestation ema_price. */
                public ema_price: number;

                /** PriceAttestation ema_conf. */
                public ema_conf: number;

                /** PriceAttestation ema_expo. */
                public ema_expo: number;

                /** PriceAttestation publish_time. */
                public publish_time: number;

                /**
                 * Encodes the specified PriceAttestation message. Does not implicitly {@link injective.oracle.v1beta1.PriceAttestation.verify|verify} messages.
                 * @param message PriceAttestation message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.oracle.v1beta1.IPriceAttestation, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified PriceAttestation message, length delimited. Does not implicitly {@link injective.oracle.v1beta1.PriceAttestation.verify|verify} messages.
                 * @param message PriceAttestation message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.oracle.v1beta1.IPriceAttestation, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a PriceAttestation message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns PriceAttestation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.oracle.v1beta1.PriceAttestation;

                /**
                 * Decodes a PriceAttestation message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns PriceAttestation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.oracle.v1beta1.PriceAttestation;

                /**
                 * Verifies a PriceAttestation message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a PriceAttestation message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns PriceAttestation
                 */
                public static fromObject(object: { [k: string]: any }): injective.oracle.v1beta1.PriceAttestation;

                /**
                 * Creates a plain object from a PriceAttestation message. Also converts values to other types if specified.
                 * @param message PriceAttestation
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.oracle.v1beta1.PriceAttestation, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this PriceAttestation to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Represents a Msg */
            class Msg extends $protobuf.rpc.Service {

                /**
                 * Constructs a new Msg service.
                 * @param rpcImpl RPC implementation
                 * @param [requestDelimited=false] Whether requests are length-delimited
                 * @param [responseDelimited=false] Whether responses are length-delimited
                 */
                constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

                /**
                 * Calls RelayProviderPrices.
                 * @param request MsgRelayProviderPrices message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgRelayProviderPricesResponse
                 */
                public relayProviderPrices(request: injective.oracle.v1beta1.IMsgRelayProviderPrices, callback: injective.oracle.v1beta1.Msg.RelayProviderPricesCallback): void;

                /**
                 * Calls RelayProviderPrices.
                 * @param request MsgRelayProviderPrices message or plain object
                 * @returns Promise
                 */
                public relayProviderPrices(request: injective.oracle.v1beta1.IMsgRelayProviderPrices): Promise<injective.oracle.v1beta1.MsgRelayProviderPricesResponse>;

                /**
                 * Calls RelayPriceFeedPrice.
                 * @param request MsgRelayPriceFeedPrice message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgRelayPriceFeedPriceResponse
                 */
                public relayPriceFeedPrice(request: injective.oracle.v1beta1.IMsgRelayPriceFeedPrice, callback: injective.oracle.v1beta1.Msg.RelayPriceFeedPriceCallback): void;

                /**
                 * Calls RelayPriceFeedPrice.
                 * @param request MsgRelayPriceFeedPrice message or plain object
                 * @returns Promise
                 */
                public relayPriceFeedPrice(request: injective.oracle.v1beta1.IMsgRelayPriceFeedPrice): Promise<injective.oracle.v1beta1.MsgRelayPriceFeedPriceResponse>;

                /**
                 * Calls RelayBandRates.
                 * @param request MsgRelayBandRates message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgRelayBandRatesResponse
                 */
                public relayBandRates(request: injective.oracle.v1beta1.IMsgRelayBandRates, callback: injective.oracle.v1beta1.Msg.RelayBandRatesCallback): void;

                /**
                 * Calls RelayBandRates.
                 * @param request MsgRelayBandRates message or plain object
                 * @returns Promise
                 */
                public relayBandRates(request: injective.oracle.v1beta1.IMsgRelayBandRates): Promise<injective.oracle.v1beta1.MsgRelayBandRatesResponse>;

                /**
                 * Calls RequestBandIBCRates.
                 * @param request MsgRequestBandIBCRates message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgRequestBandIBCRatesResponse
                 */
                public requestBandIBCRates(request: injective.oracle.v1beta1.IMsgRequestBandIBCRates, callback: injective.oracle.v1beta1.Msg.RequestBandIBCRatesCallback): void;

                /**
                 * Calls RequestBandIBCRates.
                 * @param request MsgRequestBandIBCRates message or plain object
                 * @returns Promise
                 */
                public requestBandIBCRates(request: injective.oracle.v1beta1.IMsgRequestBandIBCRates): Promise<injective.oracle.v1beta1.MsgRequestBandIBCRatesResponse>;

                /**
                 * Calls RelayCoinbaseMessages.
                 * @param request MsgRelayCoinbaseMessages message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgRelayCoinbaseMessagesResponse
                 */
                public relayCoinbaseMessages(request: injective.oracle.v1beta1.IMsgRelayCoinbaseMessages, callback: injective.oracle.v1beta1.Msg.RelayCoinbaseMessagesCallback): void;

                /**
                 * Calls RelayCoinbaseMessages.
                 * @param request MsgRelayCoinbaseMessages message or plain object
                 * @returns Promise
                 */
                public relayCoinbaseMessages(request: injective.oracle.v1beta1.IMsgRelayCoinbaseMessages): Promise<injective.oracle.v1beta1.MsgRelayCoinbaseMessagesResponse>;

                /**
                 * Calls RelayPythPrices.
                 * @param request MsgRelayPythPrices message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgRelayPythPricesResponse
                 */
                public relayPythPrices(request: injective.oracle.v1beta1.IMsgRelayPythPrices, callback: injective.oracle.v1beta1.Msg.RelayPythPricesCallback): void;

                /**
                 * Calls RelayPythPrices.
                 * @param request MsgRelayPythPrices message or plain object
                 * @returns Promise
                 */
                public relayPythPrices(request: injective.oracle.v1beta1.IMsgRelayPythPrices): Promise<injective.oracle.v1beta1.MsgRelayPythPricesResponse>;

                /**
                 * Calls UpdateParams.
                 * @param request MsgUpdateParams message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgUpdateParamsResponse
                 */
                public updateParams(request: injective.oracle.v1beta1.IMsgUpdateParams, callback: injective.oracle.v1beta1.Msg.UpdateParamsCallback): void;

                /**
                 * Calls UpdateParams.
                 * @param request MsgUpdateParams message or plain object
                 * @returns Promise
                 */
                public updateParams(request: injective.oracle.v1beta1.IMsgUpdateParams): Promise<injective.oracle.v1beta1.MsgUpdateParamsResponse>;
            }

            namespace Msg {

                /**
                 * Callback as used by {@link injective.oracle.v1beta1.Msg#relayProviderPrices}.
                 * @param error Error, if any
                 * @param [response] MsgRelayProviderPricesResponse
                 */
                type RelayProviderPricesCallback = (error: (Error|null), response?: injective.oracle.v1beta1.MsgRelayProviderPricesResponse) => void;

                /**
                 * Callback as used by {@link injective.oracle.v1beta1.Msg#relayPriceFeedPrice}.
                 * @param error Error, if any
                 * @param [response] MsgRelayPriceFeedPriceResponse
                 */
                type RelayPriceFeedPriceCallback = (error: (Error|null), response?: injective.oracle.v1beta1.MsgRelayPriceFeedPriceResponse) => void;

                /**
                 * Callback as used by {@link injective.oracle.v1beta1.Msg#relayBandRates}.
                 * @param error Error, if any
                 * @param [response] MsgRelayBandRatesResponse
                 */
                type RelayBandRatesCallback = (error: (Error|null), response?: injective.oracle.v1beta1.MsgRelayBandRatesResponse) => void;

                /**
                 * Callback as used by {@link injective.oracle.v1beta1.Msg#requestBandIBCRates}.
                 * @param error Error, if any
                 * @param [response] MsgRequestBandIBCRatesResponse
                 */
                type RequestBandIBCRatesCallback = (error: (Error|null), response?: injective.oracle.v1beta1.MsgRequestBandIBCRatesResponse) => void;

                /**
                 * Callback as used by {@link injective.oracle.v1beta1.Msg#relayCoinbaseMessages}.
                 * @param error Error, if any
                 * @param [response] MsgRelayCoinbaseMessagesResponse
                 */
                type RelayCoinbaseMessagesCallback = (error: (Error|null), response?: injective.oracle.v1beta1.MsgRelayCoinbaseMessagesResponse) => void;

                /**
                 * Callback as used by {@link injective.oracle.v1beta1.Msg#relayPythPrices}.
                 * @param error Error, if any
                 * @param [response] MsgRelayPythPricesResponse
                 */
                type RelayPythPricesCallback = (error: (Error|null), response?: injective.oracle.v1beta1.MsgRelayPythPricesResponse) => void;

                /**
                 * Callback as used by {@link injective.oracle.v1beta1.Msg#updateParams}.
                 * @param error Error, if any
                 * @param [response] MsgUpdateParamsResponse
                 */
                type UpdateParamsCallback = (error: (Error|null), response?: injective.oracle.v1beta1.MsgUpdateParamsResponse) => void;
            }

            /** Properties of a MsgRelayProviderPrices. */
            interface IMsgRelayProviderPrices {

                /** MsgRelayProviderPrices sender */
                sender?: (string|null);

                /** MsgRelayProviderPrices provider */
                provider?: (string|null);

                /** MsgRelayProviderPrices symbols */
                symbols?: (string[]|null);

                /** MsgRelayProviderPrices prices */
                prices?: (string[]|null);
            }

            /** Represents a MsgRelayProviderPrices. */
            class MsgRelayProviderPrices implements IMsgRelayProviderPrices {

                /**
                 * Constructs a new MsgRelayProviderPrices.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.oracle.v1beta1.IMsgRelayProviderPrices);

                /** MsgRelayProviderPrices sender. */
                public sender: string;

                /** MsgRelayProviderPrices provider. */
                public provider: string;

                /** MsgRelayProviderPrices symbols. */
                public symbols: string[];

                /** MsgRelayProviderPrices prices. */
                public prices: string[];

                /**
                 * Encodes the specified MsgRelayProviderPrices message. Does not implicitly {@link injective.oracle.v1beta1.MsgRelayProviderPrices.verify|verify} messages.
                 * @param message MsgRelayProviderPrices message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.oracle.v1beta1.IMsgRelayProviderPrices, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgRelayProviderPrices message, length delimited. Does not implicitly {@link injective.oracle.v1beta1.MsgRelayProviderPrices.verify|verify} messages.
                 * @param message MsgRelayProviderPrices message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.oracle.v1beta1.IMsgRelayProviderPrices, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgRelayProviderPrices message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgRelayProviderPrices
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.oracle.v1beta1.MsgRelayProviderPrices;

                /**
                 * Decodes a MsgRelayProviderPrices message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgRelayProviderPrices
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.oracle.v1beta1.MsgRelayProviderPrices;

                /**
                 * Verifies a MsgRelayProviderPrices message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgRelayProviderPrices message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgRelayProviderPrices
                 */
                public static fromObject(object: { [k: string]: any }): injective.oracle.v1beta1.MsgRelayProviderPrices;

                /**
                 * Creates a plain object from a MsgRelayProviderPrices message. Also converts values to other types if specified.
                 * @param message MsgRelayProviderPrices
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.oracle.v1beta1.MsgRelayProviderPrices, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgRelayProviderPrices to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgRelayProviderPricesResponse. */
            interface IMsgRelayProviderPricesResponse {
            }

            /** Represents a MsgRelayProviderPricesResponse. */
            class MsgRelayProviderPricesResponse implements IMsgRelayProviderPricesResponse {

                /**
                 * Constructs a new MsgRelayProviderPricesResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.oracle.v1beta1.IMsgRelayProviderPricesResponse);

                /**
                 * Encodes the specified MsgRelayProviderPricesResponse message. Does not implicitly {@link injective.oracle.v1beta1.MsgRelayProviderPricesResponse.verify|verify} messages.
                 * @param message MsgRelayProviderPricesResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.oracle.v1beta1.IMsgRelayProviderPricesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgRelayProviderPricesResponse message, length delimited. Does not implicitly {@link injective.oracle.v1beta1.MsgRelayProviderPricesResponse.verify|verify} messages.
                 * @param message MsgRelayProviderPricesResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.oracle.v1beta1.IMsgRelayProviderPricesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgRelayProviderPricesResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgRelayProviderPricesResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.oracle.v1beta1.MsgRelayProviderPricesResponse;

                /**
                 * Decodes a MsgRelayProviderPricesResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgRelayProviderPricesResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.oracle.v1beta1.MsgRelayProviderPricesResponse;

                /**
                 * Verifies a MsgRelayProviderPricesResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgRelayProviderPricesResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgRelayProviderPricesResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.oracle.v1beta1.MsgRelayProviderPricesResponse;

                /**
                 * Creates a plain object from a MsgRelayProviderPricesResponse message. Also converts values to other types if specified.
                 * @param message MsgRelayProviderPricesResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.oracle.v1beta1.MsgRelayProviderPricesResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgRelayProviderPricesResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgRelayPriceFeedPrice. */
            interface IMsgRelayPriceFeedPrice {

                /** MsgRelayPriceFeedPrice sender */
                sender?: (string|null);

                /** MsgRelayPriceFeedPrice base */
                base?: (string[]|null);

                /** MsgRelayPriceFeedPrice quote */
                quote?: (string[]|null);

                /** MsgRelayPriceFeedPrice price */
                price?: (string[]|null);
            }

            /** Represents a MsgRelayPriceFeedPrice. */
            class MsgRelayPriceFeedPrice implements IMsgRelayPriceFeedPrice {

                /**
                 * Constructs a new MsgRelayPriceFeedPrice.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.oracle.v1beta1.IMsgRelayPriceFeedPrice);

                /** MsgRelayPriceFeedPrice sender. */
                public sender: string;

                /** MsgRelayPriceFeedPrice base. */
                public base: string[];

                /** MsgRelayPriceFeedPrice quote. */
                public quote: string[];

                /** MsgRelayPriceFeedPrice price. */
                public price: string[];

                /**
                 * Encodes the specified MsgRelayPriceFeedPrice message. Does not implicitly {@link injective.oracle.v1beta1.MsgRelayPriceFeedPrice.verify|verify} messages.
                 * @param message MsgRelayPriceFeedPrice message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.oracle.v1beta1.IMsgRelayPriceFeedPrice, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgRelayPriceFeedPrice message, length delimited. Does not implicitly {@link injective.oracle.v1beta1.MsgRelayPriceFeedPrice.verify|verify} messages.
                 * @param message MsgRelayPriceFeedPrice message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.oracle.v1beta1.IMsgRelayPriceFeedPrice, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgRelayPriceFeedPrice message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgRelayPriceFeedPrice
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.oracle.v1beta1.MsgRelayPriceFeedPrice;

                /**
                 * Decodes a MsgRelayPriceFeedPrice message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgRelayPriceFeedPrice
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.oracle.v1beta1.MsgRelayPriceFeedPrice;

                /**
                 * Verifies a MsgRelayPriceFeedPrice message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgRelayPriceFeedPrice message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgRelayPriceFeedPrice
                 */
                public static fromObject(object: { [k: string]: any }): injective.oracle.v1beta1.MsgRelayPriceFeedPrice;

                /**
                 * Creates a plain object from a MsgRelayPriceFeedPrice message. Also converts values to other types if specified.
                 * @param message MsgRelayPriceFeedPrice
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.oracle.v1beta1.MsgRelayPriceFeedPrice, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgRelayPriceFeedPrice to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgRelayPriceFeedPriceResponse. */
            interface IMsgRelayPriceFeedPriceResponse {
            }

            /** Represents a MsgRelayPriceFeedPriceResponse. */
            class MsgRelayPriceFeedPriceResponse implements IMsgRelayPriceFeedPriceResponse {

                /**
                 * Constructs a new MsgRelayPriceFeedPriceResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.oracle.v1beta1.IMsgRelayPriceFeedPriceResponse);

                /**
                 * Encodes the specified MsgRelayPriceFeedPriceResponse message. Does not implicitly {@link injective.oracle.v1beta1.MsgRelayPriceFeedPriceResponse.verify|verify} messages.
                 * @param message MsgRelayPriceFeedPriceResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.oracle.v1beta1.IMsgRelayPriceFeedPriceResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgRelayPriceFeedPriceResponse message, length delimited. Does not implicitly {@link injective.oracle.v1beta1.MsgRelayPriceFeedPriceResponse.verify|verify} messages.
                 * @param message MsgRelayPriceFeedPriceResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.oracle.v1beta1.IMsgRelayPriceFeedPriceResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgRelayPriceFeedPriceResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgRelayPriceFeedPriceResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.oracle.v1beta1.MsgRelayPriceFeedPriceResponse;

                /**
                 * Decodes a MsgRelayPriceFeedPriceResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgRelayPriceFeedPriceResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.oracle.v1beta1.MsgRelayPriceFeedPriceResponse;

                /**
                 * Verifies a MsgRelayPriceFeedPriceResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgRelayPriceFeedPriceResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgRelayPriceFeedPriceResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.oracle.v1beta1.MsgRelayPriceFeedPriceResponse;

                /**
                 * Creates a plain object from a MsgRelayPriceFeedPriceResponse message. Also converts values to other types if specified.
                 * @param message MsgRelayPriceFeedPriceResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.oracle.v1beta1.MsgRelayPriceFeedPriceResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgRelayPriceFeedPriceResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgRelayBandRates. */
            interface IMsgRelayBandRates {

                /** MsgRelayBandRates relayer */
                relayer?: (string|null);

                /** MsgRelayBandRates symbols */
                symbols?: (string[]|null);

                /** MsgRelayBandRates rates */
                rates?: (number[]|null);

                /** MsgRelayBandRates resolve_times */
                resolve_times?: (number[]|null);

                /** MsgRelayBandRates requestIDs */
                requestIDs?: (number[]|null);
            }

            /** Represents a MsgRelayBandRates. */
            class MsgRelayBandRates implements IMsgRelayBandRates {

                /**
                 * Constructs a new MsgRelayBandRates.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.oracle.v1beta1.IMsgRelayBandRates);

                /** MsgRelayBandRates relayer. */
                public relayer: string;

                /** MsgRelayBandRates symbols. */
                public symbols: string[];

                /** MsgRelayBandRates rates. */
                public rates: number[];

                /** MsgRelayBandRates resolve_times. */
                public resolve_times: number[];

                /** MsgRelayBandRates requestIDs. */
                public requestIDs: number[];

                /**
                 * Encodes the specified MsgRelayBandRates message. Does not implicitly {@link injective.oracle.v1beta1.MsgRelayBandRates.verify|verify} messages.
                 * @param message MsgRelayBandRates message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.oracle.v1beta1.IMsgRelayBandRates, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgRelayBandRates message, length delimited. Does not implicitly {@link injective.oracle.v1beta1.MsgRelayBandRates.verify|verify} messages.
                 * @param message MsgRelayBandRates message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.oracle.v1beta1.IMsgRelayBandRates, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgRelayBandRates message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgRelayBandRates
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.oracle.v1beta1.MsgRelayBandRates;

                /**
                 * Decodes a MsgRelayBandRates message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgRelayBandRates
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.oracle.v1beta1.MsgRelayBandRates;

                /**
                 * Verifies a MsgRelayBandRates message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgRelayBandRates message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgRelayBandRates
                 */
                public static fromObject(object: { [k: string]: any }): injective.oracle.v1beta1.MsgRelayBandRates;

                /**
                 * Creates a plain object from a MsgRelayBandRates message. Also converts values to other types if specified.
                 * @param message MsgRelayBandRates
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.oracle.v1beta1.MsgRelayBandRates, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgRelayBandRates to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgRelayBandRatesResponse. */
            interface IMsgRelayBandRatesResponse {
            }

            /** Represents a MsgRelayBandRatesResponse. */
            class MsgRelayBandRatesResponse implements IMsgRelayBandRatesResponse {

                /**
                 * Constructs a new MsgRelayBandRatesResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.oracle.v1beta1.IMsgRelayBandRatesResponse);

                /**
                 * Encodes the specified MsgRelayBandRatesResponse message. Does not implicitly {@link injective.oracle.v1beta1.MsgRelayBandRatesResponse.verify|verify} messages.
                 * @param message MsgRelayBandRatesResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.oracle.v1beta1.IMsgRelayBandRatesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgRelayBandRatesResponse message, length delimited. Does not implicitly {@link injective.oracle.v1beta1.MsgRelayBandRatesResponse.verify|verify} messages.
                 * @param message MsgRelayBandRatesResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.oracle.v1beta1.IMsgRelayBandRatesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgRelayBandRatesResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgRelayBandRatesResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.oracle.v1beta1.MsgRelayBandRatesResponse;

                /**
                 * Decodes a MsgRelayBandRatesResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgRelayBandRatesResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.oracle.v1beta1.MsgRelayBandRatesResponse;

                /**
                 * Verifies a MsgRelayBandRatesResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgRelayBandRatesResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgRelayBandRatesResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.oracle.v1beta1.MsgRelayBandRatesResponse;

                /**
                 * Creates a plain object from a MsgRelayBandRatesResponse message. Also converts values to other types if specified.
                 * @param message MsgRelayBandRatesResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.oracle.v1beta1.MsgRelayBandRatesResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgRelayBandRatesResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgRelayCoinbaseMessages. */
            interface IMsgRelayCoinbaseMessages {

                /** MsgRelayCoinbaseMessages sender */
                sender?: (string|null);

                /** MsgRelayCoinbaseMessages messages */
                messages?: (Uint8Array[]|null);

                /** MsgRelayCoinbaseMessages signatures */
                signatures?: (Uint8Array[]|null);
            }

            /** Represents a MsgRelayCoinbaseMessages. */
            class MsgRelayCoinbaseMessages implements IMsgRelayCoinbaseMessages {

                /**
                 * Constructs a new MsgRelayCoinbaseMessages.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.oracle.v1beta1.IMsgRelayCoinbaseMessages);

                /** MsgRelayCoinbaseMessages sender. */
                public sender: string;

                /** MsgRelayCoinbaseMessages messages. */
                public messages: Uint8Array[];

                /** MsgRelayCoinbaseMessages signatures. */
                public signatures: Uint8Array[];

                /**
                 * Encodes the specified MsgRelayCoinbaseMessages message. Does not implicitly {@link injective.oracle.v1beta1.MsgRelayCoinbaseMessages.verify|verify} messages.
                 * @param message MsgRelayCoinbaseMessages message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.oracle.v1beta1.IMsgRelayCoinbaseMessages, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgRelayCoinbaseMessages message, length delimited. Does not implicitly {@link injective.oracle.v1beta1.MsgRelayCoinbaseMessages.verify|verify} messages.
                 * @param message MsgRelayCoinbaseMessages message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.oracle.v1beta1.IMsgRelayCoinbaseMessages, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgRelayCoinbaseMessages message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgRelayCoinbaseMessages
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.oracle.v1beta1.MsgRelayCoinbaseMessages;

                /**
                 * Decodes a MsgRelayCoinbaseMessages message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgRelayCoinbaseMessages
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.oracle.v1beta1.MsgRelayCoinbaseMessages;

                /**
                 * Verifies a MsgRelayCoinbaseMessages message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgRelayCoinbaseMessages message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgRelayCoinbaseMessages
                 */
                public static fromObject(object: { [k: string]: any }): injective.oracle.v1beta1.MsgRelayCoinbaseMessages;

                /**
                 * Creates a plain object from a MsgRelayCoinbaseMessages message. Also converts values to other types if specified.
                 * @param message MsgRelayCoinbaseMessages
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.oracle.v1beta1.MsgRelayCoinbaseMessages, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgRelayCoinbaseMessages to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgRelayCoinbaseMessagesResponse. */
            interface IMsgRelayCoinbaseMessagesResponse {
            }

            /** Represents a MsgRelayCoinbaseMessagesResponse. */
            class MsgRelayCoinbaseMessagesResponse implements IMsgRelayCoinbaseMessagesResponse {

                /**
                 * Constructs a new MsgRelayCoinbaseMessagesResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.oracle.v1beta1.IMsgRelayCoinbaseMessagesResponse);

                /**
                 * Encodes the specified MsgRelayCoinbaseMessagesResponse message. Does not implicitly {@link injective.oracle.v1beta1.MsgRelayCoinbaseMessagesResponse.verify|verify} messages.
                 * @param message MsgRelayCoinbaseMessagesResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.oracle.v1beta1.IMsgRelayCoinbaseMessagesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgRelayCoinbaseMessagesResponse message, length delimited. Does not implicitly {@link injective.oracle.v1beta1.MsgRelayCoinbaseMessagesResponse.verify|verify} messages.
                 * @param message MsgRelayCoinbaseMessagesResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.oracle.v1beta1.IMsgRelayCoinbaseMessagesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgRelayCoinbaseMessagesResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgRelayCoinbaseMessagesResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.oracle.v1beta1.MsgRelayCoinbaseMessagesResponse;

                /**
                 * Decodes a MsgRelayCoinbaseMessagesResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgRelayCoinbaseMessagesResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.oracle.v1beta1.MsgRelayCoinbaseMessagesResponse;

                /**
                 * Verifies a MsgRelayCoinbaseMessagesResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgRelayCoinbaseMessagesResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgRelayCoinbaseMessagesResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.oracle.v1beta1.MsgRelayCoinbaseMessagesResponse;

                /**
                 * Creates a plain object from a MsgRelayCoinbaseMessagesResponse message. Also converts values to other types if specified.
                 * @param message MsgRelayCoinbaseMessagesResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.oracle.v1beta1.MsgRelayCoinbaseMessagesResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgRelayCoinbaseMessagesResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgRequestBandIBCRates. */
            interface IMsgRequestBandIBCRates {

                /** MsgRequestBandIBCRates sender */
                sender?: (string|null);

                /** MsgRequestBandIBCRates request_id */
                request_id?: (number|null);
            }

            /** Represents a MsgRequestBandIBCRates. */
            class MsgRequestBandIBCRates implements IMsgRequestBandIBCRates {

                /**
                 * Constructs a new MsgRequestBandIBCRates.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.oracle.v1beta1.IMsgRequestBandIBCRates);

                /** MsgRequestBandIBCRates sender. */
                public sender: string;

                /** MsgRequestBandIBCRates request_id. */
                public request_id: number;

                /**
                 * Encodes the specified MsgRequestBandIBCRates message. Does not implicitly {@link injective.oracle.v1beta1.MsgRequestBandIBCRates.verify|verify} messages.
                 * @param message MsgRequestBandIBCRates message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.oracle.v1beta1.IMsgRequestBandIBCRates, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgRequestBandIBCRates message, length delimited. Does not implicitly {@link injective.oracle.v1beta1.MsgRequestBandIBCRates.verify|verify} messages.
                 * @param message MsgRequestBandIBCRates message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.oracle.v1beta1.IMsgRequestBandIBCRates, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgRequestBandIBCRates message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgRequestBandIBCRates
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.oracle.v1beta1.MsgRequestBandIBCRates;

                /**
                 * Decodes a MsgRequestBandIBCRates message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgRequestBandIBCRates
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.oracle.v1beta1.MsgRequestBandIBCRates;

                /**
                 * Verifies a MsgRequestBandIBCRates message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgRequestBandIBCRates message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgRequestBandIBCRates
                 */
                public static fromObject(object: { [k: string]: any }): injective.oracle.v1beta1.MsgRequestBandIBCRates;

                /**
                 * Creates a plain object from a MsgRequestBandIBCRates message. Also converts values to other types if specified.
                 * @param message MsgRequestBandIBCRates
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.oracle.v1beta1.MsgRequestBandIBCRates, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgRequestBandIBCRates to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgRequestBandIBCRatesResponse. */
            interface IMsgRequestBandIBCRatesResponse {
            }

            /** Represents a MsgRequestBandIBCRatesResponse. */
            class MsgRequestBandIBCRatesResponse implements IMsgRequestBandIBCRatesResponse {

                /**
                 * Constructs a new MsgRequestBandIBCRatesResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.oracle.v1beta1.IMsgRequestBandIBCRatesResponse);

                /**
                 * Encodes the specified MsgRequestBandIBCRatesResponse message. Does not implicitly {@link injective.oracle.v1beta1.MsgRequestBandIBCRatesResponse.verify|verify} messages.
                 * @param message MsgRequestBandIBCRatesResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.oracle.v1beta1.IMsgRequestBandIBCRatesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgRequestBandIBCRatesResponse message, length delimited. Does not implicitly {@link injective.oracle.v1beta1.MsgRequestBandIBCRatesResponse.verify|verify} messages.
                 * @param message MsgRequestBandIBCRatesResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.oracle.v1beta1.IMsgRequestBandIBCRatesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgRequestBandIBCRatesResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgRequestBandIBCRatesResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.oracle.v1beta1.MsgRequestBandIBCRatesResponse;

                /**
                 * Decodes a MsgRequestBandIBCRatesResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgRequestBandIBCRatesResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.oracle.v1beta1.MsgRequestBandIBCRatesResponse;

                /**
                 * Verifies a MsgRequestBandIBCRatesResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgRequestBandIBCRatesResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgRequestBandIBCRatesResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.oracle.v1beta1.MsgRequestBandIBCRatesResponse;

                /**
                 * Creates a plain object from a MsgRequestBandIBCRatesResponse message. Also converts values to other types if specified.
                 * @param message MsgRequestBandIBCRatesResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.oracle.v1beta1.MsgRequestBandIBCRatesResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgRequestBandIBCRatesResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgRelayPythPrices. */
            interface IMsgRelayPythPrices {

                /** MsgRelayPythPrices sender */
                sender?: (string|null);

                /** MsgRelayPythPrices price_attestations */
                price_attestations?: (injective.oracle.v1beta1.IPriceAttestation[]|null);
            }

            /** Represents a MsgRelayPythPrices. */
            class MsgRelayPythPrices implements IMsgRelayPythPrices {

                /**
                 * Constructs a new MsgRelayPythPrices.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.oracle.v1beta1.IMsgRelayPythPrices);

                /** MsgRelayPythPrices sender. */
                public sender: string;

                /** MsgRelayPythPrices price_attestations. */
                public price_attestations: injective.oracle.v1beta1.IPriceAttestation[];

                /**
                 * Encodes the specified MsgRelayPythPrices message. Does not implicitly {@link injective.oracle.v1beta1.MsgRelayPythPrices.verify|verify} messages.
                 * @param message MsgRelayPythPrices message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.oracle.v1beta1.IMsgRelayPythPrices, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgRelayPythPrices message, length delimited. Does not implicitly {@link injective.oracle.v1beta1.MsgRelayPythPrices.verify|verify} messages.
                 * @param message MsgRelayPythPrices message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.oracle.v1beta1.IMsgRelayPythPrices, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgRelayPythPrices message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgRelayPythPrices
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.oracle.v1beta1.MsgRelayPythPrices;

                /**
                 * Decodes a MsgRelayPythPrices message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgRelayPythPrices
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.oracle.v1beta1.MsgRelayPythPrices;

                /**
                 * Verifies a MsgRelayPythPrices message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgRelayPythPrices message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgRelayPythPrices
                 */
                public static fromObject(object: { [k: string]: any }): injective.oracle.v1beta1.MsgRelayPythPrices;

                /**
                 * Creates a plain object from a MsgRelayPythPrices message. Also converts values to other types if specified.
                 * @param message MsgRelayPythPrices
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.oracle.v1beta1.MsgRelayPythPrices, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgRelayPythPrices to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgRelayPythPricesResponse. */
            interface IMsgRelayPythPricesResponse {
            }

            /** Represents a MsgRelayPythPricesResponse. */
            class MsgRelayPythPricesResponse implements IMsgRelayPythPricesResponse {

                /**
                 * Constructs a new MsgRelayPythPricesResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.oracle.v1beta1.IMsgRelayPythPricesResponse);

                /**
                 * Encodes the specified MsgRelayPythPricesResponse message. Does not implicitly {@link injective.oracle.v1beta1.MsgRelayPythPricesResponse.verify|verify} messages.
                 * @param message MsgRelayPythPricesResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.oracle.v1beta1.IMsgRelayPythPricesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgRelayPythPricesResponse message, length delimited. Does not implicitly {@link injective.oracle.v1beta1.MsgRelayPythPricesResponse.verify|verify} messages.
                 * @param message MsgRelayPythPricesResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.oracle.v1beta1.IMsgRelayPythPricesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgRelayPythPricesResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgRelayPythPricesResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.oracle.v1beta1.MsgRelayPythPricesResponse;

                /**
                 * Decodes a MsgRelayPythPricesResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgRelayPythPricesResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.oracle.v1beta1.MsgRelayPythPricesResponse;

                /**
                 * Verifies a MsgRelayPythPricesResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgRelayPythPricesResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgRelayPythPricesResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.oracle.v1beta1.MsgRelayPythPricesResponse;

                /**
                 * Creates a plain object from a MsgRelayPythPricesResponse message. Also converts values to other types if specified.
                 * @param message MsgRelayPythPricesResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.oracle.v1beta1.MsgRelayPythPricesResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgRelayPythPricesResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgUpdateParams. */
            interface IMsgUpdateParams {

                /** MsgUpdateParams authority */
                authority?: (string|null);

                /** MsgUpdateParams params */
                params?: (injective.oracle.v1beta1.IParams|null);
            }

            /** Represents a MsgUpdateParams. */
            class MsgUpdateParams implements IMsgUpdateParams {

                /**
                 * Constructs a new MsgUpdateParams.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.oracle.v1beta1.IMsgUpdateParams);

                /** MsgUpdateParams authority. */
                public authority: string;

                /** MsgUpdateParams params. */
                public params?: (injective.oracle.v1beta1.IParams|null);

                /**
                 * Encodes the specified MsgUpdateParams message. Does not implicitly {@link injective.oracle.v1beta1.MsgUpdateParams.verify|verify} messages.
                 * @param message MsgUpdateParams message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.oracle.v1beta1.IMsgUpdateParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgUpdateParams message, length delimited. Does not implicitly {@link injective.oracle.v1beta1.MsgUpdateParams.verify|verify} messages.
                 * @param message MsgUpdateParams message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.oracle.v1beta1.IMsgUpdateParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgUpdateParams message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgUpdateParams
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.oracle.v1beta1.MsgUpdateParams;

                /**
                 * Decodes a MsgUpdateParams message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgUpdateParams
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.oracle.v1beta1.MsgUpdateParams;

                /**
                 * Verifies a MsgUpdateParams message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgUpdateParams message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgUpdateParams
                 */
                public static fromObject(object: { [k: string]: any }): injective.oracle.v1beta1.MsgUpdateParams;

                /**
                 * Creates a plain object from a MsgUpdateParams message. Also converts values to other types if specified.
                 * @param message MsgUpdateParams
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.oracle.v1beta1.MsgUpdateParams, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgUpdateParams to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgUpdateParamsResponse. */
            interface IMsgUpdateParamsResponse {
            }

            /** Represents a MsgUpdateParamsResponse. */
            class MsgUpdateParamsResponse implements IMsgUpdateParamsResponse {

                /**
                 * Constructs a new MsgUpdateParamsResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.oracle.v1beta1.IMsgUpdateParamsResponse);

                /**
                 * Encodes the specified MsgUpdateParamsResponse message. Does not implicitly {@link injective.oracle.v1beta1.MsgUpdateParamsResponse.verify|verify} messages.
                 * @param message MsgUpdateParamsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.oracle.v1beta1.IMsgUpdateParamsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgUpdateParamsResponse message, length delimited. Does not implicitly {@link injective.oracle.v1beta1.MsgUpdateParamsResponse.verify|verify} messages.
                 * @param message MsgUpdateParamsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.oracle.v1beta1.IMsgUpdateParamsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgUpdateParamsResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgUpdateParamsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.oracle.v1beta1.MsgUpdateParamsResponse;

                /**
                 * Decodes a MsgUpdateParamsResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgUpdateParamsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.oracle.v1beta1.MsgUpdateParamsResponse;

                /**
                 * Verifies a MsgUpdateParamsResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgUpdateParamsResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgUpdateParamsResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.oracle.v1beta1.MsgUpdateParamsResponse;

                /**
                 * Creates a plain object from a MsgUpdateParamsResponse message. Also converts values to other types if specified.
                 * @param message MsgUpdateParamsResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.oracle.v1beta1.MsgUpdateParamsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgUpdateParamsResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a SetChainlinkPriceEvent. */
            interface ISetChainlinkPriceEvent {

                /** SetChainlinkPriceEvent feed_id */
                feed_id?: (string|null);

                /** SetChainlinkPriceEvent answer */
                answer?: (string|null);

                /** SetChainlinkPriceEvent timestamp */
                timestamp?: (number|null);
            }

            /** Represents a SetChainlinkPriceEvent. */
            class SetChainlinkPriceEvent implements ISetChainlinkPriceEvent {

                /**
                 * Constructs a new SetChainlinkPriceEvent.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.oracle.v1beta1.ISetChainlinkPriceEvent);

                /** SetChainlinkPriceEvent feed_id. */
                public feed_id: string;

                /** SetChainlinkPriceEvent answer. */
                public answer: string;

                /** SetChainlinkPriceEvent timestamp. */
                public timestamp: number;

                /**
                 * Encodes the specified SetChainlinkPriceEvent message. Does not implicitly {@link injective.oracle.v1beta1.SetChainlinkPriceEvent.verify|verify} messages.
                 * @param message SetChainlinkPriceEvent message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.oracle.v1beta1.ISetChainlinkPriceEvent, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified SetChainlinkPriceEvent message, length delimited. Does not implicitly {@link injective.oracle.v1beta1.SetChainlinkPriceEvent.verify|verify} messages.
                 * @param message SetChainlinkPriceEvent message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.oracle.v1beta1.ISetChainlinkPriceEvent, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a SetChainlinkPriceEvent message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns SetChainlinkPriceEvent
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.oracle.v1beta1.SetChainlinkPriceEvent;

                /**
                 * Decodes a SetChainlinkPriceEvent message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns SetChainlinkPriceEvent
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.oracle.v1beta1.SetChainlinkPriceEvent;

                /**
                 * Verifies a SetChainlinkPriceEvent message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a SetChainlinkPriceEvent message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns SetChainlinkPriceEvent
                 */
                public static fromObject(object: { [k: string]: any }): injective.oracle.v1beta1.SetChainlinkPriceEvent;

                /**
                 * Creates a plain object from a SetChainlinkPriceEvent message. Also converts values to other types if specified.
                 * @param message SetChainlinkPriceEvent
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.oracle.v1beta1.SetChainlinkPriceEvent, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this SetChainlinkPriceEvent to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a SetBandPriceEvent. */
            interface ISetBandPriceEvent {

                /** SetBandPriceEvent relayer */
                relayer?: (string|null);

                /** SetBandPriceEvent symbol */
                symbol?: (string|null);

                /** SetBandPriceEvent price */
                price?: (string|null);

                /** SetBandPriceEvent resolve_time */
                resolve_time?: (number|null);

                /** SetBandPriceEvent request_id */
                request_id?: (number|null);
            }

            /** Represents a SetBandPriceEvent. */
            class SetBandPriceEvent implements ISetBandPriceEvent {

                /**
                 * Constructs a new SetBandPriceEvent.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.oracle.v1beta1.ISetBandPriceEvent);

                /** SetBandPriceEvent relayer. */
                public relayer: string;

                /** SetBandPriceEvent symbol. */
                public symbol: string;

                /** SetBandPriceEvent price. */
                public price: string;

                /** SetBandPriceEvent resolve_time. */
                public resolve_time: number;

                /** SetBandPriceEvent request_id. */
                public request_id: number;

                /**
                 * Encodes the specified SetBandPriceEvent message. Does not implicitly {@link injective.oracle.v1beta1.SetBandPriceEvent.verify|verify} messages.
                 * @param message SetBandPriceEvent message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.oracle.v1beta1.ISetBandPriceEvent, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified SetBandPriceEvent message, length delimited. Does not implicitly {@link injective.oracle.v1beta1.SetBandPriceEvent.verify|verify} messages.
                 * @param message SetBandPriceEvent message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.oracle.v1beta1.ISetBandPriceEvent, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a SetBandPriceEvent message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns SetBandPriceEvent
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.oracle.v1beta1.SetBandPriceEvent;

                /**
                 * Decodes a SetBandPriceEvent message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns SetBandPriceEvent
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.oracle.v1beta1.SetBandPriceEvent;

                /**
                 * Verifies a SetBandPriceEvent message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a SetBandPriceEvent message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns SetBandPriceEvent
                 */
                public static fromObject(object: { [k: string]: any }): injective.oracle.v1beta1.SetBandPriceEvent;

                /**
                 * Creates a plain object from a SetBandPriceEvent message. Also converts values to other types if specified.
                 * @param message SetBandPriceEvent
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.oracle.v1beta1.SetBandPriceEvent, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this SetBandPriceEvent to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a SetBandIBCPriceEvent. */
            interface ISetBandIBCPriceEvent {

                /** SetBandIBCPriceEvent relayer */
                relayer?: (string|null);

                /** SetBandIBCPriceEvent symbols */
                symbols?: (string[]|null);

                /** SetBandIBCPriceEvent prices */
                prices?: (string[]|null);

                /** SetBandIBCPriceEvent resolve_time */
                resolve_time?: (number|null);

                /** SetBandIBCPriceEvent request_id */
                request_id?: (number|null);

                /** SetBandIBCPriceEvent client_id */
                client_id?: (number|null);
            }

            /** Represents a SetBandIBCPriceEvent. */
            class SetBandIBCPriceEvent implements ISetBandIBCPriceEvent {

                /**
                 * Constructs a new SetBandIBCPriceEvent.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.oracle.v1beta1.ISetBandIBCPriceEvent);

                /** SetBandIBCPriceEvent relayer. */
                public relayer: string;

                /** SetBandIBCPriceEvent symbols. */
                public symbols: string[];

                /** SetBandIBCPriceEvent prices. */
                public prices: string[];

                /** SetBandIBCPriceEvent resolve_time. */
                public resolve_time: number;

                /** SetBandIBCPriceEvent request_id. */
                public request_id: number;

                /** SetBandIBCPriceEvent client_id. */
                public client_id: number;

                /**
                 * Encodes the specified SetBandIBCPriceEvent message. Does not implicitly {@link injective.oracle.v1beta1.SetBandIBCPriceEvent.verify|verify} messages.
                 * @param message SetBandIBCPriceEvent message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.oracle.v1beta1.ISetBandIBCPriceEvent, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified SetBandIBCPriceEvent message, length delimited. Does not implicitly {@link injective.oracle.v1beta1.SetBandIBCPriceEvent.verify|verify} messages.
                 * @param message SetBandIBCPriceEvent message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.oracle.v1beta1.ISetBandIBCPriceEvent, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a SetBandIBCPriceEvent message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns SetBandIBCPriceEvent
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.oracle.v1beta1.SetBandIBCPriceEvent;

                /**
                 * Decodes a SetBandIBCPriceEvent message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns SetBandIBCPriceEvent
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.oracle.v1beta1.SetBandIBCPriceEvent;

                /**
                 * Verifies a SetBandIBCPriceEvent message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a SetBandIBCPriceEvent message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns SetBandIBCPriceEvent
                 */
                public static fromObject(object: { [k: string]: any }): injective.oracle.v1beta1.SetBandIBCPriceEvent;

                /**
                 * Creates a plain object from a SetBandIBCPriceEvent message. Also converts values to other types if specified.
                 * @param message SetBandIBCPriceEvent
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.oracle.v1beta1.SetBandIBCPriceEvent, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this SetBandIBCPriceEvent to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an EventBandIBCAckSuccess. */
            interface IEventBandIBCAckSuccess {

                /** EventBandIBCAckSuccess ack_result */
                ack_result?: (string|null);

                /** EventBandIBCAckSuccess client_id */
                client_id?: (number|null);
            }

            /** Represents an EventBandIBCAckSuccess. */
            class EventBandIBCAckSuccess implements IEventBandIBCAckSuccess {

                /**
                 * Constructs a new EventBandIBCAckSuccess.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.oracle.v1beta1.IEventBandIBCAckSuccess);

                /** EventBandIBCAckSuccess ack_result. */
                public ack_result: string;

                /** EventBandIBCAckSuccess client_id. */
                public client_id: number;

                /**
                 * Encodes the specified EventBandIBCAckSuccess message. Does not implicitly {@link injective.oracle.v1beta1.EventBandIBCAckSuccess.verify|verify} messages.
                 * @param message EventBandIBCAckSuccess message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.oracle.v1beta1.IEventBandIBCAckSuccess, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified EventBandIBCAckSuccess message, length delimited. Does not implicitly {@link injective.oracle.v1beta1.EventBandIBCAckSuccess.verify|verify} messages.
                 * @param message EventBandIBCAckSuccess message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.oracle.v1beta1.IEventBandIBCAckSuccess, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an EventBandIBCAckSuccess message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns EventBandIBCAckSuccess
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.oracle.v1beta1.EventBandIBCAckSuccess;

                /**
                 * Decodes an EventBandIBCAckSuccess message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns EventBandIBCAckSuccess
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.oracle.v1beta1.EventBandIBCAckSuccess;

                /**
                 * Verifies an EventBandIBCAckSuccess message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an EventBandIBCAckSuccess message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns EventBandIBCAckSuccess
                 */
                public static fromObject(object: { [k: string]: any }): injective.oracle.v1beta1.EventBandIBCAckSuccess;

                /**
                 * Creates a plain object from an EventBandIBCAckSuccess message. Also converts values to other types if specified.
                 * @param message EventBandIBCAckSuccess
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.oracle.v1beta1.EventBandIBCAckSuccess, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this EventBandIBCAckSuccess to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an EventBandIBCAckError. */
            interface IEventBandIBCAckError {

                /** EventBandIBCAckError ack_error */
                ack_error?: (string|null);

                /** EventBandIBCAckError client_id */
                client_id?: (number|null);
            }

            /** Represents an EventBandIBCAckError. */
            class EventBandIBCAckError implements IEventBandIBCAckError {

                /**
                 * Constructs a new EventBandIBCAckError.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.oracle.v1beta1.IEventBandIBCAckError);

                /** EventBandIBCAckError ack_error. */
                public ack_error: string;

                /** EventBandIBCAckError client_id. */
                public client_id: number;

                /**
                 * Encodes the specified EventBandIBCAckError message. Does not implicitly {@link injective.oracle.v1beta1.EventBandIBCAckError.verify|verify} messages.
                 * @param message EventBandIBCAckError message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.oracle.v1beta1.IEventBandIBCAckError, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified EventBandIBCAckError message, length delimited. Does not implicitly {@link injective.oracle.v1beta1.EventBandIBCAckError.verify|verify} messages.
                 * @param message EventBandIBCAckError message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.oracle.v1beta1.IEventBandIBCAckError, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an EventBandIBCAckError message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns EventBandIBCAckError
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.oracle.v1beta1.EventBandIBCAckError;

                /**
                 * Decodes an EventBandIBCAckError message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns EventBandIBCAckError
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.oracle.v1beta1.EventBandIBCAckError;

                /**
                 * Verifies an EventBandIBCAckError message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an EventBandIBCAckError message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns EventBandIBCAckError
                 */
                public static fromObject(object: { [k: string]: any }): injective.oracle.v1beta1.EventBandIBCAckError;

                /**
                 * Creates a plain object from an EventBandIBCAckError message. Also converts values to other types if specified.
                 * @param message EventBandIBCAckError
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.oracle.v1beta1.EventBandIBCAckError, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this EventBandIBCAckError to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an EventBandIBCResponseTimeout. */
            interface IEventBandIBCResponseTimeout {

                /** EventBandIBCResponseTimeout client_id */
                client_id?: (number|null);
            }

            /** Represents an EventBandIBCResponseTimeout. */
            class EventBandIBCResponseTimeout implements IEventBandIBCResponseTimeout {

                /**
                 * Constructs a new EventBandIBCResponseTimeout.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.oracle.v1beta1.IEventBandIBCResponseTimeout);

                /** EventBandIBCResponseTimeout client_id. */
                public client_id: number;

                /**
                 * Encodes the specified EventBandIBCResponseTimeout message. Does not implicitly {@link injective.oracle.v1beta1.EventBandIBCResponseTimeout.verify|verify} messages.
                 * @param message EventBandIBCResponseTimeout message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.oracle.v1beta1.IEventBandIBCResponseTimeout, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified EventBandIBCResponseTimeout message, length delimited. Does not implicitly {@link injective.oracle.v1beta1.EventBandIBCResponseTimeout.verify|verify} messages.
                 * @param message EventBandIBCResponseTimeout message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.oracle.v1beta1.IEventBandIBCResponseTimeout, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an EventBandIBCResponseTimeout message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns EventBandIBCResponseTimeout
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.oracle.v1beta1.EventBandIBCResponseTimeout;

                /**
                 * Decodes an EventBandIBCResponseTimeout message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns EventBandIBCResponseTimeout
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.oracle.v1beta1.EventBandIBCResponseTimeout;

                /**
                 * Verifies an EventBandIBCResponseTimeout message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an EventBandIBCResponseTimeout message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns EventBandIBCResponseTimeout
                 */
                public static fromObject(object: { [k: string]: any }): injective.oracle.v1beta1.EventBandIBCResponseTimeout;

                /**
                 * Creates a plain object from an EventBandIBCResponseTimeout message. Also converts values to other types if specified.
                 * @param message EventBandIBCResponseTimeout
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.oracle.v1beta1.EventBandIBCResponseTimeout, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this EventBandIBCResponseTimeout to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a SetPriceFeedPriceEvent. */
            interface ISetPriceFeedPriceEvent {

                /** SetPriceFeedPriceEvent relayer */
                relayer?: (string|null);

                /** SetPriceFeedPriceEvent base */
                base?: (string|null);

                /** SetPriceFeedPriceEvent quote */
                quote?: (string|null);

                /** SetPriceFeedPriceEvent price */
                price?: (string|null);
            }

            /** Represents a SetPriceFeedPriceEvent. */
            class SetPriceFeedPriceEvent implements ISetPriceFeedPriceEvent {

                /**
                 * Constructs a new SetPriceFeedPriceEvent.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.oracle.v1beta1.ISetPriceFeedPriceEvent);

                /** SetPriceFeedPriceEvent relayer. */
                public relayer: string;

                /** SetPriceFeedPriceEvent base. */
                public base: string;

                /** SetPriceFeedPriceEvent quote. */
                public quote: string;

                /** SetPriceFeedPriceEvent price. */
                public price: string;

                /**
                 * Encodes the specified SetPriceFeedPriceEvent message. Does not implicitly {@link injective.oracle.v1beta1.SetPriceFeedPriceEvent.verify|verify} messages.
                 * @param message SetPriceFeedPriceEvent message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.oracle.v1beta1.ISetPriceFeedPriceEvent, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified SetPriceFeedPriceEvent message, length delimited. Does not implicitly {@link injective.oracle.v1beta1.SetPriceFeedPriceEvent.verify|verify} messages.
                 * @param message SetPriceFeedPriceEvent message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.oracle.v1beta1.ISetPriceFeedPriceEvent, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a SetPriceFeedPriceEvent message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns SetPriceFeedPriceEvent
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.oracle.v1beta1.SetPriceFeedPriceEvent;

                /**
                 * Decodes a SetPriceFeedPriceEvent message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns SetPriceFeedPriceEvent
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.oracle.v1beta1.SetPriceFeedPriceEvent;

                /**
                 * Verifies a SetPriceFeedPriceEvent message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a SetPriceFeedPriceEvent message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns SetPriceFeedPriceEvent
                 */
                public static fromObject(object: { [k: string]: any }): injective.oracle.v1beta1.SetPriceFeedPriceEvent;

                /**
                 * Creates a plain object from a SetPriceFeedPriceEvent message. Also converts values to other types if specified.
                 * @param message SetPriceFeedPriceEvent
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.oracle.v1beta1.SetPriceFeedPriceEvent, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this SetPriceFeedPriceEvent to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a SetProviderPriceEvent. */
            interface ISetProviderPriceEvent {

                /** SetProviderPriceEvent provider */
                provider?: (string|null);

                /** SetProviderPriceEvent relayer */
                relayer?: (string|null);

                /** SetProviderPriceEvent symbol */
                symbol?: (string|null);

                /** SetProviderPriceEvent price */
                price?: (string|null);
            }

            /** Represents a SetProviderPriceEvent. */
            class SetProviderPriceEvent implements ISetProviderPriceEvent {

                /**
                 * Constructs a new SetProviderPriceEvent.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.oracle.v1beta1.ISetProviderPriceEvent);

                /** SetProviderPriceEvent provider. */
                public provider: string;

                /** SetProviderPriceEvent relayer. */
                public relayer: string;

                /** SetProviderPriceEvent symbol. */
                public symbol: string;

                /** SetProviderPriceEvent price. */
                public price: string;

                /**
                 * Encodes the specified SetProviderPriceEvent message. Does not implicitly {@link injective.oracle.v1beta1.SetProviderPriceEvent.verify|verify} messages.
                 * @param message SetProviderPriceEvent message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.oracle.v1beta1.ISetProviderPriceEvent, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified SetProviderPriceEvent message, length delimited. Does not implicitly {@link injective.oracle.v1beta1.SetProviderPriceEvent.verify|verify} messages.
                 * @param message SetProviderPriceEvent message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.oracle.v1beta1.ISetProviderPriceEvent, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a SetProviderPriceEvent message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns SetProviderPriceEvent
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.oracle.v1beta1.SetProviderPriceEvent;

                /**
                 * Decodes a SetProviderPriceEvent message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns SetProviderPriceEvent
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.oracle.v1beta1.SetProviderPriceEvent;

                /**
                 * Verifies a SetProviderPriceEvent message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a SetProviderPriceEvent message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns SetProviderPriceEvent
                 */
                public static fromObject(object: { [k: string]: any }): injective.oracle.v1beta1.SetProviderPriceEvent;

                /**
                 * Creates a plain object from a SetProviderPriceEvent message. Also converts values to other types if specified.
                 * @param message SetProviderPriceEvent
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.oracle.v1beta1.SetProviderPriceEvent, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this SetProviderPriceEvent to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a SetCoinbasePriceEvent. */
            interface ISetCoinbasePriceEvent {

                /** SetCoinbasePriceEvent symbol */
                symbol?: (string|null);

                /** SetCoinbasePriceEvent price */
                price?: (string|null);

                /** SetCoinbasePriceEvent timestamp */
                timestamp?: (number|null);
            }

            /** Represents a SetCoinbasePriceEvent. */
            class SetCoinbasePriceEvent implements ISetCoinbasePriceEvent {

                /**
                 * Constructs a new SetCoinbasePriceEvent.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.oracle.v1beta1.ISetCoinbasePriceEvent);

                /** SetCoinbasePriceEvent symbol. */
                public symbol: string;

                /** SetCoinbasePriceEvent price. */
                public price: string;

                /** SetCoinbasePriceEvent timestamp. */
                public timestamp: number;

                /**
                 * Encodes the specified SetCoinbasePriceEvent message. Does not implicitly {@link injective.oracle.v1beta1.SetCoinbasePriceEvent.verify|verify} messages.
                 * @param message SetCoinbasePriceEvent message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.oracle.v1beta1.ISetCoinbasePriceEvent, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified SetCoinbasePriceEvent message, length delimited. Does not implicitly {@link injective.oracle.v1beta1.SetCoinbasePriceEvent.verify|verify} messages.
                 * @param message SetCoinbasePriceEvent message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.oracle.v1beta1.ISetCoinbasePriceEvent, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a SetCoinbasePriceEvent message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns SetCoinbasePriceEvent
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.oracle.v1beta1.SetCoinbasePriceEvent;

                /**
                 * Decodes a SetCoinbasePriceEvent message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns SetCoinbasePriceEvent
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.oracle.v1beta1.SetCoinbasePriceEvent;

                /**
                 * Verifies a SetCoinbasePriceEvent message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a SetCoinbasePriceEvent message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns SetCoinbasePriceEvent
                 */
                public static fromObject(object: { [k: string]: any }): injective.oracle.v1beta1.SetCoinbasePriceEvent;

                /**
                 * Creates a plain object from a SetCoinbasePriceEvent message. Also converts values to other types if specified.
                 * @param message SetCoinbasePriceEvent
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.oracle.v1beta1.SetCoinbasePriceEvent, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this SetCoinbasePriceEvent to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an EventSetPythPrices. */
            interface IEventSetPythPrices {

                /** EventSetPythPrices prices */
                prices?: (injective.oracle.v1beta1.IPythPriceState[]|null);
            }

            /** Represents an EventSetPythPrices. */
            class EventSetPythPrices implements IEventSetPythPrices {

                /**
                 * Constructs a new EventSetPythPrices.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.oracle.v1beta1.IEventSetPythPrices);

                /** EventSetPythPrices prices. */
                public prices: injective.oracle.v1beta1.IPythPriceState[];

                /**
                 * Encodes the specified EventSetPythPrices message. Does not implicitly {@link injective.oracle.v1beta1.EventSetPythPrices.verify|verify} messages.
                 * @param message EventSetPythPrices message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.oracle.v1beta1.IEventSetPythPrices, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified EventSetPythPrices message, length delimited. Does not implicitly {@link injective.oracle.v1beta1.EventSetPythPrices.verify|verify} messages.
                 * @param message EventSetPythPrices message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.oracle.v1beta1.IEventSetPythPrices, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an EventSetPythPrices message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns EventSetPythPrices
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.oracle.v1beta1.EventSetPythPrices;

                /**
                 * Decodes an EventSetPythPrices message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns EventSetPythPrices
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.oracle.v1beta1.EventSetPythPrices;

                /**
                 * Verifies an EventSetPythPrices message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an EventSetPythPrices message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns EventSetPythPrices
                 */
                public static fromObject(object: { [k: string]: any }): injective.oracle.v1beta1.EventSetPythPrices;

                /**
                 * Creates a plain object from an EventSetPythPrices message. Also converts values to other types if specified.
                 * @param message EventSetPythPrices
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.oracle.v1beta1.EventSetPythPrices, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this EventSetPythPrices to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Represents a Query */
            class Query extends $protobuf.rpc.Service {

                /**
                 * Constructs a new Query service.
                 * @param rpcImpl RPC implementation
                 * @param [requestDelimited=false] Whether requests are length-delimited
                 * @param [responseDelimited=false] Whether responses are length-delimited
                 */
                constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

                /**
                 * Calls Params.
                 * @param request QueryParamsRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryParamsResponse
                 */
                public params(request: injective.oracle.v1beta1.IQueryParamsRequest, callback: injective.oracle.v1beta1.Query.ParamsCallback): void;

                /**
                 * Calls Params.
                 * @param request QueryParamsRequest message or plain object
                 * @returns Promise
                 */
                public params(request: injective.oracle.v1beta1.IQueryParamsRequest): Promise<injective.oracle.v1beta1.QueryParamsResponse>;

                /**
                 * Calls BandRelayers.
                 * @param request QueryBandRelayersRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryBandRelayersResponse
                 */
                public bandRelayers(request: injective.oracle.v1beta1.IQueryBandRelayersRequest, callback: injective.oracle.v1beta1.Query.BandRelayersCallback): void;

                /**
                 * Calls BandRelayers.
                 * @param request QueryBandRelayersRequest message or plain object
                 * @returns Promise
                 */
                public bandRelayers(request: injective.oracle.v1beta1.IQueryBandRelayersRequest): Promise<injective.oracle.v1beta1.QueryBandRelayersResponse>;

                /**
                 * Calls BandPriceStates.
                 * @param request QueryBandPriceStatesRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryBandPriceStatesResponse
                 */
                public bandPriceStates(request: injective.oracle.v1beta1.IQueryBandPriceStatesRequest, callback: injective.oracle.v1beta1.Query.BandPriceStatesCallback): void;

                /**
                 * Calls BandPriceStates.
                 * @param request QueryBandPriceStatesRequest message or plain object
                 * @returns Promise
                 */
                public bandPriceStates(request: injective.oracle.v1beta1.IQueryBandPriceStatesRequest): Promise<injective.oracle.v1beta1.QueryBandPriceStatesResponse>;

                /**
                 * Calls BandIBCPriceStates.
                 * @param request QueryBandIBCPriceStatesRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryBandIBCPriceStatesResponse
                 */
                public bandIBCPriceStates(request: injective.oracle.v1beta1.IQueryBandIBCPriceStatesRequest, callback: injective.oracle.v1beta1.Query.BandIBCPriceStatesCallback): void;

                /**
                 * Calls BandIBCPriceStates.
                 * @param request QueryBandIBCPriceStatesRequest message or plain object
                 * @returns Promise
                 */
                public bandIBCPriceStates(request: injective.oracle.v1beta1.IQueryBandIBCPriceStatesRequest): Promise<injective.oracle.v1beta1.QueryBandIBCPriceStatesResponse>;

                /**
                 * Calls PriceFeedPriceStates.
                 * @param request QueryPriceFeedPriceStatesRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryPriceFeedPriceStatesResponse
                 */
                public priceFeedPriceStates(request: injective.oracle.v1beta1.IQueryPriceFeedPriceStatesRequest, callback: injective.oracle.v1beta1.Query.PriceFeedPriceStatesCallback): void;

                /**
                 * Calls PriceFeedPriceStates.
                 * @param request QueryPriceFeedPriceStatesRequest message or plain object
                 * @returns Promise
                 */
                public priceFeedPriceStates(request: injective.oracle.v1beta1.IQueryPriceFeedPriceStatesRequest): Promise<injective.oracle.v1beta1.QueryPriceFeedPriceStatesResponse>;

                /**
                 * Calls CoinbasePriceStates.
                 * @param request QueryCoinbasePriceStatesRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryCoinbasePriceStatesResponse
                 */
                public coinbasePriceStates(request: injective.oracle.v1beta1.IQueryCoinbasePriceStatesRequest, callback: injective.oracle.v1beta1.Query.CoinbasePriceStatesCallback): void;

                /**
                 * Calls CoinbasePriceStates.
                 * @param request QueryCoinbasePriceStatesRequest message or plain object
                 * @returns Promise
                 */
                public coinbasePriceStates(request: injective.oracle.v1beta1.IQueryCoinbasePriceStatesRequest): Promise<injective.oracle.v1beta1.QueryCoinbasePriceStatesResponse>;

                /**
                 * Calls PythPriceStates.
                 * @param request QueryPythPriceStatesRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryPythPriceStatesResponse
                 */
                public pythPriceStates(request: injective.oracle.v1beta1.IQueryPythPriceStatesRequest, callback: injective.oracle.v1beta1.Query.PythPriceStatesCallback): void;

                /**
                 * Calls PythPriceStates.
                 * @param request QueryPythPriceStatesRequest message or plain object
                 * @returns Promise
                 */
                public pythPriceStates(request: injective.oracle.v1beta1.IQueryPythPriceStatesRequest): Promise<injective.oracle.v1beta1.QueryPythPriceStatesResponse>;

                /**
                 * Calls ProviderPriceState.
                 * @param request QueryProviderPriceStateRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryProviderPriceStateResponse
                 */
                public providerPriceState(request: injective.oracle.v1beta1.IQueryProviderPriceStateRequest, callback: injective.oracle.v1beta1.Query.ProviderPriceStateCallback): void;

                /**
                 * Calls ProviderPriceState.
                 * @param request QueryProviderPriceStateRequest message or plain object
                 * @returns Promise
                 */
                public providerPriceState(request: injective.oracle.v1beta1.IQueryProviderPriceStateRequest): Promise<injective.oracle.v1beta1.QueryProviderPriceStateResponse>;

                /**
                 * Calls OracleModuleState.
                 * @param request QueryModuleStateRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryModuleStateResponse
                 */
                public oracleModuleState(request: injective.oracle.v1beta1.IQueryModuleStateRequest, callback: injective.oracle.v1beta1.Query.OracleModuleStateCallback): void;

                /**
                 * Calls OracleModuleState.
                 * @param request QueryModuleStateRequest message or plain object
                 * @returns Promise
                 */
                public oracleModuleState(request: injective.oracle.v1beta1.IQueryModuleStateRequest): Promise<injective.oracle.v1beta1.QueryModuleStateResponse>;

                /**
                 * Calls HistoricalPriceRecords.
                 * @param request QueryHistoricalPriceRecordsRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryHistoricalPriceRecordsResponse
                 */
                public historicalPriceRecords(request: injective.oracle.v1beta1.IQueryHistoricalPriceRecordsRequest, callback: injective.oracle.v1beta1.Query.HistoricalPriceRecordsCallback): void;

                /**
                 * Calls HistoricalPriceRecords.
                 * @param request QueryHistoricalPriceRecordsRequest message or plain object
                 * @returns Promise
                 */
                public historicalPriceRecords(request: injective.oracle.v1beta1.IQueryHistoricalPriceRecordsRequest): Promise<injective.oracle.v1beta1.QueryHistoricalPriceRecordsResponse>;

                /**
                 * Calls OracleVolatility.
                 * @param request QueryOracleVolatilityRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryOracleVolatilityResponse
                 */
                public oracleVolatility(request: injective.oracle.v1beta1.IQueryOracleVolatilityRequest, callback: injective.oracle.v1beta1.Query.OracleVolatilityCallback): void;

                /**
                 * Calls OracleVolatility.
                 * @param request QueryOracleVolatilityRequest message or plain object
                 * @returns Promise
                 */
                public oracleVolatility(request: injective.oracle.v1beta1.IQueryOracleVolatilityRequest): Promise<injective.oracle.v1beta1.QueryOracleVolatilityResponse>;

                /**
                 * Calls OracleProvidersInfo.
                 * @param request QueryOracleProvidersInfoRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryOracleProvidersInfoResponse
                 */
                public oracleProvidersInfo(request: injective.oracle.v1beta1.IQueryOracleProvidersInfoRequest, callback: injective.oracle.v1beta1.Query.OracleProvidersInfoCallback): void;

                /**
                 * Calls OracleProvidersInfo.
                 * @param request QueryOracleProvidersInfoRequest message or plain object
                 * @returns Promise
                 */
                public oracleProvidersInfo(request: injective.oracle.v1beta1.IQueryOracleProvidersInfoRequest): Promise<injective.oracle.v1beta1.QueryOracleProvidersInfoResponse>;

                /**
                 * Calls OracleProviderPrices.
                 * @param request QueryOracleProviderPricesRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryOracleProviderPricesResponse
                 */
                public oracleProviderPrices(request: injective.oracle.v1beta1.IQueryOracleProviderPricesRequest, callback: injective.oracle.v1beta1.Query.OracleProviderPricesCallback): void;

                /**
                 * Calls OracleProviderPrices.
                 * @param request QueryOracleProviderPricesRequest message or plain object
                 * @returns Promise
                 */
                public oracleProviderPrices(request: injective.oracle.v1beta1.IQueryOracleProviderPricesRequest): Promise<injective.oracle.v1beta1.QueryOracleProviderPricesResponse>;

                /**
                 * Calls OraclePrice.
                 * @param request QueryOraclePriceRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryOraclePriceResponse
                 */
                public oraclePrice(request: injective.oracle.v1beta1.IQueryOraclePriceRequest, callback: injective.oracle.v1beta1.Query.OraclePriceCallback): void;

                /**
                 * Calls OraclePrice.
                 * @param request QueryOraclePriceRequest message or plain object
                 * @returns Promise
                 */
                public oraclePrice(request: injective.oracle.v1beta1.IQueryOraclePriceRequest): Promise<injective.oracle.v1beta1.QueryOraclePriceResponse>;

                /**
                 * Calls PythPrice.
                 * @param request QueryPythPriceRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryPythPriceResponse
                 */
                public pythPrice(request: injective.oracle.v1beta1.IQueryPythPriceRequest, callback: injective.oracle.v1beta1.Query.PythPriceCallback): void;

                /**
                 * Calls PythPrice.
                 * @param request QueryPythPriceRequest message or plain object
                 * @returns Promise
                 */
                public pythPrice(request: injective.oracle.v1beta1.IQueryPythPriceRequest): Promise<injective.oracle.v1beta1.QueryPythPriceResponse>;
            }

            namespace Query {

                /**
                 * Callback as used by {@link injective.oracle.v1beta1.Query#params}.
                 * @param error Error, if any
                 * @param [response] QueryParamsResponse
                 */
                type ParamsCallback = (error: (Error|null), response?: injective.oracle.v1beta1.QueryParamsResponse) => void;

                /**
                 * Callback as used by {@link injective.oracle.v1beta1.Query#bandRelayers}.
                 * @param error Error, if any
                 * @param [response] QueryBandRelayersResponse
                 */
                type BandRelayersCallback = (error: (Error|null), response?: injective.oracle.v1beta1.QueryBandRelayersResponse) => void;

                /**
                 * Callback as used by {@link injective.oracle.v1beta1.Query#bandPriceStates}.
                 * @param error Error, if any
                 * @param [response] QueryBandPriceStatesResponse
                 */
                type BandPriceStatesCallback = (error: (Error|null), response?: injective.oracle.v1beta1.QueryBandPriceStatesResponse) => void;

                /**
                 * Callback as used by {@link injective.oracle.v1beta1.Query#bandIBCPriceStates}.
                 * @param error Error, if any
                 * @param [response] QueryBandIBCPriceStatesResponse
                 */
                type BandIBCPriceStatesCallback = (error: (Error|null), response?: injective.oracle.v1beta1.QueryBandIBCPriceStatesResponse) => void;

                /**
                 * Callback as used by {@link injective.oracle.v1beta1.Query#priceFeedPriceStates}.
                 * @param error Error, if any
                 * @param [response] QueryPriceFeedPriceStatesResponse
                 */
                type PriceFeedPriceStatesCallback = (error: (Error|null), response?: injective.oracle.v1beta1.QueryPriceFeedPriceStatesResponse) => void;

                /**
                 * Callback as used by {@link injective.oracle.v1beta1.Query#coinbasePriceStates}.
                 * @param error Error, if any
                 * @param [response] QueryCoinbasePriceStatesResponse
                 */
                type CoinbasePriceStatesCallback = (error: (Error|null), response?: injective.oracle.v1beta1.QueryCoinbasePriceStatesResponse) => void;

                /**
                 * Callback as used by {@link injective.oracle.v1beta1.Query#pythPriceStates}.
                 * @param error Error, if any
                 * @param [response] QueryPythPriceStatesResponse
                 */
                type PythPriceStatesCallback = (error: (Error|null), response?: injective.oracle.v1beta1.QueryPythPriceStatesResponse) => void;

                /**
                 * Callback as used by {@link injective.oracle.v1beta1.Query#providerPriceState}.
                 * @param error Error, if any
                 * @param [response] QueryProviderPriceStateResponse
                 */
                type ProviderPriceStateCallback = (error: (Error|null), response?: injective.oracle.v1beta1.QueryProviderPriceStateResponse) => void;

                /**
                 * Callback as used by {@link injective.oracle.v1beta1.Query#oracleModuleState}.
                 * @param error Error, if any
                 * @param [response] QueryModuleStateResponse
                 */
                type OracleModuleStateCallback = (error: (Error|null), response?: injective.oracle.v1beta1.QueryModuleStateResponse) => void;

                /**
                 * Callback as used by {@link injective.oracle.v1beta1.Query#historicalPriceRecords}.
                 * @param error Error, if any
                 * @param [response] QueryHistoricalPriceRecordsResponse
                 */
                type HistoricalPriceRecordsCallback = (error: (Error|null), response?: injective.oracle.v1beta1.QueryHistoricalPriceRecordsResponse) => void;

                /**
                 * Callback as used by {@link injective.oracle.v1beta1.Query#oracleVolatility}.
                 * @param error Error, if any
                 * @param [response] QueryOracleVolatilityResponse
                 */
                type OracleVolatilityCallback = (error: (Error|null), response?: injective.oracle.v1beta1.QueryOracleVolatilityResponse) => void;

                /**
                 * Callback as used by {@link injective.oracle.v1beta1.Query#oracleProvidersInfo}.
                 * @param error Error, if any
                 * @param [response] QueryOracleProvidersInfoResponse
                 */
                type OracleProvidersInfoCallback = (error: (Error|null), response?: injective.oracle.v1beta1.QueryOracleProvidersInfoResponse) => void;

                /**
                 * Callback as used by {@link injective.oracle.v1beta1.Query#oracleProviderPrices}.
                 * @param error Error, if any
                 * @param [response] QueryOracleProviderPricesResponse
                 */
                type OracleProviderPricesCallback = (error: (Error|null), response?: injective.oracle.v1beta1.QueryOracleProviderPricesResponse) => void;

                /**
                 * Callback as used by {@link injective.oracle.v1beta1.Query#oraclePrice}.
                 * @param error Error, if any
                 * @param [response] QueryOraclePriceResponse
                 */
                type OraclePriceCallback = (error: (Error|null), response?: injective.oracle.v1beta1.QueryOraclePriceResponse) => void;

                /**
                 * Callback as used by {@link injective.oracle.v1beta1.Query#pythPrice}.
                 * @param error Error, if any
                 * @param [response] QueryPythPriceResponse
                 */
                type PythPriceCallback = (error: (Error|null), response?: injective.oracle.v1beta1.QueryPythPriceResponse) => void;
            }

            /** Properties of a QueryPythPriceRequest. */
            interface IQueryPythPriceRequest {

                /** QueryPythPriceRequest price_id */
                price_id?: (string|null);
            }

            /** Represents a QueryPythPriceRequest. */
            class QueryPythPriceRequest implements IQueryPythPriceRequest {

                /**
                 * Constructs a new QueryPythPriceRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.oracle.v1beta1.IQueryPythPriceRequest);

                /** QueryPythPriceRequest price_id. */
                public price_id: string;

                /**
                 * Encodes the specified QueryPythPriceRequest message. Does not implicitly {@link injective.oracle.v1beta1.QueryPythPriceRequest.verify|verify} messages.
                 * @param message QueryPythPriceRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.oracle.v1beta1.IQueryPythPriceRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryPythPriceRequest message, length delimited. Does not implicitly {@link injective.oracle.v1beta1.QueryPythPriceRequest.verify|verify} messages.
                 * @param message QueryPythPriceRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.oracle.v1beta1.IQueryPythPriceRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryPythPriceRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryPythPriceRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.oracle.v1beta1.QueryPythPriceRequest;

                /**
                 * Decodes a QueryPythPriceRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryPythPriceRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.oracle.v1beta1.QueryPythPriceRequest;

                /**
                 * Verifies a QueryPythPriceRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryPythPriceRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryPythPriceRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.oracle.v1beta1.QueryPythPriceRequest;

                /**
                 * Creates a plain object from a QueryPythPriceRequest message. Also converts values to other types if specified.
                 * @param message QueryPythPriceRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.oracle.v1beta1.QueryPythPriceRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryPythPriceRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryPythPriceResponse. */
            interface IQueryPythPriceResponse {

                /** QueryPythPriceResponse price_state */
                price_state?: (injective.oracle.v1beta1.IPythPriceState|null);
            }

            /** Represents a QueryPythPriceResponse. */
            class QueryPythPriceResponse implements IQueryPythPriceResponse {

                /**
                 * Constructs a new QueryPythPriceResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.oracle.v1beta1.IQueryPythPriceResponse);

                /** QueryPythPriceResponse price_state. */
                public price_state?: (injective.oracle.v1beta1.IPythPriceState|null);

                /**
                 * Encodes the specified QueryPythPriceResponse message. Does not implicitly {@link injective.oracle.v1beta1.QueryPythPriceResponse.verify|verify} messages.
                 * @param message QueryPythPriceResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.oracle.v1beta1.IQueryPythPriceResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryPythPriceResponse message, length delimited. Does not implicitly {@link injective.oracle.v1beta1.QueryPythPriceResponse.verify|verify} messages.
                 * @param message QueryPythPriceResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.oracle.v1beta1.IQueryPythPriceResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryPythPriceResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryPythPriceResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.oracle.v1beta1.QueryPythPriceResponse;

                /**
                 * Decodes a QueryPythPriceResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryPythPriceResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.oracle.v1beta1.QueryPythPriceResponse;

                /**
                 * Verifies a QueryPythPriceResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryPythPriceResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryPythPriceResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.oracle.v1beta1.QueryPythPriceResponse;

                /**
                 * Creates a plain object from a QueryPythPriceResponse message. Also converts values to other types if specified.
                 * @param message QueryPythPriceResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.oracle.v1beta1.QueryPythPriceResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryPythPriceResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryParamsRequest. */
            interface IQueryParamsRequest {
            }

            /** Represents a QueryParamsRequest. */
            class QueryParamsRequest implements IQueryParamsRequest {

                /**
                 * Constructs a new QueryParamsRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.oracle.v1beta1.IQueryParamsRequest);

                /**
                 * Encodes the specified QueryParamsRequest message. Does not implicitly {@link injective.oracle.v1beta1.QueryParamsRequest.verify|verify} messages.
                 * @param message QueryParamsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.oracle.v1beta1.IQueryParamsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryParamsRequest message, length delimited. Does not implicitly {@link injective.oracle.v1beta1.QueryParamsRequest.verify|verify} messages.
                 * @param message QueryParamsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.oracle.v1beta1.IQueryParamsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryParamsRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryParamsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.oracle.v1beta1.QueryParamsRequest;

                /**
                 * Decodes a QueryParamsRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryParamsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.oracle.v1beta1.QueryParamsRequest;

                /**
                 * Verifies a QueryParamsRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryParamsRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryParamsRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.oracle.v1beta1.QueryParamsRequest;

                /**
                 * Creates a plain object from a QueryParamsRequest message. Also converts values to other types if specified.
                 * @param message QueryParamsRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.oracle.v1beta1.QueryParamsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryParamsRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryParamsResponse. */
            interface IQueryParamsResponse {

                /** QueryParamsResponse params */
                params?: (injective.oracle.v1beta1.IParams|null);
            }

            /** Represents a QueryParamsResponse. */
            class QueryParamsResponse implements IQueryParamsResponse {

                /**
                 * Constructs a new QueryParamsResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.oracle.v1beta1.IQueryParamsResponse);

                /** QueryParamsResponse params. */
                public params?: (injective.oracle.v1beta1.IParams|null);

                /**
                 * Encodes the specified QueryParamsResponse message. Does not implicitly {@link injective.oracle.v1beta1.QueryParamsResponse.verify|verify} messages.
                 * @param message QueryParamsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.oracle.v1beta1.IQueryParamsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryParamsResponse message, length delimited. Does not implicitly {@link injective.oracle.v1beta1.QueryParamsResponse.verify|verify} messages.
                 * @param message QueryParamsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.oracle.v1beta1.IQueryParamsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryParamsResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryParamsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.oracle.v1beta1.QueryParamsResponse;

                /**
                 * Decodes a QueryParamsResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryParamsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.oracle.v1beta1.QueryParamsResponse;

                /**
                 * Verifies a QueryParamsResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryParamsResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryParamsResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.oracle.v1beta1.QueryParamsResponse;

                /**
                 * Creates a plain object from a QueryParamsResponse message. Also converts values to other types if specified.
                 * @param message QueryParamsResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.oracle.v1beta1.QueryParamsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryParamsResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryBandRelayersRequest. */
            interface IQueryBandRelayersRequest {
            }

            /** Represents a QueryBandRelayersRequest. */
            class QueryBandRelayersRequest implements IQueryBandRelayersRequest {

                /**
                 * Constructs a new QueryBandRelayersRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.oracle.v1beta1.IQueryBandRelayersRequest);

                /**
                 * Encodes the specified QueryBandRelayersRequest message. Does not implicitly {@link injective.oracle.v1beta1.QueryBandRelayersRequest.verify|verify} messages.
                 * @param message QueryBandRelayersRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.oracle.v1beta1.IQueryBandRelayersRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryBandRelayersRequest message, length delimited. Does not implicitly {@link injective.oracle.v1beta1.QueryBandRelayersRequest.verify|verify} messages.
                 * @param message QueryBandRelayersRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.oracle.v1beta1.IQueryBandRelayersRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryBandRelayersRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryBandRelayersRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.oracle.v1beta1.QueryBandRelayersRequest;

                /**
                 * Decodes a QueryBandRelayersRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryBandRelayersRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.oracle.v1beta1.QueryBandRelayersRequest;

                /**
                 * Verifies a QueryBandRelayersRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryBandRelayersRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryBandRelayersRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.oracle.v1beta1.QueryBandRelayersRequest;

                /**
                 * Creates a plain object from a QueryBandRelayersRequest message. Also converts values to other types if specified.
                 * @param message QueryBandRelayersRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.oracle.v1beta1.QueryBandRelayersRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryBandRelayersRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryBandRelayersResponse. */
            interface IQueryBandRelayersResponse {

                /** QueryBandRelayersResponse relayers */
                relayers?: (string[]|null);
            }

            /** Represents a QueryBandRelayersResponse. */
            class QueryBandRelayersResponse implements IQueryBandRelayersResponse {

                /**
                 * Constructs a new QueryBandRelayersResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.oracle.v1beta1.IQueryBandRelayersResponse);

                /** QueryBandRelayersResponse relayers. */
                public relayers: string[];

                /**
                 * Encodes the specified QueryBandRelayersResponse message. Does not implicitly {@link injective.oracle.v1beta1.QueryBandRelayersResponse.verify|verify} messages.
                 * @param message QueryBandRelayersResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.oracle.v1beta1.IQueryBandRelayersResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryBandRelayersResponse message, length delimited. Does not implicitly {@link injective.oracle.v1beta1.QueryBandRelayersResponse.verify|verify} messages.
                 * @param message QueryBandRelayersResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.oracle.v1beta1.IQueryBandRelayersResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryBandRelayersResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryBandRelayersResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.oracle.v1beta1.QueryBandRelayersResponse;

                /**
                 * Decodes a QueryBandRelayersResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryBandRelayersResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.oracle.v1beta1.QueryBandRelayersResponse;

                /**
                 * Verifies a QueryBandRelayersResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryBandRelayersResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryBandRelayersResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.oracle.v1beta1.QueryBandRelayersResponse;

                /**
                 * Creates a plain object from a QueryBandRelayersResponse message. Also converts values to other types if specified.
                 * @param message QueryBandRelayersResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.oracle.v1beta1.QueryBandRelayersResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryBandRelayersResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryBandPriceStatesRequest. */
            interface IQueryBandPriceStatesRequest {
            }

            /** Represents a QueryBandPriceStatesRequest. */
            class QueryBandPriceStatesRequest implements IQueryBandPriceStatesRequest {

                /**
                 * Constructs a new QueryBandPriceStatesRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.oracle.v1beta1.IQueryBandPriceStatesRequest);

                /**
                 * Encodes the specified QueryBandPriceStatesRequest message. Does not implicitly {@link injective.oracle.v1beta1.QueryBandPriceStatesRequest.verify|verify} messages.
                 * @param message QueryBandPriceStatesRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.oracle.v1beta1.IQueryBandPriceStatesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryBandPriceStatesRequest message, length delimited. Does not implicitly {@link injective.oracle.v1beta1.QueryBandPriceStatesRequest.verify|verify} messages.
                 * @param message QueryBandPriceStatesRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.oracle.v1beta1.IQueryBandPriceStatesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryBandPriceStatesRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryBandPriceStatesRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.oracle.v1beta1.QueryBandPriceStatesRequest;

                /**
                 * Decodes a QueryBandPriceStatesRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryBandPriceStatesRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.oracle.v1beta1.QueryBandPriceStatesRequest;

                /**
                 * Verifies a QueryBandPriceStatesRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryBandPriceStatesRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryBandPriceStatesRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.oracle.v1beta1.QueryBandPriceStatesRequest;

                /**
                 * Creates a plain object from a QueryBandPriceStatesRequest message. Also converts values to other types if specified.
                 * @param message QueryBandPriceStatesRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.oracle.v1beta1.QueryBandPriceStatesRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryBandPriceStatesRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryBandPriceStatesResponse. */
            interface IQueryBandPriceStatesResponse {

                /** QueryBandPriceStatesResponse price_states */
                price_states?: (injective.oracle.v1beta1.IBandPriceState[]|null);
            }

            /** Represents a QueryBandPriceStatesResponse. */
            class QueryBandPriceStatesResponse implements IQueryBandPriceStatesResponse {

                /**
                 * Constructs a new QueryBandPriceStatesResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.oracle.v1beta1.IQueryBandPriceStatesResponse);

                /** QueryBandPriceStatesResponse price_states. */
                public price_states: injective.oracle.v1beta1.IBandPriceState[];

                /**
                 * Encodes the specified QueryBandPriceStatesResponse message. Does not implicitly {@link injective.oracle.v1beta1.QueryBandPriceStatesResponse.verify|verify} messages.
                 * @param message QueryBandPriceStatesResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.oracle.v1beta1.IQueryBandPriceStatesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryBandPriceStatesResponse message, length delimited. Does not implicitly {@link injective.oracle.v1beta1.QueryBandPriceStatesResponse.verify|verify} messages.
                 * @param message QueryBandPriceStatesResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.oracle.v1beta1.IQueryBandPriceStatesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryBandPriceStatesResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryBandPriceStatesResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.oracle.v1beta1.QueryBandPriceStatesResponse;

                /**
                 * Decodes a QueryBandPriceStatesResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryBandPriceStatesResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.oracle.v1beta1.QueryBandPriceStatesResponse;

                /**
                 * Verifies a QueryBandPriceStatesResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryBandPriceStatesResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryBandPriceStatesResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.oracle.v1beta1.QueryBandPriceStatesResponse;

                /**
                 * Creates a plain object from a QueryBandPriceStatesResponse message. Also converts values to other types if specified.
                 * @param message QueryBandPriceStatesResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.oracle.v1beta1.QueryBandPriceStatesResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryBandPriceStatesResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryBandIBCPriceStatesRequest. */
            interface IQueryBandIBCPriceStatesRequest {
            }

            /** Represents a QueryBandIBCPriceStatesRequest. */
            class QueryBandIBCPriceStatesRequest implements IQueryBandIBCPriceStatesRequest {

                /**
                 * Constructs a new QueryBandIBCPriceStatesRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.oracle.v1beta1.IQueryBandIBCPriceStatesRequest);

                /**
                 * Encodes the specified QueryBandIBCPriceStatesRequest message. Does not implicitly {@link injective.oracle.v1beta1.QueryBandIBCPriceStatesRequest.verify|verify} messages.
                 * @param message QueryBandIBCPriceStatesRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.oracle.v1beta1.IQueryBandIBCPriceStatesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryBandIBCPriceStatesRequest message, length delimited. Does not implicitly {@link injective.oracle.v1beta1.QueryBandIBCPriceStatesRequest.verify|verify} messages.
                 * @param message QueryBandIBCPriceStatesRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.oracle.v1beta1.IQueryBandIBCPriceStatesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryBandIBCPriceStatesRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryBandIBCPriceStatesRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.oracle.v1beta1.QueryBandIBCPriceStatesRequest;

                /**
                 * Decodes a QueryBandIBCPriceStatesRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryBandIBCPriceStatesRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.oracle.v1beta1.QueryBandIBCPriceStatesRequest;

                /**
                 * Verifies a QueryBandIBCPriceStatesRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryBandIBCPriceStatesRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryBandIBCPriceStatesRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.oracle.v1beta1.QueryBandIBCPriceStatesRequest;

                /**
                 * Creates a plain object from a QueryBandIBCPriceStatesRequest message. Also converts values to other types if specified.
                 * @param message QueryBandIBCPriceStatesRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.oracle.v1beta1.QueryBandIBCPriceStatesRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryBandIBCPriceStatesRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryBandIBCPriceStatesResponse. */
            interface IQueryBandIBCPriceStatesResponse {

                /** QueryBandIBCPriceStatesResponse price_states */
                price_states?: (injective.oracle.v1beta1.IBandPriceState[]|null);
            }

            /** Represents a QueryBandIBCPriceStatesResponse. */
            class QueryBandIBCPriceStatesResponse implements IQueryBandIBCPriceStatesResponse {

                /**
                 * Constructs a new QueryBandIBCPriceStatesResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.oracle.v1beta1.IQueryBandIBCPriceStatesResponse);

                /** QueryBandIBCPriceStatesResponse price_states. */
                public price_states: injective.oracle.v1beta1.IBandPriceState[];

                /**
                 * Encodes the specified QueryBandIBCPriceStatesResponse message. Does not implicitly {@link injective.oracle.v1beta1.QueryBandIBCPriceStatesResponse.verify|verify} messages.
                 * @param message QueryBandIBCPriceStatesResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.oracle.v1beta1.IQueryBandIBCPriceStatesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryBandIBCPriceStatesResponse message, length delimited. Does not implicitly {@link injective.oracle.v1beta1.QueryBandIBCPriceStatesResponse.verify|verify} messages.
                 * @param message QueryBandIBCPriceStatesResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.oracle.v1beta1.IQueryBandIBCPriceStatesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryBandIBCPriceStatesResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryBandIBCPriceStatesResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.oracle.v1beta1.QueryBandIBCPriceStatesResponse;

                /**
                 * Decodes a QueryBandIBCPriceStatesResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryBandIBCPriceStatesResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.oracle.v1beta1.QueryBandIBCPriceStatesResponse;

                /**
                 * Verifies a QueryBandIBCPriceStatesResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryBandIBCPriceStatesResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryBandIBCPriceStatesResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.oracle.v1beta1.QueryBandIBCPriceStatesResponse;

                /**
                 * Creates a plain object from a QueryBandIBCPriceStatesResponse message. Also converts values to other types if specified.
                 * @param message QueryBandIBCPriceStatesResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.oracle.v1beta1.QueryBandIBCPriceStatesResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryBandIBCPriceStatesResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryPriceFeedPriceStatesRequest. */
            interface IQueryPriceFeedPriceStatesRequest {
            }

            /** Represents a QueryPriceFeedPriceStatesRequest. */
            class QueryPriceFeedPriceStatesRequest implements IQueryPriceFeedPriceStatesRequest {

                /**
                 * Constructs a new QueryPriceFeedPriceStatesRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.oracle.v1beta1.IQueryPriceFeedPriceStatesRequest);

                /**
                 * Encodes the specified QueryPriceFeedPriceStatesRequest message. Does not implicitly {@link injective.oracle.v1beta1.QueryPriceFeedPriceStatesRequest.verify|verify} messages.
                 * @param message QueryPriceFeedPriceStatesRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.oracle.v1beta1.IQueryPriceFeedPriceStatesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryPriceFeedPriceStatesRequest message, length delimited. Does not implicitly {@link injective.oracle.v1beta1.QueryPriceFeedPriceStatesRequest.verify|verify} messages.
                 * @param message QueryPriceFeedPriceStatesRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.oracle.v1beta1.IQueryPriceFeedPriceStatesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryPriceFeedPriceStatesRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryPriceFeedPriceStatesRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.oracle.v1beta1.QueryPriceFeedPriceStatesRequest;

                /**
                 * Decodes a QueryPriceFeedPriceStatesRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryPriceFeedPriceStatesRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.oracle.v1beta1.QueryPriceFeedPriceStatesRequest;

                /**
                 * Verifies a QueryPriceFeedPriceStatesRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryPriceFeedPriceStatesRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryPriceFeedPriceStatesRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.oracle.v1beta1.QueryPriceFeedPriceStatesRequest;

                /**
                 * Creates a plain object from a QueryPriceFeedPriceStatesRequest message. Also converts values to other types if specified.
                 * @param message QueryPriceFeedPriceStatesRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.oracle.v1beta1.QueryPriceFeedPriceStatesRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryPriceFeedPriceStatesRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryPriceFeedPriceStatesResponse. */
            interface IQueryPriceFeedPriceStatesResponse {

                /** QueryPriceFeedPriceStatesResponse price_states */
                price_states?: (injective.oracle.v1beta1.IPriceFeedState[]|null);
            }

            /** Represents a QueryPriceFeedPriceStatesResponse. */
            class QueryPriceFeedPriceStatesResponse implements IQueryPriceFeedPriceStatesResponse {

                /**
                 * Constructs a new QueryPriceFeedPriceStatesResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.oracle.v1beta1.IQueryPriceFeedPriceStatesResponse);

                /** QueryPriceFeedPriceStatesResponse price_states. */
                public price_states: injective.oracle.v1beta1.IPriceFeedState[];

                /**
                 * Encodes the specified QueryPriceFeedPriceStatesResponse message. Does not implicitly {@link injective.oracle.v1beta1.QueryPriceFeedPriceStatesResponse.verify|verify} messages.
                 * @param message QueryPriceFeedPriceStatesResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.oracle.v1beta1.IQueryPriceFeedPriceStatesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryPriceFeedPriceStatesResponse message, length delimited. Does not implicitly {@link injective.oracle.v1beta1.QueryPriceFeedPriceStatesResponse.verify|verify} messages.
                 * @param message QueryPriceFeedPriceStatesResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.oracle.v1beta1.IQueryPriceFeedPriceStatesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryPriceFeedPriceStatesResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryPriceFeedPriceStatesResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.oracle.v1beta1.QueryPriceFeedPriceStatesResponse;

                /**
                 * Decodes a QueryPriceFeedPriceStatesResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryPriceFeedPriceStatesResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.oracle.v1beta1.QueryPriceFeedPriceStatesResponse;

                /**
                 * Verifies a QueryPriceFeedPriceStatesResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryPriceFeedPriceStatesResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryPriceFeedPriceStatesResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.oracle.v1beta1.QueryPriceFeedPriceStatesResponse;

                /**
                 * Creates a plain object from a QueryPriceFeedPriceStatesResponse message. Also converts values to other types if specified.
                 * @param message QueryPriceFeedPriceStatesResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.oracle.v1beta1.QueryPriceFeedPriceStatesResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryPriceFeedPriceStatesResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryCoinbasePriceStatesRequest. */
            interface IQueryCoinbasePriceStatesRequest {
            }

            /** Represents a QueryCoinbasePriceStatesRequest. */
            class QueryCoinbasePriceStatesRequest implements IQueryCoinbasePriceStatesRequest {

                /**
                 * Constructs a new QueryCoinbasePriceStatesRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.oracle.v1beta1.IQueryCoinbasePriceStatesRequest);

                /**
                 * Encodes the specified QueryCoinbasePriceStatesRequest message. Does not implicitly {@link injective.oracle.v1beta1.QueryCoinbasePriceStatesRequest.verify|verify} messages.
                 * @param message QueryCoinbasePriceStatesRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.oracle.v1beta1.IQueryCoinbasePriceStatesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryCoinbasePriceStatesRequest message, length delimited. Does not implicitly {@link injective.oracle.v1beta1.QueryCoinbasePriceStatesRequest.verify|verify} messages.
                 * @param message QueryCoinbasePriceStatesRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.oracle.v1beta1.IQueryCoinbasePriceStatesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryCoinbasePriceStatesRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryCoinbasePriceStatesRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.oracle.v1beta1.QueryCoinbasePriceStatesRequest;

                /**
                 * Decodes a QueryCoinbasePriceStatesRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryCoinbasePriceStatesRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.oracle.v1beta1.QueryCoinbasePriceStatesRequest;

                /**
                 * Verifies a QueryCoinbasePriceStatesRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryCoinbasePriceStatesRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryCoinbasePriceStatesRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.oracle.v1beta1.QueryCoinbasePriceStatesRequest;

                /**
                 * Creates a plain object from a QueryCoinbasePriceStatesRequest message. Also converts values to other types if specified.
                 * @param message QueryCoinbasePriceStatesRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.oracle.v1beta1.QueryCoinbasePriceStatesRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryCoinbasePriceStatesRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryCoinbasePriceStatesResponse. */
            interface IQueryCoinbasePriceStatesResponse {

                /** QueryCoinbasePriceStatesResponse price_states */
                price_states?: (injective.oracle.v1beta1.ICoinbasePriceState[]|null);
            }

            /** Represents a QueryCoinbasePriceStatesResponse. */
            class QueryCoinbasePriceStatesResponse implements IQueryCoinbasePriceStatesResponse {

                /**
                 * Constructs a new QueryCoinbasePriceStatesResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.oracle.v1beta1.IQueryCoinbasePriceStatesResponse);

                /** QueryCoinbasePriceStatesResponse price_states. */
                public price_states: injective.oracle.v1beta1.ICoinbasePriceState[];

                /**
                 * Encodes the specified QueryCoinbasePriceStatesResponse message. Does not implicitly {@link injective.oracle.v1beta1.QueryCoinbasePriceStatesResponse.verify|verify} messages.
                 * @param message QueryCoinbasePriceStatesResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.oracle.v1beta1.IQueryCoinbasePriceStatesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryCoinbasePriceStatesResponse message, length delimited. Does not implicitly {@link injective.oracle.v1beta1.QueryCoinbasePriceStatesResponse.verify|verify} messages.
                 * @param message QueryCoinbasePriceStatesResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.oracle.v1beta1.IQueryCoinbasePriceStatesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryCoinbasePriceStatesResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryCoinbasePriceStatesResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.oracle.v1beta1.QueryCoinbasePriceStatesResponse;

                /**
                 * Decodes a QueryCoinbasePriceStatesResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryCoinbasePriceStatesResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.oracle.v1beta1.QueryCoinbasePriceStatesResponse;

                /**
                 * Verifies a QueryCoinbasePriceStatesResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryCoinbasePriceStatesResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryCoinbasePriceStatesResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.oracle.v1beta1.QueryCoinbasePriceStatesResponse;

                /**
                 * Creates a plain object from a QueryCoinbasePriceStatesResponse message. Also converts values to other types if specified.
                 * @param message QueryCoinbasePriceStatesResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.oracle.v1beta1.QueryCoinbasePriceStatesResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryCoinbasePriceStatesResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryPythPriceStatesRequest. */
            interface IQueryPythPriceStatesRequest {
            }

            /** Represents a QueryPythPriceStatesRequest. */
            class QueryPythPriceStatesRequest implements IQueryPythPriceStatesRequest {

                /**
                 * Constructs a new QueryPythPriceStatesRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.oracle.v1beta1.IQueryPythPriceStatesRequest);

                /**
                 * Encodes the specified QueryPythPriceStatesRequest message. Does not implicitly {@link injective.oracle.v1beta1.QueryPythPriceStatesRequest.verify|verify} messages.
                 * @param message QueryPythPriceStatesRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.oracle.v1beta1.IQueryPythPriceStatesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryPythPriceStatesRequest message, length delimited. Does not implicitly {@link injective.oracle.v1beta1.QueryPythPriceStatesRequest.verify|verify} messages.
                 * @param message QueryPythPriceStatesRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.oracle.v1beta1.IQueryPythPriceStatesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryPythPriceStatesRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryPythPriceStatesRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.oracle.v1beta1.QueryPythPriceStatesRequest;

                /**
                 * Decodes a QueryPythPriceStatesRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryPythPriceStatesRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.oracle.v1beta1.QueryPythPriceStatesRequest;

                /**
                 * Verifies a QueryPythPriceStatesRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryPythPriceStatesRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryPythPriceStatesRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.oracle.v1beta1.QueryPythPriceStatesRequest;

                /**
                 * Creates a plain object from a QueryPythPriceStatesRequest message. Also converts values to other types if specified.
                 * @param message QueryPythPriceStatesRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.oracle.v1beta1.QueryPythPriceStatesRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryPythPriceStatesRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryPythPriceStatesResponse. */
            interface IQueryPythPriceStatesResponse {

                /** QueryPythPriceStatesResponse price_states */
                price_states?: (injective.oracle.v1beta1.IPythPriceState[]|null);
            }

            /** Represents a QueryPythPriceStatesResponse. */
            class QueryPythPriceStatesResponse implements IQueryPythPriceStatesResponse {

                /**
                 * Constructs a new QueryPythPriceStatesResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.oracle.v1beta1.IQueryPythPriceStatesResponse);

                /** QueryPythPriceStatesResponse price_states. */
                public price_states: injective.oracle.v1beta1.IPythPriceState[];

                /**
                 * Encodes the specified QueryPythPriceStatesResponse message. Does not implicitly {@link injective.oracle.v1beta1.QueryPythPriceStatesResponse.verify|verify} messages.
                 * @param message QueryPythPriceStatesResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.oracle.v1beta1.IQueryPythPriceStatesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryPythPriceStatesResponse message, length delimited. Does not implicitly {@link injective.oracle.v1beta1.QueryPythPriceStatesResponse.verify|verify} messages.
                 * @param message QueryPythPriceStatesResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.oracle.v1beta1.IQueryPythPriceStatesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryPythPriceStatesResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryPythPriceStatesResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.oracle.v1beta1.QueryPythPriceStatesResponse;

                /**
                 * Decodes a QueryPythPriceStatesResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryPythPriceStatesResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.oracle.v1beta1.QueryPythPriceStatesResponse;

                /**
                 * Verifies a QueryPythPriceStatesResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryPythPriceStatesResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryPythPriceStatesResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.oracle.v1beta1.QueryPythPriceStatesResponse;

                /**
                 * Creates a plain object from a QueryPythPriceStatesResponse message. Also converts values to other types if specified.
                 * @param message QueryPythPriceStatesResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.oracle.v1beta1.QueryPythPriceStatesResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryPythPriceStatesResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryProviderPriceStateRequest. */
            interface IQueryProviderPriceStateRequest {

                /** QueryProviderPriceStateRequest provider */
                provider?: (string|null);

                /** QueryProviderPriceStateRequest symbol */
                symbol?: (string|null);
            }

            /** Represents a QueryProviderPriceStateRequest. */
            class QueryProviderPriceStateRequest implements IQueryProviderPriceStateRequest {

                /**
                 * Constructs a new QueryProviderPriceStateRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.oracle.v1beta1.IQueryProviderPriceStateRequest);

                /** QueryProviderPriceStateRequest provider. */
                public provider: string;

                /** QueryProviderPriceStateRequest symbol. */
                public symbol: string;

                /**
                 * Encodes the specified QueryProviderPriceStateRequest message. Does not implicitly {@link injective.oracle.v1beta1.QueryProviderPriceStateRequest.verify|verify} messages.
                 * @param message QueryProviderPriceStateRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.oracle.v1beta1.IQueryProviderPriceStateRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryProviderPriceStateRequest message, length delimited. Does not implicitly {@link injective.oracle.v1beta1.QueryProviderPriceStateRequest.verify|verify} messages.
                 * @param message QueryProviderPriceStateRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.oracle.v1beta1.IQueryProviderPriceStateRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryProviderPriceStateRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryProviderPriceStateRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.oracle.v1beta1.QueryProviderPriceStateRequest;

                /**
                 * Decodes a QueryProviderPriceStateRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryProviderPriceStateRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.oracle.v1beta1.QueryProviderPriceStateRequest;

                /**
                 * Verifies a QueryProviderPriceStateRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryProviderPriceStateRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryProviderPriceStateRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.oracle.v1beta1.QueryProviderPriceStateRequest;

                /**
                 * Creates a plain object from a QueryProviderPriceStateRequest message. Also converts values to other types if specified.
                 * @param message QueryProviderPriceStateRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.oracle.v1beta1.QueryProviderPriceStateRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryProviderPriceStateRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryProviderPriceStateResponse. */
            interface IQueryProviderPriceStateResponse {

                /** QueryProviderPriceStateResponse price_state */
                price_state?: (injective.oracle.v1beta1.IPriceState|null);
            }

            /** Represents a QueryProviderPriceStateResponse. */
            class QueryProviderPriceStateResponse implements IQueryProviderPriceStateResponse {

                /**
                 * Constructs a new QueryProviderPriceStateResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.oracle.v1beta1.IQueryProviderPriceStateResponse);

                /** QueryProviderPriceStateResponse price_state. */
                public price_state?: (injective.oracle.v1beta1.IPriceState|null);

                /**
                 * Encodes the specified QueryProviderPriceStateResponse message. Does not implicitly {@link injective.oracle.v1beta1.QueryProviderPriceStateResponse.verify|verify} messages.
                 * @param message QueryProviderPriceStateResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.oracle.v1beta1.IQueryProviderPriceStateResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryProviderPriceStateResponse message, length delimited. Does not implicitly {@link injective.oracle.v1beta1.QueryProviderPriceStateResponse.verify|verify} messages.
                 * @param message QueryProviderPriceStateResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.oracle.v1beta1.IQueryProviderPriceStateResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryProviderPriceStateResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryProviderPriceStateResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.oracle.v1beta1.QueryProviderPriceStateResponse;

                /**
                 * Decodes a QueryProviderPriceStateResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryProviderPriceStateResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.oracle.v1beta1.QueryProviderPriceStateResponse;

                /**
                 * Verifies a QueryProviderPriceStateResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryProviderPriceStateResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryProviderPriceStateResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.oracle.v1beta1.QueryProviderPriceStateResponse;

                /**
                 * Creates a plain object from a QueryProviderPriceStateResponse message. Also converts values to other types if specified.
                 * @param message QueryProviderPriceStateResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.oracle.v1beta1.QueryProviderPriceStateResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryProviderPriceStateResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryModuleStateRequest. */
            interface IQueryModuleStateRequest {
            }

            /** Represents a QueryModuleStateRequest. */
            class QueryModuleStateRequest implements IQueryModuleStateRequest {

                /**
                 * Constructs a new QueryModuleStateRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.oracle.v1beta1.IQueryModuleStateRequest);

                /**
                 * Encodes the specified QueryModuleStateRequest message. Does not implicitly {@link injective.oracle.v1beta1.QueryModuleStateRequest.verify|verify} messages.
                 * @param message QueryModuleStateRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.oracle.v1beta1.IQueryModuleStateRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryModuleStateRequest message, length delimited. Does not implicitly {@link injective.oracle.v1beta1.QueryModuleStateRequest.verify|verify} messages.
                 * @param message QueryModuleStateRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.oracle.v1beta1.IQueryModuleStateRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryModuleStateRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryModuleStateRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.oracle.v1beta1.QueryModuleStateRequest;

                /**
                 * Decodes a QueryModuleStateRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryModuleStateRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.oracle.v1beta1.QueryModuleStateRequest;

                /**
                 * Verifies a QueryModuleStateRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryModuleStateRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryModuleStateRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.oracle.v1beta1.QueryModuleStateRequest;

                /**
                 * Creates a plain object from a QueryModuleStateRequest message. Also converts values to other types if specified.
                 * @param message QueryModuleStateRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.oracle.v1beta1.QueryModuleStateRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryModuleStateRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryModuleStateResponse. */
            interface IQueryModuleStateResponse {

                /** QueryModuleStateResponse state */
                state?: (injective.oracle.v1beta1.IGenesisState|null);
            }

            /** Represents a QueryModuleStateResponse. */
            class QueryModuleStateResponse implements IQueryModuleStateResponse {

                /**
                 * Constructs a new QueryModuleStateResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.oracle.v1beta1.IQueryModuleStateResponse);

                /** QueryModuleStateResponse state. */
                public state?: (injective.oracle.v1beta1.IGenesisState|null);

                /**
                 * Encodes the specified QueryModuleStateResponse message. Does not implicitly {@link injective.oracle.v1beta1.QueryModuleStateResponse.verify|verify} messages.
                 * @param message QueryModuleStateResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.oracle.v1beta1.IQueryModuleStateResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryModuleStateResponse message, length delimited. Does not implicitly {@link injective.oracle.v1beta1.QueryModuleStateResponse.verify|verify} messages.
                 * @param message QueryModuleStateResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.oracle.v1beta1.IQueryModuleStateResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryModuleStateResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryModuleStateResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.oracle.v1beta1.QueryModuleStateResponse;

                /**
                 * Decodes a QueryModuleStateResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryModuleStateResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.oracle.v1beta1.QueryModuleStateResponse;

                /**
                 * Verifies a QueryModuleStateResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryModuleStateResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryModuleStateResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.oracle.v1beta1.QueryModuleStateResponse;

                /**
                 * Creates a plain object from a QueryModuleStateResponse message. Also converts values to other types if specified.
                 * @param message QueryModuleStateResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.oracle.v1beta1.QueryModuleStateResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryModuleStateResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryHistoricalPriceRecordsRequest. */
            interface IQueryHistoricalPriceRecordsRequest {

                /** QueryHistoricalPriceRecordsRequest oracle */
                oracle?: (injective.oracle.v1beta1.OracleType|null);

                /** QueryHistoricalPriceRecordsRequest symbol_id */
                symbol_id?: (string|null);
            }

            /** Represents a QueryHistoricalPriceRecordsRequest. */
            class QueryHistoricalPriceRecordsRequest implements IQueryHistoricalPriceRecordsRequest {

                /**
                 * Constructs a new QueryHistoricalPriceRecordsRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.oracle.v1beta1.IQueryHistoricalPriceRecordsRequest);

                /** QueryHistoricalPriceRecordsRequest oracle. */
                public oracle: injective.oracle.v1beta1.OracleType;

                /** QueryHistoricalPriceRecordsRequest symbol_id. */
                public symbol_id: string;

                /**
                 * Encodes the specified QueryHistoricalPriceRecordsRequest message. Does not implicitly {@link injective.oracle.v1beta1.QueryHistoricalPriceRecordsRequest.verify|verify} messages.
                 * @param message QueryHistoricalPriceRecordsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.oracle.v1beta1.IQueryHistoricalPriceRecordsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryHistoricalPriceRecordsRequest message, length delimited. Does not implicitly {@link injective.oracle.v1beta1.QueryHistoricalPriceRecordsRequest.verify|verify} messages.
                 * @param message QueryHistoricalPriceRecordsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.oracle.v1beta1.IQueryHistoricalPriceRecordsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryHistoricalPriceRecordsRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryHistoricalPriceRecordsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.oracle.v1beta1.QueryHistoricalPriceRecordsRequest;

                /**
                 * Decodes a QueryHistoricalPriceRecordsRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryHistoricalPriceRecordsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.oracle.v1beta1.QueryHistoricalPriceRecordsRequest;

                /**
                 * Verifies a QueryHistoricalPriceRecordsRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryHistoricalPriceRecordsRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryHistoricalPriceRecordsRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.oracle.v1beta1.QueryHistoricalPriceRecordsRequest;

                /**
                 * Creates a plain object from a QueryHistoricalPriceRecordsRequest message. Also converts values to other types if specified.
                 * @param message QueryHistoricalPriceRecordsRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.oracle.v1beta1.QueryHistoricalPriceRecordsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryHistoricalPriceRecordsRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryHistoricalPriceRecordsResponse. */
            interface IQueryHistoricalPriceRecordsResponse {

                /** QueryHistoricalPriceRecordsResponse price_records */
                price_records?: (injective.oracle.v1beta1.IPriceRecords[]|null);
            }

            /** Represents a QueryHistoricalPriceRecordsResponse. */
            class QueryHistoricalPriceRecordsResponse implements IQueryHistoricalPriceRecordsResponse {

                /**
                 * Constructs a new QueryHistoricalPriceRecordsResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.oracle.v1beta1.IQueryHistoricalPriceRecordsResponse);

                /** QueryHistoricalPriceRecordsResponse price_records. */
                public price_records: injective.oracle.v1beta1.IPriceRecords[];

                /**
                 * Encodes the specified QueryHistoricalPriceRecordsResponse message. Does not implicitly {@link injective.oracle.v1beta1.QueryHistoricalPriceRecordsResponse.verify|verify} messages.
                 * @param message QueryHistoricalPriceRecordsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.oracle.v1beta1.IQueryHistoricalPriceRecordsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryHistoricalPriceRecordsResponse message, length delimited. Does not implicitly {@link injective.oracle.v1beta1.QueryHistoricalPriceRecordsResponse.verify|verify} messages.
                 * @param message QueryHistoricalPriceRecordsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.oracle.v1beta1.IQueryHistoricalPriceRecordsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryHistoricalPriceRecordsResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryHistoricalPriceRecordsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.oracle.v1beta1.QueryHistoricalPriceRecordsResponse;

                /**
                 * Decodes a QueryHistoricalPriceRecordsResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryHistoricalPriceRecordsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.oracle.v1beta1.QueryHistoricalPriceRecordsResponse;

                /**
                 * Verifies a QueryHistoricalPriceRecordsResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryHistoricalPriceRecordsResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryHistoricalPriceRecordsResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.oracle.v1beta1.QueryHistoricalPriceRecordsResponse;

                /**
                 * Creates a plain object from a QueryHistoricalPriceRecordsResponse message. Also converts values to other types if specified.
                 * @param message QueryHistoricalPriceRecordsResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.oracle.v1beta1.QueryHistoricalPriceRecordsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryHistoricalPriceRecordsResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an OracleHistoryOptions. */
            interface IOracleHistoryOptions {

                /** OracleHistoryOptions max_age */
                max_age?: (number|null);

                /** OracleHistoryOptions include_raw_history */
                include_raw_history?: (boolean|null);

                /** OracleHistoryOptions include_metadata */
                include_metadata?: (boolean|null);
            }

            /** Represents an OracleHistoryOptions. */
            class OracleHistoryOptions implements IOracleHistoryOptions {

                /**
                 * Constructs a new OracleHistoryOptions.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.oracle.v1beta1.IOracleHistoryOptions);

                /** OracleHistoryOptions max_age. */
                public max_age: number;

                /** OracleHistoryOptions include_raw_history. */
                public include_raw_history: boolean;

                /** OracleHistoryOptions include_metadata. */
                public include_metadata: boolean;

                /**
                 * Encodes the specified OracleHistoryOptions message. Does not implicitly {@link injective.oracle.v1beta1.OracleHistoryOptions.verify|verify} messages.
                 * @param message OracleHistoryOptions message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.oracle.v1beta1.IOracleHistoryOptions, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified OracleHistoryOptions message, length delimited. Does not implicitly {@link injective.oracle.v1beta1.OracleHistoryOptions.verify|verify} messages.
                 * @param message OracleHistoryOptions message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.oracle.v1beta1.IOracleHistoryOptions, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an OracleHistoryOptions message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns OracleHistoryOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.oracle.v1beta1.OracleHistoryOptions;

                /**
                 * Decodes an OracleHistoryOptions message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns OracleHistoryOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.oracle.v1beta1.OracleHistoryOptions;

                /**
                 * Verifies an OracleHistoryOptions message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an OracleHistoryOptions message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns OracleHistoryOptions
                 */
                public static fromObject(object: { [k: string]: any }): injective.oracle.v1beta1.OracleHistoryOptions;

                /**
                 * Creates a plain object from an OracleHistoryOptions message. Also converts values to other types if specified.
                 * @param message OracleHistoryOptions
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.oracle.v1beta1.OracleHistoryOptions, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this OracleHistoryOptions to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryOracleVolatilityRequest. */
            interface IQueryOracleVolatilityRequest {

                /** QueryOracleVolatilityRequest base_info */
                base_info?: (injective.oracle.v1beta1.IOracleInfo|null);

                /** QueryOracleVolatilityRequest quote_info */
                quote_info?: (injective.oracle.v1beta1.IOracleInfo|null);

                /** QueryOracleVolatilityRequest oracle_history_options */
                oracle_history_options?: (injective.oracle.v1beta1.IOracleHistoryOptions|null);
            }

            /** Represents a QueryOracleVolatilityRequest. */
            class QueryOracleVolatilityRequest implements IQueryOracleVolatilityRequest {

                /**
                 * Constructs a new QueryOracleVolatilityRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.oracle.v1beta1.IQueryOracleVolatilityRequest);

                /** QueryOracleVolatilityRequest base_info. */
                public base_info?: (injective.oracle.v1beta1.IOracleInfo|null);

                /** QueryOracleVolatilityRequest quote_info. */
                public quote_info?: (injective.oracle.v1beta1.IOracleInfo|null);

                /** QueryOracleVolatilityRequest oracle_history_options. */
                public oracle_history_options?: (injective.oracle.v1beta1.IOracleHistoryOptions|null);

                /**
                 * Encodes the specified QueryOracleVolatilityRequest message. Does not implicitly {@link injective.oracle.v1beta1.QueryOracleVolatilityRequest.verify|verify} messages.
                 * @param message QueryOracleVolatilityRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.oracle.v1beta1.IQueryOracleVolatilityRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryOracleVolatilityRequest message, length delimited. Does not implicitly {@link injective.oracle.v1beta1.QueryOracleVolatilityRequest.verify|verify} messages.
                 * @param message QueryOracleVolatilityRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.oracle.v1beta1.IQueryOracleVolatilityRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryOracleVolatilityRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryOracleVolatilityRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.oracle.v1beta1.QueryOracleVolatilityRequest;

                /**
                 * Decodes a QueryOracleVolatilityRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryOracleVolatilityRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.oracle.v1beta1.QueryOracleVolatilityRequest;

                /**
                 * Verifies a QueryOracleVolatilityRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryOracleVolatilityRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryOracleVolatilityRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.oracle.v1beta1.QueryOracleVolatilityRequest;

                /**
                 * Creates a plain object from a QueryOracleVolatilityRequest message. Also converts values to other types if specified.
                 * @param message QueryOracleVolatilityRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.oracle.v1beta1.QueryOracleVolatilityRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryOracleVolatilityRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryOracleVolatilityResponse. */
            interface IQueryOracleVolatilityResponse {

                /** QueryOracleVolatilityResponse volatility */
                volatility?: (string|null);

                /** QueryOracleVolatilityResponse history_metadata */
                history_metadata?: (injective.oracle.v1beta1.IMetadataStatistics|null);

                /** QueryOracleVolatilityResponse raw_history */
                raw_history?: (injective.oracle.v1beta1.IPriceRecord[]|null);
            }

            /** Represents a QueryOracleVolatilityResponse. */
            class QueryOracleVolatilityResponse implements IQueryOracleVolatilityResponse {

                /**
                 * Constructs a new QueryOracleVolatilityResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.oracle.v1beta1.IQueryOracleVolatilityResponse);

                /** QueryOracleVolatilityResponse volatility. */
                public volatility: string;

                /** QueryOracleVolatilityResponse history_metadata. */
                public history_metadata?: (injective.oracle.v1beta1.IMetadataStatistics|null);

                /** QueryOracleVolatilityResponse raw_history. */
                public raw_history: injective.oracle.v1beta1.IPriceRecord[];

                /**
                 * Encodes the specified QueryOracleVolatilityResponse message. Does not implicitly {@link injective.oracle.v1beta1.QueryOracleVolatilityResponse.verify|verify} messages.
                 * @param message QueryOracleVolatilityResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.oracle.v1beta1.IQueryOracleVolatilityResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryOracleVolatilityResponse message, length delimited. Does not implicitly {@link injective.oracle.v1beta1.QueryOracleVolatilityResponse.verify|verify} messages.
                 * @param message QueryOracleVolatilityResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.oracle.v1beta1.IQueryOracleVolatilityResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryOracleVolatilityResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryOracleVolatilityResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.oracle.v1beta1.QueryOracleVolatilityResponse;

                /**
                 * Decodes a QueryOracleVolatilityResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryOracleVolatilityResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.oracle.v1beta1.QueryOracleVolatilityResponse;

                /**
                 * Verifies a QueryOracleVolatilityResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryOracleVolatilityResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryOracleVolatilityResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.oracle.v1beta1.QueryOracleVolatilityResponse;

                /**
                 * Creates a plain object from a QueryOracleVolatilityResponse message. Also converts values to other types if specified.
                 * @param message QueryOracleVolatilityResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.oracle.v1beta1.QueryOracleVolatilityResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryOracleVolatilityResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryOracleProvidersInfoRequest. */
            interface IQueryOracleProvidersInfoRequest {
            }

            /** Represents a QueryOracleProvidersInfoRequest. */
            class QueryOracleProvidersInfoRequest implements IQueryOracleProvidersInfoRequest {

                /**
                 * Constructs a new QueryOracleProvidersInfoRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.oracle.v1beta1.IQueryOracleProvidersInfoRequest);

                /**
                 * Encodes the specified QueryOracleProvidersInfoRequest message. Does not implicitly {@link injective.oracle.v1beta1.QueryOracleProvidersInfoRequest.verify|verify} messages.
                 * @param message QueryOracleProvidersInfoRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.oracle.v1beta1.IQueryOracleProvidersInfoRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryOracleProvidersInfoRequest message, length delimited. Does not implicitly {@link injective.oracle.v1beta1.QueryOracleProvidersInfoRequest.verify|verify} messages.
                 * @param message QueryOracleProvidersInfoRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.oracle.v1beta1.IQueryOracleProvidersInfoRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryOracleProvidersInfoRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryOracleProvidersInfoRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.oracle.v1beta1.QueryOracleProvidersInfoRequest;

                /**
                 * Decodes a QueryOracleProvidersInfoRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryOracleProvidersInfoRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.oracle.v1beta1.QueryOracleProvidersInfoRequest;

                /**
                 * Verifies a QueryOracleProvidersInfoRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryOracleProvidersInfoRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryOracleProvidersInfoRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.oracle.v1beta1.QueryOracleProvidersInfoRequest;

                /**
                 * Creates a plain object from a QueryOracleProvidersInfoRequest message. Also converts values to other types if specified.
                 * @param message QueryOracleProvidersInfoRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.oracle.v1beta1.QueryOracleProvidersInfoRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryOracleProvidersInfoRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryOracleProvidersInfoResponse. */
            interface IQueryOracleProvidersInfoResponse {

                /** QueryOracleProvidersInfoResponse providers */
                providers?: (injective.oracle.v1beta1.IProviderInfo[]|null);
            }

            /** Represents a QueryOracleProvidersInfoResponse. */
            class QueryOracleProvidersInfoResponse implements IQueryOracleProvidersInfoResponse {

                /**
                 * Constructs a new QueryOracleProvidersInfoResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.oracle.v1beta1.IQueryOracleProvidersInfoResponse);

                /** QueryOracleProvidersInfoResponse providers. */
                public providers: injective.oracle.v1beta1.IProviderInfo[];

                /**
                 * Encodes the specified QueryOracleProvidersInfoResponse message. Does not implicitly {@link injective.oracle.v1beta1.QueryOracleProvidersInfoResponse.verify|verify} messages.
                 * @param message QueryOracleProvidersInfoResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.oracle.v1beta1.IQueryOracleProvidersInfoResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryOracleProvidersInfoResponse message, length delimited. Does not implicitly {@link injective.oracle.v1beta1.QueryOracleProvidersInfoResponse.verify|verify} messages.
                 * @param message QueryOracleProvidersInfoResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.oracle.v1beta1.IQueryOracleProvidersInfoResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryOracleProvidersInfoResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryOracleProvidersInfoResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.oracle.v1beta1.QueryOracleProvidersInfoResponse;

                /**
                 * Decodes a QueryOracleProvidersInfoResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryOracleProvidersInfoResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.oracle.v1beta1.QueryOracleProvidersInfoResponse;

                /**
                 * Verifies a QueryOracleProvidersInfoResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryOracleProvidersInfoResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryOracleProvidersInfoResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.oracle.v1beta1.QueryOracleProvidersInfoResponse;

                /**
                 * Creates a plain object from a QueryOracleProvidersInfoResponse message. Also converts values to other types if specified.
                 * @param message QueryOracleProvidersInfoResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.oracle.v1beta1.QueryOracleProvidersInfoResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryOracleProvidersInfoResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryOracleProviderPricesRequest. */
            interface IQueryOracleProviderPricesRequest {

                /** QueryOracleProviderPricesRequest provider */
                provider?: (string|null);
            }

            /** Represents a QueryOracleProviderPricesRequest. */
            class QueryOracleProviderPricesRequest implements IQueryOracleProviderPricesRequest {

                /**
                 * Constructs a new QueryOracleProviderPricesRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.oracle.v1beta1.IQueryOracleProviderPricesRequest);

                /** QueryOracleProviderPricesRequest provider. */
                public provider: string;

                /**
                 * Encodes the specified QueryOracleProviderPricesRequest message. Does not implicitly {@link injective.oracle.v1beta1.QueryOracleProviderPricesRequest.verify|verify} messages.
                 * @param message QueryOracleProviderPricesRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.oracle.v1beta1.IQueryOracleProviderPricesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryOracleProviderPricesRequest message, length delimited. Does not implicitly {@link injective.oracle.v1beta1.QueryOracleProviderPricesRequest.verify|verify} messages.
                 * @param message QueryOracleProviderPricesRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.oracle.v1beta1.IQueryOracleProviderPricesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryOracleProviderPricesRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryOracleProviderPricesRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.oracle.v1beta1.QueryOracleProviderPricesRequest;

                /**
                 * Decodes a QueryOracleProviderPricesRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryOracleProviderPricesRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.oracle.v1beta1.QueryOracleProviderPricesRequest;

                /**
                 * Verifies a QueryOracleProviderPricesRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryOracleProviderPricesRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryOracleProviderPricesRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.oracle.v1beta1.QueryOracleProviderPricesRequest;

                /**
                 * Creates a plain object from a QueryOracleProviderPricesRequest message. Also converts values to other types if specified.
                 * @param message QueryOracleProviderPricesRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.oracle.v1beta1.QueryOracleProviderPricesRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryOracleProviderPricesRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryOracleProviderPricesResponse. */
            interface IQueryOracleProviderPricesResponse {

                /** QueryOracleProviderPricesResponse providerState */
                providerState?: (injective.oracle.v1beta1.IProviderState[]|null);
            }

            /** Represents a QueryOracleProviderPricesResponse. */
            class QueryOracleProviderPricesResponse implements IQueryOracleProviderPricesResponse {

                /**
                 * Constructs a new QueryOracleProviderPricesResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.oracle.v1beta1.IQueryOracleProviderPricesResponse);

                /** QueryOracleProviderPricesResponse providerState. */
                public providerState: injective.oracle.v1beta1.IProviderState[];

                /**
                 * Encodes the specified QueryOracleProviderPricesResponse message. Does not implicitly {@link injective.oracle.v1beta1.QueryOracleProviderPricesResponse.verify|verify} messages.
                 * @param message QueryOracleProviderPricesResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.oracle.v1beta1.IQueryOracleProviderPricesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryOracleProviderPricesResponse message, length delimited. Does not implicitly {@link injective.oracle.v1beta1.QueryOracleProviderPricesResponse.verify|verify} messages.
                 * @param message QueryOracleProviderPricesResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.oracle.v1beta1.IQueryOracleProviderPricesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryOracleProviderPricesResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryOracleProviderPricesResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.oracle.v1beta1.QueryOracleProviderPricesResponse;

                /**
                 * Decodes a QueryOracleProviderPricesResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryOracleProviderPricesResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.oracle.v1beta1.QueryOracleProviderPricesResponse;

                /**
                 * Verifies a QueryOracleProviderPricesResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryOracleProviderPricesResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryOracleProviderPricesResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.oracle.v1beta1.QueryOracleProviderPricesResponse;

                /**
                 * Creates a plain object from a QueryOracleProviderPricesResponse message. Also converts values to other types if specified.
                 * @param message QueryOracleProviderPricesResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.oracle.v1beta1.QueryOracleProviderPricesResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryOracleProviderPricesResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryOraclePriceRequest. */
            interface IQueryOraclePriceRequest {

                /** QueryOraclePriceRequest oracle_type */
                oracle_type?: (injective.oracle.v1beta1.OracleType|null);

                /** QueryOraclePriceRequest base */
                base?: (string|null);

                /** QueryOraclePriceRequest quote */
                quote?: (string|null);
            }

            /** Represents a QueryOraclePriceRequest. */
            class QueryOraclePriceRequest implements IQueryOraclePriceRequest {

                /**
                 * Constructs a new QueryOraclePriceRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.oracle.v1beta1.IQueryOraclePriceRequest);

                /** QueryOraclePriceRequest oracle_type. */
                public oracle_type: injective.oracle.v1beta1.OracleType;

                /** QueryOraclePriceRequest base. */
                public base: string;

                /** QueryOraclePriceRequest quote. */
                public quote: string;

                /**
                 * Encodes the specified QueryOraclePriceRequest message. Does not implicitly {@link injective.oracle.v1beta1.QueryOraclePriceRequest.verify|verify} messages.
                 * @param message QueryOraclePriceRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.oracle.v1beta1.IQueryOraclePriceRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryOraclePriceRequest message, length delimited. Does not implicitly {@link injective.oracle.v1beta1.QueryOraclePriceRequest.verify|verify} messages.
                 * @param message QueryOraclePriceRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.oracle.v1beta1.IQueryOraclePriceRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryOraclePriceRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryOraclePriceRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.oracle.v1beta1.QueryOraclePriceRequest;

                /**
                 * Decodes a QueryOraclePriceRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryOraclePriceRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.oracle.v1beta1.QueryOraclePriceRequest;

                /**
                 * Verifies a QueryOraclePriceRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryOraclePriceRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryOraclePriceRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.oracle.v1beta1.QueryOraclePriceRequest;

                /**
                 * Creates a plain object from a QueryOraclePriceRequest message. Also converts values to other types if specified.
                 * @param message QueryOraclePriceRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.oracle.v1beta1.QueryOraclePriceRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryOraclePriceRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a PricePairState. */
            interface IPricePairState {

                /** PricePairState pair_price */
                pair_price?: (string|null);

                /** PricePairState base_price */
                base_price?: (string|null);

                /** PricePairState quote_price */
                quote_price?: (string|null);

                /** PricePairState base_cumulative_price */
                base_cumulative_price?: (string|null);

                /** PricePairState quote_cumulative_price */
                quote_cumulative_price?: (string|null);

                /** PricePairState base_timestamp */
                base_timestamp?: (number|null);

                /** PricePairState quote_timestamp */
                quote_timestamp?: (number|null);
            }

            /** Represents a PricePairState. */
            class PricePairState implements IPricePairState {

                /**
                 * Constructs a new PricePairState.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.oracle.v1beta1.IPricePairState);

                /** PricePairState pair_price. */
                public pair_price: string;

                /** PricePairState base_price. */
                public base_price: string;

                /** PricePairState quote_price. */
                public quote_price: string;

                /** PricePairState base_cumulative_price. */
                public base_cumulative_price: string;

                /** PricePairState quote_cumulative_price. */
                public quote_cumulative_price: string;

                /** PricePairState base_timestamp. */
                public base_timestamp: number;

                /** PricePairState quote_timestamp. */
                public quote_timestamp: number;

                /**
                 * Encodes the specified PricePairState message. Does not implicitly {@link injective.oracle.v1beta1.PricePairState.verify|verify} messages.
                 * @param message PricePairState message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.oracle.v1beta1.IPricePairState, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified PricePairState message, length delimited. Does not implicitly {@link injective.oracle.v1beta1.PricePairState.verify|verify} messages.
                 * @param message PricePairState message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.oracle.v1beta1.IPricePairState, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a PricePairState message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns PricePairState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.oracle.v1beta1.PricePairState;

                /**
                 * Decodes a PricePairState message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns PricePairState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.oracle.v1beta1.PricePairState;

                /**
                 * Verifies a PricePairState message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a PricePairState message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns PricePairState
                 */
                public static fromObject(object: { [k: string]: any }): injective.oracle.v1beta1.PricePairState;

                /**
                 * Creates a plain object from a PricePairState message. Also converts values to other types if specified.
                 * @param message PricePairState
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.oracle.v1beta1.PricePairState, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this PricePairState to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryOraclePriceResponse. */
            interface IQueryOraclePriceResponse {

                /** QueryOraclePriceResponse price_pair_state */
                price_pair_state?: (injective.oracle.v1beta1.IPricePairState|null);
            }

            /** Represents a QueryOraclePriceResponse. */
            class QueryOraclePriceResponse implements IQueryOraclePriceResponse {

                /**
                 * Constructs a new QueryOraclePriceResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.oracle.v1beta1.IQueryOraclePriceResponse);

                /** QueryOraclePriceResponse price_pair_state. */
                public price_pair_state?: (injective.oracle.v1beta1.IPricePairState|null);

                /**
                 * Encodes the specified QueryOraclePriceResponse message. Does not implicitly {@link injective.oracle.v1beta1.QueryOraclePriceResponse.verify|verify} messages.
                 * @param message QueryOraclePriceResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.oracle.v1beta1.IQueryOraclePriceResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryOraclePriceResponse message, length delimited. Does not implicitly {@link injective.oracle.v1beta1.QueryOraclePriceResponse.verify|verify} messages.
                 * @param message QueryOraclePriceResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.oracle.v1beta1.IQueryOraclePriceResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryOraclePriceResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryOraclePriceResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.oracle.v1beta1.QueryOraclePriceResponse;

                /**
                 * Decodes a QueryOraclePriceResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryOraclePriceResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.oracle.v1beta1.QueryOraclePriceResponse;

                /**
                 * Verifies a QueryOraclePriceResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryOraclePriceResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryOraclePriceResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.oracle.v1beta1.QueryOraclePriceResponse;

                /**
                 * Creates a plain object from a QueryOraclePriceResponse message. Also converts values to other types if specified.
                 * @param message QueryOraclePriceResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.oracle.v1beta1.QueryOraclePriceResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryOraclePriceResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a GenesisState. */
            interface IGenesisState {

                /** GenesisState params */
                params?: (injective.oracle.v1beta1.IParams|null);

                /** GenesisState band_relayers */
                band_relayers?: (string[]|null);

                /** GenesisState band_price_states */
                band_price_states?: (injective.oracle.v1beta1.IBandPriceState[]|null);

                /** GenesisState price_feed_price_states */
                price_feed_price_states?: (injective.oracle.v1beta1.IPriceFeedState[]|null);

                /** GenesisState coinbase_price_states */
                coinbase_price_states?: (injective.oracle.v1beta1.ICoinbasePriceState[]|null);

                /** GenesisState band_ibc_price_states */
                band_ibc_price_states?: (injective.oracle.v1beta1.IBandPriceState[]|null);

                /** GenesisState band_ibc_oracle_requests */
                band_ibc_oracle_requests?: (injective.oracle.v1beta1.IBandOracleRequest[]|null);

                /** GenesisState band_ibc_params */
                band_ibc_params?: (injective.oracle.v1beta1.IBandIBCParams|null);

                /** GenesisState band_ibc_latest_client_id */
                band_ibc_latest_client_id?: (number|null);

                /** GenesisState calldata_records */
                calldata_records?: (injective.oracle.v1beta1.ICalldataRecord[]|null);

                /** GenesisState band_ibc_latest_request_id */
                band_ibc_latest_request_id?: (number|null);

                /** GenesisState chainlink_price_states */
                chainlink_price_states?: (injective.oracle.v1beta1.IChainlinkPriceState[]|null);

                /** GenesisState historical_price_records */
                historical_price_records?: (injective.oracle.v1beta1.IPriceRecords[]|null);

                /** GenesisState provider_states */
                provider_states?: (injective.oracle.v1beta1.IProviderState[]|null);

                /** GenesisState pyth_price_states */
                pyth_price_states?: (injective.oracle.v1beta1.IPythPriceState[]|null);
            }

            /** Represents a GenesisState. */
            class GenesisState implements IGenesisState {

                /**
                 * Constructs a new GenesisState.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.oracle.v1beta1.IGenesisState);

                /** GenesisState params. */
                public params?: (injective.oracle.v1beta1.IParams|null);

                /** GenesisState band_relayers. */
                public band_relayers: string[];

                /** GenesisState band_price_states. */
                public band_price_states: injective.oracle.v1beta1.IBandPriceState[];

                /** GenesisState price_feed_price_states. */
                public price_feed_price_states: injective.oracle.v1beta1.IPriceFeedState[];

                /** GenesisState coinbase_price_states. */
                public coinbase_price_states: injective.oracle.v1beta1.ICoinbasePriceState[];

                /** GenesisState band_ibc_price_states. */
                public band_ibc_price_states: injective.oracle.v1beta1.IBandPriceState[];

                /** GenesisState band_ibc_oracle_requests. */
                public band_ibc_oracle_requests: injective.oracle.v1beta1.IBandOracleRequest[];

                /** GenesisState band_ibc_params. */
                public band_ibc_params?: (injective.oracle.v1beta1.IBandIBCParams|null);

                /** GenesisState band_ibc_latest_client_id. */
                public band_ibc_latest_client_id: number;

                /** GenesisState calldata_records. */
                public calldata_records: injective.oracle.v1beta1.ICalldataRecord[];

                /** GenesisState band_ibc_latest_request_id. */
                public band_ibc_latest_request_id: number;

                /** GenesisState chainlink_price_states. */
                public chainlink_price_states: injective.oracle.v1beta1.IChainlinkPriceState[];

                /** GenesisState historical_price_records. */
                public historical_price_records: injective.oracle.v1beta1.IPriceRecords[];

                /** GenesisState provider_states. */
                public provider_states: injective.oracle.v1beta1.IProviderState[];

                /** GenesisState pyth_price_states. */
                public pyth_price_states: injective.oracle.v1beta1.IPythPriceState[];

                /**
                 * Encodes the specified GenesisState message. Does not implicitly {@link injective.oracle.v1beta1.GenesisState.verify|verify} messages.
                 * @param message GenesisState message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.oracle.v1beta1.IGenesisState, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified GenesisState message, length delimited. Does not implicitly {@link injective.oracle.v1beta1.GenesisState.verify|verify} messages.
                 * @param message GenesisState message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.oracle.v1beta1.IGenesisState, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a GenesisState message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns GenesisState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.oracle.v1beta1.GenesisState;

                /**
                 * Decodes a GenesisState message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns GenesisState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.oracle.v1beta1.GenesisState;

                /**
                 * Verifies a GenesisState message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a GenesisState message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns GenesisState
                 */
                public static fromObject(object: { [k: string]: any }): injective.oracle.v1beta1.GenesisState;

                /**
                 * Creates a plain object from a GenesisState message. Also converts values to other types if specified.
                 * @param message GenesisState
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.oracle.v1beta1.GenesisState, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this GenesisState to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a CalldataRecord. */
            interface ICalldataRecord {

                /** CalldataRecord client_id */
                client_id?: (number|null);

                /** CalldataRecord calldata */
                calldata?: (Uint8Array|null);
            }

            /** Represents a CalldataRecord. */
            class CalldataRecord implements ICalldataRecord {

                /**
                 * Constructs a new CalldataRecord.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.oracle.v1beta1.ICalldataRecord);

                /** CalldataRecord client_id. */
                public client_id: number;

                /** CalldataRecord calldata. */
                public calldata: Uint8Array;

                /**
                 * Encodes the specified CalldataRecord message. Does not implicitly {@link injective.oracle.v1beta1.CalldataRecord.verify|verify} messages.
                 * @param message CalldataRecord message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.oracle.v1beta1.ICalldataRecord, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified CalldataRecord message, length delimited. Does not implicitly {@link injective.oracle.v1beta1.CalldataRecord.verify|verify} messages.
                 * @param message CalldataRecord message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.oracle.v1beta1.ICalldataRecord, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a CalldataRecord message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns CalldataRecord
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.oracle.v1beta1.CalldataRecord;

                /**
                 * Decodes a CalldataRecord message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns CalldataRecord
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.oracle.v1beta1.CalldataRecord;

                /**
                 * Verifies a CalldataRecord message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a CalldataRecord message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns CalldataRecord
                 */
                public static fromObject(object: { [k: string]: any }): injective.oracle.v1beta1.CalldataRecord;

                /**
                 * Creates a plain object from a CalldataRecord message. Also converts values to other types if specified.
                 * @param message CalldataRecord
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.oracle.v1beta1.CalldataRecord, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this CalldataRecord to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a GrantBandOraclePrivilegeProposal. */
            interface IGrantBandOraclePrivilegeProposal {

                /** GrantBandOraclePrivilegeProposal title */
                title?: (string|null);

                /** GrantBandOraclePrivilegeProposal description */
                description?: (string|null);

                /** GrantBandOraclePrivilegeProposal relayers */
                relayers?: (string[]|null);
            }

            /** Represents a GrantBandOraclePrivilegeProposal. */
            class GrantBandOraclePrivilegeProposal implements IGrantBandOraclePrivilegeProposal {

                /**
                 * Constructs a new GrantBandOraclePrivilegeProposal.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.oracle.v1beta1.IGrantBandOraclePrivilegeProposal);

                /** GrantBandOraclePrivilegeProposal title. */
                public title: string;

                /** GrantBandOraclePrivilegeProposal description. */
                public description: string;

                /** GrantBandOraclePrivilegeProposal relayers. */
                public relayers: string[];

                /**
                 * Encodes the specified GrantBandOraclePrivilegeProposal message. Does not implicitly {@link injective.oracle.v1beta1.GrantBandOraclePrivilegeProposal.verify|verify} messages.
                 * @param message GrantBandOraclePrivilegeProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.oracle.v1beta1.IGrantBandOraclePrivilegeProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified GrantBandOraclePrivilegeProposal message, length delimited. Does not implicitly {@link injective.oracle.v1beta1.GrantBandOraclePrivilegeProposal.verify|verify} messages.
                 * @param message GrantBandOraclePrivilegeProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.oracle.v1beta1.IGrantBandOraclePrivilegeProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a GrantBandOraclePrivilegeProposal message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns GrantBandOraclePrivilegeProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.oracle.v1beta1.GrantBandOraclePrivilegeProposal;

                /**
                 * Decodes a GrantBandOraclePrivilegeProposal message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns GrantBandOraclePrivilegeProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.oracle.v1beta1.GrantBandOraclePrivilegeProposal;

                /**
                 * Verifies a GrantBandOraclePrivilegeProposal message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a GrantBandOraclePrivilegeProposal message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns GrantBandOraclePrivilegeProposal
                 */
                public static fromObject(object: { [k: string]: any }): injective.oracle.v1beta1.GrantBandOraclePrivilegeProposal;

                /**
                 * Creates a plain object from a GrantBandOraclePrivilegeProposal message. Also converts values to other types if specified.
                 * @param message GrantBandOraclePrivilegeProposal
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.oracle.v1beta1.GrantBandOraclePrivilegeProposal, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this GrantBandOraclePrivilegeProposal to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a RevokeBandOraclePrivilegeProposal. */
            interface IRevokeBandOraclePrivilegeProposal {

                /** RevokeBandOraclePrivilegeProposal title */
                title?: (string|null);

                /** RevokeBandOraclePrivilegeProposal description */
                description?: (string|null);

                /** RevokeBandOraclePrivilegeProposal relayers */
                relayers?: (string[]|null);
            }

            /** Represents a RevokeBandOraclePrivilegeProposal. */
            class RevokeBandOraclePrivilegeProposal implements IRevokeBandOraclePrivilegeProposal {

                /**
                 * Constructs a new RevokeBandOraclePrivilegeProposal.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.oracle.v1beta1.IRevokeBandOraclePrivilegeProposal);

                /** RevokeBandOraclePrivilegeProposal title. */
                public title: string;

                /** RevokeBandOraclePrivilegeProposal description. */
                public description: string;

                /** RevokeBandOraclePrivilegeProposal relayers. */
                public relayers: string[];

                /**
                 * Encodes the specified RevokeBandOraclePrivilegeProposal message. Does not implicitly {@link injective.oracle.v1beta1.RevokeBandOraclePrivilegeProposal.verify|verify} messages.
                 * @param message RevokeBandOraclePrivilegeProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.oracle.v1beta1.IRevokeBandOraclePrivilegeProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified RevokeBandOraclePrivilegeProposal message, length delimited. Does not implicitly {@link injective.oracle.v1beta1.RevokeBandOraclePrivilegeProposal.verify|verify} messages.
                 * @param message RevokeBandOraclePrivilegeProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.oracle.v1beta1.IRevokeBandOraclePrivilegeProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a RevokeBandOraclePrivilegeProposal message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns RevokeBandOraclePrivilegeProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.oracle.v1beta1.RevokeBandOraclePrivilegeProposal;

                /**
                 * Decodes a RevokeBandOraclePrivilegeProposal message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns RevokeBandOraclePrivilegeProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.oracle.v1beta1.RevokeBandOraclePrivilegeProposal;

                /**
                 * Verifies a RevokeBandOraclePrivilegeProposal message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a RevokeBandOraclePrivilegeProposal message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns RevokeBandOraclePrivilegeProposal
                 */
                public static fromObject(object: { [k: string]: any }): injective.oracle.v1beta1.RevokeBandOraclePrivilegeProposal;

                /**
                 * Creates a plain object from a RevokeBandOraclePrivilegeProposal message. Also converts values to other types if specified.
                 * @param message RevokeBandOraclePrivilegeProposal
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.oracle.v1beta1.RevokeBandOraclePrivilegeProposal, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this RevokeBandOraclePrivilegeProposal to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a GrantPriceFeederPrivilegeProposal. */
            interface IGrantPriceFeederPrivilegeProposal {

                /** GrantPriceFeederPrivilegeProposal title */
                title?: (string|null);

                /** GrantPriceFeederPrivilegeProposal description */
                description?: (string|null);

                /** GrantPriceFeederPrivilegeProposal base */
                base?: (string|null);

                /** GrantPriceFeederPrivilegeProposal quote */
                quote?: (string|null);

                /** GrantPriceFeederPrivilegeProposal relayers */
                relayers?: (string[]|null);
            }

            /** Represents a GrantPriceFeederPrivilegeProposal. */
            class GrantPriceFeederPrivilegeProposal implements IGrantPriceFeederPrivilegeProposal {

                /**
                 * Constructs a new GrantPriceFeederPrivilegeProposal.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.oracle.v1beta1.IGrantPriceFeederPrivilegeProposal);

                /** GrantPriceFeederPrivilegeProposal title. */
                public title: string;

                /** GrantPriceFeederPrivilegeProposal description. */
                public description: string;

                /** GrantPriceFeederPrivilegeProposal base. */
                public base: string;

                /** GrantPriceFeederPrivilegeProposal quote. */
                public quote: string;

                /** GrantPriceFeederPrivilegeProposal relayers. */
                public relayers: string[];

                /**
                 * Encodes the specified GrantPriceFeederPrivilegeProposal message. Does not implicitly {@link injective.oracle.v1beta1.GrantPriceFeederPrivilegeProposal.verify|verify} messages.
                 * @param message GrantPriceFeederPrivilegeProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.oracle.v1beta1.IGrantPriceFeederPrivilegeProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified GrantPriceFeederPrivilegeProposal message, length delimited. Does not implicitly {@link injective.oracle.v1beta1.GrantPriceFeederPrivilegeProposal.verify|verify} messages.
                 * @param message GrantPriceFeederPrivilegeProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.oracle.v1beta1.IGrantPriceFeederPrivilegeProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a GrantPriceFeederPrivilegeProposal message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns GrantPriceFeederPrivilegeProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.oracle.v1beta1.GrantPriceFeederPrivilegeProposal;

                /**
                 * Decodes a GrantPriceFeederPrivilegeProposal message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns GrantPriceFeederPrivilegeProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.oracle.v1beta1.GrantPriceFeederPrivilegeProposal;

                /**
                 * Verifies a GrantPriceFeederPrivilegeProposal message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a GrantPriceFeederPrivilegeProposal message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns GrantPriceFeederPrivilegeProposal
                 */
                public static fromObject(object: { [k: string]: any }): injective.oracle.v1beta1.GrantPriceFeederPrivilegeProposal;

                /**
                 * Creates a plain object from a GrantPriceFeederPrivilegeProposal message. Also converts values to other types if specified.
                 * @param message GrantPriceFeederPrivilegeProposal
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.oracle.v1beta1.GrantPriceFeederPrivilegeProposal, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this GrantPriceFeederPrivilegeProposal to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a GrantProviderPrivilegeProposal. */
            interface IGrantProviderPrivilegeProposal {

                /** GrantProviderPrivilegeProposal title */
                title?: (string|null);

                /** GrantProviderPrivilegeProposal description */
                description?: (string|null);

                /** GrantProviderPrivilegeProposal provider */
                provider?: (string|null);

                /** GrantProviderPrivilegeProposal relayers */
                relayers?: (string[]|null);
            }

            /** Represents a GrantProviderPrivilegeProposal. */
            class GrantProviderPrivilegeProposal implements IGrantProviderPrivilegeProposal {

                /**
                 * Constructs a new GrantProviderPrivilegeProposal.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.oracle.v1beta1.IGrantProviderPrivilegeProposal);

                /** GrantProviderPrivilegeProposal title. */
                public title: string;

                /** GrantProviderPrivilegeProposal description. */
                public description: string;

                /** GrantProviderPrivilegeProposal provider. */
                public provider: string;

                /** GrantProviderPrivilegeProposal relayers. */
                public relayers: string[];

                /**
                 * Encodes the specified GrantProviderPrivilegeProposal message. Does not implicitly {@link injective.oracle.v1beta1.GrantProviderPrivilegeProposal.verify|verify} messages.
                 * @param message GrantProviderPrivilegeProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.oracle.v1beta1.IGrantProviderPrivilegeProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified GrantProviderPrivilegeProposal message, length delimited. Does not implicitly {@link injective.oracle.v1beta1.GrantProviderPrivilegeProposal.verify|verify} messages.
                 * @param message GrantProviderPrivilegeProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.oracle.v1beta1.IGrantProviderPrivilegeProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a GrantProviderPrivilegeProposal message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns GrantProviderPrivilegeProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.oracle.v1beta1.GrantProviderPrivilegeProposal;

                /**
                 * Decodes a GrantProviderPrivilegeProposal message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns GrantProviderPrivilegeProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.oracle.v1beta1.GrantProviderPrivilegeProposal;

                /**
                 * Verifies a GrantProviderPrivilegeProposal message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a GrantProviderPrivilegeProposal message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns GrantProviderPrivilegeProposal
                 */
                public static fromObject(object: { [k: string]: any }): injective.oracle.v1beta1.GrantProviderPrivilegeProposal;

                /**
                 * Creates a plain object from a GrantProviderPrivilegeProposal message. Also converts values to other types if specified.
                 * @param message GrantProviderPrivilegeProposal
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.oracle.v1beta1.GrantProviderPrivilegeProposal, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this GrantProviderPrivilegeProposal to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a RevokeProviderPrivilegeProposal. */
            interface IRevokeProviderPrivilegeProposal {

                /** RevokeProviderPrivilegeProposal title */
                title?: (string|null);

                /** RevokeProviderPrivilegeProposal description */
                description?: (string|null);

                /** RevokeProviderPrivilegeProposal provider */
                provider?: (string|null);

                /** RevokeProviderPrivilegeProposal relayers */
                relayers?: (string[]|null);
            }

            /** Represents a RevokeProviderPrivilegeProposal. */
            class RevokeProviderPrivilegeProposal implements IRevokeProviderPrivilegeProposal {

                /**
                 * Constructs a new RevokeProviderPrivilegeProposal.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.oracle.v1beta1.IRevokeProviderPrivilegeProposal);

                /** RevokeProviderPrivilegeProposal title. */
                public title: string;

                /** RevokeProviderPrivilegeProposal description. */
                public description: string;

                /** RevokeProviderPrivilegeProposal provider. */
                public provider: string;

                /** RevokeProviderPrivilegeProposal relayers. */
                public relayers: string[];

                /**
                 * Encodes the specified RevokeProviderPrivilegeProposal message. Does not implicitly {@link injective.oracle.v1beta1.RevokeProviderPrivilegeProposal.verify|verify} messages.
                 * @param message RevokeProviderPrivilegeProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.oracle.v1beta1.IRevokeProviderPrivilegeProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified RevokeProviderPrivilegeProposal message, length delimited. Does not implicitly {@link injective.oracle.v1beta1.RevokeProviderPrivilegeProposal.verify|verify} messages.
                 * @param message RevokeProviderPrivilegeProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.oracle.v1beta1.IRevokeProviderPrivilegeProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a RevokeProviderPrivilegeProposal message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns RevokeProviderPrivilegeProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.oracle.v1beta1.RevokeProviderPrivilegeProposal;

                /**
                 * Decodes a RevokeProviderPrivilegeProposal message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns RevokeProviderPrivilegeProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.oracle.v1beta1.RevokeProviderPrivilegeProposal;

                /**
                 * Verifies a RevokeProviderPrivilegeProposal message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a RevokeProviderPrivilegeProposal message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns RevokeProviderPrivilegeProposal
                 */
                public static fromObject(object: { [k: string]: any }): injective.oracle.v1beta1.RevokeProviderPrivilegeProposal;

                /**
                 * Creates a plain object from a RevokeProviderPrivilegeProposal message. Also converts values to other types if specified.
                 * @param message RevokeProviderPrivilegeProposal
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.oracle.v1beta1.RevokeProviderPrivilegeProposal, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this RevokeProviderPrivilegeProposal to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a RevokePriceFeederPrivilegeProposal. */
            interface IRevokePriceFeederPrivilegeProposal {

                /** RevokePriceFeederPrivilegeProposal title */
                title?: (string|null);

                /** RevokePriceFeederPrivilegeProposal description */
                description?: (string|null);

                /** RevokePriceFeederPrivilegeProposal base */
                base?: (string|null);

                /** RevokePriceFeederPrivilegeProposal quote */
                quote?: (string|null);

                /** RevokePriceFeederPrivilegeProposal relayers */
                relayers?: (string[]|null);
            }

            /** Represents a RevokePriceFeederPrivilegeProposal. */
            class RevokePriceFeederPrivilegeProposal implements IRevokePriceFeederPrivilegeProposal {

                /**
                 * Constructs a new RevokePriceFeederPrivilegeProposal.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.oracle.v1beta1.IRevokePriceFeederPrivilegeProposal);

                /** RevokePriceFeederPrivilegeProposal title. */
                public title: string;

                /** RevokePriceFeederPrivilegeProposal description. */
                public description: string;

                /** RevokePriceFeederPrivilegeProposal base. */
                public base: string;

                /** RevokePriceFeederPrivilegeProposal quote. */
                public quote: string;

                /** RevokePriceFeederPrivilegeProposal relayers. */
                public relayers: string[];

                /**
                 * Encodes the specified RevokePriceFeederPrivilegeProposal message. Does not implicitly {@link injective.oracle.v1beta1.RevokePriceFeederPrivilegeProposal.verify|verify} messages.
                 * @param message RevokePriceFeederPrivilegeProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.oracle.v1beta1.IRevokePriceFeederPrivilegeProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified RevokePriceFeederPrivilegeProposal message, length delimited. Does not implicitly {@link injective.oracle.v1beta1.RevokePriceFeederPrivilegeProposal.verify|verify} messages.
                 * @param message RevokePriceFeederPrivilegeProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.oracle.v1beta1.IRevokePriceFeederPrivilegeProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a RevokePriceFeederPrivilegeProposal message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns RevokePriceFeederPrivilegeProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.oracle.v1beta1.RevokePriceFeederPrivilegeProposal;

                /**
                 * Decodes a RevokePriceFeederPrivilegeProposal message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns RevokePriceFeederPrivilegeProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.oracle.v1beta1.RevokePriceFeederPrivilegeProposal;

                /**
                 * Verifies a RevokePriceFeederPrivilegeProposal message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a RevokePriceFeederPrivilegeProposal message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns RevokePriceFeederPrivilegeProposal
                 */
                public static fromObject(object: { [k: string]: any }): injective.oracle.v1beta1.RevokePriceFeederPrivilegeProposal;

                /**
                 * Creates a plain object from a RevokePriceFeederPrivilegeProposal message. Also converts values to other types if specified.
                 * @param message RevokePriceFeederPrivilegeProposal
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.oracle.v1beta1.RevokePriceFeederPrivilegeProposal, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this RevokePriceFeederPrivilegeProposal to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an AuthorizeBandOracleRequestProposal. */
            interface IAuthorizeBandOracleRequestProposal {

                /** AuthorizeBandOracleRequestProposal title */
                title?: (string|null);

                /** AuthorizeBandOracleRequestProposal description */
                description?: (string|null);

                /** AuthorizeBandOracleRequestProposal request */
                request?: (injective.oracle.v1beta1.IBandOracleRequest|null);
            }

            /** Represents an AuthorizeBandOracleRequestProposal. */
            class AuthorizeBandOracleRequestProposal implements IAuthorizeBandOracleRequestProposal {

                /**
                 * Constructs a new AuthorizeBandOracleRequestProposal.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.oracle.v1beta1.IAuthorizeBandOracleRequestProposal);

                /** AuthorizeBandOracleRequestProposal title. */
                public title: string;

                /** AuthorizeBandOracleRequestProposal description. */
                public description: string;

                /** AuthorizeBandOracleRequestProposal request. */
                public request?: (injective.oracle.v1beta1.IBandOracleRequest|null);

                /**
                 * Encodes the specified AuthorizeBandOracleRequestProposal message. Does not implicitly {@link injective.oracle.v1beta1.AuthorizeBandOracleRequestProposal.verify|verify} messages.
                 * @param message AuthorizeBandOracleRequestProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.oracle.v1beta1.IAuthorizeBandOracleRequestProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified AuthorizeBandOracleRequestProposal message, length delimited. Does not implicitly {@link injective.oracle.v1beta1.AuthorizeBandOracleRequestProposal.verify|verify} messages.
                 * @param message AuthorizeBandOracleRequestProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.oracle.v1beta1.IAuthorizeBandOracleRequestProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an AuthorizeBandOracleRequestProposal message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns AuthorizeBandOracleRequestProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.oracle.v1beta1.AuthorizeBandOracleRequestProposal;

                /**
                 * Decodes an AuthorizeBandOracleRequestProposal message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns AuthorizeBandOracleRequestProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.oracle.v1beta1.AuthorizeBandOracleRequestProposal;

                /**
                 * Verifies an AuthorizeBandOracleRequestProposal message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an AuthorizeBandOracleRequestProposal message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns AuthorizeBandOracleRequestProposal
                 */
                public static fromObject(object: { [k: string]: any }): injective.oracle.v1beta1.AuthorizeBandOracleRequestProposal;

                /**
                 * Creates a plain object from an AuthorizeBandOracleRequestProposal message. Also converts values to other types if specified.
                 * @param message AuthorizeBandOracleRequestProposal
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.oracle.v1beta1.AuthorizeBandOracleRequestProposal, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this AuthorizeBandOracleRequestProposal to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an UpdateBandOracleRequestProposal. */
            interface IUpdateBandOracleRequestProposal {

                /** UpdateBandOracleRequestProposal title */
                title?: (string|null);

                /** UpdateBandOracleRequestProposal description */
                description?: (string|null);

                /** UpdateBandOracleRequestProposal delete_request_ids */
                delete_request_ids?: (number[]|null);

                /** UpdateBandOracleRequestProposal update_oracle_request */
                update_oracle_request?: (injective.oracle.v1beta1.IBandOracleRequest|null);
            }

            /** Represents an UpdateBandOracleRequestProposal. */
            class UpdateBandOracleRequestProposal implements IUpdateBandOracleRequestProposal {

                /**
                 * Constructs a new UpdateBandOracleRequestProposal.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.oracle.v1beta1.IUpdateBandOracleRequestProposal);

                /** UpdateBandOracleRequestProposal title. */
                public title: string;

                /** UpdateBandOracleRequestProposal description. */
                public description: string;

                /** UpdateBandOracleRequestProposal delete_request_ids. */
                public delete_request_ids: number[];

                /** UpdateBandOracleRequestProposal update_oracle_request. */
                public update_oracle_request?: (injective.oracle.v1beta1.IBandOracleRequest|null);

                /**
                 * Encodes the specified UpdateBandOracleRequestProposal message. Does not implicitly {@link injective.oracle.v1beta1.UpdateBandOracleRequestProposal.verify|verify} messages.
                 * @param message UpdateBandOracleRequestProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.oracle.v1beta1.IUpdateBandOracleRequestProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified UpdateBandOracleRequestProposal message, length delimited. Does not implicitly {@link injective.oracle.v1beta1.UpdateBandOracleRequestProposal.verify|verify} messages.
                 * @param message UpdateBandOracleRequestProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.oracle.v1beta1.IUpdateBandOracleRequestProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an UpdateBandOracleRequestProposal message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns UpdateBandOracleRequestProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.oracle.v1beta1.UpdateBandOracleRequestProposal;

                /**
                 * Decodes an UpdateBandOracleRequestProposal message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns UpdateBandOracleRequestProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.oracle.v1beta1.UpdateBandOracleRequestProposal;

                /**
                 * Verifies an UpdateBandOracleRequestProposal message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an UpdateBandOracleRequestProposal message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns UpdateBandOracleRequestProposal
                 */
                public static fromObject(object: { [k: string]: any }): injective.oracle.v1beta1.UpdateBandOracleRequestProposal;

                /**
                 * Creates a plain object from an UpdateBandOracleRequestProposal message. Also converts values to other types if specified.
                 * @param message UpdateBandOracleRequestProposal
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.oracle.v1beta1.UpdateBandOracleRequestProposal, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this UpdateBandOracleRequestProposal to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an EnableBandIBCProposal. */
            interface IEnableBandIBCProposal {

                /** EnableBandIBCProposal title */
                title?: (string|null);

                /** EnableBandIBCProposal description */
                description?: (string|null);

                /** EnableBandIBCProposal band_ibc_params */
                band_ibc_params?: (injective.oracle.v1beta1.IBandIBCParams|null);
            }

            /** Represents an EnableBandIBCProposal. */
            class EnableBandIBCProposal implements IEnableBandIBCProposal {

                /**
                 * Constructs a new EnableBandIBCProposal.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.oracle.v1beta1.IEnableBandIBCProposal);

                /** EnableBandIBCProposal title. */
                public title: string;

                /** EnableBandIBCProposal description. */
                public description: string;

                /** EnableBandIBCProposal band_ibc_params. */
                public band_ibc_params?: (injective.oracle.v1beta1.IBandIBCParams|null);

                /**
                 * Encodes the specified EnableBandIBCProposal message. Does not implicitly {@link injective.oracle.v1beta1.EnableBandIBCProposal.verify|verify} messages.
                 * @param message EnableBandIBCProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.oracle.v1beta1.IEnableBandIBCProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified EnableBandIBCProposal message, length delimited. Does not implicitly {@link injective.oracle.v1beta1.EnableBandIBCProposal.verify|verify} messages.
                 * @param message EnableBandIBCProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.oracle.v1beta1.IEnableBandIBCProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an EnableBandIBCProposal message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns EnableBandIBCProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.oracle.v1beta1.EnableBandIBCProposal;

                /**
                 * Decodes an EnableBandIBCProposal message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns EnableBandIBCProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.oracle.v1beta1.EnableBandIBCProposal;

                /**
                 * Verifies an EnableBandIBCProposal message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an EnableBandIBCProposal message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns EnableBandIBCProposal
                 */
                public static fromObject(object: { [k: string]: any }): injective.oracle.v1beta1.EnableBandIBCProposal;

                /**
                 * Creates a plain object from an EnableBandIBCProposal message. Also converts values to other types if specified.
                 * @param message EnableBandIBCProposal
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.oracle.v1beta1.EnableBandIBCProposal, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this EnableBandIBCProposal to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }
    }

    /** Namespace insurance. */
    namespace insurance {

        /** Namespace v1beta1. */
        namespace v1beta1 {

            /** Represents a Msg */
            class Msg extends $protobuf.rpc.Service {

                /**
                 * Constructs a new Msg service.
                 * @param rpcImpl RPC implementation
                 * @param [requestDelimited=false] Whether requests are length-delimited
                 * @param [responseDelimited=false] Whether responses are length-delimited
                 */
                constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

                /**
                 * Calls CreateInsuranceFund.
                 * @param request MsgCreateInsuranceFund message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgCreateInsuranceFundResponse
                 */
                public createInsuranceFund(request: injective.insurance.v1beta1.IMsgCreateInsuranceFund, callback: injective.insurance.v1beta1.Msg.CreateInsuranceFundCallback): void;

                /**
                 * Calls CreateInsuranceFund.
                 * @param request MsgCreateInsuranceFund message or plain object
                 * @returns Promise
                 */
                public createInsuranceFund(request: injective.insurance.v1beta1.IMsgCreateInsuranceFund): Promise<injective.insurance.v1beta1.MsgCreateInsuranceFundResponse>;

                /**
                 * Calls Underwrite.
                 * @param request MsgUnderwrite message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgUnderwriteResponse
                 */
                public underwrite(request: injective.insurance.v1beta1.IMsgUnderwrite, callback: injective.insurance.v1beta1.Msg.UnderwriteCallback): void;

                /**
                 * Calls Underwrite.
                 * @param request MsgUnderwrite message or plain object
                 * @returns Promise
                 */
                public underwrite(request: injective.insurance.v1beta1.IMsgUnderwrite): Promise<injective.insurance.v1beta1.MsgUnderwriteResponse>;

                /**
                 * Calls RequestRedemption.
                 * @param request MsgRequestRedemption message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgRequestRedemptionResponse
                 */
                public requestRedemption(request: injective.insurance.v1beta1.IMsgRequestRedemption, callback: injective.insurance.v1beta1.Msg.RequestRedemptionCallback): void;

                /**
                 * Calls RequestRedemption.
                 * @param request MsgRequestRedemption message or plain object
                 * @returns Promise
                 */
                public requestRedemption(request: injective.insurance.v1beta1.IMsgRequestRedemption): Promise<injective.insurance.v1beta1.MsgRequestRedemptionResponse>;

                /**
                 * Calls UpdateParams.
                 * @param request MsgUpdateParams message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgUpdateParamsResponse
                 */
                public updateParams(request: injective.insurance.v1beta1.IMsgUpdateParams, callback: injective.insurance.v1beta1.Msg.UpdateParamsCallback): void;

                /**
                 * Calls UpdateParams.
                 * @param request MsgUpdateParams message or plain object
                 * @returns Promise
                 */
                public updateParams(request: injective.insurance.v1beta1.IMsgUpdateParams): Promise<injective.insurance.v1beta1.MsgUpdateParamsResponse>;
            }

            namespace Msg {

                /**
                 * Callback as used by {@link injective.insurance.v1beta1.Msg#createInsuranceFund}.
                 * @param error Error, if any
                 * @param [response] MsgCreateInsuranceFundResponse
                 */
                type CreateInsuranceFundCallback = (error: (Error|null), response?: injective.insurance.v1beta1.MsgCreateInsuranceFundResponse) => void;

                /**
                 * Callback as used by {@link injective.insurance.v1beta1.Msg#underwrite}.
                 * @param error Error, if any
                 * @param [response] MsgUnderwriteResponse
                 */
                type UnderwriteCallback = (error: (Error|null), response?: injective.insurance.v1beta1.MsgUnderwriteResponse) => void;

                /**
                 * Callback as used by {@link injective.insurance.v1beta1.Msg#requestRedemption}.
                 * @param error Error, if any
                 * @param [response] MsgRequestRedemptionResponse
                 */
                type RequestRedemptionCallback = (error: (Error|null), response?: injective.insurance.v1beta1.MsgRequestRedemptionResponse) => void;

                /**
                 * Callback as used by {@link injective.insurance.v1beta1.Msg#updateParams}.
                 * @param error Error, if any
                 * @param [response] MsgUpdateParamsResponse
                 */
                type UpdateParamsCallback = (error: (Error|null), response?: injective.insurance.v1beta1.MsgUpdateParamsResponse) => void;
            }

            /** Properties of a MsgCreateInsuranceFund. */
            interface IMsgCreateInsuranceFund {

                /** MsgCreateInsuranceFund sender */
                sender?: (string|null);

                /** MsgCreateInsuranceFund ticker */
                ticker?: (string|null);

                /** MsgCreateInsuranceFund quote_denom */
                quote_denom?: (string|null);

                /** MsgCreateInsuranceFund oracle_base */
                oracle_base?: (string|null);

                /** MsgCreateInsuranceFund oracle_quote */
                oracle_quote?: (string|null);

                /** MsgCreateInsuranceFund oracle_type */
                oracle_type?: (injective.oracle.v1beta1.OracleType|null);

                /** MsgCreateInsuranceFund expiry */
                expiry?: (number|null);

                /** MsgCreateInsuranceFund initial_deposit */
                initial_deposit?: (cosmos.base.v1beta1.ICoin|null);
            }

            /** Represents a MsgCreateInsuranceFund. */
            class MsgCreateInsuranceFund implements IMsgCreateInsuranceFund {

                /**
                 * Constructs a new MsgCreateInsuranceFund.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.insurance.v1beta1.IMsgCreateInsuranceFund);

                /** MsgCreateInsuranceFund sender. */
                public sender: string;

                /** MsgCreateInsuranceFund ticker. */
                public ticker: string;

                /** MsgCreateInsuranceFund quote_denom. */
                public quote_denom: string;

                /** MsgCreateInsuranceFund oracle_base. */
                public oracle_base: string;

                /** MsgCreateInsuranceFund oracle_quote. */
                public oracle_quote: string;

                /** MsgCreateInsuranceFund oracle_type. */
                public oracle_type: injective.oracle.v1beta1.OracleType;

                /** MsgCreateInsuranceFund expiry. */
                public expiry: number;

                /** MsgCreateInsuranceFund initial_deposit. */
                public initial_deposit?: (cosmos.base.v1beta1.ICoin|null);

                /**
                 * Encodes the specified MsgCreateInsuranceFund message. Does not implicitly {@link injective.insurance.v1beta1.MsgCreateInsuranceFund.verify|verify} messages.
                 * @param message MsgCreateInsuranceFund message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.insurance.v1beta1.IMsgCreateInsuranceFund, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgCreateInsuranceFund message, length delimited. Does not implicitly {@link injective.insurance.v1beta1.MsgCreateInsuranceFund.verify|verify} messages.
                 * @param message MsgCreateInsuranceFund message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.insurance.v1beta1.IMsgCreateInsuranceFund, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgCreateInsuranceFund message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgCreateInsuranceFund
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.insurance.v1beta1.MsgCreateInsuranceFund;

                /**
                 * Decodes a MsgCreateInsuranceFund message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgCreateInsuranceFund
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.insurance.v1beta1.MsgCreateInsuranceFund;

                /**
                 * Verifies a MsgCreateInsuranceFund message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgCreateInsuranceFund message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgCreateInsuranceFund
                 */
                public static fromObject(object: { [k: string]: any }): injective.insurance.v1beta1.MsgCreateInsuranceFund;

                /**
                 * Creates a plain object from a MsgCreateInsuranceFund message. Also converts values to other types if specified.
                 * @param message MsgCreateInsuranceFund
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.insurance.v1beta1.MsgCreateInsuranceFund, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgCreateInsuranceFund to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgCreateInsuranceFundResponse. */
            interface IMsgCreateInsuranceFundResponse {
            }

            /** Represents a MsgCreateInsuranceFundResponse. */
            class MsgCreateInsuranceFundResponse implements IMsgCreateInsuranceFundResponse {

                /**
                 * Constructs a new MsgCreateInsuranceFundResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.insurance.v1beta1.IMsgCreateInsuranceFundResponse);

                /**
                 * Encodes the specified MsgCreateInsuranceFundResponse message. Does not implicitly {@link injective.insurance.v1beta1.MsgCreateInsuranceFundResponse.verify|verify} messages.
                 * @param message MsgCreateInsuranceFundResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.insurance.v1beta1.IMsgCreateInsuranceFundResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgCreateInsuranceFundResponse message, length delimited. Does not implicitly {@link injective.insurance.v1beta1.MsgCreateInsuranceFundResponse.verify|verify} messages.
                 * @param message MsgCreateInsuranceFundResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.insurance.v1beta1.IMsgCreateInsuranceFundResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgCreateInsuranceFundResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgCreateInsuranceFundResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.insurance.v1beta1.MsgCreateInsuranceFundResponse;

                /**
                 * Decodes a MsgCreateInsuranceFundResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgCreateInsuranceFundResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.insurance.v1beta1.MsgCreateInsuranceFundResponse;

                /**
                 * Verifies a MsgCreateInsuranceFundResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgCreateInsuranceFundResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgCreateInsuranceFundResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.insurance.v1beta1.MsgCreateInsuranceFundResponse;

                /**
                 * Creates a plain object from a MsgCreateInsuranceFundResponse message. Also converts values to other types if specified.
                 * @param message MsgCreateInsuranceFundResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.insurance.v1beta1.MsgCreateInsuranceFundResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgCreateInsuranceFundResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgUnderwrite. */
            interface IMsgUnderwrite {

                /** MsgUnderwrite sender */
                sender?: (string|null);

                /** MsgUnderwrite market_id */
                market_id?: (string|null);

                /** MsgUnderwrite deposit */
                deposit?: (cosmos.base.v1beta1.ICoin|null);
            }

            /** Represents a MsgUnderwrite. */
            class MsgUnderwrite implements IMsgUnderwrite {

                /**
                 * Constructs a new MsgUnderwrite.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.insurance.v1beta1.IMsgUnderwrite);

                /** MsgUnderwrite sender. */
                public sender: string;

                /** MsgUnderwrite market_id. */
                public market_id: string;

                /** MsgUnderwrite deposit. */
                public deposit?: (cosmos.base.v1beta1.ICoin|null);

                /**
                 * Encodes the specified MsgUnderwrite message. Does not implicitly {@link injective.insurance.v1beta1.MsgUnderwrite.verify|verify} messages.
                 * @param message MsgUnderwrite message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.insurance.v1beta1.IMsgUnderwrite, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgUnderwrite message, length delimited. Does not implicitly {@link injective.insurance.v1beta1.MsgUnderwrite.verify|verify} messages.
                 * @param message MsgUnderwrite message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.insurance.v1beta1.IMsgUnderwrite, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgUnderwrite message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgUnderwrite
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.insurance.v1beta1.MsgUnderwrite;

                /**
                 * Decodes a MsgUnderwrite message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgUnderwrite
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.insurance.v1beta1.MsgUnderwrite;

                /**
                 * Verifies a MsgUnderwrite message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgUnderwrite message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgUnderwrite
                 */
                public static fromObject(object: { [k: string]: any }): injective.insurance.v1beta1.MsgUnderwrite;

                /**
                 * Creates a plain object from a MsgUnderwrite message. Also converts values to other types if specified.
                 * @param message MsgUnderwrite
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.insurance.v1beta1.MsgUnderwrite, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgUnderwrite to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgUnderwriteResponse. */
            interface IMsgUnderwriteResponse {
            }

            /** Represents a MsgUnderwriteResponse. */
            class MsgUnderwriteResponse implements IMsgUnderwriteResponse {

                /**
                 * Constructs a new MsgUnderwriteResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.insurance.v1beta1.IMsgUnderwriteResponse);

                /**
                 * Encodes the specified MsgUnderwriteResponse message. Does not implicitly {@link injective.insurance.v1beta1.MsgUnderwriteResponse.verify|verify} messages.
                 * @param message MsgUnderwriteResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.insurance.v1beta1.IMsgUnderwriteResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgUnderwriteResponse message, length delimited. Does not implicitly {@link injective.insurance.v1beta1.MsgUnderwriteResponse.verify|verify} messages.
                 * @param message MsgUnderwriteResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.insurance.v1beta1.IMsgUnderwriteResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgUnderwriteResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgUnderwriteResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.insurance.v1beta1.MsgUnderwriteResponse;

                /**
                 * Decodes a MsgUnderwriteResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgUnderwriteResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.insurance.v1beta1.MsgUnderwriteResponse;

                /**
                 * Verifies a MsgUnderwriteResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgUnderwriteResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgUnderwriteResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.insurance.v1beta1.MsgUnderwriteResponse;

                /**
                 * Creates a plain object from a MsgUnderwriteResponse message. Also converts values to other types if specified.
                 * @param message MsgUnderwriteResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.insurance.v1beta1.MsgUnderwriteResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgUnderwriteResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgRequestRedemption. */
            interface IMsgRequestRedemption {

                /** MsgRequestRedemption sender */
                sender?: (string|null);

                /** MsgRequestRedemption market_id */
                market_id?: (string|null);

                /** MsgRequestRedemption amount */
                amount?: (cosmos.base.v1beta1.ICoin|null);
            }

            /** Represents a MsgRequestRedemption. */
            class MsgRequestRedemption implements IMsgRequestRedemption {

                /**
                 * Constructs a new MsgRequestRedemption.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.insurance.v1beta1.IMsgRequestRedemption);

                /** MsgRequestRedemption sender. */
                public sender: string;

                /** MsgRequestRedemption market_id. */
                public market_id: string;

                /** MsgRequestRedemption amount. */
                public amount?: (cosmos.base.v1beta1.ICoin|null);

                /**
                 * Encodes the specified MsgRequestRedemption message. Does not implicitly {@link injective.insurance.v1beta1.MsgRequestRedemption.verify|verify} messages.
                 * @param message MsgRequestRedemption message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.insurance.v1beta1.IMsgRequestRedemption, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgRequestRedemption message, length delimited. Does not implicitly {@link injective.insurance.v1beta1.MsgRequestRedemption.verify|verify} messages.
                 * @param message MsgRequestRedemption message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.insurance.v1beta1.IMsgRequestRedemption, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgRequestRedemption message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgRequestRedemption
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.insurance.v1beta1.MsgRequestRedemption;

                /**
                 * Decodes a MsgRequestRedemption message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgRequestRedemption
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.insurance.v1beta1.MsgRequestRedemption;

                /**
                 * Verifies a MsgRequestRedemption message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgRequestRedemption message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgRequestRedemption
                 */
                public static fromObject(object: { [k: string]: any }): injective.insurance.v1beta1.MsgRequestRedemption;

                /**
                 * Creates a plain object from a MsgRequestRedemption message. Also converts values to other types if specified.
                 * @param message MsgRequestRedemption
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.insurance.v1beta1.MsgRequestRedemption, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgRequestRedemption to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgRequestRedemptionResponse. */
            interface IMsgRequestRedemptionResponse {
            }

            /** Represents a MsgRequestRedemptionResponse. */
            class MsgRequestRedemptionResponse implements IMsgRequestRedemptionResponse {

                /**
                 * Constructs a new MsgRequestRedemptionResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.insurance.v1beta1.IMsgRequestRedemptionResponse);

                /**
                 * Encodes the specified MsgRequestRedemptionResponse message. Does not implicitly {@link injective.insurance.v1beta1.MsgRequestRedemptionResponse.verify|verify} messages.
                 * @param message MsgRequestRedemptionResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.insurance.v1beta1.IMsgRequestRedemptionResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgRequestRedemptionResponse message, length delimited. Does not implicitly {@link injective.insurance.v1beta1.MsgRequestRedemptionResponse.verify|verify} messages.
                 * @param message MsgRequestRedemptionResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.insurance.v1beta1.IMsgRequestRedemptionResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgRequestRedemptionResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgRequestRedemptionResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.insurance.v1beta1.MsgRequestRedemptionResponse;

                /**
                 * Decodes a MsgRequestRedemptionResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgRequestRedemptionResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.insurance.v1beta1.MsgRequestRedemptionResponse;

                /**
                 * Verifies a MsgRequestRedemptionResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgRequestRedemptionResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgRequestRedemptionResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.insurance.v1beta1.MsgRequestRedemptionResponse;

                /**
                 * Creates a plain object from a MsgRequestRedemptionResponse message. Also converts values to other types if specified.
                 * @param message MsgRequestRedemptionResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.insurance.v1beta1.MsgRequestRedemptionResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgRequestRedemptionResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgUpdateParams. */
            interface IMsgUpdateParams {

                /** MsgUpdateParams authority */
                authority?: (string|null);

                /** MsgUpdateParams params */
                params?: (injective.insurance.v1beta1.IParams|null);
            }

            /** Represents a MsgUpdateParams. */
            class MsgUpdateParams implements IMsgUpdateParams {

                /**
                 * Constructs a new MsgUpdateParams.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.insurance.v1beta1.IMsgUpdateParams);

                /** MsgUpdateParams authority. */
                public authority: string;

                /** MsgUpdateParams params. */
                public params?: (injective.insurance.v1beta1.IParams|null);

                /**
                 * Encodes the specified MsgUpdateParams message. Does not implicitly {@link injective.insurance.v1beta1.MsgUpdateParams.verify|verify} messages.
                 * @param message MsgUpdateParams message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.insurance.v1beta1.IMsgUpdateParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgUpdateParams message, length delimited. Does not implicitly {@link injective.insurance.v1beta1.MsgUpdateParams.verify|verify} messages.
                 * @param message MsgUpdateParams message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.insurance.v1beta1.IMsgUpdateParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgUpdateParams message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgUpdateParams
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.insurance.v1beta1.MsgUpdateParams;

                /**
                 * Decodes a MsgUpdateParams message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgUpdateParams
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.insurance.v1beta1.MsgUpdateParams;

                /**
                 * Verifies a MsgUpdateParams message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgUpdateParams message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgUpdateParams
                 */
                public static fromObject(object: { [k: string]: any }): injective.insurance.v1beta1.MsgUpdateParams;

                /**
                 * Creates a plain object from a MsgUpdateParams message. Also converts values to other types if specified.
                 * @param message MsgUpdateParams
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.insurance.v1beta1.MsgUpdateParams, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgUpdateParams to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgUpdateParamsResponse. */
            interface IMsgUpdateParamsResponse {
            }

            /** Represents a MsgUpdateParamsResponse. */
            class MsgUpdateParamsResponse implements IMsgUpdateParamsResponse {

                /**
                 * Constructs a new MsgUpdateParamsResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.insurance.v1beta1.IMsgUpdateParamsResponse);

                /**
                 * Encodes the specified MsgUpdateParamsResponse message. Does not implicitly {@link injective.insurance.v1beta1.MsgUpdateParamsResponse.verify|verify} messages.
                 * @param message MsgUpdateParamsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.insurance.v1beta1.IMsgUpdateParamsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgUpdateParamsResponse message, length delimited. Does not implicitly {@link injective.insurance.v1beta1.MsgUpdateParamsResponse.verify|verify} messages.
                 * @param message MsgUpdateParamsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.insurance.v1beta1.IMsgUpdateParamsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgUpdateParamsResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgUpdateParamsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.insurance.v1beta1.MsgUpdateParamsResponse;

                /**
                 * Decodes a MsgUpdateParamsResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgUpdateParamsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.insurance.v1beta1.MsgUpdateParamsResponse;

                /**
                 * Verifies a MsgUpdateParamsResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgUpdateParamsResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgUpdateParamsResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.insurance.v1beta1.MsgUpdateParamsResponse;

                /**
                 * Creates a plain object from a MsgUpdateParamsResponse message. Also converts values to other types if specified.
                 * @param message MsgUpdateParamsResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.insurance.v1beta1.MsgUpdateParamsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgUpdateParamsResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a Params. */
            interface IParams {

                /** Params default_redemption_notice_period_duration */
                default_redemption_notice_period_duration?: (google.protobuf.IDuration|null);
            }

            /** Represents a Params. */
            class Params implements IParams {

                /**
                 * Constructs a new Params.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.insurance.v1beta1.IParams);

                /** Params default_redemption_notice_period_duration. */
                public default_redemption_notice_period_duration?: (google.protobuf.IDuration|null);

                /**
                 * Encodes the specified Params message. Does not implicitly {@link injective.insurance.v1beta1.Params.verify|verify} messages.
                 * @param message Params message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.insurance.v1beta1.IParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Params message, length delimited. Does not implicitly {@link injective.insurance.v1beta1.Params.verify|verify} messages.
                 * @param message Params message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.insurance.v1beta1.IParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Params message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Params
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.insurance.v1beta1.Params;

                /**
                 * Decodes a Params message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Params
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.insurance.v1beta1.Params;

                /**
                 * Verifies a Params message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Params message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Params
                 */
                public static fromObject(object: { [k: string]: any }): injective.insurance.v1beta1.Params;

                /**
                 * Creates a plain object from a Params message. Also converts values to other types if specified.
                 * @param message Params
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.insurance.v1beta1.Params, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Params to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an InsuranceFund. */
            interface IInsuranceFund {

                /** InsuranceFund deposit_denom */
                deposit_denom?: (string|null);

                /** InsuranceFund insurance_pool_token_denom */
                insurance_pool_token_denom?: (string|null);

                /** InsuranceFund redemption_notice_period_duration */
                redemption_notice_period_duration?: (google.protobuf.IDuration|null);

                /** InsuranceFund balance */
                balance?: (string|null);

                /** InsuranceFund total_share */
                total_share?: (string|null);

                /** InsuranceFund market_id */
                market_id?: (string|null);

                /** InsuranceFund market_ticker */
                market_ticker?: (string|null);

                /** InsuranceFund oracle_base */
                oracle_base?: (string|null);

                /** InsuranceFund oracle_quote */
                oracle_quote?: (string|null);

                /** InsuranceFund oracle_type */
                oracle_type?: (injective.oracle.v1beta1.OracleType|null);

                /** InsuranceFund expiry */
                expiry?: (number|null);
            }

            /** Represents an InsuranceFund. */
            class InsuranceFund implements IInsuranceFund {

                /**
                 * Constructs a new InsuranceFund.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.insurance.v1beta1.IInsuranceFund);

                /** InsuranceFund deposit_denom. */
                public deposit_denom: string;

                /** InsuranceFund insurance_pool_token_denom. */
                public insurance_pool_token_denom: string;

                /** InsuranceFund redemption_notice_period_duration. */
                public redemption_notice_period_duration?: (google.protobuf.IDuration|null);

                /** InsuranceFund balance. */
                public balance: string;

                /** InsuranceFund total_share. */
                public total_share: string;

                /** InsuranceFund market_id. */
                public market_id: string;

                /** InsuranceFund market_ticker. */
                public market_ticker: string;

                /** InsuranceFund oracle_base. */
                public oracle_base: string;

                /** InsuranceFund oracle_quote. */
                public oracle_quote: string;

                /** InsuranceFund oracle_type. */
                public oracle_type: injective.oracle.v1beta1.OracleType;

                /** InsuranceFund expiry. */
                public expiry: number;

                /**
                 * Encodes the specified InsuranceFund message. Does not implicitly {@link injective.insurance.v1beta1.InsuranceFund.verify|verify} messages.
                 * @param message InsuranceFund message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.insurance.v1beta1.IInsuranceFund, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified InsuranceFund message, length delimited. Does not implicitly {@link injective.insurance.v1beta1.InsuranceFund.verify|verify} messages.
                 * @param message InsuranceFund message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.insurance.v1beta1.IInsuranceFund, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an InsuranceFund message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns InsuranceFund
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.insurance.v1beta1.InsuranceFund;

                /**
                 * Decodes an InsuranceFund message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns InsuranceFund
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.insurance.v1beta1.InsuranceFund;

                /**
                 * Verifies an InsuranceFund message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an InsuranceFund message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns InsuranceFund
                 */
                public static fromObject(object: { [k: string]: any }): injective.insurance.v1beta1.InsuranceFund;

                /**
                 * Creates a plain object from an InsuranceFund message. Also converts values to other types if specified.
                 * @param message InsuranceFund
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.insurance.v1beta1.InsuranceFund, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this InsuranceFund to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a RedemptionSchedule. */
            interface IRedemptionSchedule {

                /** RedemptionSchedule id */
                id?: (number|null);

                /** RedemptionSchedule marketId */
                marketId?: (string|null);

                /** RedemptionSchedule redeemer */
                redeemer?: (string|null);

                /** RedemptionSchedule claimable_redemption_time */
                claimable_redemption_time?: (google.protobuf.ITimestamp|null);

                /** RedemptionSchedule redemption_amount */
                redemption_amount?: (cosmos.base.v1beta1.ICoin|null);
            }

            /** Represents a RedemptionSchedule. */
            class RedemptionSchedule implements IRedemptionSchedule {

                /**
                 * Constructs a new RedemptionSchedule.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.insurance.v1beta1.IRedemptionSchedule);

                /** RedemptionSchedule id. */
                public id: number;

                /** RedemptionSchedule marketId. */
                public marketId: string;

                /** RedemptionSchedule redeemer. */
                public redeemer: string;

                /** RedemptionSchedule claimable_redemption_time. */
                public claimable_redemption_time?: (google.protobuf.ITimestamp|null);

                /** RedemptionSchedule redemption_amount. */
                public redemption_amount?: (cosmos.base.v1beta1.ICoin|null);

                /**
                 * Encodes the specified RedemptionSchedule message. Does not implicitly {@link injective.insurance.v1beta1.RedemptionSchedule.verify|verify} messages.
                 * @param message RedemptionSchedule message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.insurance.v1beta1.IRedemptionSchedule, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified RedemptionSchedule message, length delimited. Does not implicitly {@link injective.insurance.v1beta1.RedemptionSchedule.verify|verify} messages.
                 * @param message RedemptionSchedule message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.insurance.v1beta1.IRedemptionSchedule, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a RedemptionSchedule message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns RedemptionSchedule
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.insurance.v1beta1.RedemptionSchedule;

                /**
                 * Decodes a RedemptionSchedule message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns RedemptionSchedule
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.insurance.v1beta1.RedemptionSchedule;

                /**
                 * Verifies a RedemptionSchedule message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a RedemptionSchedule message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns RedemptionSchedule
                 */
                public static fromObject(object: { [k: string]: any }): injective.insurance.v1beta1.RedemptionSchedule;

                /**
                 * Creates a plain object from a RedemptionSchedule message. Also converts values to other types if specified.
                 * @param message RedemptionSchedule
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.insurance.v1beta1.RedemptionSchedule, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this RedemptionSchedule to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an EventInsuranceFundUpdate. */
            interface IEventInsuranceFundUpdate {

                /** EventInsuranceFundUpdate fund */
                fund?: (injective.insurance.v1beta1.IInsuranceFund|null);
            }

            /** Represents an EventInsuranceFundUpdate. */
            class EventInsuranceFundUpdate implements IEventInsuranceFundUpdate {

                /**
                 * Constructs a new EventInsuranceFundUpdate.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.insurance.v1beta1.IEventInsuranceFundUpdate);

                /** EventInsuranceFundUpdate fund. */
                public fund?: (injective.insurance.v1beta1.IInsuranceFund|null);

                /**
                 * Encodes the specified EventInsuranceFundUpdate message. Does not implicitly {@link injective.insurance.v1beta1.EventInsuranceFundUpdate.verify|verify} messages.
                 * @param message EventInsuranceFundUpdate message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.insurance.v1beta1.IEventInsuranceFundUpdate, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified EventInsuranceFundUpdate message, length delimited. Does not implicitly {@link injective.insurance.v1beta1.EventInsuranceFundUpdate.verify|verify} messages.
                 * @param message EventInsuranceFundUpdate message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.insurance.v1beta1.IEventInsuranceFundUpdate, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an EventInsuranceFundUpdate message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns EventInsuranceFundUpdate
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.insurance.v1beta1.EventInsuranceFundUpdate;

                /**
                 * Decodes an EventInsuranceFundUpdate message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns EventInsuranceFundUpdate
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.insurance.v1beta1.EventInsuranceFundUpdate;

                /**
                 * Verifies an EventInsuranceFundUpdate message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an EventInsuranceFundUpdate message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns EventInsuranceFundUpdate
                 */
                public static fromObject(object: { [k: string]: any }): injective.insurance.v1beta1.EventInsuranceFundUpdate;

                /**
                 * Creates a plain object from an EventInsuranceFundUpdate message. Also converts values to other types if specified.
                 * @param message EventInsuranceFundUpdate
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.insurance.v1beta1.EventInsuranceFundUpdate, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this EventInsuranceFundUpdate to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an EventRequestRedemption. */
            interface IEventRequestRedemption {

                /** EventRequestRedemption schedule */
                schedule?: (injective.insurance.v1beta1.IRedemptionSchedule|null);
            }

            /** Represents an EventRequestRedemption. */
            class EventRequestRedemption implements IEventRequestRedemption {

                /**
                 * Constructs a new EventRequestRedemption.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.insurance.v1beta1.IEventRequestRedemption);

                /** EventRequestRedemption schedule. */
                public schedule?: (injective.insurance.v1beta1.IRedemptionSchedule|null);

                /**
                 * Encodes the specified EventRequestRedemption message. Does not implicitly {@link injective.insurance.v1beta1.EventRequestRedemption.verify|verify} messages.
                 * @param message EventRequestRedemption message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.insurance.v1beta1.IEventRequestRedemption, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified EventRequestRedemption message, length delimited. Does not implicitly {@link injective.insurance.v1beta1.EventRequestRedemption.verify|verify} messages.
                 * @param message EventRequestRedemption message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.insurance.v1beta1.IEventRequestRedemption, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an EventRequestRedemption message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns EventRequestRedemption
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.insurance.v1beta1.EventRequestRedemption;

                /**
                 * Decodes an EventRequestRedemption message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns EventRequestRedemption
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.insurance.v1beta1.EventRequestRedemption;

                /**
                 * Verifies an EventRequestRedemption message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an EventRequestRedemption message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns EventRequestRedemption
                 */
                public static fromObject(object: { [k: string]: any }): injective.insurance.v1beta1.EventRequestRedemption;

                /**
                 * Creates a plain object from an EventRequestRedemption message. Also converts values to other types if specified.
                 * @param message EventRequestRedemption
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.insurance.v1beta1.EventRequestRedemption, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this EventRequestRedemption to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an EventWithdrawRedemption. */
            interface IEventWithdrawRedemption {

                /** EventWithdrawRedemption schedule */
                schedule?: (injective.insurance.v1beta1.IRedemptionSchedule|null);

                /** EventWithdrawRedemption redeem_coin */
                redeem_coin?: (cosmos.base.v1beta1.ICoin|null);
            }

            /** Represents an EventWithdrawRedemption. */
            class EventWithdrawRedemption implements IEventWithdrawRedemption {

                /**
                 * Constructs a new EventWithdrawRedemption.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.insurance.v1beta1.IEventWithdrawRedemption);

                /** EventWithdrawRedemption schedule. */
                public schedule?: (injective.insurance.v1beta1.IRedemptionSchedule|null);

                /** EventWithdrawRedemption redeem_coin. */
                public redeem_coin?: (cosmos.base.v1beta1.ICoin|null);

                /**
                 * Encodes the specified EventWithdrawRedemption message. Does not implicitly {@link injective.insurance.v1beta1.EventWithdrawRedemption.verify|verify} messages.
                 * @param message EventWithdrawRedemption message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.insurance.v1beta1.IEventWithdrawRedemption, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified EventWithdrawRedemption message, length delimited. Does not implicitly {@link injective.insurance.v1beta1.EventWithdrawRedemption.verify|verify} messages.
                 * @param message EventWithdrawRedemption message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.insurance.v1beta1.IEventWithdrawRedemption, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an EventWithdrawRedemption message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns EventWithdrawRedemption
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.insurance.v1beta1.EventWithdrawRedemption;

                /**
                 * Decodes an EventWithdrawRedemption message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns EventWithdrawRedemption
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.insurance.v1beta1.EventWithdrawRedemption;

                /**
                 * Verifies an EventWithdrawRedemption message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an EventWithdrawRedemption message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns EventWithdrawRedemption
                 */
                public static fromObject(object: { [k: string]: any }): injective.insurance.v1beta1.EventWithdrawRedemption;

                /**
                 * Creates a plain object from an EventWithdrawRedemption message. Also converts values to other types if specified.
                 * @param message EventWithdrawRedemption
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.insurance.v1beta1.EventWithdrawRedemption, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this EventWithdrawRedemption to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an EventUnderwrite. */
            interface IEventUnderwrite {

                /** EventUnderwrite underwriter */
                underwriter?: (string|null);

                /** EventUnderwrite marketId */
                marketId?: (string|null);

                /** EventUnderwrite deposit */
                deposit?: (cosmos.base.v1beta1.ICoin|null);

                /** EventUnderwrite shares */
                shares?: (cosmos.base.v1beta1.ICoin|null);
            }

            /** Represents an EventUnderwrite. */
            class EventUnderwrite implements IEventUnderwrite {

                /**
                 * Constructs a new EventUnderwrite.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.insurance.v1beta1.IEventUnderwrite);

                /** EventUnderwrite underwriter. */
                public underwriter: string;

                /** EventUnderwrite marketId. */
                public marketId: string;

                /** EventUnderwrite deposit. */
                public deposit?: (cosmos.base.v1beta1.ICoin|null);

                /** EventUnderwrite shares. */
                public shares?: (cosmos.base.v1beta1.ICoin|null);

                /**
                 * Encodes the specified EventUnderwrite message. Does not implicitly {@link injective.insurance.v1beta1.EventUnderwrite.verify|verify} messages.
                 * @param message EventUnderwrite message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.insurance.v1beta1.IEventUnderwrite, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified EventUnderwrite message, length delimited. Does not implicitly {@link injective.insurance.v1beta1.EventUnderwrite.verify|verify} messages.
                 * @param message EventUnderwrite message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.insurance.v1beta1.IEventUnderwrite, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an EventUnderwrite message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns EventUnderwrite
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.insurance.v1beta1.EventUnderwrite;

                /**
                 * Decodes an EventUnderwrite message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns EventUnderwrite
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.insurance.v1beta1.EventUnderwrite;

                /**
                 * Verifies an EventUnderwrite message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an EventUnderwrite message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns EventUnderwrite
                 */
                public static fromObject(object: { [k: string]: any }): injective.insurance.v1beta1.EventUnderwrite;

                /**
                 * Creates a plain object from an EventUnderwrite message. Also converts values to other types if specified.
                 * @param message EventUnderwrite
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.insurance.v1beta1.EventUnderwrite, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this EventUnderwrite to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Represents a Query */
            class Query extends $protobuf.rpc.Service {

                /**
                 * Constructs a new Query service.
                 * @param rpcImpl RPC implementation
                 * @param [requestDelimited=false] Whether requests are length-delimited
                 * @param [responseDelimited=false] Whether responses are length-delimited
                 */
                constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

                /**
                 * Calls InsuranceParams.
                 * @param request QueryInsuranceParamsRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryInsuranceParamsResponse
                 */
                public insuranceParams(request: injective.insurance.v1beta1.IQueryInsuranceParamsRequest, callback: injective.insurance.v1beta1.Query.InsuranceParamsCallback): void;

                /**
                 * Calls InsuranceParams.
                 * @param request QueryInsuranceParamsRequest message or plain object
                 * @returns Promise
                 */
                public insuranceParams(request: injective.insurance.v1beta1.IQueryInsuranceParamsRequest): Promise<injective.insurance.v1beta1.QueryInsuranceParamsResponse>;

                /**
                 * Calls InsuranceFund.
                 * @param request QueryInsuranceFundRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryInsuranceFundResponse
                 */
                public insuranceFund(request: injective.insurance.v1beta1.IQueryInsuranceFundRequest, callback: injective.insurance.v1beta1.Query.InsuranceFundCallback): void;

                /**
                 * Calls InsuranceFund.
                 * @param request QueryInsuranceFundRequest message or plain object
                 * @returns Promise
                 */
                public insuranceFund(request: injective.insurance.v1beta1.IQueryInsuranceFundRequest): Promise<injective.insurance.v1beta1.QueryInsuranceFundResponse>;

                /**
                 * Calls InsuranceFunds.
                 * @param request QueryInsuranceFundsRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryInsuranceFundsResponse
                 */
                public insuranceFunds(request: injective.insurance.v1beta1.IQueryInsuranceFundsRequest, callback: injective.insurance.v1beta1.Query.InsuranceFundsCallback): void;

                /**
                 * Calls InsuranceFunds.
                 * @param request QueryInsuranceFundsRequest message or plain object
                 * @returns Promise
                 */
                public insuranceFunds(request: injective.insurance.v1beta1.IQueryInsuranceFundsRequest): Promise<injective.insurance.v1beta1.QueryInsuranceFundsResponse>;

                /**
                 * Calls EstimatedRedemptions.
                 * @param request QueryEstimatedRedemptionsRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryEstimatedRedemptionsResponse
                 */
                public estimatedRedemptions(request: injective.insurance.v1beta1.IQueryEstimatedRedemptionsRequest, callback: injective.insurance.v1beta1.Query.EstimatedRedemptionsCallback): void;

                /**
                 * Calls EstimatedRedemptions.
                 * @param request QueryEstimatedRedemptionsRequest message or plain object
                 * @returns Promise
                 */
                public estimatedRedemptions(request: injective.insurance.v1beta1.IQueryEstimatedRedemptionsRequest): Promise<injective.insurance.v1beta1.QueryEstimatedRedemptionsResponse>;

                /**
                 * Calls PendingRedemptions.
                 * @param request QueryPendingRedemptionsRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryPendingRedemptionsResponse
                 */
                public pendingRedemptions(request: injective.insurance.v1beta1.IQueryPendingRedemptionsRequest, callback: injective.insurance.v1beta1.Query.PendingRedemptionsCallback): void;

                /**
                 * Calls PendingRedemptions.
                 * @param request QueryPendingRedemptionsRequest message or plain object
                 * @returns Promise
                 */
                public pendingRedemptions(request: injective.insurance.v1beta1.IQueryPendingRedemptionsRequest): Promise<injective.insurance.v1beta1.QueryPendingRedemptionsResponse>;

                /**
                 * Calls InsuranceModuleState.
                 * @param request QueryModuleStateRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryModuleStateResponse
                 */
                public insuranceModuleState(request: injective.insurance.v1beta1.IQueryModuleStateRequest, callback: injective.insurance.v1beta1.Query.InsuranceModuleStateCallback): void;

                /**
                 * Calls InsuranceModuleState.
                 * @param request QueryModuleStateRequest message or plain object
                 * @returns Promise
                 */
                public insuranceModuleState(request: injective.insurance.v1beta1.IQueryModuleStateRequest): Promise<injective.insurance.v1beta1.QueryModuleStateResponse>;
            }

            namespace Query {

                /**
                 * Callback as used by {@link injective.insurance.v1beta1.Query#insuranceParams}.
                 * @param error Error, if any
                 * @param [response] QueryInsuranceParamsResponse
                 */
                type InsuranceParamsCallback = (error: (Error|null), response?: injective.insurance.v1beta1.QueryInsuranceParamsResponse) => void;

                /**
                 * Callback as used by {@link injective.insurance.v1beta1.Query#insuranceFund}.
                 * @param error Error, if any
                 * @param [response] QueryInsuranceFundResponse
                 */
                type InsuranceFundCallback = (error: (Error|null), response?: injective.insurance.v1beta1.QueryInsuranceFundResponse) => void;

                /**
                 * Callback as used by {@link injective.insurance.v1beta1.Query#insuranceFunds}.
                 * @param error Error, if any
                 * @param [response] QueryInsuranceFundsResponse
                 */
                type InsuranceFundsCallback = (error: (Error|null), response?: injective.insurance.v1beta1.QueryInsuranceFundsResponse) => void;

                /**
                 * Callback as used by {@link injective.insurance.v1beta1.Query#estimatedRedemptions}.
                 * @param error Error, if any
                 * @param [response] QueryEstimatedRedemptionsResponse
                 */
                type EstimatedRedemptionsCallback = (error: (Error|null), response?: injective.insurance.v1beta1.QueryEstimatedRedemptionsResponse) => void;

                /**
                 * Callback as used by {@link injective.insurance.v1beta1.Query#pendingRedemptions}.
                 * @param error Error, if any
                 * @param [response] QueryPendingRedemptionsResponse
                 */
                type PendingRedemptionsCallback = (error: (Error|null), response?: injective.insurance.v1beta1.QueryPendingRedemptionsResponse) => void;

                /**
                 * Callback as used by {@link injective.insurance.v1beta1.Query#insuranceModuleState}.
                 * @param error Error, if any
                 * @param [response] QueryModuleStateResponse
                 */
                type InsuranceModuleStateCallback = (error: (Error|null), response?: injective.insurance.v1beta1.QueryModuleStateResponse) => void;
            }

            /** Properties of a QueryInsuranceParamsRequest. */
            interface IQueryInsuranceParamsRequest {
            }

            /** Represents a QueryInsuranceParamsRequest. */
            class QueryInsuranceParamsRequest implements IQueryInsuranceParamsRequest {

                /**
                 * Constructs a new QueryInsuranceParamsRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.insurance.v1beta1.IQueryInsuranceParamsRequest);

                /**
                 * Encodes the specified QueryInsuranceParamsRequest message. Does not implicitly {@link injective.insurance.v1beta1.QueryInsuranceParamsRequest.verify|verify} messages.
                 * @param message QueryInsuranceParamsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.insurance.v1beta1.IQueryInsuranceParamsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryInsuranceParamsRequest message, length delimited. Does not implicitly {@link injective.insurance.v1beta1.QueryInsuranceParamsRequest.verify|verify} messages.
                 * @param message QueryInsuranceParamsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.insurance.v1beta1.IQueryInsuranceParamsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryInsuranceParamsRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryInsuranceParamsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.insurance.v1beta1.QueryInsuranceParamsRequest;

                /**
                 * Decodes a QueryInsuranceParamsRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryInsuranceParamsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.insurance.v1beta1.QueryInsuranceParamsRequest;

                /**
                 * Verifies a QueryInsuranceParamsRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryInsuranceParamsRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryInsuranceParamsRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.insurance.v1beta1.QueryInsuranceParamsRequest;

                /**
                 * Creates a plain object from a QueryInsuranceParamsRequest message. Also converts values to other types if specified.
                 * @param message QueryInsuranceParamsRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.insurance.v1beta1.QueryInsuranceParamsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryInsuranceParamsRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryInsuranceParamsResponse. */
            interface IQueryInsuranceParamsResponse {

                /** QueryInsuranceParamsResponse params */
                params?: (injective.insurance.v1beta1.IParams|null);
            }

            /** Represents a QueryInsuranceParamsResponse. */
            class QueryInsuranceParamsResponse implements IQueryInsuranceParamsResponse {

                /**
                 * Constructs a new QueryInsuranceParamsResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.insurance.v1beta1.IQueryInsuranceParamsResponse);

                /** QueryInsuranceParamsResponse params. */
                public params?: (injective.insurance.v1beta1.IParams|null);

                /**
                 * Encodes the specified QueryInsuranceParamsResponse message. Does not implicitly {@link injective.insurance.v1beta1.QueryInsuranceParamsResponse.verify|verify} messages.
                 * @param message QueryInsuranceParamsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.insurance.v1beta1.IQueryInsuranceParamsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryInsuranceParamsResponse message, length delimited. Does not implicitly {@link injective.insurance.v1beta1.QueryInsuranceParamsResponse.verify|verify} messages.
                 * @param message QueryInsuranceParamsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.insurance.v1beta1.IQueryInsuranceParamsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryInsuranceParamsResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryInsuranceParamsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.insurance.v1beta1.QueryInsuranceParamsResponse;

                /**
                 * Decodes a QueryInsuranceParamsResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryInsuranceParamsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.insurance.v1beta1.QueryInsuranceParamsResponse;

                /**
                 * Verifies a QueryInsuranceParamsResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryInsuranceParamsResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryInsuranceParamsResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.insurance.v1beta1.QueryInsuranceParamsResponse;

                /**
                 * Creates a plain object from a QueryInsuranceParamsResponse message. Also converts values to other types if specified.
                 * @param message QueryInsuranceParamsResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.insurance.v1beta1.QueryInsuranceParamsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryInsuranceParamsResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryInsuranceFundRequest. */
            interface IQueryInsuranceFundRequest {

                /** QueryInsuranceFundRequest market_id */
                market_id?: (string|null);
            }

            /** Represents a QueryInsuranceFundRequest. */
            class QueryInsuranceFundRequest implements IQueryInsuranceFundRequest {

                /**
                 * Constructs a new QueryInsuranceFundRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.insurance.v1beta1.IQueryInsuranceFundRequest);

                /** QueryInsuranceFundRequest market_id. */
                public market_id: string;

                /**
                 * Encodes the specified QueryInsuranceFundRequest message. Does not implicitly {@link injective.insurance.v1beta1.QueryInsuranceFundRequest.verify|verify} messages.
                 * @param message QueryInsuranceFundRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.insurance.v1beta1.IQueryInsuranceFundRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryInsuranceFundRequest message, length delimited. Does not implicitly {@link injective.insurance.v1beta1.QueryInsuranceFundRequest.verify|verify} messages.
                 * @param message QueryInsuranceFundRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.insurance.v1beta1.IQueryInsuranceFundRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryInsuranceFundRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryInsuranceFundRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.insurance.v1beta1.QueryInsuranceFundRequest;

                /**
                 * Decodes a QueryInsuranceFundRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryInsuranceFundRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.insurance.v1beta1.QueryInsuranceFundRequest;

                /**
                 * Verifies a QueryInsuranceFundRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryInsuranceFundRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryInsuranceFundRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.insurance.v1beta1.QueryInsuranceFundRequest;

                /**
                 * Creates a plain object from a QueryInsuranceFundRequest message. Also converts values to other types if specified.
                 * @param message QueryInsuranceFundRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.insurance.v1beta1.QueryInsuranceFundRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryInsuranceFundRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryInsuranceFundResponse. */
            interface IQueryInsuranceFundResponse {

                /** QueryInsuranceFundResponse fund */
                fund?: (injective.insurance.v1beta1.IInsuranceFund|null);
            }

            /** Represents a QueryInsuranceFundResponse. */
            class QueryInsuranceFundResponse implements IQueryInsuranceFundResponse {

                /**
                 * Constructs a new QueryInsuranceFundResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.insurance.v1beta1.IQueryInsuranceFundResponse);

                /** QueryInsuranceFundResponse fund. */
                public fund?: (injective.insurance.v1beta1.IInsuranceFund|null);

                /**
                 * Encodes the specified QueryInsuranceFundResponse message. Does not implicitly {@link injective.insurance.v1beta1.QueryInsuranceFundResponse.verify|verify} messages.
                 * @param message QueryInsuranceFundResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.insurance.v1beta1.IQueryInsuranceFundResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryInsuranceFundResponse message, length delimited. Does not implicitly {@link injective.insurance.v1beta1.QueryInsuranceFundResponse.verify|verify} messages.
                 * @param message QueryInsuranceFundResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.insurance.v1beta1.IQueryInsuranceFundResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryInsuranceFundResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryInsuranceFundResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.insurance.v1beta1.QueryInsuranceFundResponse;

                /**
                 * Decodes a QueryInsuranceFundResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryInsuranceFundResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.insurance.v1beta1.QueryInsuranceFundResponse;

                /**
                 * Verifies a QueryInsuranceFundResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryInsuranceFundResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryInsuranceFundResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.insurance.v1beta1.QueryInsuranceFundResponse;

                /**
                 * Creates a plain object from a QueryInsuranceFundResponse message. Also converts values to other types if specified.
                 * @param message QueryInsuranceFundResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.insurance.v1beta1.QueryInsuranceFundResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryInsuranceFundResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryInsuranceFundsRequest. */
            interface IQueryInsuranceFundsRequest {
            }

            /** Represents a QueryInsuranceFundsRequest. */
            class QueryInsuranceFundsRequest implements IQueryInsuranceFundsRequest {

                /**
                 * Constructs a new QueryInsuranceFundsRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.insurance.v1beta1.IQueryInsuranceFundsRequest);

                /**
                 * Encodes the specified QueryInsuranceFundsRequest message. Does not implicitly {@link injective.insurance.v1beta1.QueryInsuranceFundsRequest.verify|verify} messages.
                 * @param message QueryInsuranceFundsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.insurance.v1beta1.IQueryInsuranceFundsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryInsuranceFundsRequest message, length delimited. Does not implicitly {@link injective.insurance.v1beta1.QueryInsuranceFundsRequest.verify|verify} messages.
                 * @param message QueryInsuranceFundsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.insurance.v1beta1.IQueryInsuranceFundsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryInsuranceFundsRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryInsuranceFundsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.insurance.v1beta1.QueryInsuranceFundsRequest;

                /**
                 * Decodes a QueryInsuranceFundsRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryInsuranceFundsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.insurance.v1beta1.QueryInsuranceFundsRequest;

                /**
                 * Verifies a QueryInsuranceFundsRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryInsuranceFundsRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryInsuranceFundsRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.insurance.v1beta1.QueryInsuranceFundsRequest;

                /**
                 * Creates a plain object from a QueryInsuranceFundsRequest message. Also converts values to other types if specified.
                 * @param message QueryInsuranceFundsRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.insurance.v1beta1.QueryInsuranceFundsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryInsuranceFundsRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryInsuranceFundsResponse. */
            interface IQueryInsuranceFundsResponse {

                /** QueryInsuranceFundsResponse funds */
                funds?: (injective.insurance.v1beta1.IInsuranceFund[]|null);
            }

            /** Represents a QueryInsuranceFundsResponse. */
            class QueryInsuranceFundsResponse implements IQueryInsuranceFundsResponse {

                /**
                 * Constructs a new QueryInsuranceFundsResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.insurance.v1beta1.IQueryInsuranceFundsResponse);

                /** QueryInsuranceFundsResponse funds. */
                public funds: injective.insurance.v1beta1.IInsuranceFund[];

                /**
                 * Encodes the specified QueryInsuranceFundsResponse message. Does not implicitly {@link injective.insurance.v1beta1.QueryInsuranceFundsResponse.verify|verify} messages.
                 * @param message QueryInsuranceFundsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.insurance.v1beta1.IQueryInsuranceFundsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryInsuranceFundsResponse message, length delimited. Does not implicitly {@link injective.insurance.v1beta1.QueryInsuranceFundsResponse.verify|verify} messages.
                 * @param message QueryInsuranceFundsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.insurance.v1beta1.IQueryInsuranceFundsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryInsuranceFundsResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryInsuranceFundsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.insurance.v1beta1.QueryInsuranceFundsResponse;

                /**
                 * Decodes a QueryInsuranceFundsResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryInsuranceFundsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.insurance.v1beta1.QueryInsuranceFundsResponse;

                /**
                 * Verifies a QueryInsuranceFundsResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryInsuranceFundsResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryInsuranceFundsResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.insurance.v1beta1.QueryInsuranceFundsResponse;

                /**
                 * Creates a plain object from a QueryInsuranceFundsResponse message. Also converts values to other types if specified.
                 * @param message QueryInsuranceFundsResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.insurance.v1beta1.QueryInsuranceFundsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryInsuranceFundsResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryEstimatedRedemptionsRequest. */
            interface IQueryEstimatedRedemptionsRequest {

                /** QueryEstimatedRedemptionsRequest marketId */
                marketId?: (string|null);

                /** QueryEstimatedRedemptionsRequest address */
                address?: (string|null);
            }

            /** Represents a QueryEstimatedRedemptionsRequest. */
            class QueryEstimatedRedemptionsRequest implements IQueryEstimatedRedemptionsRequest {

                /**
                 * Constructs a new QueryEstimatedRedemptionsRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.insurance.v1beta1.IQueryEstimatedRedemptionsRequest);

                /** QueryEstimatedRedemptionsRequest marketId. */
                public marketId: string;

                /** QueryEstimatedRedemptionsRequest address. */
                public address: string;

                /**
                 * Encodes the specified QueryEstimatedRedemptionsRequest message. Does not implicitly {@link injective.insurance.v1beta1.QueryEstimatedRedemptionsRequest.verify|verify} messages.
                 * @param message QueryEstimatedRedemptionsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.insurance.v1beta1.IQueryEstimatedRedemptionsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryEstimatedRedemptionsRequest message, length delimited. Does not implicitly {@link injective.insurance.v1beta1.QueryEstimatedRedemptionsRequest.verify|verify} messages.
                 * @param message QueryEstimatedRedemptionsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.insurance.v1beta1.IQueryEstimatedRedemptionsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryEstimatedRedemptionsRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryEstimatedRedemptionsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.insurance.v1beta1.QueryEstimatedRedemptionsRequest;

                /**
                 * Decodes a QueryEstimatedRedemptionsRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryEstimatedRedemptionsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.insurance.v1beta1.QueryEstimatedRedemptionsRequest;

                /**
                 * Verifies a QueryEstimatedRedemptionsRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryEstimatedRedemptionsRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryEstimatedRedemptionsRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.insurance.v1beta1.QueryEstimatedRedemptionsRequest;

                /**
                 * Creates a plain object from a QueryEstimatedRedemptionsRequest message. Also converts values to other types if specified.
                 * @param message QueryEstimatedRedemptionsRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.insurance.v1beta1.QueryEstimatedRedemptionsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryEstimatedRedemptionsRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryEstimatedRedemptionsResponse. */
            interface IQueryEstimatedRedemptionsResponse {

                /** QueryEstimatedRedemptionsResponse amount */
                amount?: (cosmos.base.v1beta1.ICoin[]|null);
            }

            /** Represents a QueryEstimatedRedemptionsResponse. */
            class QueryEstimatedRedemptionsResponse implements IQueryEstimatedRedemptionsResponse {

                /**
                 * Constructs a new QueryEstimatedRedemptionsResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.insurance.v1beta1.IQueryEstimatedRedemptionsResponse);

                /** QueryEstimatedRedemptionsResponse amount. */
                public amount: cosmos.base.v1beta1.ICoin[];

                /**
                 * Encodes the specified QueryEstimatedRedemptionsResponse message. Does not implicitly {@link injective.insurance.v1beta1.QueryEstimatedRedemptionsResponse.verify|verify} messages.
                 * @param message QueryEstimatedRedemptionsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.insurance.v1beta1.IQueryEstimatedRedemptionsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryEstimatedRedemptionsResponse message, length delimited. Does not implicitly {@link injective.insurance.v1beta1.QueryEstimatedRedemptionsResponse.verify|verify} messages.
                 * @param message QueryEstimatedRedemptionsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.insurance.v1beta1.IQueryEstimatedRedemptionsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryEstimatedRedemptionsResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryEstimatedRedemptionsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.insurance.v1beta1.QueryEstimatedRedemptionsResponse;

                /**
                 * Decodes a QueryEstimatedRedemptionsResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryEstimatedRedemptionsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.insurance.v1beta1.QueryEstimatedRedemptionsResponse;

                /**
                 * Verifies a QueryEstimatedRedemptionsResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryEstimatedRedemptionsResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryEstimatedRedemptionsResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.insurance.v1beta1.QueryEstimatedRedemptionsResponse;

                /**
                 * Creates a plain object from a QueryEstimatedRedemptionsResponse message. Also converts values to other types if specified.
                 * @param message QueryEstimatedRedemptionsResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.insurance.v1beta1.QueryEstimatedRedemptionsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryEstimatedRedemptionsResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryPendingRedemptionsRequest. */
            interface IQueryPendingRedemptionsRequest {

                /** QueryPendingRedemptionsRequest marketId */
                marketId?: (string|null);

                /** QueryPendingRedemptionsRequest address */
                address?: (string|null);
            }

            /** Represents a QueryPendingRedemptionsRequest. */
            class QueryPendingRedemptionsRequest implements IQueryPendingRedemptionsRequest {

                /**
                 * Constructs a new QueryPendingRedemptionsRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.insurance.v1beta1.IQueryPendingRedemptionsRequest);

                /** QueryPendingRedemptionsRequest marketId. */
                public marketId: string;

                /** QueryPendingRedemptionsRequest address. */
                public address: string;

                /**
                 * Encodes the specified QueryPendingRedemptionsRequest message. Does not implicitly {@link injective.insurance.v1beta1.QueryPendingRedemptionsRequest.verify|verify} messages.
                 * @param message QueryPendingRedemptionsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.insurance.v1beta1.IQueryPendingRedemptionsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryPendingRedemptionsRequest message, length delimited. Does not implicitly {@link injective.insurance.v1beta1.QueryPendingRedemptionsRequest.verify|verify} messages.
                 * @param message QueryPendingRedemptionsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.insurance.v1beta1.IQueryPendingRedemptionsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryPendingRedemptionsRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryPendingRedemptionsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.insurance.v1beta1.QueryPendingRedemptionsRequest;

                /**
                 * Decodes a QueryPendingRedemptionsRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryPendingRedemptionsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.insurance.v1beta1.QueryPendingRedemptionsRequest;

                /**
                 * Verifies a QueryPendingRedemptionsRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryPendingRedemptionsRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryPendingRedemptionsRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.insurance.v1beta1.QueryPendingRedemptionsRequest;

                /**
                 * Creates a plain object from a QueryPendingRedemptionsRequest message. Also converts values to other types if specified.
                 * @param message QueryPendingRedemptionsRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.insurance.v1beta1.QueryPendingRedemptionsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryPendingRedemptionsRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryPendingRedemptionsResponse. */
            interface IQueryPendingRedemptionsResponse {

                /** QueryPendingRedemptionsResponse amount */
                amount?: (cosmos.base.v1beta1.ICoin[]|null);
            }

            /** Represents a QueryPendingRedemptionsResponse. */
            class QueryPendingRedemptionsResponse implements IQueryPendingRedemptionsResponse {

                /**
                 * Constructs a new QueryPendingRedemptionsResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.insurance.v1beta1.IQueryPendingRedemptionsResponse);

                /** QueryPendingRedemptionsResponse amount. */
                public amount: cosmos.base.v1beta1.ICoin[];

                /**
                 * Encodes the specified QueryPendingRedemptionsResponse message. Does not implicitly {@link injective.insurance.v1beta1.QueryPendingRedemptionsResponse.verify|verify} messages.
                 * @param message QueryPendingRedemptionsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.insurance.v1beta1.IQueryPendingRedemptionsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryPendingRedemptionsResponse message, length delimited. Does not implicitly {@link injective.insurance.v1beta1.QueryPendingRedemptionsResponse.verify|verify} messages.
                 * @param message QueryPendingRedemptionsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.insurance.v1beta1.IQueryPendingRedemptionsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryPendingRedemptionsResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryPendingRedemptionsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.insurance.v1beta1.QueryPendingRedemptionsResponse;

                /**
                 * Decodes a QueryPendingRedemptionsResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryPendingRedemptionsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.insurance.v1beta1.QueryPendingRedemptionsResponse;

                /**
                 * Verifies a QueryPendingRedemptionsResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryPendingRedemptionsResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryPendingRedemptionsResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.insurance.v1beta1.QueryPendingRedemptionsResponse;

                /**
                 * Creates a plain object from a QueryPendingRedemptionsResponse message. Also converts values to other types if specified.
                 * @param message QueryPendingRedemptionsResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.insurance.v1beta1.QueryPendingRedemptionsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryPendingRedemptionsResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryModuleStateRequest. */
            interface IQueryModuleStateRequest {
            }

            /** Represents a QueryModuleStateRequest. */
            class QueryModuleStateRequest implements IQueryModuleStateRequest {

                /**
                 * Constructs a new QueryModuleStateRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.insurance.v1beta1.IQueryModuleStateRequest);

                /**
                 * Encodes the specified QueryModuleStateRequest message. Does not implicitly {@link injective.insurance.v1beta1.QueryModuleStateRequest.verify|verify} messages.
                 * @param message QueryModuleStateRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.insurance.v1beta1.IQueryModuleStateRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryModuleStateRequest message, length delimited. Does not implicitly {@link injective.insurance.v1beta1.QueryModuleStateRequest.verify|verify} messages.
                 * @param message QueryModuleStateRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.insurance.v1beta1.IQueryModuleStateRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryModuleStateRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryModuleStateRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.insurance.v1beta1.QueryModuleStateRequest;

                /**
                 * Decodes a QueryModuleStateRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryModuleStateRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.insurance.v1beta1.QueryModuleStateRequest;

                /**
                 * Verifies a QueryModuleStateRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryModuleStateRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryModuleStateRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.insurance.v1beta1.QueryModuleStateRequest;

                /**
                 * Creates a plain object from a QueryModuleStateRequest message. Also converts values to other types if specified.
                 * @param message QueryModuleStateRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.insurance.v1beta1.QueryModuleStateRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryModuleStateRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryModuleStateResponse. */
            interface IQueryModuleStateResponse {

                /** QueryModuleStateResponse state */
                state?: (injective.insurance.v1beta1.IGenesisState|null);
            }

            /** Represents a QueryModuleStateResponse. */
            class QueryModuleStateResponse implements IQueryModuleStateResponse {

                /**
                 * Constructs a new QueryModuleStateResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.insurance.v1beta1.IQueryModuleStateResponse);

                /** QueryModuleStateResponse state. */
                public state?: (injective.insurance.v1beta1.IGenesisState|null);

                /**
                 * Encodes the specified QueryModuleStateResponse message. Does not implicitly {@link injective.insurance.v1beta1.QueryModuleStateResponse.verify|verify} messages.
                 * @param message QueryModuleStateResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.insurance.v1beta1.IQueryModuleStateResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryModuleStateResponse message, length delimited. Does not implicitly {@link injective.insurance.v1beta1.QueryModuleStateResponse.verify|verify} messages.
                 * @param message QueryModuleStateResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.insurance.v1beta1.IQueryModuleStateResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryModuleStateResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryModuleStateResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.insurance.v1beta1.QueryModuleStateResponse;

                /**
                 * Decodes a QueryModuleStateResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryModuleStateResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.insurance.v1beta1.QueryModuleStateResponse;

                /**
                 * Verifies a QueryModuleStateResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryModuleStateResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryModuleStateResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.insurance.v1beta1.QueryModuleStateResponse;

                /**
                 * Creates a plain object from a QueryModuleStateResponse message. Also converts values to other types if specified.
                 * @param message QueryModuleStateResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.insurance.v1beta1.QueryModuleStateResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryModuleStateResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a GenesisState. */
            interface IGenesisState {

                /** GenesisState params */
                params?: (injective.insurance.v1beta1.IParams|null);

                /** GenesisState insurance_funds */
                insurance_funds?: (injective.insurance.v1beta1.IInsuranceFund[]|null);

                /** GenesisState redemption_schedule */
                redemption_schedule?: (injective.insurance.v1beta1.IRedemptionSchedule[]|null);

                /** GenesisState next_share_denom_id */
                next_share_denom_id?: (number|null);

                /** GenesisState next_redemption_schedule_id */
                next_redemption_schedule_id?: (number|null);
            }

            /** Represents a GenesisState. */
            class GenesisState implements IGenesisState {

                /**
                 * Constructs a new GenesisState.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.insurance.v1beta1.IGenesisState);

                /** GenesisState params. */
                public params?: (injective.insurance.v1beta1.IParams|null);

                /** GenesisState insurance_funds. */
                public insurance_funds: injective.insurance.v1beta1.IInsuranceFund[];

                /** GenesisState redemption_schedule. */
                public redemption_schedule: injective.insurance.v1beta1.IRedemptionSchedule[];

                /** GenesisState next_share_denom_id. */
                public next_share_denom_id: number;

                /** GenesisState next_redemption_schedule_id. */
                public next_redemption_schedule_id: number;

                /**
                 * Encodes the specified GenesisState message. Does not implicitly {@link injective.insurance.v1beta1.GenesisState.verify|verify} messages.
                 * @param message GenesisState message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.insurance.v1beta1.IGenesisState, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified GenesisState message, length delimited. Does not implicitly {@link injective.insurance.v1beta1.GenesisState.verify|verify} messages.
                 * @param message GenesisState message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.insurance.v1beta1.IGenesisState, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a GenesisState message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns GenesisState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.insurance.v1beta1.GenesisState;

                /**
                 * Decodes a GenesisState message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns GenesisState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.insurance.v1beta1.GenesisState;

                /**
                 * Verifies a GenesisState message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a GenesisState message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns GenesisState
                 */
                public static fromObject(object: { [k: string]: any }): injective.insurance.v1beta1.GenesisState;

                /**
                 * Creates a plain object from a GenesisState message. Also converts values to other types if specified.
                 * @param message GenesisState
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.insurance.v1beta1.GenesisState, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this GenesisState to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }
    }

    /** Namespace ocr. */
    namespace ocr {

        /** Namespace v1beta1. */
        namespace v1beta1 {

            /** Represents a Msg */
            class Msg extends $protobuf.rpc.Service {

                /**
                 * Constructs a new Msg service.
                 * @param rpcImpl RPC implementation
                 * @param [requestDelimited=false] Whether requests are length-delimited
                 * @param [responseDelimited=false] Whether responses are length-delimited
                 */
                constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

                /**
                 * Calls CreateFeed.
                 * @param request MsgCreateFeed message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgCreateFeedResponse
                 */
                public createFeed(request: injective.ocr.v1beta1.IMsgCreateFeed, callback: injective.ocr.v1beta1.Msg.CreateFeedCallback): void;

                /**
                 * Calls CreateFeed.
                 * @param request MsgCreateFeed message or plain object
                 * @returns Promise
                 */
                public createFeed(request: injective.ocr.v1beta1.IMsgCreateFeed): Promise<injective.ocr.v1beta1.MsgCreateFeedResponse>;

                /**
                 * Calls UpdateFeed.
                 * @param request MsgUpdateFeed message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgUpdateFeedResponse
                 */
                public updateFeed(request: injective.ocr.v1beta1.IMsgUpdateFeed, callback: injective.ocr.v1beta1.Msg.UpdateFeedCallback): void;

                /**
                 * Calls UpdateFeed.
                 * @param request MsgUpdateFeed message or plain object
                 * @returns Promise
                 */
                public updateFeed(request: injective.ocr.v1beta1.IMsgUpdateFeed): Promise<injective.ocr.v1beta1.MsgUpdateFeedResponse>;

                /**
                 * Calls Transmit.
                 * @param request MsgTransmit message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgTransmitResponse
                 */
                public transmit(request: injective.ocr.v1beta1.IMsgTransmit, callback: injective.ocr.v1beta1.Msg.TransmitCallback): void;

                /**
                 * Calls Transmit.
                 * @param request MsgTransmit message or plain object
                 * @returns Promise
                 */
                public transmit(request: injective.ocr.v1beta1.IMsgTransmit): Promise<injective.ocr.v1beta1.MsgTransmitResponse>;

                /**
                 * Calls FundFeedRewardPool.
                 * @param request MsgFundFeedRewardPool message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgFundFeedRewardPoolResponse
                 */
                public fundFeedRewardPool(request: injective.ocr.v1beta1.IMsgFundFeedRewardPool, callback: injective.ocr.v1beta1.Msg.FundFeedRewardPoolCallback): void;

                /**
                 * Calls FundFeedRewardPool.
                 * @param request MsgFundFeedRewardPool message or plain object
                 * @returns Promise
                 */
                public fundFeedRewardPool(request: injective.ocr.v1beta1.IMsgFundFeedRewardPool): Promise<injective.ocr.v1beta1.MsgFundFeedRewardPoolResponse>;

                /**
                 * Calls WithdrawFeedRewardPool.
                 * @param request MsgWithdrawFeedRewardPool message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgWithdrawFeedRewardPoolResponse
                 */
                public withdrawFeedRewardPool(request: injective.ocr.v1beta1.IMsgWithdrawFeedRewardPool, callback: injective.ocr.v1beta1.Msg.WithdrawFeedRewardPoolCallback): void;

                /**
                 * Calls WithdrawFeedRewardPool.
                 * @param request MsgWithdrawFeedRewardPool message or plain object
                 * @returns Promise
                 */
                public withdrawFeedRewardPool(request: injective.ocr.v1beta1.IMsgWithdrawFeedRewardPool): Promise<injective.ocr.v1beta1.MsgWithdrawFeedRewardPoolResponse>;

                /**
                 * Calls SetPayees.
                 * @param request MsgSetPayees message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgSetPayeesResponse
                 */
                public setPayees(request: injective.ocr.v1beta1.IMsgSetPayees, callback: injective.ocr.v1beta1.Msg.SetPayeesCallback): void;

                /**
                 * Calls SetPayees.
                 * @param request MsgSetPayees message or plain object
                 * @returns Promise
                 */
                public setPayees(request: injective.ocr.v1beta1.IMsgSetPayees): Promise<injective.ocr.v1beta1.MsgSetPayeesResponse>;

                /**
                 * Calls TransferPayeeship.
                 * @param request MsgTransferPayeeship message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgTransferPayeeshipResponse
                 */
                public transferPayeeship(request: injective.ocr.v1beta1.IMsgTransferPayeeship, callback: injective.ocr.v1beta1.Msg.TransferPayeeshipCallback): void;

                /**
                 * Calls TransferPayeeship.
                 * @param request MsgTransferPayeeship message or plain object
                 * @returns Promise
                 */
                public transferPayeeship(request: injective.ocr.v1beta1.IMsgTransferPayeeship): Promise<injective.ocr.v1beta1.MsgTransferPayeeshipResponse>;

                /**
                 * Calls AcceptPayeeship.
                 * @param request MsgAcceptPayeeship message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgAcceptPayeeshipResponse
                 */
                public acceptPayeeship(request: injective.ocr.v1beta1.IMsgAcceptPayeeship, callback: injective.ocr.v1beta1.Msg.AcceptPayeeshipCallback): void;

                /**
                 * Calls AcceptPayeeship.
                 * @param request MsgAcceptPayeeship message or plain object
                 * @returns Promise
                 */
                public acceptPayeeship(request: injective.ocr.v1beta1.IMsgAcceptPayeeship): Promise<injective.ocr.v1beta1.MsgAcceptPayeeshipResponse>;

                /**
                 * Calls UpdateParams.
                 * @param request MsgUpdateParams message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgUpdateParamsResponse
                 */
                public updateParams(request: injective.ocr.v1beta1.IMsgUpdateParams, callback: injective.ocr.v1beta1.Msg.UpdateParamsCallback): void;

                /**
                 * Calls UpdateParams.
                 * @param request MsgUpdateParams message or plain object
                 * @returns Promise
                 */
                public updateParams(request: injective.ocr.v1beta1.IMsgUpdateParams): Promise<injective.ocr.v1beta1.MsgUpdateParamsResponse>;
            }

            namespace Msg {

                /**
                 * Callback as used by {@link injective.ocr.v1beta1.Msg#createFeed}.
                 * @param error Error, if any
                 * @param [response] MsgCreateFeedResponse
                 */
                type CreateFeedCallback = (error: (Error|null), response?: injective.ocr.v1beta1.MsgCreateFeedResponse) => void;

                /**
                 * Callback as used by {@link injective.ocr.v1beta1.Msg#updateFeed}.
                 * @param error Error, if any
                 * @param [response] MsgUpdateFeedResponse
                 */
                type UpdateFeedCallback = (error: (Error|null), response?: injective.ocr.v1beta1.MsgUpdateFeedResponse) => void;

                /**
                 * Callback as used by {@link injective.ocr.v1beta1.Msg#transmit}.
                 * @param error Error, if any
                 * @param [response] MsgTransmitResponse
                 */
                type TransmitCallback = (error: (Error|null), response?: injective.ocr.v1beta1.MsgTransmitResponse) => void;

                /**
                 * Callback as used by {@link injective.ocr.v1beta1.Msg#fundFeedRewardPool}.
                 * @param error Error, if any
                 * @param [response] MsgFundFeedRewardPoolResponse
                 */
                type FundFeedRewardPoolCallback = (error: (Error|null), response?: injective.ocr.v1beta1.MsgFundFeedRewardPoolResponse) => void;

                /**
                 * Callback as used by {@link injective.ocr.v1beta1.Msg#withdrawFeedRewardPool}.
                 * @param error Error, if any
                 * @param [response] MsgWithdrawFeedRewardPoolResponse
                 */
                type WithdrawFeedRewardPoolCallback = (error: (Error|null), response?: injective.ocr.v1beta1.MsgWithdrawFeedRewardPoolResponse) => void;

                /**
                 * Callback as used by {@link injective.ocr.v1beta1.Msg#setPayees}.
                 * @param error Error, if any
                 * @param [response] MsgSetPayeesResponse
                 */
                type SetPayeesCallback = (error: (Error|null), response?: injective.ocr.v1beta1.MsgSetPayeesResponse) => void;

                /**
                 * Callback as used by {@link injective.ocr.v1beta1.Msg#transferPayeeship}.
                 * @param error Error, if any
                 * @param [response] MsgTransferPayeeshipResponse
                 */
                type TransferPayeeshipCallback = (error: (Error|null), response?: injective.ocr.v1beta1.MsgTransferPayeeshipResponse) => void;

                /**
                 * Callback as used by {@link injective.ocr.v1beta1.Msg#acceptPayeeship}.
                 * @param error Error, if any
                 * @param [response] MsgAcceptPayeeshipResponse
                 */
                type AcceptPayeeshipCallback = (error: (Error|null), response?: injective.ocr.v1beta1.MsgAcceptPayeeshipResponse) => void;

                /**
                 * Callback as used by {@link injective.ocr.v1beta1.Msg#updateParams}.
                 * @param error Error, if any
                 * @param [response] MsgUpdateParamsResponse
                 */
                type UpdateParamsCallback = (error: (Error|null), response?: injective.ocr.v1beta1.MsgUpdateParamsResponse) => void;
            }

            /** Properties of a MsgCreateFeed. */
            interface IMsgCreateFeed {

                /** MsgCreateFeed sender */
                sender?: (string|null);

                /** MsgCreateFeed config */
                config?: (injective.ocr.v1beta1.IFeedConfig|null);
            }

            /** Represents a MsgCreateFeed. */
            class MsgCreateFeed implements IMsgCreateFeed {

                /**
                 * Constructs a new MsgCreateFeed.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.ocr.v1beta1.IMsgCreateFeed);

                /** MsgCreateFeed sender. */
                public sender: string;

                /** MsgCreateFeed config. */
                public config?: (injective.ocr.v1beta1.IFeedConfig|null);

                /**
                 * Encodes the specified MsgCreateFeed message. Does not implicitly {@link injective.ocr.v1beta1.MsgCreateFeed.verify|verify} messages.
                 * @param message MsgCreateFeed message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.ocr.v1beta1.IMsgCreateFeed, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgCreateFeed message, length delimited. Does not implicitly {@link injective.ocr.v1beta1.MsgCreateFeed.verify|verify} messages.
                 * @param message MsgCreateFeed message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.ocr.v1beta1.IMsgCreateFeed, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgCreateFeed message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgCreateFeed
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.ocr.v1beta1.MsgCreateFeed;

                /**
                 * Decodes a MsgCreateFeed message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgCreateFeed
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.ocr.v1beta1.MsgCreateFeed;

                /**
                 * Verifies a MsgCreateFeed message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgCreateFeed message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgCreateFeed
                 */
                public static fromObject(object: { [k: string]: any }): injective.ocr.v1beta1.MsgCreateFeed;

                /**
                 * Creates a plain object from a MsgCreateFeed message. Also converts values to other types if specified.
                 * @param message MsgCreateFeed
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.ocr.v1beta1.MsgCreateFeed, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgCreateFeed to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgCreateFeedResponse. */
            interface IMsgCreateFeedResponse {
            }

            /** Represents a MsgCreateFeedResponse. */
            class MsgCreateFeedResponse implements IMsgCreateFeedResponse {

                /**
                 * Constructs a new MsgCreateFeedResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.ocr.v1beta1.IMsgCreateFeedResponse);

                /**
                 * Encodes the specified MsgCreateFeedResponse message. Does not implicitly {@link injective.ocr.v1beta1.MsgCreateFeedResponse.verify|verify} messages.
                 * @param message MsgCreateFeedResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.ocr.v1beta1.IMsgCreateFeedResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgCreateFeedResponse message, length delimited. Does not implicitly {@link injective.ocr.v1beta1.MsgCreateFeedResponse.verify|verify} messages.
                 * @param message MsgCreateFeedResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.ocr.v1beta1.IMsgCreateFeedResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgCreateFeedResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgCreateFeedResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.ocr.v1beta1.MsgCreateFeedResponse;

                /**
                 * Decodes a MsgCreateFeedResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgCreateFeedResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.ocr.v1beta1.MsgCreateFeedResponse;

                /**
                 * Verifies a MsgCreateFeedResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgCreateFeedResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgCreateFeedResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.ocr.v1beta1.MsgCreateFeedResponse;

                /**
                 * Creates a plain object from a MsgCreateFeedResponse message. Also converts values to other types if specified.
                 * @param message MsgCreateFeedResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.ocr.v1beta1.MsgCreateFeedResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgCreateFeedResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgUpdateFeed. */
            interface IMsgUpdateFeed {

                /** MsgUpdateFeed sender */
                sender?: (string|null);

                /** MsgUpdateFeed feed_id */
                feed_id?: (string|null);

                /** MsgUpdateFeed signers */
                signers?: (string[]|null);

                /** MsgUpdateFeed transmitters */
                transmitters?: (string[]|null);

                /** MsgUpdateFeed link_per_observation */
                link_per_observation?: (string|null);

                /** MsgUpdateFeed link_per_transmission */
                link_per_transmission?: (string|null);

                /** MsgUpdateFeed link_denom */
                link_denom?: (string|null);

                /** MsgUpdateFeed feed_admin */
                feed_admin?: (string|null);

                /** MsgUpdateFeed billing_admin */
                billing_admin?: (string|null);
            }

            /** Represents a MsgUpdateFeed. */
            class MsgUpdateFeed implements IMsgUpdateFeed {

                /**
                 * Constructs a new MsgUpdateFeed.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.ocr.v1beta1.IMsgUpdateFeed);

                /** MsgUpdateFeed sender. */
                public sender: string;

                /** MsgUpdateFeed feed_id. */
                public feed_id: string;

                /** MsgUpdateFeed signers. */
                public signers: string[];

                /** MsgUpdateFeed transmitters. */
                public transmitters: string[];

                /** MsgUpdateFeed link_per_observation. */
                public link_per_observation: string;

                /** MsgUpdateFeed link_per_transmission. */
                public link_per_transmission: string;

                /** MsgUpdateFeed link_denom. */
                public link_denom: string;

                /** MsgUpdateFeed feed_admin. */
                public feed_admin: string;

                /** MsgUpdateFeed billing_admin. */
                public billing_admin: string;

                /**
                 * Encodes the specified MsgUpdateFeed message. Does not implicitly {@link injective.ocr.v1beta1.MsgUpdateFeed.verify|verify} messages.
                 * @param message MsgUpdateFeed message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.ocr.v1beta1.IMsgUpdateFeed, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgUpdateFeed message, length delimited. Does not implicitly {@link injective.ocr.v1beta1.MsgUpdateFeed.verify|verify} messages.
                 * @param message MsgUpdateFeed message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.ocr.v1beta1.IMsgUpdateFeed, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgUpdateFeed message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgUpdateFeed
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.ocr.v1beta1.MsgUpdateFeed;

                /**
                 * Decodes a MsgUpdateFeed message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgUpdateFeed
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.ocr.v1beta1.MsgUpdateFeed;

                /**
                 * Verifies a MsgUpdateFeed message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgUpdateFeed message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgUpdateFeed
                 */
                public static fromObject(object: { [k: string]: any }): injective.ocr.v1beta1.MsgUpdateFeed;

                /**
                 * Creates a plain object from a MsgUpdateFeed message. Also converts values to other types if specified.
                 * @param message MsgUpdateFeed
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.ocr.v1beta1.MsgUpdateFeed, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgUpdateFeed to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgUpdateFeedResponse. */
            interface IMsgUpdateFeedResponse {
            }

            /** Represents a MsgUpdateFeedResponse. */
            class MsgUpdateFeedResponse implements IMsgUpdateFeedResponse {

                /**
                 * Constructs a new MsgUpdateFeedResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.ocr.v1beta1.IMsgUpdateFeedResponse);

                /**
                 * Encodes the specified MsgUpdateFeedResponse message. Does not implicitly {@link injective.ocr.v1beta1.MsgUpdateFeedResponse.verify|verify} messages.
                 * @param message MsgUpdateFeedResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.ocr.v1beta1.IMsgUpdateFeedResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgUpdateFeedResponse message, length delimited. Does not implicitly {@link injective.ocr.v1beta1.MsgUpdateFeedResponse.verify|verify} messages.
                 * @param message MsgUpdateFeedResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.ocr.v1beta1.IMsgUpdateFeedResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgUpdateFeedResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgUpdateFeedResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.ocr.v1beta1.MsgUpdateFeedResponse;

                /**
                 * Decodes a MsgUpdateFeedResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgUpdateFeedResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.ocr.v1beta1.MsgUpdateFeedResponse;

                /**
                 * Verifies a MsgUpdateFeedResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgUpdateFeedResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgUpdateFeedResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.ocr.v1beta1.MsgUpdateFeedResponse;

                /**
                 * Creates a plain object from a MsgUpdateFeedResponse message. Also converts values to other types if specified.
                 * @param message MsgUpdateFeedResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.ocr.v1beta1.MsgUpdateFeedResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgUpdateFeedResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgTransmit. */
            interface IMsgTransmit {

                /** MsgTransmit transmitter */
                transmitter?: (string|null);

                /** MsgTransmit config_digest */
                config_digest?: (Uint8Array|null);

                /** MsgTransmit feed_id */
                feed_id?: (string|null);

                /** MsgTransmit epoch */
                epoch?: (number|null);

                /** MsgTransmit round */
                round?: (number|null);

                /** MsgTransmit extra_hash */
                extra_hash?: (Uint8Array|null);

                /** MsgTransmit report */
                report?: (injective.ocr.v1beta1.IReport|null);

                /** MsgTransmit signatures */
                signatures?: (Uint8Array[]|null);
            }

            /** Represents a MsgTransmit. */
            class MsgTransmit implements IMsgTransmit {

                /**
                 * Constructs a new MsgTransmit.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.ocr.v1beta1.IMsgTransmit);

                /** MsgTransmit transmitter. */
                public transmitter: string;

                /** MsgTransmit config_digest. */
                public config_digest: Uint8Array;

                /** MsgTransmit feed_id. */
                public feed_id: string;

                /** MsgTransmit epoch. */
                public epoch: number;

                /** MsgTransmit round. */
                public round: number;

                /** MsgTransmit extra_hash. */
                public extra_hash: Uint8Array;

                /** MsgTransmit report. */
                public report?: (injective.ocr.v1beta1.IReport|null);

                /** MsgTransmit signatures. */
                public signatures: Uint8Array[];

                /**
                 * Encodes the specified MsgTransmit message. Does not implicitly {@link injective.ocr.v1beta1.MsgTransmit.verify|verify} messages.
                 * @param message MsgTransmit message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.ocr.v1beta1.IMsgTransmit, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgTransmit message, length delimited. Does not implicitly {@link injective.ocr.v1beta1.MsgTransmit.verify|verify} messages.
                 * @param message MsgTransmit message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.ocr.v1beta1.IMsgTransmit, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgTransmit message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgTransmit
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.ocr.v1beta1.MsgTransmit;

                /**
                 * Decodes a MsgTransmit message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgTransmit
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.ocr.v1beta1.MsgTransmit;

                /**
                 * Verifies a MsgTransmit message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgTransmit message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgTransmit
                 */
                public static fromObject(object: { [k: string]: any }): injective.ocr.v1beta1.MsgTransmit;

                /**
                 * Creates a plain object from a MsgTransmit message. Also converts values to other types if specified.
                 * @param message MsgTransmit
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.ocr.v1beta1.MsgTransmit, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgTransmit to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgTransmitResponse. */
            interface IMsgTransmitResponse {
            }

            /** Represents a MsgTransmitResponse. */
            class MsgTransmitResponse implements IMsgTransmitResponse {

                /**
                 * Constructs a new MsgTransmitResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.ocr.v1beta1.IMsgTransmitResponse);

                /**
                 * Encodes the specified MsgTransmitResponse message. Does not implicitly {@link injective.ocr.v1beta1.MsgTransmitResponse.verify|verify} messages.
                 * @param message MsgTransmitResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.ocr.v1beta1.IMsgTransmitResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgTransmitResponse message, length delimited. Does not implicitly {@link injective.ocr.v1beta1.MsgTransmitResponse.verify|verify} messages.
                 * @param message MsgTransmitResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.ocr.v1beta1.IMsgTransmitResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgTransmitResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgTransmitResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.ocr.v1beta1.MsgTransmitResponse;

                /**
                 * Decodes a MsgTransmitResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgTransmitResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.ocr.v1beta1.MsgTransmitResponse;

                /**
                 * Verifies a MsgTransmitResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgTransmitResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgTransmitResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.ocr.v1beta1.MsgTransmitResponse;

                /**
                 * Creates a plain object from a MsgTransmitResponse message. Also converts values to other types if specified.
                 * @param message MsgTransmitResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.ocr.v1beta1.MsgTransmitResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgTransmitResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgFundFeedRewardPool. */
            interface IMsgFundFeedRewardPool {

                /** MsgFundFeedRewardPool sender */
                sender?: (string|null);

                /** MsgFundFeedRewardPool feed_id */
                feed_id?: (string|null);

                /** MsgFundFeedRewardPool amount */
                amount?: (cosmos.base.v1beta1.ICoin|null);
            }

            /** Represents a MsgFundFeedRewardPool. */
            class MsgFundFeedRewardPool implements IMsgFundFeedRewardPool {

                /**
                 * Constructs a new MsgFundFeedRewardPool.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.ocr.v1beta1.IMsgFundFeedRewardPool);

                /** MsgFundFeedRewardPool sender. */
                public sender: string;

                /** MsgFundFeedRewardPool feed_id. */
                public feed_id: string;

                /** MsgFundFeedRewardPool amount. */
                public amount?: (cosmos.base.v1beta1.ICoin|null);

                /**
                 * Encodes the specified MsgFundFeedRewardPool message. Does not implicitly {@link injective.ocr.v1beta1.MsgFundFeedRewardPool.verify|verify} messages.
                 * @param message MsgFundFeedRewardPool message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.ocr.v1beta1.IMsgFundFeedRewardPool, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgFundFeedRewardPool message, length delimited. Does not implicitly {@link injective.ocr.v1beta1.MsgFundFeedRewardPool.verify|verify} messages.
                 * @param message MsgFundFeedRewardPool message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.ocr.v1beta1.IMsgFundFeedRewardPool, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgFundFeedRewardPool message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgFundFeedRewardPool
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.ocr.v1beta1.MsgFundFeedRewardPool;

                /**
                 * Decodes a MsgFundFeedRewardPool message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgFundFeedRewardPool
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.ocr.v1beta1.MsgFundFeedRewardPool;

                /**
                 * Verifies a MsgFundFeedRewardPool message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgFundFeedRewardPool message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgFundFeedRewardPool
                 */
                public static fromObject(object: { [k: string]: any }): injective.ocr.v1beta1.MsgFundFeedRewardPool;

                /**
                 * Creates a plain object from a MsgFundFeedRewardPool message. Also converts values to other types if specified.
                 * @param message MsgFundFeedRewardPool
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.ocr.v1beta1.MsgFundFeedRewardPool, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgFundFeedRewardPool to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgFundFeedRewardPoolResponse. */
            interface IMsgFundFeedRewardPoolResponse {
            }

            /** Represents a MsgFundFeedRewardPoolResponse. */
            class MsgFundFeedRewardPoolResponse implements IMsgFundFeedRewardPoolResponse {

                /**
                 * Constructs a new MsgFundFeedRewardPoolResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.ocr.v1beta1.IMsgFundFeedRewardPoolResponse);

                /**
                 * Encodes the specified MsgFundFeedRewardPoolResponse message. Does not implicitly {@link injective.ocr.v1beta1.MsgFundFeedRewardPoolResponse.verify|verify} messages.
                 * @param message MsgFundFeedRewardPoolResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.ocr.v1beta1.IMsgFundFeedRewardPoolResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgFundFeedRewardPoolResponse message, length delimited. Does not implicitly {@link injective.ocr.v1beta1.MsgFundFeedRewardPoolResponse.verify|verify} messages.
                 * @param message MsgFundFeedRewardPoolResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.ocr.v1beta1.IMsgFundFeedRewardPoolResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgFundFeedRewardPoolResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgFundFeedRewardPoolResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.ocr.v1beta1.MsgFundFeedRewardPoolResponse;

                /**
                 * Decodes a MsgFundFeedRewardPoolResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgFundFeedRewardPoolResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.ocr.v1beta1.MsgFundFeedRewardPoolResponse;

                /**
                 * Verifies a MsgFundFeedRewardPoolResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgFundFeedRewardPoolResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgFundFeedRewardPoolResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.ocr.v1beta1.MsgFundFeedRewardPoolResponse;

                /**
                 * Creates a plain object from a MsgFundFeedRewardPoolResponse message. Also converts values to other types if specified.
                 * @param message MsgFundFeedRewardPoolResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.ocr.v1beta1.MsgFundFeedRewardPoolResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgFundFeedRewardPoolResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgWithdrawFeedRewardPool. */
            interface IMsgWithdrawFeedRewardPool {

                /** MsgWithdrawFeedRewardPool sender */
                sender?: (string|null);

                /** MsgWithdrawFeedRewardPool feed_id */
                feed_id?: (string|null);

                /** MsgWithdrawFeedRewardPool amount */
                amount?: (cosmos.base.v1beta1.ICoin|null);
            }

            /** Represents a MsgWithdrawFeedRewardPool. */
            class MsgWithdrawFeedRewardPool implements IMsgWithdrawFeedRewardPool {

                /**
                 * Constructs a new MsgWithdrawFeedRewardPool.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.ocr.v1beta1.IMsgWithdrawFeedRewardPool);

                /** MsgWithdrawFeedRewardPool sender. */
                public sender: string;

                /** MsgWithdrawFeedRewardPool feed_id. */
                public feed_id: string;

                /** MsgWithdrawFeedRewardPool amount. */
                public amount?: (cosmos.base.v1beta1.ICoin|null);

                /**
                 * Encodes the specified MsgWithdrawFeedRewardPool message. Does not implicitly {@link injective.ocr.v1beta1.MsgWithdrawFeedRewardPool.verify|verify} messages.
                 * @param message MsgWithdrawFeedRewardPool message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.ocr.v1beta1.IMsgWithdrawFeedRewardPool, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgWithdrawFeedRewardPool message, length delimited. Does not implicitly {@link injective.ocr.v1beta1.MsgWithdrawFeedRewardPool.verify|verify} messages.
                 * @param message MsgWithdrawFeedRewardPool message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.ocr.v1beta1.IMsgWithdrawFeedRewardPool, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgWithdrawFeedRewardPool message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgWithdrawFeedRewardPool
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.ocr.v1beta1.MsgWithdrawFeedRewardPool;

                /**
                 * Decodes a MsgWithdrawFeedRewardPool message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgWithdrawFeedRewardPool
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.ocr.v1beta1.MsgWithdrawFeedRewardPool;

                /**
                 * Verifies a MsgWithdrawFeedRewardPool message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgWithdrawFeedRewardPool message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgWithdrawFeedRewardPool
                 */
                public static fromObject(object: { [k: string]: any }): injective.ocr.v1beta1.MsgWithdrawFeedRewardPool;

                /**
                 * Creates a plain object from a MsgWithdrawFeedRewardPool message. Also converts values to other types if specified.
                 * @param message MsgWithdrawFeedRewardPool
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.ocr.v1beta1.MsgWithdrawFeedRewardPool, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgWithdrawFeedRewardPool to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgWithdrawFeedRewardPoolResponse. */
            interface IMsgWithdrawFeedRewardPoolResponse {
            }

            /** Represents a MsgWithdrawFeedRewardPoolResponse. */
            class MsgWithdrawFeedRewardPoolResponse implements IMsgWithdrawFeedRewardPoolResponse {

                /**
                 * Constructs a new MsgWithdrawFeedRewardPoolResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.ocr.v1beta1.IMsgWithdrawFeedRewardPoolResponse);

                /**
                 * Encodes the specified MsgWithdrawFeedRewardPoolResponse message. Does not implicitly {@link injective.ocr.v1beta1.MsgWithdrawFeedRewardPoolResponse.verify|verify} messages.
                 * @param message MsgWithdrawFeedRewardPoolResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.ocr.v1beta1.IMsgWithdrawFeedRewardPoolResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgWithdrawFeedRewardPoolResponse message, length delimited. Does not implicitly {@link injective.ocr.v1beta1.MsgWithdrawFeedRewardPoolResponse.verify|verify} messages.
                 * @param message MsgWithdrawFeedRewardPoolResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.ocr.v1beta1.IMsgWithdrawFeedRewardPoolResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgWithdrawFeedRewardPoolResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgWithdrawFeedRewardPoolResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.ocr.v1beta1.MsgWithdrawFeedRewardPoolResponse;

                /**
                 * Decodes a MsgWithdrawFeedRewardPoolResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgWithdrawFeedRewardPoolResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.ocr.v1beta1.MsgWithdrawFeedRewardPoolResponse;

                /**
                 * Verifies a MsgWithdrawFeedRewardPoolResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgWithdrawFeedRewardPoolResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgWithdrawFeedRewardPoolResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.ocr.v1beta1.MsgWithdrawFeedRewardPoolResponse;

                /**
                 * Creates a plain object from a MsgWithdrawFeedRewardPoolResponse message. Also converts values to other types if specified.
                 * @param message MsgWithdrawFeedRewardPoolResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.ocr.v1beta1.MsgWithdrawFeedRewardPoolResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgWithdrawFeedRewardPoolResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgSetPayees. */
            interface IMsgSetPayees {

                /** MsgSetPayees sender */
                sender?: (string|null);

                /** MsgSetPayees feed_id */
                feed_id?: (string|null);

                /** MsgSetPayees transmitters */
                transmitters?: (string[]|null);

                /** MsgSetPayees payees */
                payees?: (string[]|null);
            }

            /** Represents a MsgSetPayees. */
            class MsgSetPayees implements IMsgSetPayees {

                /**
                 * Constructs a new MsgSetPayees.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.ocr.v1beta1.IMsgSetPayees);

                /** MsgSetPayees sender. */
                public sender: string;

                /** MsgSetPayees feed_id. */
                public feed_id: string;

                /** MsgSetPayees transmitters. */
                public transmitters: string[];

                /** MsgSetPayees payees. */
                public payees: string[];

                /**
                 * Encodes the specified MsgSetPayees message. Does not implicitly {@link injective.ocr.v1beta1.MsgSetPayees.verify|verify} messages.
                 * @param message MsgSetPayees message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.ocr.v1beta1.IMsgSetPayees, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgSetPayees message, length delimited. Does not implicitly {@link injective.ocr.v1beta1.MsgSetPayees.verify|verify} messages.
                 * @param message MsgSetPayees message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.ocr.v1beta1.IMsgSetPayees, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgSetPayees message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgSetPayees
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.ocr.v1beta1.MsgSetPayees;

                /**
                 * Decodes a MsgSetPayees message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgSetPayees
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.ocr.v1beta1.MsgSetPayees;

                /**
                 * Verifies a MsgSetPayees message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgSetPayees message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgSetPayees
                 */
                public static fromObject(object: { [k: string]: any }): injective.ocr.v1beta1.MsgSetPayees;

                /**
                 * Creates a plain object from a MsgSetPayees message. Also converts values to other types if specified.
                 * @param message MsgSetPayees
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.ocr.v1beta1.MsgSetPayees, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgSetPayees to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgSetPayeesResponse. */
            interface IMsgSetPayeesResponse {
            }

            /** Represents a MsgSetPayeesResponse. */
            class MsgSetPayeesResponse implements IMsgSetPayeesResponse {

                /**
                 * Constructs a new MsgSetPayeesResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.ocr.v1beta1.IMsgSetPayeesResponse);

                /**
                 * Encodes the specified MsgSetPayeesResponse message. Does not implicitly {@link injective.ocr.v1beta1.MsgSetPayeesResponse.verify|verify} messages.
                 * @param message MsgSetPayeesResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.ocr.v1beta1.IMsgSetPayeesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgSetPayeesResponse message, length delimited. Does not implicitly {@link injective.ocr.v1beta1.MsgSetPayeesResponse.verify|verify} messages.
                 * @param message MsgSetPayeesResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.ocr.v1beta1.IMsgSetPayeesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgSetPayeesResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgSetPayeesResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.ocr.v1beta1.MsgSetPayeesResponse;

                /**
                 * Decodes a MsgSetPayeesResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgSetPayeesResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.ocr.v1beta1.MsgSetPayeesResponse;

                /**
                 * Verifies a MsgSetPayeesResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgSetPayeesResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgSetPayeesResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.ocr.v1beta1.MsgSetPayeesResponse;

                /**
                 * Creates a plain object from a MsgSetPayeesResponse message. Also converts values to other types if specified.
                 * @param message MsgSetPayeesResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.ocr.v1beta1.MsgSetPayeesResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgSetPayeesResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgTransferPayeeship. */
            interface IMsgTransferPayeeship {

                /** MsgTransferPayeeship sender */
                sender?: (string|null);

                /** MsgTransferPayeeship transmitter */
                transmitter?: (string|null);

                /** MsgTransferPayeeship feed_id */
                feed_id?: (string|null);

                /** MsgTransferPayeeship proposed */
                proposed?: (string|null);
            }

            /** Represents a MsgTransferPayeeship. */
            class MsgTransferPayeeship implements IMsgTransferPayeeship {

                /**
                 * Constructs a new MsgTransferPayeeship.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.ocr.v1beta1.IMsgTransferPayeeship);

                /** MsgTransferPayeeship sender. */
                public sender: string;

                /** MsgTransferPayeeship transmitter. */
                public transmitter: string;

                /** MsgTransferPayeeship feed_id. */
                public feed_id: string;

                /** MsgTransferPayeeship proposed. */
                public proposed: string;

                /**
                 * Encodes the specified MsgTransferPayeeship message. Does not implicitly {@link injective.ocr.v1beta1.MsgTransferPayeeship.verify|verify} messages.
                 * @param message MsgTransferPayeeship message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.ocr.v1beta1.IMsgTransferPayeeship, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgTransferPayeeship message, length delimited. Does not implicitly {@link injective.ocr.v1beta1.MsgTransferPayeeship.verify|verify} messages.
                 * @param message MsgTransferPayeeship message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.ocr.v1beta1.IMsgTransferPayeeship, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgTransferPayeeship message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgTransferPayeeship
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.ocr.v1beta1.MsgTransferPayeeship;

                /**
                 * Decodes a MsgTransferPayeeship message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgTransferPayeeship
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.ocr.v1beta1.MsgTransferPayeeship;

                /**
                 * Verifies a MsgTransferPayeeship message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgTransferPayeeship message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgTransferPayeeship
                 */
                public static fromObject(object: { [k: string]: any }): injective.ocr.v1beta1.MsgTransferPayeeship;

                /**
                 * Creates a plain object from a MsgTransferPayeeship message. Also converts values to other types if specified.
                 * @param message MsgTransferPayeeship
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.ocr.v1beta1.MsgTransferPayeeship, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgTransferPayeeship to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgTransferPayeeshipResponse. */
            interface IMsgTransferPayeeshipResponse {
            }

            /** Represents a MsgTransferPayeeshipResponse. */
            class MsgTransferPayeeshipResponse implements IMsgTransferPayeeshipResponse {

                /**
                 * Constructs a new MsgTransferPayeeshipResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.ocr.v1beta1.IMsgTransferPayeeshipResponse);

                /**
                 * Encodes the specified MsgTransferPayeeshipResponse message. Does not implicitly {@link injective.ocr.v1beta1.MsgTransferPayeeshipResponse.verify|verify} messages.
                 * @param message MsgTransferPayeeshipResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.ocr.v1beta1.IMsgTransferPayeeshipResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgTransferPayeeshipResponse message, length delimited. Does not implicitly {@link injective.ocr.v1beta1.MsgTransferPayeeshipResponse.verify|verify} messages.
                 * @param message MsgTransferPayeeshipResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.ocr.v1beta1.IMsgTransferPayeeshipResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgTransferPayeeshipResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgTransferPayeeshipResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.ocr.v1beta1.MsgTransferPayeeshipResponse;

                /**
                 * Decodes a MsgTransferPayeeshipResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgTransferPayeeshipResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.ocr.v1beta1.MsgTransferPayeeshipResponse;

                /**
                 * Verifies a MsgTransferPayeeshipResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgTransferPayeeshipResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgTransferPayeeshipResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.ocr.v1beta1.MsgTransferPayeeshipResponse;

                /**
                 * Creates a plain object from a MsgTransferPayeeshipResponse message. Also converts values to other types if specified.
                 * @param message MsgTransferPayeeshipResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.ocr.v1beta1.MsgTransferPayeeshipResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgTransferPayeeshipResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgAcceptPayeeship. */
            interface IMsgAcceptPayeeship {

                /** MsgAcceptPayeeship payee */
                payee?: (string|null);

                /** MsgAcceptPayeeship transmitter */
                transmitter?: (string|null);

                /** MsgAcceptPayeeship feed_id */
                feed_id?: (string|null);
            }

            /** Represents a MsgAcceptPayeeship. */
            class MsgAcceptPayeeship implements IMsgAcceptPayeeship {

                /**
                 * Constructs a new MsgAcceptPayeeship.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.ocr.v1beta1.IMsgAcceptPayeeship);

                /** MsgAcceptPayeeship payee. */
                public payee: string;

                /** MsgAcceptPayeeship transmitter. */
                public transmitter: string;

                /** MsgAcceptPayeeship feed_id. */
                public feed_id: string;

                /**
                 * Encodes the specified MsgAcceptPayeeship message. Does not implicitly {@link injective.ocr.v1beta1.MsgAcceptPayeeship.verify|verify} messages.
                 * @param message MsgAcceptPayeeship message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.ocr.v1beta1.IMsgAcceptPayeeship, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgAcceptPayeeship message, length delimited. Does not implicitly {@link injective.ocr.v1beta1.MsgAcceptPayeeship.verify|verify} messages.
                 * @param message MsgAcceptPayeeship message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.ocr.v1beta1.IMsgAcceptPayeeship, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgAcceptPayeeship message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgAcceptPayeeship
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.ocr.v1beta1.MsgAcceptPayeeship;

                /**
                 * Decodes a MsgAcceptPayeeship message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgAcceptPayeeship
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.ocr.v1beta1.MsgAcceptPayeeship;

                /**
                 * Verifies a MsgAcceptPayeeship message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgAcceptPayeeship message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgAcceptPayeeship
                 */
                public static fromObject(object: { [k: string]: any }): injective.ocr.v1beta1.MsgAcceptPayeeship;

                /**
                 * Creates a plain object from a MsgAcceptPayeeship message. Also converts values to other types if specified.
                 * @param message MsgAcceptPayeeship
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.ocr.v1beta1.MsgAcceptPayeeship, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgAcceptPayeeship to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgAcceptPayeeshipResponse. */
            interface IMsgAcceptPayeeshipResponse {
            }

            /** Represents a MsgAcceptPayeeshipResponse. */
            class MsgAcceptPayeeshipResponse implements IMsgAcceptPayeeshipResponse {

                /**
                 * Constructs a new MsgAcceptPayeeshipResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.ocr.v1beta1.IMsgAcceptPayeeshipResponse);

                /**
                 * Encodes the specified MsgAcceptPayeeshipResponse message. Does not implicitly {@link injective.ocr.v1beta1.MsgAcceptPayeeshipResponse.verify|verify} messages.
                 * @param message MsgAcceptPayeeshipResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.ocr.v1beta1.IMsgAcceptPayeeshipResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgAcceptPayeeshipResponse message, length delimited. Does not implicitly {@link injective.ocr.v1beta1.MsgAcceptPayeeshipResponse.verify|verify} messages.
                 * @param message MsgAcceptPayeeshipResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.ocr.v1beta1.IMsgAcceptPayeeshipResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgAcceptPayeeshipResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgAcceptPayeeshipResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.ocr.v1beta1.MsgAcceptPayeeshipResponse;

                /**
                 * Decodes a MsgAcceptPayeeshipResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgAcceptPayeeshipResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.ocr.v1beta1.MsgAcceptPayeeshipResponse;

                /**
                 * Verifies a MsgAcceptPayeeshipResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgAcceptPayeeshipResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgAcceptPayeeshipResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.ocr.v1beta1.MsgAcceptPayeeshipResponse;

                /**
                 * Creates a plain object from a MsgAcceptPayeeshipResponse message. Also converts values to other types if specified.
                 * @param message MsgAcceptPayeeshipResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.ocr.v1beta1.MsgAcceptPayeeshipResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgAcceptPayeeshipResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgUpdateParams. */
            interface IMsgUpdateParams {

                /** MsgUpdateParams authority */
                authority?: (string|null);

                /** MsgUpdateParams params */
                params?: (injective.ocr.v1beta1.IParams|null);
            }

            /** Represents a MsgUpdateParams. */
            class MsgUpdateParams implements IMsgUpdateParams {

                /**
                 * Constructs a new MsgUpdateParams.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.ocr.v1beta1.IMsgUpdateParams);

                /** MsgUpdateParams authority. */
                public authority: string;

                /** MsgUpdateParams params. */
                public params?: (injective.ocr.v1beta1.IParams|null);

                /**
                 * Encodes the specified MsgUpdateParams message. Does not implicitly {@link injective.ocr.v1beta1.MsgUpdateParams.verify|verify} messages.
                 * @param message MsgUpdateParams message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.ocr.v1beta1.IMsgUpdateParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgUpdateParams message, length delimited. Does not implicitly {@link injective.ocr.v1beta1.MsgUpdateParams.verify|verify} messages.
                 * @param message MsgUpdateParams message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.ocr.v1beta1.IMsgUpdateParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgUpdateParams message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgUpdateParams
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.ocr.v1beta1.MsgUpdateParams;

                /**
                 * Decodes a MsgUpdateParams message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgUpdateParams
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.ocr.v1beta1.MsgUpdateParams;

                /**
                 * Verifies a MsgUpdateParams message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgUpdateParams message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgUpdateParams
                 */
                public static fromObject(object: { [k: string]: any }): injective.ocr.v1beta1.MsgUpdateParams;

                /**
                 * Creates a plain object from a MsgUpdateParams message. Also converts values to other types if specified.
                 * @param message MsgUpdateParams
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.ocr.v1beta1.MsgUpdateParams, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgUpdateParams to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgUpdateParamsResponse. */
            interface IMsgUpdateParamsResponse {
            }

            /** Represents a MsgUpdateParamsResponse. */
            class MsgUpdateParamsResponse implements IMsgUpdateParamsResponse {

                /**
                 * Constructs a new MsgUpdateParamsResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.ocr.v1beta1.IMsgUpdateParamsResponse);

                /**
                 * Encodes the specified MsgUpdateParamsResponse message. Does not implicitly {@link injective.ocr.v1beta1.MsgUpdateParamsResponse.verify|verify} messages.
                 * @param message MsgUpdateParamsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.ocr.v1beta1.IMsgUpdateParamsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgUpdateParamsResponse message, length delimited. Does not implicitly {@link injective.ocr.v1beta1.MsgUpdateParamsResponse.verify|verify} messages.
                 * @param message MsgUpdateParamsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.ocr.v1beta1.IMsgUpdateParamsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgUpdateParamsResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgUpdateParamsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.ocr.v1beta1.MsgUpdateParamsResponse;

                /**
                 * Decodes a MsgUpdateParamsResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgUpdateParamsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.ocr.v1beta1.MsgUpdateParamsResponse;

                /**
                 * Verifies a MsgUpdateParamsResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgUpdateParamsResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgUpdateParamsResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.ocr.v1beta1.MsgUpdateParamsResponse;

                /**
                 * Creates a plain object from a MsgUpdateParamsResponse message. Also converts values to other types if specified.
                 * @param message MsgUpdateParamsResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.ocr.v1beta1.MsgUpdateParamsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgUpdateParamsResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a Params. */
            interface IParams {

                /** Params link_denom */
                link_denom?: (string|null);

                /** Params payout_block_interval */
                payout_block_interval?: (number|null);

                /** Params module_admin */
                module_admin?: (string|null);
            }

            /** Represents a Params. */
            class Params implements IParams {

                /**
                 * Constructs a new Params.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.ocr.v1beta1.IParams);

                /** Params link_denom. */
                public link_denom: string;

                /** Params payout_block_interval. */
                public payout_block_interval: number;

                /** Params module_admin. */
                public module_admin: string;

                /**
                 * Encodes the specified Params message. Does not implicitly {@link injective.ocr.v1beta1.Params.verify|verify} messages.
                 * @param message Params message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.ocr.v1beta1.IParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Params message, length delimited. Does not implicitly {@link injective.ocr.v1beta1.Params.verify|verify} messages.
                 * @param message Params message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.ocr.v1beta1.IParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Params message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Params
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.ocr.v1beta1.Params;

                /**
                 * Decodes a Params message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Params
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.ocr.v1beta1.Params;

                /**
                 * Verifies a Params message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Params message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Params
                 */
                public static fromObject(object: { [k: string]: any }): injective.ocr.v1beta1.Params;

                /**
                 * Creates a plain object from a Params message. Also converts values to other types if specified.
                 * @param message Params
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.ocr.v1beta1.Params, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Params to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a FeedConfig. */
            interface IFeedConfig {

                /** FeedConfig signers */
                signers?: (string[]|null);

                /** FeedConfig transmitters */
                transmitters?: (string[]|null);

                /** FeedConfig f */
                f?: (number|null);

                /** FeedConfig onchain_config */
                onchain_config?: (Uint8Array|null);

                /** FeedConfig offchain_config_version */
                offchain_config_version?: (number|null);

                /** FeedConfig offchain_config */
                offchain_config?: (Uint8Array|null);

                /** FeedConfig module_params */
                module_params?: (injective.ocr.v1beta1.IModuleParams|null);
            }

            /** Represents a FeedConfig. */
            class FeedConfig implements IFeedConfig {

                /**
                 * Constructs a new FeedConfig.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.ocr.v1beta1.IFeedConfig);

                /** FeedConfig signers. */
                public signers: string[];

                /** FeedConfig transmitters. */
                public transmitters: string[];

                /** FeedConfig f. */
                public f: number;

                /** FeedConfig onchain_config. */
                public onchain_config: Uint8Array;

                /** FeedConfig offchain_config_version. */
                public offchain_config_version: number;

                /** FeedConfig offchain_config. */
                public offchain_config: Uint8Array;

                /** FeedConfig module_params. */
                public module_params?: (injective.ocr.v1beta1.IModuleParams|null);

                /**
                 * Encodes the specified FeedConfig message. Does not implicitly {@link injective.ocr.v1beta1.FeedConfig.verify|verify} messages.
                 * @param message FeedConfig message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.ocr.v1beta1.IFeedConfig, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified FeedConfig message, length delimited. Does not implicitly {@link injective.ocr.v1beta1.FeedConfig.verify|verify} messages.
                 * @param message FeedConfig message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.ocr.v1beta1.IFeedConfig, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a FeedConfig message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns FeedConfig
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.ocr.v1beta1.FeedConfig;

                /**
                 * Decodes a FeedConfig message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns FeedConfig
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.ocr.v1beta1.FeedConfig;

                /**
                 * Verifies a FeedConfig message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a FeedConfig message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns FeedConfig
                 */
                public static fromObject(object: { [k: string]: any }): injective.ocr.v1beta1.FeedConfig;

                /**
                 * Creates a plain object from a FeedConfig message. Also converts values to other types if specified.
                 * @param message FeedConfig
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.ocr.v1beta1.FeedConfig, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this FeedConfig to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a FeedConfigInfo. */
            interface IFeedConfigInfo {

                /** FeedConfigInfo latest_config_digest */
                latest_config_digest?: (Uint8Array|null);

                /** FeedConfigInfo f */
                f?: (number|null);

                /** FeedConfigInfo n */
                n?: (number|null);

                /** FeedConfigInfo config_count */
                config_count?: (number|null);

                /** FeedConfigInfo latest_config_block_number */
                latest_config_block_number?: (number|null);
            }

            /** Represents a FeedConfigInfo. */
            class FeedConfigInfo implements IFeedConfigInfo {

                /**
                 * Constructs a new FeedConfigInfo.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.ocr.v1beta1.IFeedConfigInfo);

                /** FeedConfigInfo latest_config_digest. */
                public latest_config_digest: Uint8Array;

                /** FeedConfigInfo f. */
                public f: number;

                /** FeedConfigInfo n. */
                public n: number;

                /** FeedConfigInfo config_count. */
                public config_count: number;

                /** FeedConfigInfo latest_config_block_number. */
                public latest_config_block_number: number;

                /**
                 * Encodes the specified FeedConfigInfo message. Does not implicitly {@link injective.ocr.v1beta1.FeedConfigInfo.verify|verify} messages.
                 * @param message FeedConfigInfo message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.ocr.v1beta1.IFeedConfigInfo, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified FeedConfigInfo message, length delimited. Does not implicitly {@link injective.ocr.v1beta1.FeedConfigInfo.verify|verify} messages.
                 * @param message FeedConfigInfo message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.ocr.v1beta1.IFeedConfigInfo, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a FeedConfigInfo message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns FeedConfigInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.ocr.v1beta1.FeedConfigInfo;

                /**
                 * Decodes a FeedConfigInfo message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns FeedConfigInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.ocr.v1beta1.FeedConfigInfo;

                /**
                 * Verifies a FeedConfigInfo message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a FeedConfigInfo message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns FeedConfigInfo
                 */
                public static fromObject(object: { [k: string]: any }): injective.ocr.v1beta1.FeedConfigInfo;

                /**
                 * Creates a plain object from a FeedConfigInfo message. Also converts values to other types if specified.
                 * @param message FeedConfigInfo
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.ocr.v1beta1.FeedConfigInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this FeedConfigInfo to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a ModuleParams. */
            interface IModuleParams {

                /** ModuleParams feed_id */
                feed_id?: (string|null);

                /** ModuleParams min_answer */
                min_answer?: (string|null);

                /** ModuleParams max_answer */
                max_answer?: (string|null);

                /** ModuleParams link_per_observation */
                link_per_observation?: (string|null);

                /** ModuleParams link_per_transmission */
                link_per_transmission?: (string|null);

                /** ModuleParams link_denom */
                link_denom?: (string|null);

                /** ModuleParams unique_reports */
                unique_reports?: (boolean|null);

                /** ModuleParams description */
                description?: (string|null);

                /** ModuleParams feed_admin */
                feed_admin?: (string|null);

                /** ModuleParams billing_admin */
                billing_admin?: (string|null);
            }

            /** Represents a ModuleParams. */
            class ModuleParams implements IModuleParams {

                /**
                 * Constructs a new ModuleParams.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.ocr.v1beta1.IModuleParams);

                /** ModuleParams feed_id. */
                public feed_id: string;

                /** ModuleParams min_answer. */
                public min_answer: string;

                /** ModuleParams max_answer. */
                public max_answer: string;

                /** ModuleParams link_per_observation. */
                public link_per_observation: string;

                /** ModuleParams link_per_transmission. */
                public link_per_transmission: string;

                /** ModuleParams link_denom. */
                public link_denom: string;

                /** ModuleParams unique_reports. */
                public unique_reports: boolean;

                /** ModuleParams description. */
                public description: string;

                /** ModuleParams feed_admin. */
                public feed_admin: string;

                /** ModuleParams billing_admin. */
                public billing_admin: string;

                /**
                 * Encodes the specified ModuleParams message. Does not implicitly {@link injective.ocr.v1beta1.ModuleParams.verify|verify} messages.
                 * @param message ModuleParams message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.ocr.v1beta1.IModuleParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ModuleParams message, length delimited. Does not implicitly {@link injective.ocr.v1beta1.ModuleParams.verify|verify} messages.
                 * @param message ModuleParams message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.ocr.v1beta1.IModuleParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ModuleParams message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ModuleParams
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.ocr.v1beta1.ModuleParams;

                /**
                 * Decodes a ModuleParams message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ModuleParams
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.ocr.v1beta1.ModuleParams;

                /**
                 * Verifies a ModuleParams message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ModuleParams message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ModuleParams
                 */
                public static fromObject(object: { [k: string]: any }): injective.ocr.v1beta1.ModuleParams;

                /**
                 * Creates a plain object from a ModuleParams message. Also converts values to other types if specified.
                 * @param message ModuleParams
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.ocr.v1beta1.ModuleParams, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ModuleParams to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a ContractConfig. */
            interface IContractConfig {

                /** ContractConfig config_count */
                config_count?: (number|null);

                /** ContractConfig signers */
                signers?: (string[]|null);

                /** ContractConfig transmitters */
                transmitters?: (string[]|null);

                /** ContractConfig f */
                f?: (number|null);

                /** ContractConfig onchain_config */
                onchain_config?: (Uint8Array|null);

                /** ContractConfig offchain_config_version */
                offchain_config_version?: (number|null);

                /** ContractConfig offchain_config */
                offchain_config?: (Uint8Array|null);
            }

            /** Represents a ContractConfig. */
            class ContractConfig implements IContractConfig {

                /**
                 * Constructs a new ContractConfig.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.ocr.v1beta1.IContractConfig);

                /** ContractConfig config_count. */
                public config_count: number;

                /** ContractConfig signers. */
                public signers: string[];

                /** ContractConfig transmitters. */
                public transmitters: string[];

                /** ContractConfig f. */
                public f: number;

                /** ContractConfig onchain_config. */
                public onchain_config: Uint8Array;

                /** ContractConfig offchain_config_version. */
                public offchain_config_version: number;

                /** ContractConfig offchain_config. */
                public offchain_config: Uint8Array;

                /**
                 * Encodes the specified ContractConfig message. Does not implicitly {@link injective.ocr.v1beta1.ContractConfig.verify|verify} messages.
                 * @param message ContractConfig message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.ocr.v1beta1.IContractConfig, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ContractConfig message, length delimited. Does not implicitly {@link injective.ocr.v1beta1.ContractConfig.verify|verify} messages.
                 * @param message ContractConfig message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.ocr.v1beta1.IContractConfig, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ContractConfig message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ContractConfig
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.ocr.v1beta1.ContractConfig;

                /**
                 * Decodes a ContractConfig message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ContractConfig
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.ocr.v1beta1.ContractConfig;

                /**
                 * Verifies a ContractConfig message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ContractConfig message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ContractConfig
                 */
                public static fromObject(object: { [k: string]: any }): injective.ocr.v1beta1.ContractConfig;

                /**
                 * Creates a plain object from a ContractConfig message. Also converts values to other types if specified.
                 * @param message ContractConfig
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.ocr.v1beta1.ContractConfig, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ContractConfig to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a SetConfigProposal. */
            interface ISetConfigProposal {

                /** SetConfigProposal title */
                title?: (string|null);

                /** SetConfigProposal description */
                description?: (string|null);

                /** SetConfigProposal config */
                config?: (injective.ocr.v1beta1.IFeedConfig|null);
            }

            /** Represents a SetConfigProposal. */
            class SetConfigProposal implements ISetConfigProposal {

                /**
                 * Constructs a new SetConfigProposal.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.ocr.v1beta1.ISetConfigProposal);

                /** SetConfigProposal title. */
                public title: string;

                /** SetConfigProposal description. */
                public description: string;

                /** SetConfigProposal config. */
                public config?: (injective.ocr.v1beta1.IFeedConfig|null);

                /**
                 * Encodes the specified SetConfigProposal message. Does not implicitly {@link injective.ocr.v1beta1.SetConfigProposal.verify|verify} messages.
                 * @param message SetConfigProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.ocr.v1beta1.ISetConfigProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified SetConfigProposal message, length delimited. Does not implicitly {@link injective.ocr.v1beta1.SetConfigProposal.verify|verify} messages.
                 * @param message SetConfigProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.ocr.v1beta1.ISetConfigProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a SetConfigProposal message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns SetConfigProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.ocr.v1beta1.SetConfigProposal;

                /**
                 * Decodes a SetConfigProposal message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns SetConfigProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.ocr.v1beta1.SetConfigProposal;

                /**
                 * Verifies a SetConfigProposal message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a SetConfigProposal message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns SetConfigProposal
                 */
                public static fromObject(object: { [k: string]: any }): injective.ocr.v1beta1.SetConfigProposal;

                /**
                 * Creates a plain object from a SetConfigProposal message. Also converts values to other types if specified.
                 * @param message SetConfigProposal
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.ocr.v1beta1.SetConfigProposal, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this SetConfigProposal to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a FeedProperties. */
            interface IFeedProperties {

                /** FeedProperties feed_id */
                feed_id?: (string|null);

                /** FeedProperties f */
                f?: (number|null);

                /** FeedProperties onchain_config */
                onchain_config?: (Uint8Array|null);

                /** FeedProperties offchain_config_version */
                offchain_config_version?: (number|null);

                /** FeedProperties offchain_config */
                offchain_config?: (Uint8Array|null);

                /** FeedProperties min_answer */
                min_answer?: (string|null);

                /** FeedProperties max_answer */
                max_answer?: (string|null);

                /** FeedProperties link_per_observation */
                link_per_observation?: (string|null);

                /** FeedProperties link_per_transmission */
                link_per_transmission?: (string|null);

                /** FeedProperties unique_reports */
                unique_reports?: (boolean|null);

                /** FeedProperties description */
                description?: (string|null);
            }

            /** Represents a FeedProperties. */
            class FeedProperties implements IFeedProperties {

                /**
                 * Constructs a new FeedProperties.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.ocr.v1beta1.IFeedProperties);

                /** FeedProperties feed_id. */
                public feed_id: string;

                /** FeedProperties f. */
                public f: number;

                /** FeedProperties onchain_config. */
                public onchain_config: Uint8Array;

                /** FeedProperties offchain_config_version. */
                public offchain_config_version: number;

                /** FeedProperties offchain_config. */
                public offchain_config: Uint8Array;

                /** FeedProperties min_answer. */
                public min_answer: string;

                /** FeedProperties max_answer. */
                public max_answer: string;

                /** FeedProperties link_per_observation. */
                public link_per_observation: string;

                /** FeedProperties link_per_transmission. */
                public link_per_transmission: string;

                /** FeedProperties unique_reports. */
                public unique_reports: boolean;

                /** FeedProperties description. */
                public description: string;

                /**
                 * Encodes the specified FeedProperties message. Does not implicitly {@link injective.ocr.v1beta1.FeedProperties.verify|verify} messages.
                 * @param message FeedProperties message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.ocr.v1beta1.IFeedProperties, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified FeedProperties message, length delimited. Does not implicitly {@link injective.ocr.v1beta1.FeedProperties.verify|verify} messages.
                 * @param message FeedProperties message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.ocr.v1beta1.IFeedProperties, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a FeedProperties message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns FeedProperties
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.ocr.v1beta1.FeedProperties;

                /**
                 * Decodes a FeedProperties message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns FeedProperties
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.ocr.v1beta1.FeedProperties;

                /**
                 * Verifies a FeedProperties message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a FeedProperties message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns FeedProperties
                 */
                public static fromObject(object: { [k: string]: any }): injective.ocr.v1beta1.FeedProperties;

                /**
                 * Creates a plain object from a FeedProperties message. Also converts values to other types if specified.
                 * @param message FeedProperties
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.ocr.v1beta1.FeedProperties, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this FeedProperties to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a SetBatchConfigProposal. */
            interface ISetBatchConfigProposal {

                /** SetBatchConfigProposal title */
                title?: (string|null);

                /** SetBatchConfigProposal description */
                description?: (string|null);

                /** SetBatchConfigProposal signers */
                signers?: (string[]|null);

                /** SetBatchConfigProposal transmitters */
                transmitters?: (string[]|null);

                /** SetBatchConfigProposal link_denom */
                link_denom?: (string|null);

                /** SetBatchConfigProposal feed_properties */
                feed_properties?: (injective.ocr.v1beta1.IFeedProperties[]|null);
            }

            /** Represents a SetBatchConfigProposal. */
            class SetBatchConfigProposal implements ISetBatchConfigProposal {

                /**
                 * Constructs a new SetBatchConfigProposal.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.ocr.v1beta1.ISetBatchConfigProposal);

                /** SetBatchConfigProposal title. */
                public title: string;

                /** SetBatchConfigProposal description. */
                public description: string;

                /** SetBatchConfigProposal signers. */
                public signers: string[];

                /** SetBatchConfigProposal transmitters. */
                public transmitters: string[];

                /** SetBatchConfigProposal link_denom. */
                public link_denom: string;

                /** SetBatchConfigProposal feed_properties. */
                public feed_properties: injective.ocr.v1beta1.IFeedProperties[];

                /**
                 * Encodes the specified SetBatchConfigProposal message. Does not implicitly {@link injective.ocr.v1beta1.SetBatchConfigProposal.verify|verify} messages.
                 * @param message SetBatchConfigProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.ocr.v1beta1.ISetBatchConfigProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified SetBatchConfigProposal message, length delimited. Does not implicitly {@link injective.ocr.v1beta1.SetBatchConfigProposal.verify|verify} messages.
                 * @param message SetBatchConfigProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.ocr.v1beta1.ISetBatchConfigProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a SetBatchConfigProposal message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns SetBatchConfigProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.ocr.v1beta1.SetBatchConfigProposal;

                /**
                 * Decodes a SetBatchConfigProposal message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns SetBatchConfigProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.ocr.v1beta1.SetBatchConfigProposal;

                /**
                 * Verifies a SetBatchConfigProposal message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a SetBatchConfigProposal message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns SetBatchConfigProposal
                 */
                public static fromObject(object: { [k: string]: any }): injective.ocr.v1beta1.SetBatchConfigProposal;

                /**
                 * Creates a plain object from a SetBatchConfigProposal message. Also converts values to other types if specified.
                 * @param message SetBatchConfigProposal
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.ocr.v1beta1.SetBatchConfigProposal, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this SetBatchConfigProposal to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an OracleObservationsCounts. */
            interface IOracleObservationsCounts {

                /** OracleObservationsCounts counts */
                counts?: (number[]|null);
            }

            /** Represents an OracleObservationsCounts. */
            class OracleObservationsCounts implements IOracleObservationsCounts {

                /**
                 * Constructs a new OracleObservationsCounts.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.ocr.v1beta1.IOracleObservationsCounts);

                /** OracleObservationsCounts counts. */
                public counts: number[];

                /**
                 * Encodes the specified OracleObservationsCounts message. Does not implicitly {@link injective.ocr.v1beta1.OracleObservationsCounts.verify|verify} messages.
                 * @param message OracleObservationsCounts message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.ocr.v1beta1.IOracleObservationsCounts, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified OracleObservationsCounts message, length delimited. Does not implicitly {@link injective.ocr.v1beta1.OracleObservationsCounts.verify|verify} messages.
                 * @param message OracleObservationsCounts message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.ocr.v1beta1.IOracleObservationsCounts, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an OracleObservationsCounts message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns OracleObservationsCounts
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.ocr.v1beta1.OracleObservationsCounts;

                /**
                 * Decodes an OracleObservationsCounts message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns OracleObservationsCounts
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.ocr.v1beta1.OracleObservationsCounts;

                /**
                 * Verifies an OracleObservationsCounts message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an OracleObservationsCounts message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns OracleObservationsCounts
                 */
                public static fromObject(object: { [k: string]: any }): injective.ocr.v1beta1.OracleObservationsCounts;

                /**
                 * Creates a plain object from an OracleObservationsCounts message. Also converts values to other types if specified.
                 * @param message OracleObservationsCounts
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.ocr.v1beta1.OracleObservationsCounts, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this OracleObservationsCounts to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a GasReimbursements. */
            interface IGasReimbursements {

                /** GasReimbursements reimbursements */
                reimbursements?: (cosmos.base.v1beta1.ICoin[]|null);
            }

            /** Represents a GasReimbursements. */
            class GasReimbursements implements IGasReimbursements {

                /**
                 * Constructs a new GasReimbursements.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.ocr.v1beta1.IGasReimbursements);

                /** GasReimbursements reimbursements. */
                public reimbursements: cosmos.base.v1beta1.ICoin[];

                /**
                 * Encodes the specified GasReimbursements message. Does not implicitly {@link injective.ocr.v1beta1.GasReimbursements.verify|verify} messages.
                 * @param message GasReimbursements message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.ocr.v1beta1.IGasReimbursements, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified GasReimbursements message, length delimited. Does not implicitly {@link injective.ocr.v1beta1.GasReimbursements.verify|verify} messages.
                 * @param message GasReimbursements message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.ocr.v1beta1.IGasReimbursements, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a GasReimbursements message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns GasReimbursements
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.ocr.v1beta1.GasReimbursements;

                /**
                 * Decodes a GasReimbursements message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns GasReimbursements
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.ocr.v1beta1.GasReimbursements;

                /**
                 * Verifies a GasReimbursements message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a GasReimbursements message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns GasReimbursements
                 */
                public static fromObject(object: { [k: string]: any }): injective.ocr.v1beta1.GasReimbursements;

                /**
                 * Creates a plain object from a GasReimbursements message. Also converts values to other types if specified.
                 * @param message GasReimbursements
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.ocr.v1beta1.GasReimbursements, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this GasReimbursements to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a Payee. */
            interface IPayee {

                /** Payee transmitter_addr */
                transmitter_addr?: (string|null);

                /** Payee payment_addr */
                payment_addr?: (string|null);
            }

            /** Represents a Payee. */
            class Payee implements IPayee {

                /**
                 * Constructs a new Payee.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.ocr.v1beta1.IPayee);

                /** Payee transmitter_addr. */
                public transmitter_addr: string;

                /** Payee payment_addr. */
                public payment_addr: string;

                /**
                 * Encodes the specified Payee message. Does not implicitly {@link injective.ocr.v1beta1.Payee.verify|verify} messages.
                 * @param message Payee message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.ocr.v1beta1.IPayee, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Payee message, length delimited. Does not implicitly {@link injective.ocr.v1beta1.Payee.verify|verify} messages.
                 * @param message Payee message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.ocr.v1beta1.IPayee, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Payee message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Payee
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.ocr.v1beta1.Payee;

                /**
                 * Decodes a Payee message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Payee
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.ocr.v1beta1.Payee;

                /**
                 * Verifies a Payee message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Payee message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Payee
                 */
                public static fromObject(object: { [k: string]: any }): injective.ocr.v1beta1.Payee;

                /**
                 * Creates a plain object from a Payee message. Also converts values to other types if specified.
                 * @param message Payee
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.ocr.v1beta1.Payee, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Payee to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a Transmission. */
            interface ITransmission {

                /** Transmission answer */
                answer?: (string|null);

                /** Transmission observations_timestamp */
                observations_timestamp?: (number|null);

                /** Transmission transmission_timestamp */
                transmission_timestamp?: (number|null);
            }

            /** Represents a Transmission. */
            class Transmission implements ITransmission {

                /**
                 * Constructs a new Transmission.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.ocr.v1beta1.ITransmission);

                /** Transmission answer. */
                public answer: string;

                /** Transmission observations_timestamp. */
                public observations_timestamp: number;

                /** Transmission transmission_timestamp. */
                public transmission_timestamp: number;

                /**
                 * Encodes the specified Transmission message. Does not implicitly {@link injective.ocr.v1beta1.Transmission.verify|verify} messages.
                 * @param message Transmission message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.ocr.v1beta1.ITransmission, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Transmission message, length delimited. Does not implicitly {@link injective.ocr.v1beta1.Transmission.verify|verify} messages.
                 * @param message Transmission message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.ocr.v1beta1.ITransmission, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Transmission message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Transmission
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.ocr.v1beta1.Transmission;

                /**
                 * Decodes a Transmission message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Transmission
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.ocr.v1beta1.Transmission;

                /**
                 * Verifies a Transmission message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Transmission message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Transmission
                 */
                public static fromObject(object: { [k: string]: any }): injective.ocr.v1beta1.Transmission;

                /**
                 * Creates a plain object from a Transmission message. Also converts values to other types if specified.
                 * @param message Transmission
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.ocr.v1beta1.Transmission, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Transmission to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an EpochAndRound. */
            interface IEpochAndRound {

                /** EpochAndRound epoch */
                epoch?: (number|null);

                /** EpochAndRound round */
                round?: (number|null);
            }

            /** Represents an EpochAndRound. */
            class EpochAndRound implements IEpochAndRound {

                /**
                 * Constructs a new EpochAndRound.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.ocr.v1beta1.IEpochAndRound);

                /** EpochAndRound epoch. */
                public epoch: number;

                /** EpochAndRound round. */
                public round: number;

                /**
                 * Encodes the specified EpochAndRound message. Does not implicitly {@link injective.ocr.v1beta1.EpochAndRound.verify|verify} messages.
                 * @param message EpochAndRound message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.ocr.v1beta1.IEpochAndRound, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified EpochAndRound message, length delimited. Does not implicitly {@link injective.ocr.v1beta1.EpochAndRound.verify|verify} messages.
                 * @param message EpochAndRound message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.ocr.v1beta1.IEpochAndRound, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an EpochAndRound message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns EpochAndRound
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.ocr.v1beta1.EpochAndRound;

                /**
                 * Decodes an EpochAndRound message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns EpochAndRound
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.ocr.v1beta1.EpochAndRound;

                /**
                 * Verifies an EpochAndRound message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an EpochAndRound message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns EpochAndRound
                 */
                public static fromObject(object: { [k: string]: any }): injective.ocr.v1beta1.EpochAndRound;

                /**
                 * Creates a plain object from an EpochAndRound message. Also converts values to other types if specified.
                 * @param message EpochAndRound
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.ocr.v1beta1.EpochAndRound, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this EpochAndRound to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a Report. */
            interface IReport {

                /** Report observations_timestamp */
                observations_timestamp?: (number|null);

                /** Report observers */
                observers?: (Uint8Array|null);

                /** Report observations */
                observations?: (string[]|null);
            }

            /** Represents a Report. */
            class Report implements IReport {

                /**
                 * Constructs a new Report.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.ocr.v1beta1.IReport);

                /** Report observations_timestamp. */
                public observations_timestamp: number;

                /** Report observers. */
                public observers: Uint8Array;

                /** Report observations. */
                public observations: string[];

                /**
                 * Encodes the specified Report message. Does not implicitly {@link injective.ocr.v1beta1.Report.verify|verify} messages.
                 * @param message Report message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.ocr.v1beta1.IReport, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Report message, length delimited. Does not implicitly {@link injective.ocr.v1beta1.Report.verify|verify} messages.
                 * @param message Report message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.ocr.v1beta1.IReport, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Report message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Report
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.ocr.v1beta1.Report;

                /**
                 * Decodes a Report message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Report
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.ocr.v1beta1.Report;

                /**
                 * Verifies a Report message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Report message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Report
                 */
                public static fromObject(object: { [k: string]: any }): injective.ocr.v1beta1.Report;

                /**
                 * Creates a plain object from a Report message. Also converts values to other types if specified.
                 * @param message Report
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.ocr.v1beta1.Report, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Report to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a ReportToSign. */
            interface IReportToSign {

                /** ReportToSign config_digest */
                config_digest?: (Uint8Array|null);

                /** ReportToSign epoch */
                epoch?: (number|null);

                /** ReportToSign round */
                round?: (number|null);

                /** ReportToSign extra_hash */
                extra_hash?: (Uint8Array|null);

                /** ReportToSign report */
                report?: (Uint8Array|null);
            }

            /** Represents a ReportToSign. */
            class ReportToSign implements IReportToSign {

                /**
                 * Constructs a new ReportToSign.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.ocr.v1beta1.IReportToSign);

                /** ReportToSign config_digest. */
                public config_digest: Uint8Array;

                /** ReportToSign epoch. */
                public epoch: number;

                /** ReportToSign round. */
                public round: number;

                /** ReportToSign extra_hash. */
                public extra_hash: Uint8Array;

                /** ReportToSign report. */
                public report: Uint8Array;

                /**
                 * Encodes the specified ReportToSign message. Does not implicitly {@link injective.ocr.v1beta1.ReportToSign.verify|verify} messages.
                 * @param message ReportToSign message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.ocr.v1beta1.IReportToSign, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ReportToSign message, length delimited. Does not implicitly {@link injective.ocr.v1beta1.ReportToSign.verify|verify} messages.
                 * @param message ReportToSign message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.ocr.v1beta1.IReportToSign, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ReportToSign message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ReportToSign
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.ocr.v1beta1.ReportToSign;

                /**
                 * Decodes a ReportToSign message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ReportToSign
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.ocr.v1beta1.ReportToSign;

                /**
                 * Verifies a ReportToSign message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ReportToSign message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ReportToSign
                 */
                public static fromObject(object: { [k: string]: any }): injective.ocr.v1beta1.ReportToSign;

                /**
                 * Creates a plain object from a ReportToSign message. Also converts values to other types if specified.
                 * @param message ReportToSign
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.ocr.v1beta1.ReportToSign, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ReportToSign to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an EventOraclePaid. */
            interface IEventOraclePaid {

                /** EventOraclePaid transmitter_addr */
                transmitter_addr?: (string|null);

                /** EventOraclePaid payee_addr */
                payee_addr?: (string|null);

                /** EventOraclePaid amount */
                amount?: (cosmos.base.v1beta1.ICoin|null);
            }

            /** Represents an EventOraclePaid. */
            class EventOraclePaid implements IEventOraclePaid {

                /**
                 * Constructs a new EventOraclePaid.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.ocr.v1beta1.IEventOraclePaid);

                /** EventOraclePaid transmitter_addr. */
                public transmitter_addr: string;

                /** EventOraclePaid payee_addr. */
                public payee_addr: string;

                /** EventOraclePaid amount. */
                public amount?: (cosmos.base.v1beta1.ICoin|null);

                /**
                 * Encodes the specified EventOraclePaid message. Does not implicitly {@link injective.ocr.v1beta1.EventOraclePaid.verify|verify} messages.
                 * @param message EventOraclePaid message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.ocr.v1beta1.IEventOraclePaid, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified EventOraclePaid message, length delimited. Does not implicitly {@link injective.ocr.v1beta1.EventOraclePaid.verify|verify} messages.
                 * @param message EventOraclePaid message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.ocr.v1beta1.IEventOraclePaid, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an EventOraclePaid message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns EventOraclePaid
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.ocr.v1beta1.EventOraclePaid;

                /**
                 * Decodes an EventOraclePaid message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns EventOraclePaid
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.ocr.v1beta1.EventOraclePaid;

                /**
                 * Verifies an EventOraclePaid message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an EventOraclePaid message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns EventOraclePaid
                 */
                public static fromObject(object: { [k: string]: any }): injective.ocr.v1beta1.EventOraclePaid;

                /**
                 * Creates a plain object from an EventOraclePaid message. Also converts values to other types if specified.
                 * @param message EventOraclePaid
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.ocr.v1beta1.EventOraclePaid, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this EventOraclePaid to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an EventAnswerUpdated. */
            interface IEventAnswerUpdated {

                /** EventAnswerUpdated current */
                current?: (string|null);

                /** EventAnswerUpdated round_id */
                round_id?: (string|null);

                /** EventAnswerUpdated updated_at */
                updated_at?: (google.protobuf.ITimestamp|null);
            }

            /** Represents an EventAnswerUpdated. */
            class EventAnswerUpdated implements IEventAnswerUpdated {

                /**
                 * Constructs a new EventAnswerUpdated.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.ocr.v1beta1.IEventAnswerUpdated);

                /** EventAnswerUpdated current. */
                public current: string;

                /** EventAnswerUpdated round_id. */
                public round_id: string;

                /** EventAnswerUpdated updated_at. */
                public updated_at?: (google.protobuf.ITimestamp|null);

                /**
                 * Encodes the specified EventAnswerUpdated message. Does not implicitly {@link injective.ocr.v1beta1.EventAnswerUpdated.verify|verify} messages.
                 * @param message EventAnswerUpdated message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.ocr.v1beta1.IEventAnswerUpdated, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified EventAnswerUpdated message, length delimited. Does not implicitly {@link injective.ocr.v1beta1.EventAnswerUpdated.verify|verify} messages.
                 * @param message EventAnswerUpdated message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.ocr.v1beta1.IEventAnswerUpdated, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an EventAnswerUpdated message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns EventAnswerUpdated
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.ocr.v1beta1.EventAnswerUpdated;

                /**
                 * Decodes an EventAnswerUpdated message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns EventAnswerUpdated
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.ocr.v1beta1.EventAnswerUpdated;

                /**
                 * Verifies an EventAnswerUpdated message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an EventAnswerUpdated message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns EventAnswerUpdated
                 */
                public static fromObject(object: { [k: string]: any }): injective.ocr.v1beta1.EventAnswerUpdated;

                /**
                 * Creates a plain object from an EventAnswerUpdated message. Also converts values to other types if specified.
                 * @param message EventAnswerUpdated
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.ocr.v1beta1.EventAnswerUpdated, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this EventAnswerUpdated to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an EventNewRound. */
            interface IEventNewRound {

                /** EventNewRound round_id */
                round_id?: (string|null);

                /** EventNewRound started_by */
                started_by?: (string|null);

                /** EventNewRound started_at */
                started_at?: (google.protobuf.ITimestamp|null);
            }

            /** Represents an EventNewRound. */
            class EventNewRound implements IEventNewRound {

                /**
                 * Constructs a new EventNewRound.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.ocr.v1beta1.IEventNewRound);

                /** EventNewRound round_id. */
                public round_id: string;

                /** EventNewRound started_by. */
                public started_by: string;

                /** EventNewRound started_at. */
                public started_at?: (google.protobuf.ITimestamp|null);

                /**
                 * Encodes the specified EventNewRound message. Does not implicitly {@link injective.ocr.v1beta1.EventNewRound.verify|verify} messages.
                 * @param message EventNewRound message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.ocr.v1beta1.IEventNewRound, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified EventNewRound message, length delimited. Does not implicitly {@link injective.ocr.v1beta1.EventNewRound.verify|verify} messages.
                 * @param message EventNewRound message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.ocr.v1beta1.IEventNewRound, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an EventNewRound message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns EventNewRound
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.ocr.v1beta1.EventNewRound;

                /**
                 * Decodes an EventNewRound message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns EventNewRound
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.ocr.v1beta1.EventNewRound;

                /**
                 * Verifies an EventNewRound message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an EventNewRound message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns EventNewRound
                 */
                public static fromObject(object: { [k: string]: any }): injective.ocr.v1beta1.EventNewRound;

                /**
                 * Creates a plain object from an EventNewRound message. Also converts values to other types if specified.
                 * @param message EventNewRound
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.ocr.v1beta1.EventNewRound, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this EventNewRound to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an EventTransmitted. */
            interface IEventTransmitted {

                /** EventTransmitted config_digest */
                config_digest?: (Uint8Array|null);

                /** EventTransmitted epoch */
                epoch?: (number|null);
            }

            /** Represents an EventTransmitted. */
            class EventTransmitted implements IEventTransmitted {

                /**
                 * Constructs a new EventTransmitted.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.ocr.v1beta1.IEventTransmitted);

                /** EventTransmitted config_digest. */
                public config_digest: Uint8Array;

                /** EventTransmitted epoch. */
                public epoch: number;

                /**
                 * Encodes the specified EventTransmitted message. Does not implicitly {@link injective.ocr.v1beta1.EventTransmitted.verify|verify} messages.
                 * @param message EventTransmitted message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.ocr.v1beta1.IEventTransmitted, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified EventTransmitted message, length delimited. Does not implicitly {@link injective.ocr.v1beta1.EventTransmitted.verify|verify} messages.
                 * @param message EventTransmitted message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.ocr.v1beta1.IEventTransmitted, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an EventTransmitted message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns EventTransmitted
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.ocr.v1beta1.EventTransmitted;

                /**
                 * Decodes an EventTransmitted message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns EventTransmitted
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.ocr.v1beta1.EventTransmitted;

                /**
                 * Verifies an EventTransmitted message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an EventTransmitted message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns EventTransmitted
                 */
                public static fromObject(object: { [k: string]: any }): injective.ocr.v1beta1.EventTransmitted;

                /**
                 * Creates a plain object from an EventTransmitted message. Also converts values to other types if specified.
                 * @param message EventTransmitted
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.ocr.v1beta1.EventTransmitted, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this EventTransmitted to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an EventNewTransmission. */
            interface IEventNewTransmission {

                /** EventNewTransmission feed_id */
                feed_id?: (string|null);

                /** EventNewTransmission aggregator_round_id */
                aggregator_round_id?: (number|null);

                /** EventNewTransmission answer */
                answer?: (string|null);

                /** EventNewTransmission transmitter */
                transmitter?: (string|null);

                /** EventNewTransmission observations_timestamp */
                observations_timestamp?: (number|null);

                /** EventNewTransmission observations */
                observations?: (string[]|null);

                /** EventNewTransmission observers */
                observers?: (Uint8Array|null);

                /** EventNewTransmission config_digest */
                config_digest?: (Uint8Array|null);

                /** EventNewTransmission epoch_and_round */
                epoch_and_round?: (injective.ocr.v1beta1.IEpochAndRound|null);
            }

            /** Represents an EventNewTransmission. */
            class EventNewTransmission implements IEventNewTransmission {

                /**
                 * Constructs a new EventNewTransmission.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.ocr.v1beta1.IEventNewTransmission);

                /** EventNewTransmission feed_id. */
                public feed_id: string;

                /** EventNewTransmission aggregator_round_id. */
                public aggregator_round_id: number;

                /** EventNewTransmission answer. */
                public answer: string;

                /** EventNewTransmission transmitter. */
                public transmitter: string;

                /** EventNewTransmission observations_timestamp. */
                public observations_timestamp: number;

                /** EventNewTransmission observations. */
                public observations: string[];

                /** EventNewTransmission observers. */
                public observers: Uint8Array;

                /** EventNewTransmission config_digest. */
                public config_digest: Uint8Array;

                /** EventNewTransmission epoch_and_round. */
                public epoch_and_round?: (injective.ocr.v1beta1.IEpochAndRound|null);

                /**
                 * Encodes the specified EventNewTransmission message. Does not implicitly {@link injective.ocr.v1beta1.EventNewTransmission.verify|verify} messages.
                 * @param message EventNewTransmission message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.ocr.v1beta1.IEventNewTransmission, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified EventNewTransmission message, length delimited. Does not implicitly {@link injective.ocr.v1beta1.EventNewTransmission.verify|verify} messages.
                 * @param message EventNewTransmission message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.ocr.v1beta1.IEventNewTransmission, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an EventNewTransmission message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns EventNewTransmission
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.ocr.v1beta1.EventNewTransmission;

                /**
                 * Decodes an EventNewTransmission message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns EventNewTransmission
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.ocr.v1beta1.EventNewTransmission;

                /**
                 * Verifies an EventNewTransmission message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an EventNewTransmission message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns EventNewTransmission
                 */
                public static fromObject(object: { [k: string]: any }): injective.ocr.v1beta1.EventNewTransmission;

                /**
                 * Creates a plain object from an EventNewTransmission message. Also converts values to other types if specified.
                 * @param message EventNewTransmission
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.ocr.v1beta1.EventNewTransmission, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this EventNewTransmission to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an EventConfigSet. */
            interface IEventConfigSet {

                /** EventConfigSet config_digest */
                config_digest?: (Uint8Array|null);

                /** EventConfigSet previous_config_block_number */
                previous_config_block_number?: (number|null);

                /** EventConfigSet config */
                config?: (injective.ocr.v1beta1.IFeedConfig|null);

                /** EventConfigSet config_info */
                config_info?: (injective.ocr.v1beta1.IFeedConfigInfo|null);
            }

            /** Represents an EventConfigSet. */
            class EventConfigSet implements IEventConfigSet {

                /**
                 * Constructs a new EventConfigSet.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.ocr.v1beta1.IEventConfigSet);

                /** EventConfigSet config_digest. */
                public config_digest: Uint8Array;

                /** EventConfigSet previous_config_block_number. */
                public previous_config_block_number: number;

                /** EventConfigSet config. */
                public config?: (injective.ocr.v1beta1.IFeedConfig|null);

                /** EventConfigSet config_info. */
                public config_info?: (injective.ocr.v1beta1.IFeedConfigInfo|null);

                /**
                 * Encodes the specified EventConfigSet message. Does not implicitly {@link injective.ocr.v1beta1.EventConfigSet.verify|verify} messages.
                 * @param message EventConfigSet message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.ocr.v1beta1.IEventConfigSet, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified EventConfigSet message, length delimited. Does not implicitly {@link injective.ocr.v1beta1.EventConfigSet.verify|verify} messages.
                 * @param message EventConfigSet message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.ocr.v1beta1.IEventConfigSet, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an EventConfigSet message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns EventConfigSet
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.ocr.v1beta1.EventConfigSet;

                /**
                 * Decodes an EventConfigSet message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns EventConfigSet
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.ocr.v1beta1.EventConfigSet;

                /**
                 * Verifies an EventConfigSet message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an EventConfigSet message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns EventConfigSet
                 */
                public static fromObject(object: { [k: string]: any }): injective.ocr.v1beta1.EventConfigSet;

                /**
                 * Creates a plain object from an EventConfigSet message. Also converts values to other types if specified.
                 * @param message EventConfigSet
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.ocr.v1beta1.EventConfigSet, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this EventConfigSet to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Represents a Query */
            class Query extends $protobuf.rpc.Service {

                /**
                 * Constructs a new Query service.
                 * @param rpcImpl RPC implementation
                 * @param [requestDelimited=false] Whether requests are length-delimited
                 * @param [responseDelimited=false] Whether responses are length-delimited
                 */
                constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

                /**
                 * Calls Params.
                 * @param request QueryParamsRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryParamsResponse
                 */
                public params(request: injective.ocr.v1beta1.IQueryParamsRequest, callback: injective.ocr.v1beta1.Query.ParamsCallback): void;

                /**
                 * Calls Params.
                 * @param request QueryParamsRequest message or plain object
                 * @returns Promise
                 */
                public params(request: injective.ocr.v1beta1.IQueryParamsRequest): Promise<injective.ocr.v1beta1.QueryParamsResponse>;

                /**
                 * Calls FeedConfig.
                 * @param request QueryFeedConfigRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryFeedConfigResponse
                 */
                public feedConfig(request: injective.ocr.v1beta1.IQueryFeedConfigRequest, callback: injective.ocr.v1beta1.Query.FeedConfigCallback): void;

                /**
                 * Calls FeedConfig.
                 * @param request QueryFeedConfigRequest message or plain object
                 * @returns Promise
                 */
                public feedConfig(request: injective.ocr.v1beta1.IQueryFeedConfigRequest): Promise<injective.ocr.v1beta1.QueryFeedConfigResponse>;

                /**
                 * Calls FeedConfigInfo.
                 * @param request QueryFeedConfigInfoRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryFeedConfigInfoResponse
                 */
                public feedConfigInfo(request: injective.ocr.v1beta1.IQueryFeedConfigInfoRequest, callback: injective.ocr.v1beta1.Query.FeedConfigInfoCallback): void;

                /**
                 * Calls FeedConfigInfo.
                 * @param request QueryFeedConfigInfoRequest message or plain object
                 * @returns Promise
                 */
                public feedConfigInfo(request: injective.ocr.v1beta1.IQueryFeedConfigInfoRequest): Promise<injective.ocr.v1beta1.QueryFeedConfigInfoResponse>;

                /**
                 * Calls LatestRound.
                 * @param request QueryLatestRoundRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryLatestRoundResponse
                 */
                public latestRound(request: injective.ocr.v1beta1.IQueryLatestRoundRequest, callback: injective.ocr.v1beta1.Query.LatestRoundCallback): void;

                /**
                 * Calls LatestRound.
                 * @param request QueryLatestRoundRequest message or plain object
                 * @returns Promise
                 */
                public latestRound(request: injective.ocr.v1beta1.IQueryLatestRoundRequest): Promise<injective.ocr.v1beta1.QueryLatestRoundResponse>;

                /**
                 * Calls LatestTransmissionDetails.
                 * @param request QueryLatestTransmissionDetailsRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryLatestTransmissionDetailsResponse
                 */
                public latestTransmissionDetails(request: injective.ocr.v1beta1.IQueryLatestTransmissionDetailsRequest, callback: injective.ocr.v1beta1.Query.LatestTransmissionDetailsCallback): void;

                /**
                 * Calls LatestTransmissionDetails.
                 * @param request QueryLatestTransmissionDetailsRequest message or plain object
                 * @returns Promise
                 */
                public latestTransmissionDetails(request: injective.ocr.v1beta1.IQueryLatestTransmissionDetailsRequest): Promise<injective.ocr.v1beta1.QueryLatestTransmissionDetailsResponse>;

                /**
                 * Calls OwedAmount.
                 * @param request QueryOwedAmountRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryOwedAmountResponse
                 */
                public owedAmount(request: injective.ocr.v1beta1.IQueryOwedAmountRequest, callback: injective.ocr.v1beta1.Query.OwedAmountCallback): void;

                /**
                 * Calls OwedAmount.
                 * @param request QueryOwedAmountRequest message or plain object
                 * @returns Promise
                 */
                public owedAmount(request: injective.ocr.v1beta1.IQueryOwedAmountRequest): Promise<injective.ocr.v1beta1.QueryOwedAmountResponse>;

                /**
                 * Calls OcrModuleState.
                 * @param request QueryModuleStateRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryModuleStateResponse
                 */
                public ocrModuleState(request: injective.ocr.v1beta1.IQueryModuleStateRequest, callback: injective.ocr.v1beta1.Query.OcrModuleStateCallback): void;

                /**
                 * Calls OcrModuleState.
                 * @param request QueryModuleStateRequest message or plain object
                 * @returns Promise
                 */
                public ocrModuleState(request: injective.ocr.v1beta1.IQueryModuleStateRequest): Promise<injective.ocr.v1beta1.QueryModuleStateResponse>;
            }

            namespace Query {

                /**
                 * Callback as used by {@link injective.ocr.v1beta1.Query#params}.
                 * @param error Error, if any
                 * @param [response] QueryParamsResponse
                 */
                type ParamsCallback = (error: (Error|null), response?: injective.ocr.v1beta1.QueryParamsResponse) => void;

                /**
                 * Callback as used by {@link injective.ocr.v1beta1.Query#feedConfig}.
                 * @param error Error, if any
                 * @param [response] QueryFeedConfigResponse
                 */
                type FeedConfigCallback = (error: (Error|null), response?: injective.ocr.v1beta1.QueryFeedConfigResponse) => void;

                /**
                 * Callback as used by {@link injective.ocr.v1beta1.Query#feedConfigInfo}.
                 * @param error Error, if any
                 * @param [response] QueryFeedConfigInfoResponse
                 */
                type FeedConfigInfoCallback = (error: (Error|null), response?: injective.ocr.v1beta1.QueryFeedConfigInfoResponse) => void;

                /**
                 * Callback as used by {@link injective.ocr.v1beta1.Query#latestRound}.
                 * @param error Error, if any
                 * @param [response] QueryLatestRoundResponse
                 */
                type LatestRoundCallback = (error: (Error|null), response?: injective.ocr.v1beta1.QueryLatestRoundResponse) => void;

                /**
                 * Callback as used by {@link injective.ocr.v1beta1.Query#latestTransmissionDetails}.
                 * @param error Error, if any
                 * @param [response] QueryLatestTransmissionDetailsResponse
                 */
                type LatestTransmissionDetailsCallback = (error: (Error|null), response?: injective.ocr.v1beta1.QueryLatestTransmissionDetailsResponse) => void;

                /**
                 * Callback as used by {@link injective.ocr.v1beta1.Query#owedAmount}.
                 * @param error Error, if any
                 * @param [response] QueryOwedAmountResponse
                 */
                type OwedAmountCallback = (error: (Error|null), response?: injective.ocr.v1beta1.QueryOwedAmountResponse) => void;

                /**
                 * Callback as used by {@link injective.ocr.v1beta1.Query#ocrModuleState}.
                 * @param error Error, if any
                 * @param [response] QueryModuleStateResponse
                 */
                type OcrModuleStateCallback = (error: (Error|null), response?: injective.ocr.v1beta1.QueryModuleStateResponse) => void;
            }

            /** Properties of a QueryParamsRequest. */
            interface IQueryParamsRequest {
            }

            /** Represents a QueryParamsRequest. */
            class QueryParamsRequest implements IQueryParamsRequest {

                /**
                 * Constructs a new QueryParamsRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.ocr.v1beta1.IQueryParamsRequest);

                /**
                 * Encodes the specified QueryParamsRequest message. Does not implicitly {@link injective.ocr.v1beta1.QueryParamsRequest.verify|verify} messages.
                 * @param message QueryParamsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.ocr.v1beta1.IQueryParamsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryParamsRequest message, length delimited. Does not implicitly {@link injective.ocr.v1beta1.QueryParamsRequest.verify|verify} messages.
                 * @param message QueryParamsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.ocr.v1beta1.IQueryParamsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryParamsRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryParamsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.ocr.v1beta1.QueryParamsRequest;

                /**
                 * Decodes a QueryParamsRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryParamsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.ocr.v1beta1.QueryParamsRequest;

                /**
                 * Verifies a QueryParamsRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryParamsRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryParamsRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.ocr.v1beta1.QueryParamsRequest;

                /**
                 * Creates a plain object from a QueryParamsRequest message. Also converts values to other types if specified.
                 * @param message QueryParamsRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.ocr.v1beta1.QueryParamsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryParamsRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryParamsResponse. */
            interface IQueryParamsResponse {

                /** QueryParamsResponse params */
                params?: (injective.ocr.v1beta1.IParams|null);
            }

            /** Represents a QueryParamsResponse. */
            class QueryParamsResponse implements IQueryParamsResponse {

                /**
                 * Constructs a new QueryParamsResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.ocr.v1beta1.IQueryParamsResponse);

                /** QueryParamsResponse params. */
                public params?: (injective.ocr.v1beta1.IParams|null);

                /**
                 * Encodes the specified QueryParamsResponse message. Does not implicitly {@link injective.ocr.v1beta1.QueryParamsResponse.verify|verify} messages.
                 * @param message QueryParamsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.ocr.v1beta1.IQueryParamsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryParamsResponse message, length delimited. Does not implicitly {@link injective.ocr.v1beta1.QueryParamsResponse.verify|verify} messages.
                 * @param message QueryParamsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.ocr.v1beta1.IQueryParamsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryParamsResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryParamsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.ocr.v1beta1.QueryParamsResponse;

                /**
                 * Decodes a QueryParamsResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryParamsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.ocr.v1beta1.QueryParamsResponse;

                /**
                 * Verifies a QueryParamsResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryParamsResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryParamsResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.ocr.v1beta1.QueryParamsResponse;

                /**
                 * Creates a plain object from a QueryParamsResponse message. Also converts values to other types if specified.
                 * @param message QueryParamsResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.ocr.v1beta1.QueryParamsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryParamsResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryFeedConfigRequest. */
            interface IQueryFeedConfigRequest {

                /** QueryFeedConfigRequest feed_id */
                feed_id?: (string|null);
            }

            /** Represents a QueryFeedConfigRequest. */
            class QueryFeedConfigRequest implements IQueryFeedConfigRequest {

                /**
                 * Constructs a new QueryFeedConfigRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.ocr.v1beta1.IQueryFeedConfigRequest);

                /** QueryFeedConfigRequest feed_id. */
                public feed_id: string;

                /**
                 * Encodes the specified QueryFeedConfigRequest message. Does not implicitly {@link injective.ocr.v1beta1.QueryFeedConfigRequest.verify|verify} messages.
                 * @param message QueryFeedConfigRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.ocr.v1beta1.IQueryFeedConfigRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryFeedConfigRequest message, length delimited. Does not implicitly {@link injective.ocr.v1beta1.QueryFeedConfigRequest.verify|verify} messages.
                 * @param message QueryFeedConfigRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.ocr.v1beta1.IQueryFeedConfigRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryFeedConfigRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryFeedConfigRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.ocr.v1beta1.QueryFeedConfigRequest;

                /**
                 * Decodes a QueryFeedConfigRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryFeedConfigRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.ocr.v1beta1.QueryFeedConfigRequest;

                /**
                 * Verifies a QueryFeedConfigRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryFeedConfigRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryFeedConfigRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.ocr.v1beta1.QueryFeedConfigRequest;

                /**
                 * Creates a plain object from a QueryFeedConfigRequest message. Also converts values to other types if specified.
                 * @param message QueryFeedConfigRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.ocr.v1beta1.QueryFeedConfigRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryFeedConfigRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryFeedConfigResponse. */
            interface IQueryFeedConfigResponse {

                /** QueryFeedConfigResponse feed_config_info */
                feed_config_info?: (injective.ocr.v1beta1.IFeedConfigInfo|null);

                /** QueryFeedConfigResponse feed_config */
                feed_config?: (injective.ocr.v1beta1.IFeedConfig|null);
            }

            /** Represents a QueryFeedConfigResponse. */
            class QueryFeedConfigResponse implements IQueryFeedConfigResponse {

                /**
                 * Constructs a new QueryFeedConfigResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.ocr.v1beta1.IQueryFeedConfigResponse);

                /** QueryFeedConfigResponse feed_config_info. */
                public feed_config_info?: (injective.ocr.v1beta1.IFeedConfigInfo|null);

                /** QueryFeedConfigResponse feed_config. */
                public feed_config?: (injective.ocr.v1beta1.IFeedConfig|null);

                /**
                 * Encodes the specified QueryFeedConfigResponse message. Does not implicitly {@link injective.ocr.v1beta1.QueryFeedConfigResponse.verify|verify} messages.
                 * @param message QueryFeedConfigResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.ocr.v1beta1.IQueryFeedConfigResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryFeedConfigResponse message, length delimited. Does not implicitly {@link injective.ocr.v1beta1.QueryFeedConfigResponse.verify|verify} messages.
                 * @param message QueryFeedConfigResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.ocr.v1beta1.IQueryFeedConfigResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryFeedConfigResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryFeedConfigResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.ocr.v1beta1.QueryFeedConfigResponse;

                /**
                 * Decodes a QueryFeedConfigResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryFeedConfigResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.ocr.v1beta1.QueryFeedConfigResponse;

                /**
                 * Verifies a QueryFeedConfigResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryFeedConfigResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryFeedConfigResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.ocr.v1beta1.QueryFeedConfigResponse;

                /**
                 * Creates a plain object from a QueryFeedConfigResponse message. Also converts values to other types if specified.
                 * @param message QueryFeedConfigResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.ocr.v1beta1.QueryFeedConfigResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryFeedConfigResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryFeedConfigInfoRequest. */
            interface IQueryFeedConfigInfoRequest {

                /** QueryFeedConfigInfoRequest feed_id */
                feed_id?: (string|null);
            }

            /** Represents a QueryFeedConfigInfoRequest. */
            class QueryFeedConfigInfoRequest implements IQueryFeedConfigInfoRequest {

                /**
                 * Constructs a new QueryFeedConfigInfoRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.ocr.v1beta1.IQueryFeedConfigInfoRequest);

                /** QueryFeedConfigInfoRequest feed_id. */
                public feed_id: string;

                /**
                 * Encodes the specified QueryFeedConfigInfoRequest message. Does not implicitly {@link injective.ocr.v1beta1.QueryFeedConfigInfoRequest.verify|verify} messages.
                 * @param message QueryFeedConfigInfoRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.ocr.v1beta1.IQueryFeedConfigInfoRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryFeedConfigInfoRequest message, length delimited. Does not implicitly {@link injective.ocr.v1beta1.QueryFeedConfigInfoRequest.verify|verify} messages.
                 * @param message QueryFeedConfigInfoRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.ocr.v1beta1.IQueryFeedConfigInfoRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryFeedConfigInfoRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryFeedConfigInfoRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.ocr.v1beta1.QueryFeedConfigInfoRequest;

                /**
                 * Decodes a QueryFeedConfigInfoRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryFeedConfigInfoRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.ocr.v1beta1.QueryFeedConfigInfoRequest;

                /**
                 * Verifies a QueryFeedConfigInfoRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryFeedConfigInfoRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryFeedConfigInfoRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.ocr.v1beta1.QueryFeedConfigInfoRequest;

                /**
                 * Creates a plain object from a QueryFeedConfigInfoRequest message. Also converts values to other types if specified.
                 * @param message QueryFeedConfigInfoRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.ocr.v1beta1.QueryFeedConfigInfoRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryFeedConfigInfoRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryFeedConfigInfoResponse. */
            interface IQueryFeedConfigInfoResponse {

                /** QueryFeedConfigInfoResponse feed_config_info */
                feed_config_info?: (injective.ocr.v1beta1.IFeedConfigInfo|null);

                /** QueryFeedConfigInfoResponse epoch_and_round */
                epoch_and_round?: (injective.ocr.v1beta1.IEpochAndRound|null);
            }

            /** Represents a QueryFeedConfigInfoResponse. */
            class QueryFeedConfigInfoResponse implements IQueryFeedConfigInfoResponse {

                /**
                 * Constructs a new QueryFeedConfigInfoResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.ocr.v1beta1.IQueryFeedConfigInfoResponse);

                /** QueryFeedConfigInfoResponse feed_config_info. */
                public feed_config_info?: (injective.ocr.v1beta1.IFeedConfigInfo|null);

                /** QueryFeedConfigInfoResponse epoch_and_round. */
                public epoch_and_round?: (injective.ocr.v1beta1.IEpochAndRound|null);

                /**
                 * Encodes the specified QueryFeedConfigInfoResponse message. Does not implicitly {@link injective.ocr.v1beta1.QueryFeedConfigInfoResponse.verify|verify} messages.
                 * @param message QueryFeedConfigInfoResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.ocr.v1beta1.IQueryFeedConfigInfoResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryFeedConfigInfoResponse message, length delimited. Does not implicitly {@link injective.ocr.v1beta1.QueryFeedConfigInfoResponse.verify|verify} messages.
                 * @param message QueryFeedConfigInfoResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.ocr.v1beta1.IQueryFeedConfigInfoResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryFeedConfigInfoResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryFeedConfigInfoResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.ocr.v1beta1.QueryFeedConfigInfoResponse;

                /**
                 * Decodes a QueryFeedConfigInfoResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryFeedConfigInfoResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.ocr.v1beta1.QueryFeedConfigInfoResponse;

                /**
                 * Verifies a QueryFeedConfigInfoResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryFeedConfigInfoResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryFeedConfigInfoResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.ocr.v1beta1.QueryFeedConfigInfoResponse;

                /**
                 * Creates a plain object from a QueryFeedConfigInfoResponse message. Also converts values to other types if specified.
                 * @param message QueryFeedConfigInfoResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.ocr.v1beta1.QueryFeedConfigInfoResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryFeedConfigInfoResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryLatestRoundRequest. */
            interface IQueryLatestRoundRequest {

                /** QueryLatestRoundRequest feed_id */
                feed_id?: (string|null);
            }

            /** Represents a QueryLatestRoundRequest. */
            class QueryLatestRoundRequest implements IQueryLatestRoundRequest {

                /**
                 * Constructs a new QueryLatestRoundRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.ocr.v1beta1.IQueryLatestRoundRequest);

                /** QueryLatestRoundRequest feed_id. */
                public feed_id: string;

                /**
                 * Encodes the specified QueryLatestRoundRequest message. Does not implicitly {@link injective.ocr.v1beta1.QueryLatestRoundRequest.verify|verify} messages.
                 * @param message QueryLatestRoundRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.ocr.v1beta1.IQueryLatestRoundRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryLatestRoundRequest message, length delimited. Does not implicitly {@link injective.ocr.v1beta1.QueryLatestRoundRequest.verify|verify} messages.
                 * @param message QueryLatestRoundRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.ocr.v1beta1.IQueryLatestRoundRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryLatestRoundRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryLatestRoundRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.ocr.v1beta1.QueryLatestRoundRequest;

                /**
                 * Decodes a QueryLatestRoundRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryLatestRoundRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.ocr.v1beta1.QueryLatestRoundRequest;

                /**
                 * Verifies a QueryLatestRoundRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryLatestRoundRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryLatestRoundRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.ocr.v1beta1.QueryLatestRoundRequest;

                /**
                 * Creates a plain object from a QueryLatestRoundRequest message. Also converts values to other types if specified.
                 * @param message QueryLatestRoundRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.ocr.v1beta1.QueryLatestRoundRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryLatestRoundRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryLatestRoundResponse. */
            interface IQueryLatestRoundResponse {

                /** QueryLatestRoundResponse latest_round_id */
                latest_round_id?: (number|null);

                /** QueryLatestRoundResponse data */
                data?: (injective.ocr.v1beta1.ITransmission|null);
            }

            /** Represents a QueryLatestRoundResponse. */
            class QueryLatestRoundResponse implements IQueryLatestRoundResponse {

                /**
                 * Constructs a new QueryLatestRoundResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.ocr.v1beta1.IQueryLatestRoundResponse);

                /** QueryLatestRoundResponse latest_round_id. */
                public latest_round_id: number;

                /** QueryLatestRoundResponse data. */
                public data?: (injective.ocr.v1beta1.ITransmission|null);

                /**
                 * Encodes the specified QueryLatestRoundResponse message. Does not implicitly {@link injective.ocr.v1beta1.QueryLatestRoundResponse.verify|verify} messages.
                 * @param message QueryLatestRoundResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.ocr.v1beta1.IQueryLatestRoundResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryLatestRoundResponse message, length delimited. Does not implicitly {@link injective.ocr.v1beta1.QueryLatestRoundResponse.verify|verify} messages.
                 * @param message QueryLatestRoundResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.ocr.v1beta1.IQueryLatestRoundResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryLatestRoundResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryLatestRoundResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.ocr.v1beta1.QueryLatestRoundResponse;

                /**
                 * Decodes a QueryLatestRoundResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryLatestRoundResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.ocr.v1beta1.QueryLatestRoundResponse;

                /**
                 * Verifies a QueryLatestRoundResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryLatestRoundResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryLatestRoundResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.ocr.v1beta1.QueryLatestRoundResponse;

                /**
                 * Creates a plain object from a QueryLatestRoundResponse message. Also converts values to other types if specified.
                 * @param message QueryLatestRoundResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.ocr.v1beta1.QueryLatestRoundResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryLatestRoundResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryLatestTransmissionDetailsRequest. */
            interface IQueryLatestTransmissionDetailsRequest {

                /** QueryLatestTransmissionDetailsRequest feed_id */
                feed_id?: (string|null);
            }

            /** Represents a QueryLatestTransmissionDetailsRequest. */
            class QueryLatestTransmissionDetailsRequest implements IQueryLatestTransmissionDetailsRequest {

                /**
                 * Constructs a new QueryLatestTransmissionDetailsRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.ocr.v1beta1.IQueryLatestTransmissionDetailsRequest);

                /** QueryLatestTransmissionDetailsRequest feed_id. */
                public feed_id: string;

                /**
                 * Encodes the specified QueryLatestTransmissionDetailsRequest message. Does not implicitly {@link injective.ocr.v1beta1.QueryLatestTransmissionDetailsRequest.verify|verify} messages.
                 * @param message QueryLatestTransmissionDetailsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.ocr.v1beta1.IQueryLatestTransmissionDetailsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryLatestTransmissionDetailsRequest message, length delimited. Does not implicitly {@link injective.ocr.v1beta1.QueryLatestTransmissionDetailsRequest.verify|verify} messages.
                 * @param message QueryLatestTransmissionDetailsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.ocr.v1beta1.IQueryLatestTransmissionDetailsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryLatestTransmissionDetailsRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryLatestTransmissionDetailsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.ocr.v1beta1.QueryLatestTransmissionDetailsRequest;

                /**
                 * Decodes a QueryLatestTransmissionDetailsRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryLatestTransmissionDetailsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.ocr.v1beta1.QueryLatestTransmissionDetailsRequest;

                /**
                 * Verifies a QueryLatestTransmissionDetailsRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryLatestTransmissionDetailsRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryLatestTransmissionDetailsRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.ocr.v1beta1.QueryLatestTransmissionDetailsRequest;

                /**
                 * Creates a plain object from a QueryLatestTransmissionDetailsRequest message. Also converts values to other types if specified.
                 * @param message QueryLatestTransmissionDetailsRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.ocr.v1beta1.QueryLatestTransmissionDetailsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryLatestTransmissionDetailsRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryLatestTransmissionDetailsResponse. */
            interface IQueryLatestTransmissionDetailsResponse {

                /** QueryLatestTransmissionDetailsResponse config_digest */
                config_digest?: (Uint8Array|null);

                /** QueryLatestTransmissionDetailsResponse epoch_and_round */
                epoch_and_round?: (injective.ocr.v1beta1.IEpochAndRound|null);

                /** QueryLatestTransmissionDetailsResponse data */
                data?: (injective.ocr.v1beta1.ITransmission|null);
            }

            /** Represents a QueryLatestTransmissionDetailsResponse. */
            class QueryLatestTransmissionDetailsResponse implements IQueryLatestTransmissionDetailsResponse {

                /**
                 * Constructs a new QueryLatestTransmissionDetailsResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.ocr.v1beta1.IQueryLatestTransmissionDetailsResponse);

                /** QueryLatestTransmissionDetailsResponse config_digest. */
                public config_digest: Uint8Array;

                /** QueryLatestTransmissionDetailsResponse epoch_and_round. */
                public epoch_and_round?: (injective.ocr.v1beta1.IEpochAndRound|null);

                /** QueryLatestTransmissionDetailsResponse data. */
                public data?: (injective.ocr.v1beta1.ITransmission|null);

                /**
                 * Encodes the specified QueryLatestTransmissionDetailsResponse message. Does not implicitly {@link injective.ocr.v1beta1.QueryLatestTransmissionDetailsResponse.verify|verify} messages.
                 * @param message QueryLatestTransmissionDetailsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.ocr.v1beta1.IQueryLatestTransmissionDetailsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryLatestTransmissionDetailsResponse message, length delimited. Does not implicitly {@link injective.ocr.v1beta1.QueryLatestTransmissionDetailsResponse.verify|verify} messages.
                 * @param message QueryLatestTransmissionDetailsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.ocr.v1beta1.IQueryLatestTransmissionDetailsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryLatestTransmissionDetailsResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryLatestTransmissionDetailsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.ocr.v1beta1.QueryLatestTransmissionDetailsResponse;

                /**
                 * Decodes a QueryLatestTransmissionDetailsResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryLatestTransmissionDetailsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.ocr.v1beta1.QueryLatestTransmissionDetailsResponse;

                /**
                 * Verifies a QueryLatestTransmissionDetailsResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryLatestTransmissionDetailsResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryLatestTransmissionDetailsResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.ocr.v1beta1.QueryLatestTransmissionDetailsResponse;

                /**
                 * Creates a plain object from a QueryLatestTransmissionDetailsResponse message. Also converts values to other types if specified.
                 * @param message QueryLatestTransmissionDetailsResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.ocr.v1beta1.QueryLatestTransmissionDetailsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryLatestTransmissionDetailsResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryOwedAmountRequest. */
            interface IQueryOwedAmountRequest {

                /** QueryOwedAmountRequest transmitter */
                transmitter?: (string|null);
            }

            /** Represents a QueryOwedAmountRequest. */
            class QueryOwedAmountRequest implements IQueryOwedAmountRequest {

                /**
                 * Constructs a new QueryOwedAmountRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.ocr.v1beta1.IQueryOwedAmountRequest);

                /** QueryOwedAmountRequest transmitter. */
                public transmitter: string;

                /**
                 * Encodes the specified QueryOwedAmountRequest message. Does not implicitly {@link injective.ocr.v1beta1.QueryOwedAmountRequest.verify|verify} messages.
                 * @param message QueryOwedAmountRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.ocr.v1beta1.IQueryOwedAmountRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryOwedAmountRequest message, length delimited. Does not implicitly {@link injective.ocr.v1beta1.QueryOwedAmountRequest.verify|verify} messages.
                 * @param message QueryOwedAmountRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.ocr.v1beta1.IQueryOwedAmountRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryOwedAmountRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryOwedAmountRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.ocr.v1beta1.QueryOwedAmountRequest;

                /**
                 * Decodes a QueryOwedAmountRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryOwedAmountRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.ocr.v1beta1.QueryOwedAmountRequest;

                /**
                 * Verifies a QueryOwedAmountRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryOwedAmountRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryOwedAmountRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.ocr.v1beta1.QueryOwedAmountRequest;

                /**
                 * Creates a plain object from a QueryOwedAmountRequest message. Also converts values to other types if specified.
                 * @param message QueryOwedAmountRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.ocr.v1beta1.QueryOwedAmountRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryOwedAmountRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryOwedAmountResponse. */
            interface IQueryOwedAmountResponse {

                /** QueryOwedAmountResponse amount */
                amount?: (cosmos.base.v1beta1.ICoin|null);
            }

            /** Represents a QueryOwedAmountResponse. */
            class QueryOwedAmountResponse implements IQueryOwedAmountResponse {

                /**
                 * Constructs a new QueryOwedAmountResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.ocr.v1beta1.IQueryOwedAmountResponse);

                /** QueryOwedAmountResponse amount. */
                public amount?: (cosmos.base.v1beta1.ICoin|null);

                /**
                 * Encodes the specified QueryOwedAmountResponse message. Does not implicitly {@link injective.ocr.v1beta1.QueryOwedAmountResponse.verify|verify} messages.
                 * @param message QueryOwedAmountResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.ocr.v1beta1.IQueryOwedAmountResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryOwedAmountResponse message, length delimited. Does not implicitly {@link injective.ocr.v1beta1.QueryOwedAmountResponse.verify|verify} messages.
                 * @param message QueryOwedAmountResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.ocr.v1beta1.IQueryOwedAmountResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryOwedAmountResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryOwedAmountResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.ocr.v1beta1.QueryOwedAmountResponse;

                /**
                 * Decodes a QueryOwedAmountResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryOwedAmountResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.ocr.v1beta1.QueryOwedAmountResponse;

                /**
                 * Verifies a QueryOwedAmountResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryOwedAmountResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryOwedAmountResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.ocr.v1beta1.QueryOwedAmountResponse;

                /**
                 * Creates a plain object from a QueryOwedAmountResponse message. Also converts values to other types if specified.
                 * @param message QueryOwedAmountResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.ocr.v1beta1.QueryOwedAmountResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryOwedAmountResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryModuleStateRequest. */
            interface IQueryModuleStateRequest {
            }

            /** Represents a QueryModuleStateRequest. */
            class QueryModuleStateRequest implements IQueryModuleStateRequest {

                /**
                 * Constructs a new QueryModuleStateRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.ocr.v1beta1.IQueryModuleStateRequest);

                /**
                 * Encodes the specified QueryModuleStateRequest message. Does not implicitly {@link injective.ocr.v1beta1.QueryModuleStateRequest.verify|verify} messages.
                 * @param message QueryModuleStateRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.ocr.v1beta1.IQueryModuleStateRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryModuleStateRequest message, length delimited. Does not implicitly {@link injective.ocr.v1beta1.QueryModuleStateRequest.verify|verify} messages.
                 * @param message QueryModuleStateRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.ocr.v1beta1.IQueryModuleStateRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryModuleStateRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryModuleStateRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.ocr.v1beta1.QueryModuleStateRequest;

                /**
                 * Decodes a QueryModuleStateRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryModuleStateRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.ocr.v1beta1.QueryModuleStateRequest;

                /**
                 * Verifies a QueryModuleStateRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryModuleStateRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryModuleStateRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.ocr.v1beta1.QueryModuleStateRequest;

                /**
                 * Creates a plain object from a QueryModuleStateRequest message. Also converts values to other types if specified.
                 * @param message QueryModuleStateRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.ocr.v1beta1.QueryModuleStateRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryModuleStateRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryModuleStateResponse. */
            interface IQueryModuleStateResponse {

                /** QueryModuleStateResponse state */
                state?: (injective.ocr.v1beta1.IGenesisState|null);
            }

            /** Represents a QueryModuleStateResponse. */
            class QueryModuleStateResponse implements IQueryModuleStateResponse {

                /**
                 * Constructs a new QueryModuleStateResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.ocr.v1beta1.IQueryModuleStateResponse);

                /** QueryModuleStateResponse state. */
                public state?: (injective.ocr.v1beta1.IGenesisState|null);

                /**
                 * Encodes the specified QueryModuleStateResponse message. Does not implicitly {@link injective.ocr.v1beta1.QueryModuleStateResponse.verify|verify} messages.
                 * @param message QueryModuleStateResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.ocr.v1beta1.IQueryModuleStateResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryModuleStateResponse message, length delimited. Does not implicitly {@link injective.ocr.v1beta1.QueryModuleStateResponse.verify|verify} messages.
                 * @param message QueryModuleStateResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.ocr.v1beta1.IQueryModuleStateResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryModuleStateResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryModuleStateResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.ocr.v1beta1.QueryModuleStateResponse;

                /**
                 * Decodes a QueryModuleStateResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryModuleStateResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.ocr.v1beta1.QueryModuleStateResponse;

                /**
                 * Verifies a QueryModuleStateResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryModuleStateResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryModuleStateResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.ocr.v1beta1.QueryModuleStateResponse;

                /**
                 * Creates a plain object from a QueryModuleStateResponse message. Also converts values to other types if specified.
                 * @param message QueryModuleStateResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.ocr.v1beta1.QueryModuleStateResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryModuleStateResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a GenesisState. */
            interface IGenesisState {

                /** GenesisState params */
                params?: (injective.ocr.v1beta1.IParams|null);

                /** GenesisState feed_configs */
                feed_configs?: (injective.ocr.v1beta1.IFeedConfig[]|null);

                /** GenesisState latest_epoch_and_rounds */
                latest_epoch_and_rounds?: (injective.ocr.v1beta1.IFeedEpochAndRound[]|null);

                /** GenesisState feed_transmissions */
                feed_transmissions?: (injective.ocr.v1beta1.IFeedTransmission[]|null);

                /** GenesisState latest_aggregator_round_ids */
                latest_aggregator_round_ids?: (injective.ocr.v1beta1.IFeedLatestAggregatorRoundIDs[]|null);

                /** GenesisState reward_pools */
                reward_pools?: (injective.ocr.v1beta1.IRewardPool[]|null);

                /** GenesisState feed_observation_counts */
                feed_observation_counts?: (injective.ocr.v1beta1.IFeedCounts[]|null);

                /** GenesisState feed_transmission_counts */
                feed_transmission_counts?: (injective.ocr.v1beta1.IFeedCounts[]|null);

                /** GenesisState pending_payeeships */
                pending_payeeships?: (injective.ocr.v1beta1.IPendingPayeeship[]|null);
            }

            /** Represents a GenesisState. */
            class GenesisState implements IGenesisState {

                /**
                 * Constructs a new GenesisState.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.ocr.v1beta1.IGenesisState);

                /** GenesisState params. */
                public params?: (injective.ocr.v1beta1.IParams|null);

                /** GenesisState feed_configs. */
                public feed_configs: injective.ocr.v1beta1.IFeedConfig[];

                /** GenesisState latest_epoch_and_rounds. */
                public latest_epoch_and_rounds: injective.ocr.v1beta1.IFeedEpochAndRound[];

                /** GenesisState feed_transmissions. */
                public feed_transmissions: injective.ocr.v1beta1.IFeedTransmission[];

                /** GenesisState latest_aggregator_round_ids. */
                public latest_aggregator_round_ids: injective.ocr.v1beta1.IFeedLatestAggregatorRoundIDs[];

                /** GenesisState reward_pools. */
                public reward_pools: injective.ocr.v1beta1.IRewardPool[];

                /** GenesisState feed_observation_counts. */
                public feed_observation_counts: injective.ocr.v1beta1.IFeedCounts[];

                /** GenesisState feed_transmission_counts. */
                public feed_transmission_counts: injective.ocr.v1beta1.IFeedCounts[];

                /** GenesisState pending_payeeships. */
                public pending_payeeships: injective.ocr.v1beta1.IPendingPayeeship[];

                /**
                 * Encodes the specified GenesisState message. Does not implicitly {@link injective.ocr.v1beta1.GenesisState.verify|verify} messages.
                 * @param message GenesisState message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.ocr.v1beta1.IGenesisState, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified GenesisState message, length delimited. Does not implicitly {@link injective.ocr.v1beta1.GenesisState.verify|verify} messages.
                 * @param message GenesisState message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.ocr.v1beta1.IGenesisState, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a GenesisState message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns GenesisState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.ocr.v1beta1.GenesisState;

                /**
                 * Decodes a GenesisState message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns GenesisState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.ocr.v1beta1.GenesisState;

                /**
                 * Verifies a GenesisState message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a GenesisState message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns GenesisState
                 */
                public static fromObject(object: { [k: string]: any }): injective.ocr.v1beta1.GenesisState;

                /**
                 * Creates a plain object from a GenesisState message. Also converts values to other types if specified.
                 * @param message GenesisState
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.ocr.v1beta1.GenesisState, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this GenesisState to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a FeedTransmission. */
            interface IFeedTransmission {

                /** FeedTransmission feed_id */
                feed_id?: (string|null);

                /** FeedTransmission transmission */
                transmission?: (injective.ocr.v1beta1.ITransmission|null);
            }

            /** Represents a FeedTransmission. */
            class FeedTransmission implements IFeedTransmission {

                /**
                 * Constructs a new FeedTransmission.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.ocr.v1beta1.IFeedTransmission);

                /** FeedTransmission feed_id. */
                public feed_id: string;

                /** FeedTransmission transmission. */
                public transmission?: (injective.ocr.v1beta1.ITransmission|null);

                /**
                 * Encodes the specified FeedTransmission message. Does not implicitly {@link injective.ocr.v1beta1.FeedTransmission.verify|verify} messages.
                 * @param message FeedTransmission message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.ocr.v1beta1.IFeedTransmission, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified FeedTransmission message, length delimited. Does not implicitly {@link injective.ocr.v1beta1.FeedTransmission.verify|verify} messages.
                 * @param message FeedTransmission message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.ocr.v1beta1.IFeedTransmission, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a FeedTransmission message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns FeedTransmission
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.ocr.v1beta1.FeedTransmission;

                /**
                 * Decodes a FeedTransmission message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns FeedTransmission
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.ocr.v1beta1.FeedTransmission;

                /**
                 * Verifies a FeedTransmission message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a FeedTransmission message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns FeedTransmission
                 */
                public static fromObject(object: { [k: string]: any }): injective.ocr.v1beta1.FeedTransmission;

                /**
                 * Creates a plain object from a FeedTransmission message. Also converts values to other types if specified.
                 * @param message FeedTransmission
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.ocr.v1beta1.FeedTransmission, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this FeedTransmission to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a FeedEpochAndRound. */
            interface IFeedEpochAndRound {

                /** FeedEpochAndRound feed_id */
                feed_id?: (string|null);

                /** FeedEpochAndRound epoch_and_round */
                epoch_and_round?: (injective.ocr.v1beta1.IEpochAndRound|null);
            }

            /** Represents a FeedEpochAndRound. */
            class FeedEpochAndRound implements IFeedEpochAndRound {

                /**
                 * Constructs a new FeedEpochAndRound.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.ocr.v1beta1.IFeedEpochAndRound);

                /** FeedEpochAndRound feed_id. */
                public feed_id: string;

                /** FeedEpochAndRound epoch_and_round. */
                public epoch_and_round?: (injective.ocr.v1beta1.IEpochAndRound|null);

                /**
                 * Encodes the specified FeedEpochAndRound message. Does not implicitly {@link injective.ocr.v1beta1.FeedEpochAndRound.verify|verify} messages.
                 * @param message FeedEpochAndRound message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.ocr.v1beta1.IFeedEpochAndRound, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified FeedEpochAndRound message, length delimited. Does not implicitly {@link injective.ocr.v1beta1.FeedEpochAndRound.verify|verify} messages.
                 * @param message FeedEpochAndRound message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.ocr.v1beta1.IFeedEpochAndRound, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a FeedEpochAndRound message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns FeedEpochAndRound
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.ocr.v1beta1.FeedEpochAndRound;

                /**
                 * Decodes a FeedEpochAndRound message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns FeedEpochAndRound
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.ocr.v1beta1.FeedEpochAndRound;

                /**
                 * Verifies a FeedEpochAndRound message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a FeedEpochAndRound message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns FeedEpochAndRound
                 */
                public static fromObject(object: { [k: string]: any }): injective.ocr.v1beta1.FeedEpochAndRound;

                /**
                 * Creates a plain object from a FeedEpochAndRound message. Also converts values to other types if specified.
                 * @param message FeedEpochAndRound
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.ocr.v1beta1.FeedEpochAndRound, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this FeedEpochAndRound to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a FeedLatestAggregatorRoundIDs. */
            interface IFeedLatestAggregatorRoundIDs {

                /** FeedLatestAggregatorRoundIDs feed_id */
                feed_id?: (string|null);

                /** FeedLatestAggregatorRoundIDs aggregator_round_id */
                aggregator_round_id?: (number|null);
            }

            /** Represents a FeedLatestAggregatorRoundIDs. */
            class FeedLatestAggregatorRoundIDs implements IFeedLatestAggregatorRoundIDs {

                /**
                 * Constructs a new FeedLatestAggregatorRoundIDs.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.ocr.v1beta1.IFeedLatestAggregatorRoundIDs);

                /** FeedLatestAggregatorRoundIDs feed_id. */
                public feed_id: string;

                /** FeedLatestAggregatorRoundIDs aggregator_round_id. */
                public aggregator_round_id: number;

                /**
                 * Encodes the specified FeedLatestAggregatorRoundIDs message. Does not implicitly {@link injective.ocr.v1beta1.FeedLatestAggregatorRoundIDs.verify|verify} messages.
                 * @param message FeedLatestAggregatorRoundIDs message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.ocr.v1beta1.IFeedLatestAggregatorRoundIDs, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified FeedLatestAggregatorRoundIDs message, length delimited. Does not implicitly {@link injective.ocr.v1beta1.FeedLatestAggregatorRoundIDs.verify|verify} messages.
                 * @param message FeedLatestAggregatorRoundIDs message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.ocr.v1beta1.IFeedLatestAggregatorRoundIDs, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a FeedLatestAggregatorRoundIDs message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns FeedLatestAggregatorRoundIDs
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.ocr.v1beta1.FeedLatestAggregatorRoundIDs;

                /**
                 * Decodes a FeedLatestAggregatorRoundIDs message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns FeedLatestAggregatorRoundIDs
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.ocr.v1beta1.FeedLatestAggregatorRoundIDs;

                /**
                 * Verifies a FeedLatestAggregatorRoundIDs message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a FeedLatestAggregatorRoundIDs message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns FeedLatestAggregatorRoundIDs
                 */
                public static fromObject(object: { [k: string]: any }): injective.ocr.v1beta1.FeedLatestAggregatorRoundIDs;

                /**
                 * Creates a plain object from a FeedLatestAggregatorRoundIDs message. Also converts values to other types if specified.
                 * @param message FeedLatestAggregatorRoundIDs
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.ocr.v1beta1.FeedLatestAggregatorRoundIDs, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this FeedLatestAggregatorRoundIDs to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a RewardPool. */
            interface IRewardPool {

                /** RewardPool feed_id */
                feed_id?: (string|null);

                /** RewardPool amount */
                amount?: (cosmos.base.v1beta1.ICoin|null);
            }

            /** Represents a RewardPool. */
            class RewardPool implements IRewardPool {

                /**
                 * Constructs a new RewardPool.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.ocr.v1beta1.IRewardPool);

                /** RewardPool feed_id. */
                public feed_id: string;

                /** RewardPool amount. */
                public amount?: (cosmos.base.v1beta1.ICoin|null);

                /**
                 * Encodes the specified RewardPool message. Does not implicitly {@link injective.ocr.v1beta1.RewardPool.verify|verify} messages.
                 * @param message RewardPool message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.ocr.v1beta1.IRewardPool, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified RewardPool message, length delimited. Does not implicitly {@link injective.ocr.v1beta1.RewardPool.verify|verify} messages.
                 * @param message RewardPool message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.ocr.v1beta1.IRewardPool, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a RewardPool message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns RewardPool
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.ocr.v1beta1.RewardPool;

                /**
                 * Decodes a RewardPool message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns RewardPool
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.ocr.v1beta1.RewardPool;

                /**
                 * Verifies a RewardPool message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a RewardPool message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns RewardPool
                 */
                public static fromObject(object: { [k: string]: any }): injective.ocr.v1beta1.RewardPool;

                /**
                 * Creates a plain object from a RewardPool message. Also converts values to other types if specified.
                 * @param message RewardPool
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.ocr.v1beta1.RewardPool, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this RewardPool to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a FeedCounts. */
            interface IFeedCounts {

                /** FeedCounts feed_id */
                feed_id?: (string|null);

                /** FeedCounts counts */
                counts?: (injective.ocr.v1beta1.ICount[]|null);
            }

            /** Represents a FeedCounts. */
            class FeedCounts implements IFeedCounts {

                /**
                 * Constructs a new FeedCounts.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.ocr.v1beta1.IFeedCounts);

                /** FeedCounts feed_id. */
                public feed_id: string;

                /** FeedCounts counts. */
                public counts: injective.ocr.v1beta1.ICount[];

                /**
                 * Encodes the specified FeedCounts message. Does not implicitly {@link injective.ocr.v1beta1.FeedCounts.verify|verify} messages.
                 * @param message FeedCounts message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.ocr.v1beta1.IFeedCounts, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified FeedCounts message, length delimited. Does not implicitly {@link injective.ocr.v1beta1.FeedCounts.verify|verify} messages.
                 * @param message FeedCounts message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.ocr.v1beta1.IFeedCounts, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a FeedCounts message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns FeedCounts
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.ocr.v1beta1.FeedCounts;

                /**
                 * Decodes a FeedCounts message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns FeedCounts
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.ocr.v1beta1.FeedCounts;

                /**
                 * Verifies a FeedCounts message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a FeedCounts message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns FeedCounts
                 */
                public static fromObject(object: { [k: string]: any }): injective.ocr.v1beta1.FeedCounts;

                /**
                 * Creates a plain object from a FeedCounts message. Also converts values to other types if specified.
                 * @param message FeedCounts
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.ocr.v1beta1.FeedCounts, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this FeedCounts to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a Count. */
            interface ICount {

                /** Count address */
                address?: (string|null);

                /** Count count */
                count?: (number|null);
            }

            /** Represents a Count. */
            class Count implements ICount {

                /**
                 * Constructs a new Count.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.ocr.v1beta1.ICount);

                /** Count address. */
                public address: string;

                /** Count count. */
                public count: number;

                /**
                 * Encodes the specified Count message. Does not implicitly {@link injective.ocr.v1beta1.Count.verify|verify} messages.
                 * @param message Count message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.ocr.v1beta1.ICount, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Count message, length delimited. Does not implicitly {@link injective.ocr.v1beta1.Count.verify|verify} messages.
                 * @param message Count message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.ocr.v1beta1.ICount, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Count message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Count
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.ocr.v1beta1.Count;

                /**
                 * Decodes a Count message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Count
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.ocr.v1beta1.Count;

                /**
                 * Verifies a Count message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Count message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Count
                 */
                public static fromObject(object: { [k: string]: any }): injective.ocr.v1beta1.Count;

                /**
                 * Creates a plain object from a Count message. Also converts values to other types if specified.
                 * @param message Count
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.ocr.v1beta1.Count, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Count to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a PendingPayeeship. */
            interface IPendingPayeeship {

                /** PendingPayeeship feed_id */
                feed_id?: (string|null);

                /** PendingPayeeship transmitter */
                transmitter?: (string|null);

                /** PendingPayeeship proposed_payee */
                proposed_payee?: (string|null);
            }

            /** Represents a PendingPayeeship. */
            class PendingPayeeship implements IPendingPayeeship {

                /**
                 * Constructs a new PendingPayeeship.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.ocr.v1beta1.IPendingPayeeship);

                /** PendingPayeeship feed_id. */
                public feed_id: string;

                /** PendingPayeeship transmitter. */
                public transmitter: string;

                /** PendingPayeeship proposed_payee. */
                public proposed_payee: string;

                /**
                 * Encodes the specified PendingPayeeship message. Does not implicitly {@link injective.ocr.v1beta1.PendingPayeeship.verify|verify} messages.
                 * @param message PendingPayeeship message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.ocr.v1beta1.IPendingPayeeship, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified PendingPayeeship message, length delimited. Does not implicitly {@link injective.ocr.v1beta1.PendingPayeeship.verify|verify} messages.
                 * @param message PendingPayeeship message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.ocr.v1beta1.IPendingPayeeship, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a PendingPayeeship message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns PendingPayeeship
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.ocr.v1beta1.PendingPayeeship;

                /**
                 * Decodes a PendingPayeeship message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns PendingPayeeship
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.ocr.v1beta1.PendingPayeeship;

                /**
                 * Verifies a PendingPayeeship message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a PendingPayeeship message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns PendingPayeeship
                 */
                public static fromObject(object: { [k: string]: any }): injective.ocr.v1beta1.PendingPayeeship;

                /**
                 * Creates a plain object from a PendingPayeeship message. Also converts values to other types if specified.
                 * @param message PendingPayeeship
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.ocr.v1beta1.PendingPayeeship, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this PendingPayeeship to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }
    }

    /** Namespace peggy. */
    namespace peggy {

        /** Namespace v1. */
        namespace v1 {

            /** ClaimType enum. */
            enum ClaimType {
                CLAIM_TYPE_UNKNOWN = 0,
                CLAIM_TYPE_DEPOSIT = 1,
                CLAIM_TYPE_WITHDRAW = 2,
                CLAIM_TYPE_ERC20_DEPLOYED = 3,
                CLAIM_TYPE_VALSET_UPDATED = 4
            }

            /** Properties of an Attestation. */
            interface IAttestation {

                /** Attestation observed */
                observed?: (boolean|null);

                /** Attestation votes */
                votes?: (string[]|null);

                /** Attestation height */
                height?: (number|null);

                /** Attestation claim */
                claim?: (google.protobuf.IAny|null);
            }

            /** Represents an Attestation. */
            class Attestation implements IAttestation {

                /**
                 * Constructs a new Attestation.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.peggy.v1.IAttestation);

                /** Attestation observed. */
                public observed: boolean;

                /** Attestation votes. */
                public votes: string[];

                /** Attestation height. */
                public height: number;

                /** Attestation claim. */
                public claim?: (google.protobuf.IAny|null);

                /**
                 * Encodes the specified Attestation message. Does not implicitly {@link injective.peggy.v1.Attestation.verify|verify} messages.
                 * @param message Attestation message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.peggy.v1.IAttestation, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Attestation message, length delimited. Does not implicitly {@link injective.peggy.v1.Attestation.verify|verify} messages.
                 * @param message Attestation message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.peggy.v1.IAttestation, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an Attestation message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Attestation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.peggy.v1.Attestation;

                /**
                 * Decodes an Attestation message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Attestation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.peggy.v1.Attestation;

                /**
                 * Verifies an Attestation message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an Attestation message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Attestation
                 */
                public static fromObject(object: { [k: string]: any }): injective.peggy.v1.Attestation;

                /**
                 * Creates a plain object from an Attestation message. Also converts values to other types if specified.
                 * @param message Attestation
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.peggy.v1.Attestation, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Attestation to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a ERC20Token. */
            interface IERC20Token {

                /** ERC20Token contract */
                contract?: (string|null);

                /** ERC20Token amount */
                amount?: (string|null);
            }

            /** Represents a ERC20Token. */
            class ERC20Token implements IERC20Token {

                /**
                 * Constructs a new ERC20Token.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.peggy.v1.IERC20Token);

                /** ERC20Token contract. */
                public contract: string;

                /** ERC20Token amount. */
                public amount: string;

                /**
                 * Encodes the specified ERC20Token message. Does not implicitly {@link injective.peggy.v1.ERC20Token.verify|verify} messages.
                 * @param message ERC20Token message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.peggy.v1.IERC20Token, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ERC20Token message, length delimited. Does not implicitly {@link injective.peggy.v1.ERC20Token.verify|verify} messages.
                 * @param message ERC20Token message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.peggy.v1.IERC20Token, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ERC20Token message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ERC20Token
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.peggy.v1.ERC20Token;

                /**
                 * Decodes a ERC20Token message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ERC20Token
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.peggy.v1.ERC20Token;

                /**
                 * Verifies a ERC20Token message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ERC20Token message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ERC20Token
                 */
                public static fromObject(object: { [k: string]: any }): injective.peggy.v1.ERC20Token;

                /**
                 * Creates a plain object from a ERC20Token message. Also converts values to other types if specified.
                 * @param message ERC20Token
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.peggy.v1.ERC20Token, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ERC20Token to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an EventAttestationObserved. */
            interface IEventAttestationObserved {

                /** EventAttestationObserved attestation_type */
                attestation_type?: (injective.peggy.v1.ClaimType|null);

                /** EventAttestationObserved bridge_contract */
                bridge_contract?: (string|null);

                /** EventAttestationObserved bridge_chain_id */
                bridge_chain_id?: (number|null);

                /** EventAttestationObserved attestation_id */
                attestation_id?: (Uint8Array|null);

                /** EventAttestationObserved nonce */
                nonce?: (number|null);
            }

            /** Represents an EventAttestationObserved. */
            class EventAttestationObserved implements IEventAttestationObserved {

                /**
                 * Constructs a new EventAttestationObserved.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.peggy.v1.IEventAttestationObserved);

                /** EventAttestationObserved attestation_type. */
                public attestation_type: injective.peggy.v1.ClaimType;

                /** EventAttestationObserved bridge_contract. */
                public bridge_contract: string;

                /** EventAttestationObserved bridge_chain_id. */
                public bridge_chain_id: number;

                /** EventAttestationObserved attestation_id. */
                public attestation_id: Uint8Array;

                /** EventAttestationObserved nonce. */
                public nonce: number;

                /**
                 * Encodes the specified EventAttestationObserved message. Does not implicitly {@link injective.peggy.v1.EventAttestationObserved.verify|verify} messages.
                 * @param message EventAttestationObserved message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.peggy.v1.IEventAttestationObserved, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified EventAttestationObserved message, length delimited. Does not implicitly {@link injective.peggy.v1.EventAttestationObserved.verify|verify} messages.
                 * @param message EventAttestationObserved message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.peggy.v1.IEventAttestationObserved, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an EventAttestationObserved message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns EventAttestationObserved
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.peggy.v1.EventAttestationObserved;

                /**
                 * Decodes an EventAttestationObserved message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns EventAttestationObserved
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.peggy.v1.EventAttestationObserved;

                /**
                 * Verifies an EventAttestationObserved message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an EventAttestationObserved message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns EventAttestationObserved
                 */
                public static fromObject(object: { [k: string]: any }): injective.peggy.v1.EventAttestationObserved;

                /**
                 * Creates a plain object from an EventAttestationObserved message. Also converts values to other types if specified.
                 * @param message EventAttestationObserved
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.peggy.v1.EventAttestationObserved, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this EventAttestationObserved to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an EventBridgeWithdrawCanceled. */
            interface IEventBridgeWithdrawCanceled {

                /** EventBridgeWithdrawCanceled bridge_contract */
                bridge_contract?: (string|null);

                /** EventBridgeWithdrawCanceled bridge_chain_id */
                bridge_chain_id?: (number|null);
            }

            /** Represents an EventBridgeWithdrawCanceled. */
            class EventBridgeWithdrawCanceled implements IEventBridgeWithdrawCanceled {

                /**
                 * Constructs a new EventBridgeWithdrawCanceled.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.peggy.v1.IEventBridgeWithdrawCanceled);

                /** EventBridgeWithdrawCanceled bridge_contract. */
                public bridge_contract: string;

                /** EventBridgeWithdrawCanceled bridge_chain_id. */
                public bridge_chain_id: number;

                /**
                 * Encodes the specified EventBridgeWithdrawCanceled message. Does not implicitly {@link injective.peggy.v1.EventBridgeWithdrawCanceled.verify|verify} messages.
                 * @param message EventBridgeWithdrawCanceled message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.peggy.v1.IEventBridgeWithdrawCanceled, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified EventBridgeWithdrawCanceled message, length delimited. Does not implicitly {@link injective.peggy.v1.EventBridgeWithdrawCanceled.verify|verify} messages.
                 * @param message EventBridgeWithdrawCanceled message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.peggy.v1.IEventBridgeWithdrawCanceled, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an EventBridgeWithdrawCanceled message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns EventBridgeWithdrawCanceled
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.peggy.v1.EventBridgeWithdrawCanceled;

                /**
                 * Decodes an EventBridgeWithdrawCanceled message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns EventBridgeWithdrawCanceled
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.peggy.v1.EventBridgeWithdrawCanceled;

                /**
                 * Verifies an EventBridgeWithdrawCanceled message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an EventBridgeWithdrawCanceled message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns EventBridgeWithdrawCanceled
                 */
                public static fromObject(object: { [k: string]: any }): injective.peggy.v1.EventBridgeWithdrawCanceled;

                /**
                 * Creates a plain object from an EventBridgeWithdrawCanceled message. Also converts values to other types if specified.
                 * @param message EventBridgeWithdrawCanceled
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.peggy.v1.EventBridgeWithdrawCanceled, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this EventBridgeWithdrawCanceled to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an EventOutgoingBatch. */
            interface IEventOutgoingBatch {

                /** EventOutgoingBatch denom */
                denom?: (string|null);

                /** EventOutgoingBatch orchestrator_address */
                orchestrator_address?: (string|null);

                /** EventOutgoingBatch batch_nonce */
                batch_nonce?: (number|null);

                /** EventOutgoingBatch batch_timeout */
                batch_timeout?: (number|null);

                /** EventOutgoingBatch batch_tx_ids */
                batch_tx_ids?: (number[]|null);
            }

            /** Represents an EventOutgoingBatch. */
            class EventOutgoingBatch implements IEventOutgoingBatch {

                /**
                 * Constructs a new EventOutgoingBatch.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.peggy.v1.IEventOutgoingBatch);

                /** EventOutgoingBatch denom. */
                public denom: string;

                /** EventOutgoingBatch orchestrator_address. */
                public orchestrator_address: string;

                /** EventOutgoingBatch batch_nonce. */
                public batch_nonce: number;

                /** EventOutgoingBatch batch_timeout. */
                public batch_timeout: number;

                /** EventOutgoingBatch batch_tx_ids. */
                public batch_tx_ids: number[];

                /**
                 * Encodes the specified EventOutgoingBatch message. Does not implicitly {@link injective.peggy.v1.EventOutgoingBatch.verify|verify} messages.
                 * @param message EventOutgoingBatch message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.peggy.v1.IEventOutgoingBatch, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified EventOutgoingBatch message, length delimited. Does not implicitly {@link injective.peggy.v1.EventOutgoingBatch.verify|verify} messages.
                 * @param message EventOutgoingBatch message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.peggy.v1.IEventOutgoingBatch, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an EventOutgoingBatch message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns EventOutgoingBatch
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.peggy.v1.EventOutgoingBatch;

                /**
                 * Decodes an EventOutgoingBatch message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns EventOutgoingBatch
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.peggy.v1.EventOutgoingBatch;

                /**
                 * Verifies an EventOutgoingBatch message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an EventOutgoingBatch message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns EventOutgoingBatch
                 */
                public static fromObject(object: { [k: string]: any }): injective.peggy.v1.EventOutgoingBatch;

                /**
                 * Creates a plain object from an EventOutgoingBatch message. Also converts values to other types if specified.
                 * @param message EventOutgoingBatch
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.peggy.v1.EventOutgoingBatch, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this EventOutgoingBatch to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an EventOutgoingBatchCanceled. */
            interface IEventOutgoingBatchCanceled {

                /** EventOutgoingBatchCanceled bridge_contract */
                bridge_contract?: (string|null);

                /** EventOutgoingBatchCanceled bridge_chain_id */
                bridge_chain_id?: (number|null);

                /** EventOutgoingBatchCanceled batch_id */
                batch_id?: (number|null);

                /** EventOutgoingBatchCanceled nonce */
                nonce?: (number|null);
            }

            /** Represents an EventOutgoingBatchCanceled. */
            class EventOutgoingBatchCanceled implements IEventOutgoingBatchCanceled {

                /**
                 * Constructs a new EventOutgoingBatchCanceled.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.peggy.v1.IEventOutgoingBatchCanceled);

                /** EventOutgoingBatchCanceled bridge_contract. */
                public bridge_contract: string;

                /** EventOutgoingBatchCanceled bridge_chain_id. */
                public bridge_chain_id: number;

                /** EventOutgoingBatchCanceled batch_id. */
                public batch_id: number;

                /** EventOutgoingBatchCanceled nonce. */
                public nonce: number;

                /**
                 * Encodes the specified EventOutgoingBatchCanceled message. Does not implicitly {@link injective.peggy.v1.EventOutgoingBatchCanceled.verify|verify} messages.
                 * @param message EventOutgoingBatchCanceled message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.peggy.v1.IEventOutgoingBatchCanceled, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified EventOutgoingBatchCanceled message, length delimited. Does not implicitly {@link injective.peggy.v1.EventOutgoingBatchCanceled.verify|verify} messages.
                 * @param message EventOutgoingBatchCanceled message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.peggy.v1.IEventOutgoingBatchCanceled, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an EventOutgoingBatchCanceled message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns EventOutgoingBatchCanceled
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.peggy.v1.EventOutgoingBatchCanceled;

                /**
                 * Decodes an EventOutgoingBatchCanceled message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns EventOutgoingBatchCanceled
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.peggy.v1.EventOutgoingBatchCanceled;

                /**
                 * Verifies an EventOutgoingBatchCanceled message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an EventOutgoingBatchCanceled message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns EventOutgoingBatchCanceled
                 */
                public static fromObject(object: { [k: string]: any }): injective.peggy.v1.EventOutgoingBatchCanceled;

                /**
                 * Creates a plain object from an EventOutgoingBatchCanceled message. Also converts values to other types if specified.
                 * @param message EventOutgoingBatchCanceled
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.peggy.v1.EventOutgoingBatchCanceled, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this EventOutgoingBatchCanceled to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an EventValsetUpdateRequest. */
            interface IEventValsetUpdateRequest {

                /** EventValsetUpdateRequest valset_nonce */
                valset_nonce?: (number|null);

                /** EventValsetUpdateRequest valset_height */
                valset_height?: (number|null);

                /** EventValsetUpdateRequest valset_members */
                valset_members?: (injective.peggy.v1.IBridgeValidator[]|null);

                /** EventValsetUpdateRequest reward_amount */
                reward_amount?: (string|null);

                /** EventValsetUpdateRequest reward_token */
                reward_token?: (string|null);
            }

            /** Represents an EventValsetUpdateRequest. */
            class EventValsetUpdateRequest implements IEventValsetUpdateRequest {

                /**
                 * Constructs a new EventValsetUpdateRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.peggy.v1.IEventValsetUpdateRequest);

                /** EventValsetUpdateRequest valset_nonce. */
                public valset_nonce: number;

                /** EventValsetUpdateRequest valset_height. */
                public valset_height: number;

                /** EventValsetUpdateRequest valset_members. */
                public valset_members: injective.peggy.v1.IBridgeValidator[];

                /** EventValsetUpdateRequest reward_amount. */
                public reward_amount: string;

                /** EventValsetUpdateRequest reward_token. */
                public reward_token: string;

                /**
                 * Encodes the specified EventValsetUpdateRequest message. Does not implicitly {@link injective.peggy.v1.EventValsetUpdateRequest.verify|verify} messages.
                 * @param message EventValsetUpdateRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.peggy.v1.IEventValsetUpdateRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified EventValsetUpdateRequest message, length delimited. Does not implicitly {@link injective.peggy.v1.EventValsetUpdateRequest.verify|verify} messages.
                 * @param message EventValsetUpdateRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.peggy.v1.IEventValsetUpdateRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an EventValsetUpdateRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns EventValsetUpdateRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.peggy.v1.EventValsetUpdateRequest;

                /**
                 * Decodes an EventValsetUpdateRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns EventValsetUpdateRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.peggy.v1.EventValsetUpdateRequest;

                /**
                 * Verifies an EventValsetUpdateRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an EventValsetUpdateRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns EventValsetUpdateRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.peggy.v1.EventValsetUpdateRequest;

                /**
                 * Creates a plain object from an EventValsetUpdateRequest message. Also converts values to other types if specified.
                 * @param message EventValsetUpdateRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.peggy.v1.EventValsetUpdateRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this EventValsetUpdateRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an EventSetOrchestratorAddresses. */
            interface IEventSetOrchestratorAddresses {

                /** EventSetOrchestratorAddresses validator_address */
                validator_address?: (string|null);

                /** EventSetOrchestratorAddresses orchestrator_address */
                orchestrator_address?: (string|null);

                /** EventSetOrchestratorAddresses operator_eth_address */
                operator_eth_address?: (string|null);
            }

            /** Represents an EventSetOrchestratorAddresses. */
            class EventSetOrchestratorAddresses implements IEventSetOrchestratorAddresses {

                /**
                 * Constructs a new EventSetOrchestratorAddresses.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.peggy.v1.IEventSetOrchestratorAddresses);

                /** EventSetOrchestratorAddresses validator_address. */
                public validator_address: string;

                /** EventSetOrchestratorAddresses orchestrator_address. */
                public orchestrator_address: string;

                /** EventSetOrchestratorAddresses operator_eth_address. */
                public operator_eth_address: string;

                /**
                 * Encodes the specified EventSetOrchestratorAddresses message. Does not implicitly {@link injective.peggy.v1.EventSetOrchestratorAddresses.verify|verify} messages.
                 * @param message EventSetOrchestratorAddresses message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.peggy.v1.IEventSetOrchestratorAddresses, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified EventSetOrchestratorAddresses message, length delimited. Does not implicitly {@link injective.peggy.v1.EventSetOrchestratorAddresses.verify|verify} messages.
                 * @param message EventSetOrchestratorAddresses message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.peggy.v1.IEventSetOrchestratorAddresses, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an EventSetOrchestratorAddresses message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns EventSetOrchestratorAddresses
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.peggy.v1.EventSetOrchestratorAddresses;

                /**
                 * Decodes an EventSetOrchestratorAddresses message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns EventSetOrchestratorAddresses
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.peggy.v1.EventSetOrchestratorAddresses;

                /**
                 * Verifies an EventSetOrchestratorAddresses message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an EventSetOrchestratorAddresses message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns EventSetOrchestratorAddresses
                 */
                public static fromObject(object: { [k: string]: any }): injective.peggy.v1.EventSetOrchestratorAddresses;

                /**
                 * Creates a plain object from an EventSetOrchestratorAddresses message. Also converts values to other types if specified.
                 * @param message EventSetOrchestratorAddresses
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.peggy.v1.EventSetOrchestratorAddresses, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this EventSetOrchestratorAddresses to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an EventValsetConfirm. */
            interface IEventValsetConfirm {

                /** EventValsetConfirm valset_nonce */
                valset_nonce?: (number|null);

                /** EventValsetConfirm orchestrator_address */
                orchestrator_address?: (string|null);
            }

            /** Represents an EventValsetConfirm. */
            class EventValsetConfirm implements IEventValsetConfirm {

                /**
                 * Constructs a new EventValsetConfirm.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.peggy.v1.IEventValsetConfirm);

                /** EventValsetConfirm valset_nonce. */
                public valset_nonce: number;

                /** EventValsetConfirm orchestrator_address. */
                public orchestrator_address: string;

                /**
                 * Encodes the specified EventValsetConfirm message. Does not implicitly {@link injective.peggy.v1.EventValsetConfirm.verify|verify} messages.
                 * @param message EventValsetConfirm message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.peggy.v1.IEventValsetConfirm, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified EventValsetConfirm message, length delimited. Does not implicitly {@link injective.peggy.v1.EventValsetConfirm.verify|verify} messages.
                 * @param message EventValsetConfirm message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.peggy.v1.IEventValsetConfirm, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an EventValsetConfirm message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns EventValsetConfirm
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.peggy.v1.EventValsetConfirm;

                /**
                 * Decodes an EventValsetConfirm message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns EventValsetConfirm
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.peggy.v1.EventValsetConfirm;

                /**
                 * Verifies an EventValsetConfirm message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an EventValsetConfirm message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns EventValsetConfirm
                 */
                public static fromObject(object: { [k: string]: any }): injective.peggy.v1.EventValsetConfirm;

                /**
                 * Creates a plain object from an EventValsetConfirm message. Also converts values to other types if specified.
                 * @param message EventValsetConfirm
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.peggy.v1.EventValsetConfirm, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this EventValsetConfirm to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an EventSendToEth. */
            interface IEventSendToEth {

                /** EventSendToEth outgoing_tx_id */
                outgoing_tx_id?: (number|null);

                /** EventSendToEth sender */
                sender?: (string|null);

                /** EventSendToEth receiver */
                receiver?: (string|null);

                /** EventSendToEth amount */
                amount?: (string|null);

                /** EventSendToEth bridge_fee */
                bridge_fee?: (string|null);
            }

            /** Represents an EventSendToEth. */
            class EventSendToEth implements IEventSendToEth {

                /**
                 * Constructs a new EventSendToEth.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.peggy.v1.IEventSendToEth);

                /** EventSendToEth outgoing_tx_id. */
                public outgoing_tx_id: number;

                /** EventSendToEth sender. */
                public sender: string;

                /** EventSendToEth receiver. */
                public receiver: string;

                /** EventSendToEth amount. */
                public amount: string;

                /** EventSendToEth bridge_fee. */
                public bridge_fee: string;

                /**
                 * Encodes the specified EventSendToEth message. Does not implicitly {@link injective.peggy.v1.EventSendToEth.verify|verify} messages.
                 * @param message EventSendToEth message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.peggy.v1.IEventSendToEth, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified EventSendToEth message, length delimited. Does not implicitly {@link injective.peggy.v1.EventSendToEth.verify|verify} messages.
                 * @param message EventSendToEth message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.peggy.v1.IEventSendToEth, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an EventSendToEth message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns EventSendToEth
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.peggy.v1.EventSendToEth;

                /**
                 * Decodes an EventSendToEth message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns EventSendToEth
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.peggy.v1.EventSendToEth;

                /**
                 * Verifies an EventSendToEth message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an EventSendToEth message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns EventSendToEth
                 */
                public static fromObject(object: { [k: string]: any }): injective.peggy.v1.EventSendToEth;

                /**
                 * Creates a plain object from an EventSendToEth message. Also converts values to other types if specified.
                 * @param message EventSendToEth
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.peggy.v1.EventSendToEth, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this EventSendToEth to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an EventConfirmBatch. */
            interface IEventConfirmBatch {

                /** EventConfirmBatch batch_nonce */
                batch_nonce?: (number|null);

                /** EventConfirmBatch orchestrator_address */
                orchestrator_address?: (string|null);
            }

            /** Represents an EventConfirmBatch. */
            class EventConfirmBatch implements IEventConfirmBatch {

                /**
                 * Constructs a new EventConfirmBatch.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.peggy.v1.IEventConfirmBatch);

                /** EventConfirmBatch batch_nonce. */
                public batch_nonce: number;

                /** EventConfirmBatch orchestrator_address. */
                public orchestrator_address: string;

                /**
                 * Encodes the specified EventConfirmBatch message. Does not implicitly {@link injective.peggy.v1.EventConfirmBatch.verify|verify} messages.
                 * @param message EventConfirmBatch message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.peggy.v1.IEventConfirmBatch, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified EventConfirmBatch message, length delimited. Does not implicitly {@link injective.peggy.v1.EventConfirmBatch.verify|verify} messages.
                 * @param message EventConfirmBatch message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.peggy.v1.IEventConfirmBatch, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an EventConfirmBatch message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns EventConfirmBatch
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.peggy.v1.EventConfirmBatch;

                /**
                 * Decodes an EventConfirmBatch message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns EventConfirmBatch
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.peggy.v1.EventConfirmBatch;

                /**
                 * Verifies an EventConfirmBatch message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an EventConfirmBatch message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns EventConfirmBatch
                 */
                public static fromObject(object: { [k: string]: any }): injective.peggy.v1.EventConfirmBatch;

                /**
                 * Creates a plain object from an EventConfirmBatch message. Also converts values to other types if specified.
                 * @param message EventConfirmBatch
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.peggy.v1.EventConfirmBatch, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this EventConfirmBatch to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an EventAttestationVote. */
            interface IEventAttestationVote {

                /** EventAttestationVote event_nonce */
                event_nonce?: (number|null);

                /** EventAttestationVote attestation_id */
                attestation_id?: (Uint8Array|null);

                /** EventAttestationVote voter */
                voter?: (string|null);
            }

            /** Represents an EventAttestationVote. */
            class EventAttestationVote implements IEventAttestationVote {

                /**
                 * Constructs a new EventAttestationVote.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.peggy.v1.IEventAttestationVote);

                /** EventAttestationVote event_nonce. */
                public event_nonce: number;

                /** EventAttestationVote attestation_id. */
                public attestation_id: Uint8Array;

                /** EventAttestationVote voter. */
                public voter: string;

                /**
                 * Encodes the specified EventAttestationVote message. Does not implicitly {@link injective.peggy.v1.EventAttestationVote.verify|verify} messages.
                 * @param message EventAttestationVote message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.peggy.v1.IEventAttestationVote, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified EventAttestationVote message, length delimited. Does not implicitly {@link injective.peggy.v1.EventAttestationVote.verify|verify} messages.
                 * @param message EventAttestationVote message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.peggy.v1.IEventAttestationVote, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an EventAttestationVote message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns EventAttestationVote
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.peggy.v1.EventAttestationVote;

                /**
                 * Decodes an EventAttestationVote message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns EventAttestationVote
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.peggy.v1.EventAttestationVote;

                /**
                 * Verifies an EventAttestationVote message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an EventAttestationVote message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns EventAttestationVote
                 */
                public static fromObject(object: { [k: string]: any }): injective.peggy.v1.EventAttestationVote;

                /**
                 * Creates a plain object from an EventAttestationVote message. Also converts values to other types if specified.
                 * @param message EventAttestationVote
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.peggy.v1.EventAttestationVote, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this EventAttestationVote to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an EventDepositClaim. */
            interface IEventDepositClaim {

                /** EventDepositClaim event_nonce */
                event_nonce?: (number|null);

                /** EventDepositClaim event_height */
                event_height?: (number|null);

                /** EventDepositClaim attestation_id */
                attestation_id?: (Uint8Array|null);

                /** EventDepositClaim ethereum_sender */
                ethereum_sender?: (string|null);

                /** EventDepositClaim cosmos_receiver */
                cosmos_receiver?: (string|null);

                /** EventDepositClaim token_contract */
                token_contract?: (string|null);

                /** EventDepositClaim amount */
                amount?: (string|null);

                /** EventDepositClaim orchestrator_address */
                orchestrator_address?: (string|null);

                /** EventDepositClaim data */
                data?: (string|null);
            }

            /** Represents an EventDepositClaim. */
            class EventDepositClaim implements IEventDepositClaim {

                /**
                 * Constructs a new EventDepositClaim.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.peggy.v1.IEventDepositClaim);

                /** EventDepositClaim event_nonce. */
                public event_nonce: number;

                /** EventDepositClaim event_height. */
                public event_height: number;

                /** EventDepositClaim attestation_id. */
                public attestation_id: Uint8Array;

                /** EventDepositClaim ethereum_sender. */
                public ethereum_sender: string;

                /** EventDepositClaim cosmos_receiver. */
                public cosmos_receiver: string;

                /** EventDepositClaim token_contract. */
                public token_contract: string;

                /** EventDepositClaim amount. */
                public amount: string;

                /** EventDepositClaim orchestrator_address. */
                public orchestrator_address: string;

                /** EventDepositClaim data. */
                public data: string;

                /**
                 * Encodes the specified EventDepositClaim message. Does not implicitly {@link injective.peggy.v1.EventDepositClaim.verify|verify} messages.
                 * @param message EventDepositClaim message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.peggy.v1.IEventDepositClaim, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified EventDepositClaim message, length delimited. Does not implicitly {@link injective.peggy.v1.EventDepositClaim.verify|verify} messages.
                 * @param message EventDepositClaim message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.peggy.v1.IEventDepositClaim, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an EventDepositClaim message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns EventDepositClaim
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.peggy.v1.EventDepositClaim;

                /**
                 * Decodes an EventDepositClaim message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns EventDepositClaim
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.peggy.v1.EventDepositClaim;

                /**
                 * Verifies an EventDepositClaim message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an EventDepositClaim message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns EventDepositClaim
                 */
                public static fromObject(object: { [k: string]: any }): injective.peggy.v1.EventDepositClaim;

                /**
                 * Creates a plain object from an EventDepositClaim message. Also converts values to other types if specified.
                 * @param message EventDepositClaim
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.peggy.v1.EventDepositClaim, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this EventDepositClaim to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an EventWithdrawClaim. */
            interface IEventWithdrawClaim {

                /** EventWithdrawClaim event_nonce */
                event_nonce?: (number|null);

                /** EventWithdrawClaim event_height */
                event_height?: (number|null);

                /** EventWithdrawClaim attestation_id */
                attestation_id?: (Uint8Array|null);

                /** EventWithdrawClaim batch_nonce */
                batch_nonce?: (number|null);

                /** EventWithdrawClaim token_contract */
                token_contract?: (string|null);

                /** EventWithdrawClaim orchestrator_address */
                orchestrator_address?: (string|null);
            }

            /** Represents an EventWithdrawClaim. */
            class EventWithdrawClaim implements IEventWithdrawClaim {

                /**
                 * Constructs a new EventWithdrawClaim.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.peggy.v1.IEventWithdrawClaim);

                /** EventWithdrawClaim event_nonce. */
                public event_nonce: number;

                /** EventWithdrawClaim event_height. */
                public event_height: number;

                /** EventWithdrawClaim attestation_id. */
                public attestation_id: Uint8Array;

                /** EventWithdrawClaim batch_nonce. */
                public batch_nonce: number;

                /** EventWithdrawClaim token_contract. */
                public token_contract: string;

                /** EventWithdrawClaim orchestrator_address. */
                public orchestrator_address: string;

                /**
                 * Encodes the specified EventWithdrawClaim message. Does not implicitly {@link injective.peggy.v1.EventWithdrawClaim.verify|verify} messages.
                 * @param message EventWithdrawClaim message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.peggy.v1.IEventWithdrawClaim, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified EventWithdrawClaim message, length delimited. Does not implicitly {@link injective.peggy.v1.EventWithdrawClaim.verify|verify} messages.
                 * @param message EventWithdrawClaim message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.peggy.v1.IEventWithdrawClaim, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an EventWithdrawClaim message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns EventWithdrawClaim
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.peggy.v1.EventWithdrawClaim;

                /**
                 * Decodes an EventWithdrawClaim message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns EventWithdrawClaim
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.peggy.v1.EventWithdrawClaim;

                /**
                 * Verifies an EventWithdrawClaim message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an EventWithdrawClaim message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns EventWithdrawClaim
                 */
                public static fromObject(object: { [k: string]: any }): injective.peggy.v1.EventWithdrawClaim;

                /**
                 * Creates a plain object from an EventWithdrawClaim message. Also converts values to other types if specified.
                 * @param message EventWithdrawClaim
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.peggy.v1.EventWithdrawClaim, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this EventWithdrawClaim to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an EventERC20DeployedClaim. */
            interface IEventERC20DeployedClaim {

                /** EventERC20DeployedClaim event_nonce */
                event_nonce?: (number|null);

                /** EventERC20DeployedClaim event_height */
                event_height?: (number|null);

                /** EventERC20DeployedClaim attestation_id */
                attestation_id?: (Uint8Array|null);

                /** EventERC20DeployedClaim cosmos_denom */
                cosmos_denom?: (string|null);

                /** EventERC20DeployedClaim token_contract */
                token_contract?: (string|null);

                /** EventERC20DeployedClaim name */
                name?: (string|null);

                /** EventERC20DeployedClaim symbol */
                symbol?: (string|null);

                /** EventERC20DeployedClaim decimals */
                decimals?: (number|null);

                /** EventERC20DeployedClaim orchestrator_address */
                orchestrator_address?: (string|null);
            }

            /** Represents an EventERC20DeployedClaim. */
            class EventERC20DeployedClaim implements IEventERC20DeployedClaim {

                /**
                 * Constructs a new EventERC20DeployedClaim.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.peggy.v1.IEventERC20DeployedClaim);

                /** EventERC20DeployedClaim event_nonce. */
                public event_nonce: number;

                /** EventERC20DeployedClaim event_height. */
                public event_height: number;

                /** EventERC20DeployedClaim attestation_id. */
                public attestation_id: Uint8Array;

                /** EventERC20DeployedClaim cosmos_denom. */
                public cosmos_denom: string;

                /** EventERC20DeployedClaim token_contract. */
                public token_contract: string;

                /** EventERC20DeployedClaim name. */
                public name: string;

                /** EventERC20DeployedClaim symbol. */
                public symbol: string;

                /** EventERC20DeployedClaim decimals. */
                public decimals: number;

                /** EventERC20DeployedClaim orchestrator_address. */
                public orchestrator_address: string;

                /**
                 * Encodes the specified EventERC20DeployedClaim message. Does not implicitly {@link injective.peggy.v1.EventERC20DeployedClaim.verify|verify} messages.
                 * @param message EventERC20DeployedClaim message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.peggy.v1.IEventERC20DeployedClaim, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified EventERC20DeployedClaim message, length delimited. Does not implicitly {@link injective.peggy.v1.EventERC20DeployedClaim.verify|verify} messages.
                 * @param message EventERC20DeployedClaim message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.peggy.v1.IEventERC20DeployedClaim, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an EventERC20DeployedClaim message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns EventERC20DeployedClaim
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.peggy.v1.EventERC20DeployedClaim;

                /**
                 * Decodes an EventERC20DeployedClaim message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns EventERC20DeployedClaim
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.peggy.v1.EventERC20DeployedClaim;

                /**
                 * Verifies an EventERC20DeployedClaim message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an EventERC20DeployedClaim message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns EventERC20DeployedClaim
                 */
                public static fromObject(object: { [k: string]: any }): injective.peggy.v1.EventERC20DeployedClaim;

                /**
                 * Creates a plain object from an EventERC20DeployedClaim message. Also converts values to other types if specified.
                 * @param message EventERC20DeployedClaim
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.peggy.v1.EventERC20DeployedClaim, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this EventERC20DeployedClaim to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an EventValsetUpdateClaim. */
            interface IEventValsetUpdateClaim {

                /** EventValsetUpdateClaim event_nonce */
                event_nonce?: (number|null);

                /** EventValsetUpdateClaim event_height */
                event_height?: (number|null);

                /** EventValsetUpdateClaim attestation_id */
                attestation_id?: (Uint8Array|null);

                /** EventValsetUpdateClaim valset_nonce */
                valset_nonce?: (number|null);

                /** EventValsetUpdateClaim valset_members */
                valset_members?: (injective.peggy.v1.IBridgeValidator[]|null);

                /** EventValsetUpdateClaim reward_amount */
                reward_amount?: (string|null);

                /** EventValsetUpdateClaim reward_token */
                reward_token?: (string|null);

                /** EventValsetUpdateClaim orchestrator_address */
                orchestrator_address?: (string|null);
            }

            /** Represents an EventValsetUpdateClaim. */
            class EventValsetUpdateClaim implements IEventValsetUpdateClaim {

                /**
                 * Constructs a new EventValsetUpdateClaim.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.peggy.v1.IEventValsetUpdateClaim);

                /** EventValsetUpdateClaim event_nonce. */
                public event_nonce: number;

                /** EventValsetUpdateClaim event_height. */
                public event_height: number;

                /** EventValsetUpdateClaim attestation_id. */
                public attestation_id: Uint8Array;

                /** EventValsetUpdateClaim valset_nonce. */
                public valset_nonce: number;

                /** EventValsetUpdateClaim valset_members. */
                public valset_members: injective.peggy.v1.IBridgeValidator[];

                /** EventValsetUpdateClaim reward_amount. */
                public reward_amount: string;

                /** EventValsetUpdateClaim reward_token. */
                public reward_token: string;

                /** EventValsetUpdateClaim orchestrator_address. */
                public orchestrator_address: string;

                /**
                 * Encodes the specified EventValsetUpdateClaim message. Does not implicitly {@link injective.peggy.v1.EventValsetUpdateClaim.verify|verify} messages.
                 * @param message EventValsetUpdateClaim message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.peggy.v1.IEventValsetUpdateClaim, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified EventValsetUpdateClaim message, length delimited. Does not implicitly {@link injective.peggy.v1.EventValsetUpdateClaim.verify|verify} messages.
                 * @param message EventValsetUpdateClaim message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.peggy.v1.IEventValsetUpdateClaim, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an EventValsetUpdateClaim message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns EventValsetUpdateClaim
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.peggy.v1.EventValsetUpdateClaim;

                /**
                 * Decodes an EventValsetUpdateClaim message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns EventValsetUpdateClaim
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.peggy.v1.EventValsetUpdateClaim;

                /**
                 * Verifies an EventValsetUpdateClaim message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an EventValsetUpdateClaim message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns EventValsetUpdateClaim
                 */
                public static fromObject(object: { [k: string]: any }): injective.peggy.v1.EventValsetUpdateClaim;

                /**
                 * Creates a plain object from an EventValsetUpdateClaim message. Also converts values to other types if specified.
                 * @param message EventValsetUpdateClaim
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.peggy.v1.EventValsetUpdateClaim, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this EventValsetUpdateClaim to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an EventCancelSendToEth. */
            interface IEventCancelSendToEth {

                /** EventCancelSendToEth outgoing_tx_id */
                outgoing_tx_id?: (number|null);
            }

            /** Represents an EventCancelSendToEth. */
            class EventCancelSendToEth implements IEventCancelSendToEth {

                /**
                 * Constructs a new EventCancelSendToEth.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.peggy.v1.IEventCancelSendToEth);

                /** EventCancelSendToEth outgoing_tx_id. */
                public outgoing_tx_id: number;

                /**
                 * Encodes the specified EventCancelSendToEth message. Does not implicitly {@link injective.peggy.v1.EventCancelSendToEth.verify|verify} messages.
                 * @param message EventCancelSendToEth message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.peggy.v1.IEventCancelSendToEth, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified EventCancelSendToEth message, length delimited. Does not implicitly {@link injective.peggy.v1.EventCancelSendToEth.verify|verify} messages.
                 * @param message EventCancelSendToEth message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.peggy.v1.IEventCancelSendToEth, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an EventCancelSendToEth message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns EventCancelSendToEth
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.peggy.v1.EventCancelSendToEth;

                /**
                 * Decodes an EventCancelSendToEth message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns EventCancelSendToEth
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.peggy.v1.EventCancelSendToEth;

                /**
                 * Verifies an EventCancelSendToEth message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an EventCancelSendToEth message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns EventCancelSendToEth
                 */
                public static fromObject(object: { [k: string]: any }): injective.peggy.v1.EventCancelSendToEth;

                /**
                 * Creates a plain object from an EventCancelSendToEth message. Also converts values to other types if specified.
                 * @param message EventCancelSendToEth
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.peggy.v1.EventCancelSendToEth, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this EventCancelSendToEth to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an EventSubmitBadSignatureEvidence. */
            interface IEventSubmitBadSignatureEvidence {

                /** EventSubmitBadSignatureEvidence bad_eth_signature */
                bad_eth_signature?: (string|null);

                /** EventSubmitBadSignatureEvidence bad_eth_signature_subject */
                bad_eth_signature_subject?: (string|null);
            }

            /** Represents an EventSubmitBadSignatureEvidence. */
            class EventSubmitBadSignatureEvidence implements IEventSubmitBadSignatureEvidence {

                /**
                 * Constructs a new EventSubmitBadSignatureEvidence.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.peggy.v1.IEventSubmitBadSignatureEvidence);

                /** EventSubmitBadSignatureEvidence bad_eth_signature. */
                public bad_eth_signature: string;

                /** EventSubmitBadSignatureEvidence bad_eth_signature_subject. */
                public bad_eth_signature_subject: string;

                /**
                 * Encodes the specified EventSubmitBadSignatureEvidence message. Does not implicitly {@link injective.peggy.v1.EventSubmitBadSignatureEvidence.verify|verify} messages.
                 * @param message EventSubmitBadSignatureEvidence message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.peggy.v1.IEventSubmitBadSignatureEvidence, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified EventSubmitBadSignatureEvidence message, length delimited. Does not implicitly {@link injective.peggy.v1.EventSubmitBadSignatureEvidence.verify|verify} messages.
                 * @param message EventSubmitBadSignatureEvidence message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.peggy.v1.IEventSubmitBadSignatureEvidence, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an EventSubmitBadSignatureEvidence message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns EventSubmitBadSignatureEvidence
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.peggy.v1.EventSubmitBadSignatureEvidence;

                /**
                 * Decodes an EventSubmitBadSignatureEvidence message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns EventSubmitBadSignatureEvidence
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.peggy.v1.EventSubmitBadSignatureEvidence;

                /**
                 * Verifies an EventSubmitBadSignatureEvidence message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an EventSubmitBadSignatureEvidence message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns EventSubmitBadSignatureEvidence
                 */
                public static fromObject(object: { [k: string]: any }): injective.peggy.v1.EventSubmitBadSignatureEvidence;

                /**
                 * Creates a plain object from an EventSubmitBadSignatureEvidence message. Also converts values to other types if specified.
                 * @param message EventSubmitBadSignatureEvidence
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.peggy.v1.EventSubmitBadSignatureEvidence, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this EventSubmitBadSignatureEvidence to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an EventValidatorSlash. */
            interface IEventValidatorSlash {

                /** EventValidatorSlash power */
                power?: (number|null);

                /** EventValidatorSlash reason */
                reason?: (string|null);

                /** EventValidatorSlash consensus_address */
                consensus_address?: (string|null);

                /** EventValidatorSlash operator_address */
                operator_address?: (string|null);

                /** EventValidatorSlash moniker */
                moniker?: (string|null);
            }

            /** Represents an EventValidatorSlash. */
            class EventValidatorSlash implements IEventValidatorSlash {

                /**
                 * Constructs a new EventValidatorSlash.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.peggy.v1.IEventValidatorSlash);

                /** EventValidatorSlash power. */
                public power: number;

                /** EventValidatorSlash reason. */
                public reason: string;

                /** EventValidatorSlash consensus_address. */
                public consensus_address: string;

                /** EventValidatorSlash operator_address. */
                public operator_address: string;

                /** EventValidatorSlash moniker. */
                public moniker: string;

                /**
                 * Encodes the specified EventValidatorSlash message. Does not implicitly {@link injective.peggy.v1.EventValidatorSlash.verify|verify} messages.
                 * @param message EventValidatorSlash message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.peggy.v1.IEventValidatorSlash, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified EventValidatorSlash message, length delimited. Does not implicitly {@link injective.peggy.v1.EventValidatorSlash.verify|verify} messages.
                 * @param message EventValidatorSlash message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.peggy.v1.IEventValidatorSlash, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an EventValidatorSlash message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns EventValidatorSlash
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.peggy.v1.EventValidatorSlash;

                /**
                 * Decodes an EventValidatorSlash message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns EventValidatorSlash
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.peggy.v1.EventValidatorSlash;

                /**
                 * Verifies an EventValidatorSlash message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an EventValidatorSlash message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns EventValidatorSlash
                 */
                public static fromObject(object: { [k: string]: any }): injective.peggy.v1.EventValidatorSlash;

                /**
                 * Creates a plain object from an EventValidatorSlash message. Also converts values to other types if specified.
                 * @param message EventValidatorSlash
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.peggy.v1.EventValidatorSlash, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this EventValidatorSlash to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a BridgeValidator. */
            interface IBridgeValidator {

                /** BridgeValidator power */
                power?: (number|null);

                /** BridgeValidator ethereum_address */
                ethereum_address?: (string|null);
            }

            /** Represents a BridgeValidator. */
            class BridgeValidator implements IBridgeValidator {

                /**
                 * Constructs a new BridgeValidator.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.peggy.v1.IBridgeValidator);

                /** BridgeValidator power. */
                public power: number;

                /** BridgeValidator ethereum_address. */
                public ethereum_address: string;

                /**
                 * Encodes the specified BridgeValidator message. Does not implicitly {@link injective.peggy.v1.BridgeValidator.verify|verify} messages.
                 * @param message BridgeValidator message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.peggy.v1.IBridgeValidator, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified BridgeValidator message, length delimited. Does not implicitly {@link injective.peggy.v1.BridgeValidator.verify|verify} messages.
                 * @param message BridgeValidator message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.peggy.v1.IBridgeValidator, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a BridgeValidator message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns BridgeValidator
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.peggy.v1.BridgeValidator;

                /**
                 * Decodes a BridgeValidator message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns BridgeValidator
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.peggy.v1.BridgeValidator;

                /**
                 * Verifies a BridgeValidator message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a BridgeValidator message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns BridgeValidator
                 */
                public static fromObject(object: { [k: string]: any }): injective.peggy.v1.BridgeValidator;

                /**
                 * Creates a plain object from a BridgeValidator message. Also converts values to other types if specified.
                 * @param message BridgeValidator
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.peggy.v1.BridgeValidator, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this BridgeValidator to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a Valset. */
            interface IValset {

                /** Valset nonce */
                nonce?: (number|null);

                /** Valset members */
                members?: (injective.peggy.v1.IBridgeValidator[]|null);

                /** Valset height */
                height?: (number|null);

                /** Valset reward_amount */
                reward_amount?: (string|null);

                /** Valset reward_token */
                reward_token?: (string|null);
            }

            /** Represents a Valset. */
            class Valset implements IValset {

                /**
                 * Constructs a new Valset.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.peggy.v1.IValset);

                /** Valset nonce. */
                public nonce: number;

                /** Valset members. */
                public members: injective.peggy.v1.IBridgeValidator[];

                /** Valset height. */
                public height: number;

                /** Valset reward_amount. */
                public reward_amount: string;

                /** Valset reward_token. */
                public reward_token: string;

                /**
                 * Encodes the specified Valset message. Does not implicitly {@link injective.peggy.v1.Valset.verify|verify} messages.
                 * @param message Valset message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.peggy.v1.IValset, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Valset message, length delimited. Does not implicitly {@link injective.peggy.v1.Valset.verify|verify} messages.
                 * @param message Valset message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.peggy.v1.IValset, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Valset message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Valset
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.peggy.v1.Valset;

                /**
                 * Decodes a Valset message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Valset
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.peggy.v1.Valset;

                /**
                 * Verifies a Valset message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Valset message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Valset
                 */
                public static fromObject(object: { [k: string]: any }): injective.peggy.v1.Valset;

                /**
                 * Creates a plain object from a Valset message. Also converts values to other types if specified.
                 * @param message Valset
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.peggy.v1.Valset, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Valset to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a LastObservedEthereumBlockHeight. */
            interface ILastObservedEthereumBlockHeight {

                /** LastObservedEthereumBlockHeight cosmos_block_height */
                cosmos_block_height?: (number|null);

                /** LastObservedEthereumBlockHeight ethereum_block_height */
                ethereum_block_height?: (number|null);
            }

            /** Represents a LastObservedEthereumBlockHeight. */
            class LastObservedEthereumBlockHeight implements ILastObservedEthereumBlockHeight {

                /**
                 * Constructs a new LastObservedEthereumBlockHeight.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.peggy.v1.ILastObservedEthereumBlockHeight);

                /** LastObservedEthereumBlockHeight cosmos_block_height. */
                public cosmos_block_height: number;

                /** LastObservedEthereumBlockHeight ethereum_block_height. */
                public ethereum_block_height: number;

                /**
                 * Encodes the specified LastObservedEthereumBlockHeight message. Does not implicitly {@link injective.peggy.v1.LastObservedEthereumBlockHeight.verify|verify} messages.
                 * @param message LastObservedEthereumBlockHeight message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.peggy.v1.ILastObservedEthereumBlockHeight, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified LastObservedEthereumBlockHeight message, length delimited. Does not implicitly {@link injective.peggy.v1.LastObservedEthereumBlockHeight.verify|verify} messages.
                 * @param message LastObservedEthereumBlockHeight message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.peggy.v1.ILastObservedEthereumBlockHeight, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a LastObservedEthereumBlockHeight message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns LastObservedEthereumBlockHeight
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.peggy.v1.LastObservedEthereumBlockHeight;

                /**
                 * Decodes a LastObservedEthereumBlockHeight message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns LastObservedEthereumBlockHeight
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.peggy.v1.LastObservedEthereumBlockHeight;

                /**
                 * Verifies a LastObservedEthereumBlockHeight message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a LastObservedEthereumBlockHeight message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns LastObservedEthereumBlockHeight
                 */
                public static fromObject(object: { [k: string]: any }): injective.peggy.v1.LastObservedEthereumBlockHeight;

                /**
                 * Creates a plain object from a LastObservedEthereumBlockHeight message. Also converts values to other types if specified.
                 * @param message LastObservedEthereumBlockHeight
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.peggy.v1.LastObservedEthereumBlockHeight, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this LastObservedEthereumBlockHeight to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a LastClaimEvent. */
            interface ILastClaimEvent {

                /** LastClaimEvent ethereum_event_nonce */
                ethereum_event_nonce?: (number|null);

                /** LastClaimEvent ethereum_event_height */
                ethereum_event_height?: (number|null);
            }

            /** Represents a LastClaimEvent. */
            class LastClaimEvent implements ILastClaimEvent {

                /**
                 * Constructs a new LastClaimEvent.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.peggy.v1.ILastClaimEvent);

                /** LastClaimEvent ethereum_event_nonce. */
                public ethereum_event_nonce: number;

                /** LastClaimEvent ethereum_event_height. */
                public ethereum_event_height: number;

                /**
                 * Encodes the specified LastClaimEvent message. Does not implicitly {@link injective.peggy.v1.LastClaimEvent.verify|verify} messages.
                 * @param message LastClaimEvent message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.peggy.v1.ILastClaimEvent, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified LastClaimEvent message, length delimited. Does not implicitly {@link injective.peggy.v1.LastClaimEvent.verify|verify} messages.
                 * @param message LastClaimEvent message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.peggy.v1.ILastClaimEvent, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a LastClaimEvent message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns LastClaimEvent
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.peggy.v1.LastClaimEvent;

                /**
                 * Decodes a LastClaimEvent message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns LastClaimEvent
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.peggy.v1.LastClaimEvent;

                /**
                 * Verifies a LastClaimEvent message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a LastClaimEvent message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns LastClaimEvent
                 */
                public static fromObject(object: { [k: string]: any }): injective.peggy.v1.LastClaimEvent;

                /**
                 * Creates a plain object from a LastClaimEvent message. Also converts values to other types if specified.
                 * @param message LastClaimEvent
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.peggy.v1.LastClaimEvent, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this LastClaimEvent to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a ERC20ToDenom. */
            interface IERC20ToDenom {

                /** ERC20ToDenom erc20 */
                erc20?: (string|null);

                /** ERC20ToDenom denom */
                denom?: (string|null);
            }

            /** Represents a ERC20ToDenom. */
            class ERC20ToDenom implements IERC20ToDenom {

                /**
                 * Constructs a new ERC20ToDenom.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.peggy.v1.IERC20ToDenom);

                /** ERC20ToDenom erc20. */
                public erc20: string;

                /** ERC20ToDenom denom. */
                public denom: string;

                /**
                 * Encodes the specified ERC20ToDenom message. Does not implicitly {@link injective.peggy.v1.ERC20ToDenom.verify|verify} messages.
                 * @param message ERC20ToDenom message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.peggy.v1.IERC20ToDenom, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ERC20ToDenom message, length delimited. Does not implicitly {@link injective.peggy.v1.ERC20ToDenom.verify|verify} messages.
                 * @param message ERC20ToDenom message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.peggy.v1.IERC20ToDenom, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ERC20ToDenom message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ERC20ToDenom
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.peggy.v1.ERC20ToDenom;

                /**
                 * Decodes a ERC20ToDenom message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ERC20ToDenom
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.peggy.v1.ERC20ToDenom;

                /**
                 * Verifies a ERC20ToDenom message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ERC20ToDenom message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ERC20ToDenom
                 */
                public static fromObject(object: { [k: string]: any }): injective.peggy.v1.ERC20ToDenom;

                /**
                 * Creates a plain object from a ERC20ToDenom message. Also converts values to other types if specified.
                 * @param message ERC20ToDenom
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.peggy.v1.ERC20ToDenom, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ERC20ToDenom to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a IDSet. */
            interface IIDSet {

                /** IDSet ids */
                ids?: (number[]|null);
            }

            /** Represents a IDSet. */
            class IDSet implements IIDSet {

                /**
                 * Constructs a new IDSet.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.peggy.v1.IIDSet);

                /** IDSet ids. */
                public ids: number[];

                /**
                 * Encodes the specified IDSet message. Does not implicitly {@link injective.peggy.v1.IDSet.verify|verify} messages.
                 * @param message IDSet message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.peggy.v1.IIDSet, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified IDSet message, length delimited. Does not implicitly {@link injective.peggy.v1.IDSet.verify|verify} messages.
                 * @param message IDSet message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.peggy.v1.IIDSet, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a IDSet message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns IDSet
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.peggy.v1.IDSet;

                /**
                 * Decodes a IDSet message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns IDSet
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.peggy.v1.IDSet;

                /**
                 * Verifies a IDSet message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a IDSet message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns IDSet
                 */
                public static fromObject(object: { [k: string]: any }): injective.peggy.v1.IDSet;

                /**
                 * Creates a plain object from a IDSet message. Also converts values to other types if specified.
                 * @param message IDSet
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.peggy.v1.IDSet, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this IDSet to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a BatchFees. */
            interface IBatchFees {

                /** BatchFees token */
                token?: (string|null);

                /** BatchFees total_fees */
                total_fees?: (string|null);
            }

            /** Represents a BatchFees. */
            class BatchFees implements IBatchFees {

                /**
                 * Constructs a new BatchFees.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.peggy.v1.IBatchFees);

                /** BatchFees token. */
                public token: string;

                /** BatchFees total_fees. */
                public total_fees: string;

                /**
                 * Encodes the specified BatchFees message. Does not implicitly {@link injective.peggy.v1.BatchFees.verify|verify} messages.
                 * @param message BatchFees message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.peggy.v1.IBatchFees, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified BatchFees message, length delimited. Does not implicitly {@link injective.peggy.v1.BatchFees.verify|verify} messages.
                 * @param message BatchFees message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.peggy.v1.IBatchFees, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a BatchFees message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns BatchFees
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.peggy.v1.BatchFees;

                /**
                 * Decodes a BatchFees message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns BatchFees
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.peggy.v1.BatchFees;

                /**
                 * Verifies a BatchFees message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a BatchFees message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns BatchFees
                 */
                public static fromObject(object: { [k: string]: any }): injective.peggy.v1.BatchFees;

                /**
                 * Creates a plain object from a BatchFees message. Also converts values to other types if specified.
                 * @param message BatchFees
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.peggy.v1.BatchFees, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this BatchFees to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an OutgoingTxBatch. */
            interface IOutgoingTxBatch {

                /** OutgoingTxBatch batch_nonce */
                batch_nonce?: (number|null);

                /** OutgoingTxBatch batch_timeout */
                batch_timeout?: (number|null);

                /** OutgoingTxBatch transactions */
                transactions?: (injective.peggy.v1.IOutgoingTransferTx[]|null);

                /** OutgoingTxBatch token_contract */
                token_contract?: (string|null);

                /** OutgoingTxBatch block */
                block?: (number|null);
            }

            /** Represents an OutgoingTxBatch. */
            class OutgoingTxBatch implements IOutgoingTxBatch {

                /**
                 * Constructs a new OutgoingTxBatch.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.peggy.v1.IOutgoingTxBatch);

                /** OutgoingTxBatch batch_nonce. */
                public batch_nonce: number;

                /** OutgoingTxBatch batch_timeout. */
                public batch_timeout: number;

                /** OutgoingTxBatch transactions. */
                public transactions: injective.peggy.v1.IOutgoingTransferTx[];

                /** OutgoingTxBatch token_contract. */
                public token_contract: string;

                /** OutgoingTxBatch block. */
                public block: number;

                /**
                 * Encodes the specified OutgoingTxBatch message. Does not implicitly {@link injective.peggy.v1.OutgoingTxBatch.verify|verify} messages.
                 * @param message OutgoingTxBatch message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.peggy.v1.IOutgoingTxBatch, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified OutgoingTxBatch message, length delimited. Does not implicitly {@link injective.peggy.v1.OutgoingTxBatch.verify|verify} messages.
                 * @param message OutgoingTxBatch message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.peggy.v1.IOutgoingTxBatch, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an OutgoingTxBatch message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns OutgoingTxBatch
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.peggy.v1.OutgoingTxBatch;

                /**
                 * Decodes an OutgoingTxBatch message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns OutgoingTxBatch
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.peggy.v1.OutgoingTxBatch;

                /**
                 * Verifies an OutgoingTxBatch message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an OutgoingTxBatch message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns OutgoingTxBatch
                 */
                public static fromObject(object: { [k: string]: any }): injective.peggy.v1.OutgoingTxBatch;

                /**
                 * Creates a plain object from an OutgoingTxBatch message. Also converts values to other types if specified.
                 * @param message OutgoingTxBatch
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.peggy.v1.OutgoingTxBatch, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this OutgoingTxBatch to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an OutgoingTransferTx. */
            interface IOutgoingTransferTx {

                /** OutgoingTransferTx id */
                id?: (number|null);

                /** OutgoingTransferTx sender */
                sender?: (string|null);

                /** OutgoingTransferTx dest_address */
                dest_address?: (string|null);

                /** OutgoingTransferTx erc20_token */
                erc20_token?: (injective.peggy.v1.IERC20Token|null);

                /** OutgoingTransferTx erc20_fee */
                erc20_fee?: (injective.peggy.v1.IERC20Token|null);
            }

            /** Represents an OutgoingTransferTx. */
            class OutgoingTransferTx implements IOutgoingTransferTx {

                /**
                 * Constructs a new OutgoingTransferTx.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.peggy.v1.IOutgoingTransferTx);

                /** OutgoingTransferTx id. */
                public id: number;

                /** OutgoingTransferTx sender. */
                public sender: string;

                /** OutgoingTransferTx dest_address. */
                public dest_address: string;

                /** OutgoingTransferTx erc20_token. */
                public erc20_token?: (injective.peggy.v1.IERC20Token|null);

                /** OutgoingTransferTx erc20_fee. */
                public erc20_fee?: (injective.peggy.v1.IERC20Token|null);

                /**
                 * Encodes the specified OutgoingTransferTx message. Does not implicitly {@link injective.peggy.v1.OutgoingTransferTx.verify|verify} messages.
                 * @param message OutgoingTransferTx message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.peggy.v1.IOutgoingTransferTx, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified OutgoingTransferTx message, length delimited. Does not implicitly {@link injective.peggy.v1.OutgoingTransferTx.verify|verify} messages.
                 * @param message OutgoingTransferTx message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.peggy.v1.IOutgoingTransferTx, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an OutgoingTransferTx message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns OutgoingTransferTx
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.peggy.v1.OutgoingTransferTx;

                /**
                 * Decodes an OutgoingTransferTx message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns OutgoingTransferTx
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.peggy.v1.OutgoingTransferTx;

                /**
                 * Verifies an OutgoingTransferTx message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an OutgoingTransferTx message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns OutgoingTransferTx
                 */
                public static fromObject(object: { [k: string]: any }): injective.peggy.v1.OutgoingTransferTx;

                /**
                 * Creates a plain object from an OutgoingTransferTx message. Also converts values to other types if specified.
                 * @param message OutgoingTransferTx
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.peggy.v1.OutgoingTransferTx, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this OutgoingTransferTx to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Represents a Query */
            class Query extends $protobuf.rpc.Service {

                /**
                 * Constructs a new Query service.
                 * @param rpcImpl RPC implementation
                 * @param [requestDelimited=false] Whether requests are length-delimited
                 * @param [responseDelimited=false] Whether responses are length-delimited
                 */
                constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

                /**
                 * Calls Params.
                 * @param request QueryParamsRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryParamsResponse
                 */
                public params(request: injective.peggy.v1.IQueryParamsRequest, callback: injective.peggy.v1.Query.ParamsCallback): void;

                /**
                 * Calls Params.
                 * @param request QueryParamsRequest message or plain object
                 * @returns Promise
                 */
                public params(request: injective.peggy.v1.IQueryParamsRequest): Promise<injective.peggy.v1.QueryParamsResponse>;

                /**
                 * Calls CurrentValset.
                 * @param request QueryCurrentValsetRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryCurrentValsetResponse
                 */
                public currentValset(request: injective.peggy.v1.IQueryCurrentValsetRequest, callback: injective.peggy.v1.Query.CurrentValsetCallback): void;

                /**
                 * Calls CurrentValset.
                 * @param request QueryCurrentValsetRequest message or plain object
                 * @returns Promise
                 */
                public currentValset(request: injective.peggy.v1.IQueryCurrentValsetRequest): Promise<injective.peggy.v1.QueryCurrentValsetResponse>;

                /**
                 * Calls ValsetRequest.
                 * @param request QueryValsetRequestRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryValsetRequestResponse
                 */
                public valsetRequest(request: injective.peggy.v1.IQueryValsetRequestRequest, callback: injective.peggy.v1.Query.ValsetRequestCallback): void;

                /**
                 * Calls ValsetRequest.
                 * @param request QueryValsetRequestRequest message or plain object
                 * @returns Promise
                 */
                public valsetRequest(request: injective.peggy.v1.IQueryValsetRequestRequest): Promise<injective.peggy.v1.QueryValsetRequestResponse>;

                /**
                 * Calls ValsetConfirm.
                 * @param request QueryValsetConfirmRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryValsetConfirmResponse
                 */
                public valsetConfirm(request: injective.peggy.v1.IQueryValsetConfirmRequest, callback: injective.peggy.v1.Query.ValsetConfirmCallback): void;

                /**
                 * Calls ValsetConfirm.
                 * @param request QueryValsetConfirmRequest message or plain object
                 * @returns Promise
                 */
                public valsetConfirm(request: injective.peggy.v1.IQueryValsetConfirmRequest): Promise<injective.peggy.v1.QueryValsetConfirmResponse>;

                /**
                 * Calls ValsetConfirmsByNonce.
                 * @param request QueryValsetConfirmsByNonceRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryValsetConfirmsByNonceResponse
                 */
                public valsetConfirmsByNonce(request: injective.peggy.v1.IQueryValsetConfirmsByNonceRequest, callback: injective.peggy.v1.Query.ValsetConfirmsByNonceCallback): void;

                /**
                 * Calls ValsetConfirmsByNonce.
                 * @param request QueryValsetConfirmsByNonceRequest message or plain object
                 * @returns Promise
                 */
                public valsetConfirmsByNonce(request: injective.peggy.v1.IQueryValsetConfirmsByNonceRequest): Promise<injective.peggy.v1.QueryValsetConfirmsByNonceResponse>;

                /**
                 * Calls LastValsetRequests.
                 * @param request QueryLastValsetRequestsRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryLastValsetRequestsResponse
                 */
                public lastValsetRequests(request: injective.peggy.v1.IQueryLastValsetRequestsRequest, callback: injective.peggy.v1.Query.LastValsetRequestsCallback): void;

                /**
                 * Calls LastValsetRequests.
                 * @param request QueryLastValsetRequestsRequest message or plain object
                 * @returns Promise
                 */
                public lastValsetRequests(request: injective.peggy.v1.IQueryLastValsetRequestsRequest): Promise<injective.peggy.v1.QueryLastValsetRequestsResponse>;

                /**
                 * Calls LastPendingValsetRequestByAddr.
                 * @param request QueryLastPendingValsetRequestByAddrRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryLastPendingValsetRequestByAddrResponse
                 */
                public lastPendingValsetRequestByAddr(request: injective.peggy.v1.IQueryLastPendingValsetRequestByAddrRequest, callback: injective.peggy.v1.Query.LastPendingValsetRequestByAddrCallback): void;

                /**
                 * Calls LastPendingValsetRequestByAddr.
                 * @param request QueryLastPendingValsetRequestByAddrRequest message or plain object
                 * @returns Promise
                 */
                public lastPendingValsetRequestByAddr(request: injective.peggy.v1.IQueryLastPendingValsetRequestByAddrRequest): Promise<injective.peggy.v1.QueryLastPendingValsetRequestByAddrResponse>;

                /**
                 * Calls LastEventByAddr.
                 * @param request QueryLastEventByAddrRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryLastEventByAddrResponse
                 */
                public lastEventByAddr(request: injective.peggy.v1.IQueryLastEventByAddrRequest, callback: injective.peggy.v1.Query.LastEventByAddrCallback): void;

                /**
                 * Calls LastEventByAddr.
                 * @param request QueryLastEventByAddrRequest message or plain object
                 * @returns Promise
                 */
                public lastEventByAddr(request: injective.peggy.v1.IQueryLastEventByAddrRequest): Promise<injective.peggy.v1.QueryLastEventByAddrResponse>;

                /**
                 * Calls GetPendingSendToEth.
                 * @param request QueryPendingSendToEth message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryPendingSendToEthResponse
                 */
                public getPendingSendToEth(request: injective.peggy.v1.IQueryPendingSendToEth, callback: injective.peggy.v1.Query.GetPendingSendToEthCallback): void;

                /**
                 * Calls GetPendingSendToEth.
                 * @param request QueryPendingSendToEth message or plain object
                 * @returns Promise
                 */
                public getPendingSendToEth(request: injective.peggy.v1.IQueryPendingSendToEth): Promise<injective.peggy.v1.QueryPendingSendToEthResponse>;

                /**
                 * Calls BatchFees.
                 * @param request QueryBatchFeeRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryBatchFeeResponse
                 */
                public batchFees(request: injective.peggy.v1.IQueryBatchFeeRequest, callback: injective.peggy.v1.Query.BatchFeesCallback): void;

                /**
                 * Calls BatchFees.
                 * @param request QueryBatchFeeRequest message or plain object
                 * @returns Promise
                 */
                public batchFees(request: injective.peggy.v1.IQueryBatchFeeRequest): Promise<injective.peggy.v1.QueryBatchFeeResponse>;

                /**
                 * Calls OutgoingTxBatches.
                 * @param request QueryOutgoingTxBatchesRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryOutgoingTxBatchesResponse
                 */
                public outgoingTxBatches(request: injective.peggy.v1.IQueryOutgoingTxBatchesRequest, callback: injective.peggy.v1.Query.OutgoingTxBatchesCallback): void;

                /**
                 * Calls OutgoingTxBatches.
                 * @param request QueryOutgoingTxBatchesRequest message or plain object
                 * @returns Promise
                 */
                public outgoingTxBatches(request: injective.peggy.v1.IQueryOutgoingTxBatchesRequest): Promise<injective.peggy.v1.QueryOutgoingTxBatchesResponse>;

                /**
                 * Calls LastPendingBatchRequestByAddr.
                 * @param request QueryLastPendingBatchRequestByAddrRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryLastPendingBatchRequestByAddrResponse
                 */
                public lastPendingBatchRequestByAddr(request: injective.peggy.v1.IQueryLastPendingBatchRequestByAddrRequest, callback: injective.peggy.v1.Query.LastPendingBatchRequestByAddrCallback): void;

                /**
                 * Calls LastPendingBatchRequestByAddr.
                 * @param request QueryLastPendingBatchRequestByAddrRequest message or plain object
                 * @returns Promise
                 */
                public lastPendingBatchRequestByAddr(request: injective.peggy.v1.IQueryLastPendingBatchRequestByAddrRequest): Promise<injective.peggy.v1.QueryLastPendingBatchRequestByAddrResponse>;

                /**
                 * Calls BatchRequestByNonce.
                 * @param request QueryBatchRequestByNonceRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryBatchRequestByNonceResponse
                 */
                public batchRequestByNonce(request: injective.peggy.v1.IQueryBatchRequestByNonceRequest, callback: injective.peggy.v1.Query.BatchRequestByNonceCallback): void;

                /**
                 * Calls BatchRequestByNonce.
                 * @param request QueryBatchRequestByNonceRequest message or plain object
                 * @returns Promise
                 */
                public batchRequestByNonce(request: injective.peggy.v1.IQueryBatchRequestByNonceRequest): Promise<injective.peggy.v1.QueryBatchRequestByNonceResponse>;

                /**
                 * Calls BatchConfirms.
                 * @param request QueryBatchConfirmsRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryBatchConfirmsResponse
                 */
                public batchConfirms(request: injective.peggy.v1.IQueryBatchConfirmsRequest, callback: injective.peggy.v1.Query.BatchConfirmsCallback): void;

                /**
                 * Calls BatchConfirms.
                 * @param request QueryBatchConfirmsRequest message or plain object
                 * @returns Promise
                 */
                public batchConfirms(request: injective.peggy.v1.IQueryBatchConfirmsRequest): Promise<injective.peggy.v1.QueryBatchConfirmsResponse>;

                /**
                 * Calls ERC20ToDenom.
                 * @param request QueryERC20ToDenomRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryERC20ToDenomResponse
                 */
                public eRC20ToDenom(request: injective.peggy.v1.IQueryERC20ToDenomRequest, callback: injective.peggy.v1.Query.ERC20ToDenomCallback): void;

                /**
                 * Calls ERC20ToDenom.
                 * @param request QueryERC20ToDenomRequest message or plain object
                 * @returns Promise
                 */
                public eRC20ToDenom(request: injective.peggy.v1.IQueryERC20ToDenomRequest): Promise<injective.peggy.v1.QueryERC20ToDenomResponse>;

                /**
                 * Calls DenomToERC20.
                 * @param request QueryDenomToERC20Request message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryDenomToERC20Response
                 */
                public denomToERC20(request: injective.peggy.v1.IQueryDenomToERC20Request, callback: injective.peggy.v1.Query.DenomToERC20Callback): void;

                /**
                 * Calls DenomToERC20.
                 * @param request QueryDenomToERC20Request message or plain object
                 * @returns Promise
                 */
                public denomToERC20(request: injective.peggy.v1.IQueryDenomToERC20Request): Promise<injective.peggy.v1.QueryDenomToERC20Response>;

                /**
                 * Calls GetDelegateKeyByValidator.
                 * @param request QueryDelegateKeysByValidatorAddress message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryDelegateKeysByValidatorAddressResponse
                 */
                public getDelegateKeyByValidator(request: injective.peggy.v1.IQueryDelegateKeysByValidatorAddress, callback: injective.peggy.v1.Query.GetDelegateKeyByValidatorCallback): void;

                /**
                 * Calls GetDelegateKeyByValidator.
                 * @param request QueryDelegateKeysByValidatorAddress message or plain object
                 * @returns Promise
                 */
                public getDelegateKeyByValidator(request: injective.peggy.v1.IQueryDelegateKeysByValidatorAddress): Promise<injective.peggy.v1.QueryDelegateKeysByValidatorAddressResponse>;

                /**
                 * Calls GetDelegateKeyByEth.
                 * @param request QueryDelegateKeysByEthAddress message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryDelegateKeysByEthAddressResponse
                 */
                public getDelegateKeyByEth(request: injective.peggy.v1.IQueryDelegateKeysByEthAddress, callback: injective.peggy.v1.Query.GetDelegateKeyByEthCallback): void;

                /**
                 * Calls GetDelegateKeyByEth.
                 * @param request QueryDelegateKeysByEthAddress message or plain object
                 * @returns Promise
                 */
                public getDelegateKeyByEth(request: injective.peggy.v1.IQueryDelegateKeysByEthAddress): Promise<injective.peggy.v1.QueryDelegateKeysByEthAddressResponse>;

                /**
                 * Calls GetDelegateKeyByOrchestrator.
                 * @param request QueryDelegateKeysByOrchestratorAddress message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryDelegateKeysByOrchestratorAddressResponse
                 */
                public getDelegateKeyByOrchestrator(request: injective.peggy.v1.IQueryDelegateKeysByOrchestratorAddress, callback: injective.peggy.v1.Query.GetDelegateKeyByOrchestratorCallback): void;

                /**
                 * Calls GetDelegateKeyByOrchestrator.
                 * @param request QueryDelegateKeysByOrchestratorAddress message or plain object
                 * @returns Promise
                 */
                public getDelegateKeyByOrchestrator(request: injective.peggy.v1.IQueryDelegateKeysByOrchestratorAddress): Promise<injective.peggy.v1.QueryDelegateKeysByOrchestratorAddressResponse>;

                /**
                 * Calls PeggyModuleState.
                 * @param request QueryModuleStateRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryModuleStateResponse
                 */
                public peggyModuleState(request: injective.peggy.v1.IQueryModuleStateRequest, callback: injective.peggy.v1.Query.PeggyModuleStateCallback): void;

                /**
                 * Calls PeggyModuleState.
                 * @param request QueryModuleStateRequest message or plain object
                 * @returns Promise
                 */
                public peggyModuleState(request: injective.peggy.v1.IQueryModuleStateRequest): Promise<injective.peggy.v1.QueryModuleStateResponse>;

                /**
                 * Calls MissingPeggoNonces.
                 * @param request MissingNoncesRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and MissingNoncesResponse
                 */
                public missingPeggoNonces(request: injective.peggy.v1.IMissingNoncesRequest, callback: injective.peggy.v1.Query.MissingPeggoNoncesCallback): void;

                /**
                 * Calls MissingPeggoNonces.
                 * @param request MissingNoncesRequest message or plain object
                 * @returns Promise
                 */
                public missingPeggoNonces(request: injective.peggy.v1.IMissingNoncesRequest): Promise<injective.peggy.v1.MissingNoncesResponse>;
            }

            namespace Query {

                /**
                 * Callback as used by {@link injective.peggy.v1.Query#params}.
                 * @param error Error, if any
                 * @param [response] QueryParamsResponse
                 */
                type ParamsCallback = (error: (Error|null), response?: injective.peggy.v1.QueryParamsResponse) => void;

                /**
                 * Callback as used by {@link injective.peggy.v1.Query#currentValset}.
                 * @param error Error, if any
                 * @param [response] QueryCurrentValsetResponse
                 */
                type CurrentValsetCallback = (error: (Error|null), response?: injective.peggy.v1.QueryCurrentValsetResponse) => void;

                /**
                 * Callback as used by {@link injective.peggy.v1.Query#valsetRequest}.
                 * @param error Error, if any
                 * @param [response] QueryValsetRequestResponse
                 */
                type ValsetRequestCallback = (error: (Error|null), response?: injective.peggy.v1.QueryValsetRequestResponse) => void;

                /**
                 * Callback as used by {@link injective.peggy.v1.Query#valsetConfirm}.
                 * @param error Error, if any
                 * @param [response] QueryValsetConfirmResponse
                 */
                type ValsetConfirmCallback = (error: (Error|null), response?: injective.peggy.v1.QueryValsetConfirmResponse) => void;

                /**
                 * Callback as used by {@link injective.peggy.v1.Query#valsetConfirmsByNonce}.
                 * @param error Error, if any
                 * @param [response] QueryValsetConfirmsByNonceResponse
                 */
                type ValsetConfirmsByNonceCallback = (error: (Error|null), response?: injective.peggy.v1.QueryValsetConfirmsByNonceResponse) => void;

                /**
                 * Callback as used by {@link injective.peggy.v1.Query#lastValsetRequests}.
                 * @param error Error, if any
                 * @param [response] QueryLastValsetRequestsResponse
                 */
                type LastValsetRequestsCallback = (error: (Error|null), response?: injective.peggy.v1.QueryLastValsetRequestsResponse) => void;

                /**
                 * Callback as used by {@link injective.peggy.v1.Query#lastPendingValsetRequestByAddr}.
                 * @param error Error, if any
                 * @param [response] QueryLastPendingValsetRequestByAddrResponse
                 */
                type LastPendingValsetRequestByAddrCallback = (error: (Error|null), response?: injective.peggy.v1.QueryLastPendingValsetRequestByAddrResponse) => void;

                /**
                 * Callback as used by {@link injective.peggy.v1.Query#lastEventByAddr}.
                 * @param error Error, if any
                 * @param [response] QueryLastEventByAddrResponse
                 */
                type LastEventByAddrCallback = (error: (Error|null), response?: injective.peggy.v1.QueryLastEventByAddrResponse) => void;

                /**
                 * Callback as used by {@link injective.peggy.v1.Query#getPendingSendToEth}.
                 * @param error Error, if any
                 * @param [response] QueryPendingSendToEthResponse
                 */
                type GetPendingSendToEthCallback = (error: (Error|null), response?: injective.peggy.v1.QueryPendingSendToEthResponse) => void;

                /**
                 * Callback as used by {@link injective.peggy.v1.Query#batchFees}.
                 * @param error Error, if any
                 * @param [response] QueryBatchFeeResponse
                 */
                type BatchFeesCallback = (error: (Error|null), response?: injective.peggy.v1.QueryBatchFeeResponse) => void;

                /**
                 * Callback as used by {@link injective.peggy.v1.Query#outgoingTxBatches}.
                 * @param error Error, if any
                 * @param [response] QueryOutgoingTxBatchesResponse
                 */
                type OutgoingTxBatchesCallback = (error: (Error|null), response?: injective.peggy.v1.QueryOutgoingTxBatchesResponse) => void;

                /**
                 * Callback as used by {@link injective.peggy.v1.Query#lastPendingBatchRequestByAddr}.
                 * @param error Error, if any
                 * @param [response] QueryLastPendingBatchRequestByAddrResponse
                 */
                type LastPendingBatchRequestByAddrCallback = (error: (Error|null), response?: injective.peggy.v1.QueryLastPendingBatchRequestByAddrResponse) => void;

                /**
                 * Callback as used by {@link injective.peggy.v1.Query#batchRequestByNonce}.
                 * @param error Error, if any
                 * @param [response] QueryBatchRequestByNonceResponse
                 */
                type BatchRequestByNonceCallback = (error: (Error|null), response?: injective.peggy.v1.QueryBatchRequestByNonceResponse) => void;

                /**
                 * Callback as used by {@link injective.peggy.v1.Query#batchConfirms}.
                 * @param error Error, if any
                 * @param [response] QueryBatchConfirmsResponse
                 */
                type BatchConfirmsCallback = (error: (Error|null), response?: injective.peggy.v1.QueryBatchConfirmsResponse) => void;

                /**
                 * Callback as used by {@link injective.peggy.v1.Query#eRC20ToDenom}.
                 * @param error Error, if any
                 * @param [response] QueryERC20ToDenomResponse
                 */
                type ERC20ToDenomCallback = (error: (Error|null), response?: injective.peggy.v1.QueryERC20ToDenomResponse) => void;

                /**
                 * Callback as used by {@link injective.peggy.v1.Query#denomToERC20}.
                 * @param error Error, if any
                 * @param [response] QueryDenomToERC20Response
                 */
                type DenomToERC20Callback = (error: (Error|null), response?: injective.peggy.v1.QueryDenomToERC20Response) => void;

                /**
                 * Callback as used by {@link injective.peggy.v1.Query#getDelegateKeyByValidator}.
                 * @param error Error, if any
                 * @param [response] QueryDelegateKeysByValidatorAddressResponse
                 */
                type GetDelegateKeyByValidatorCallback = (error: (Error|null), response?: injective.peggy.v1.QueryDelegateKeysByValidatorAddressResponse) => void;

                /**
                 * Callback as used by {@link injective.peggy.v1.Query#getDelegateKeyByEth}.
                 * @param error Error, if any
                 * @param [response] QueryDelegateKeysByEthAddressResponse
                 */
                type GetDelegateKeyByEthCallback = (error: (Error|null), response?: injective.peggy.v1.QueryDelegateKeysByEthAddressResponse) => void;

                /**
                 * Callback as used by {@link injective.peggy.v1.Query#getDelegateKeyByOrchestrator}.
                 * @param error Error, if any
                 * @param [response] QueryDelegateKeysByOrchestratorAddressResponse
                 */
                type GetDelegateKeyByOrchestratorCallback = (error: (Error|null), response?: injective.peggy.v1.QueryDelegateKeysByOrchestratorAddressResponse) => void;

                /**
                 * Callback as used by {@link injective.peggy.v1.Query#peggyModuleState}.
                 * @param error Error, if any
                 * @param [response] QueryModuleStateResponse
                 */
                type PeggyModuleStateCallback = (error: (Error|null), response?: injective.peggy.v1.QueryModuleStateResponse) => void;

                /**
                 * Callback as used by {@link injective.peggy.v1.Query#missingPeggoNonces}.
                 * @param error Error, if any
                 * @param [response] MissingNoncesResponse
                 */
                type MissingPeggoNoncesCallback = (error: (Error|null), response?: injective.peggy.v1.MissingNoncesResponse) => void;
            }

            /** Properties of a QueryParamsRequest. */
            interface IQueryParamsRequest {
            }

            /** Represents a QueryParamsRequest. */
            class QueryParamsRequest implements IQueryParamsRequest {

                /**
                 * Constructs a new QueryParamsRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.peggy.v1.IQueryParamsRequest);

                /**
                 * Encodes the specified QueryParamsRequest message. Does not implicitly {@link injective.peggy.v1.QueryParamsRequest.verify|verify} messages.
                 * @param message QueryParamsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.peggy.v1.IQueryParamsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryParamsRequest message, length delimited. Does not implicitly {@link injective.peggy.v1.QueryParamsRequest.verify|verify} messages.
                 * @param message QueryParamsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.peggy.v1.IQueryParamsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryParamsRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryParamsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.peggy.v1.QueryParamsRequest;

                /**
                 * Decodes a QueryParamsRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryParamsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.peggy.v1.QueryParamsRequest;

                /**
                 * Verifies a QueryParamsRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryParamsRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryParamsRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.peggy.v1.QueryParamsRequest;

                /**
                 * Creates a plain object from a QueryParamsRequest message. Also converts values to other types if specified.
                 * @param message QueryParamsRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.peggy.v1.QueryParamsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryParamsRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryParamsResponse. */
            interface IQueryParamsResponse {

                /** QueryParamsResponse params */
                params?: (injective.peggy.v1.IParams|null);
            }

            /** Represents a QueryParamsResponse. */
            class QueryParamsResponse implements IQueryParamsResponse {

                /**
                 * Constructs a new QueryParamsResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.peggy.v1.IQueryParamsResponse);

                /** QueryParamsResponse params. */
                public params?: (injective.peggy.v1.IParams|null);

                /**
                 * Encodes the specified QueryParamsResponse message. Does not implicitly {@link injective.peggy.v1.QueryParamsResponse.verify|verify} messages.
                 * @param message QueryParamsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.peggy.v1.IQueryParamsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryParamsResponse message, length delimited. Does not implicitly {@link injective.peggy.v1.QueryParamsResponse.verify|verify} messages.
                 * @param message QueryParamsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.peggy.v1.IQueryParamsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryParamsResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryParamsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.peggy.v1.QueryParamsResponse;

                /**
                 * Decodes a QueryParamsResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryParamsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.peggy.v1.QueryParamsResponse;

                /**
                 * Verifies a QueryParamsResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryParamsResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryParamsResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.peggy.v1.QueryParamsResponse;

                /**
                 * Creates a plain object from a QueryParamsResponse message. Also converts values to other types if specified.
                 * @param message QueryParamsResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.peggy.v1.QueryParamsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryParamsResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryCurrentValsetRequest. */
            interface IQueryCurrentValsetRequest {
            }

            /** Represents a QueryCurrentValsetRequest. */
            class QueryCurrentValsetRequest implements IQueryCurrentValsetRequest {

                /**
                 * Constructs a new QueryCurrentValsetRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.peggy.v1.IQueryCurrentValsetRequest);

                /**
                 * Encodes the specified QueryCurrentValsetRequest message. Does not implicitly {@link injective.peggy.v1.QueryCurrentValsetRequest.verify|verify} messages.
                 * @param message QueryCurrentValsetRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.peggy.v1.IQueryCurrentValsetRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryCurrentValsetRequest message, length delimited. Does not implicitly {@link injective.peggy.v1.QueryCurrentValsetRequest.verify|verify} messages.
                 * @param message QueryCurrentValsetRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.peggy.v1.IQueryCurrentValsetRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryCurrentValsetRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryCurrentValsetRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.peggy.v1.QueryCurrentValsetRequest;

                /**
                 * Decodes a QueryCurrentValsetRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryCurrentValsetRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.peggy.v1.QueryCurrentValsetRequest;

                /**
                 * Verifies a QueryCurrentValsetRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryCurrentValsetRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryCurrentValsetRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.peggy.v1.QueryCurrentValsetRequest;

                /**
                 * Creates a plain object from a QueryCurrentValsetRequest message. Also converts values to other types if specified.
                 * @param message QueryCurrentValsetRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.peggy.v1.QueryCurrentValsetRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryCurrentValsetRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryCurrentValsetResponse. */
            interface IQueryCurrentValsetResponse {

                /** QueryCurrentValsetResponse valset */
                valset?: (injective.peggy.v1.IValset|null);
            }

            /** Represents a QueryCurrentValsetResponse. */
            class QueryCurrentValsetResponse implements IQueryCurrentValsetResponse {

                /**
                 * Constructs a new QueryCurrentValsetResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.peggy.v1.IQueryCurrentValsetResponse);

                /** QueryCurrentValsetResponse valset. */
                public valset?: (injective.peggy.v1.IValset|null);

                /**
                 * Encodes the specified QueryCurrentValsetResponse message. Does not implicitly {@link injective.peggy.v1.QueryCurrentValsetResponse.verify|verify} messages.
                 * @param message QueryCurrentValsetResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.peggy.v1.IQueryCurrentValsetResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryCurrentValsetResponse message, length delimited. Does not implicitly {@link injective.peggy.v1.QueryCurrentValsetResponse.verify|verify} messages.
                 * @param message QueryCurrentValsetResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.peggy.v1.IQueryCurrentValsetResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryCurrentValsetResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryCurrentValsetResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.peggy.v1.QueryCurrentValsetResponse;

                /**
                 * Decodes a QueryCurrentValsetResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryCurrentValsetResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.peggy.v1.QueryCurrentValsetResponse;

                /**
                 * Verifies a QueryCurrentValsetResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryCurrentValsetResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryCurrentValsetResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.peggy.v1.QueryCurrentValsetResponse;

                /**
                 * Creates a plain object from a QueryCurrentValsetResponse message. Also converts values to other types if specified.
                 * @param message QueryCurrentValsetResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.peggy.v1.QueryCurrentValsetResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryCurrentValsetResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryValsetRequestRequest. */
            interface IQueryValsetRequestRequest {

                /** QueryValsetRequestRequest nonce */
                nonce?: (number|null);
            }

            /** Represents a QueryValsetRequestRequest. */
            class QueryValsetRequestRequest implements IQueryValsetRequestRequest {

                /**
                 * Constructs a new QueryValsetRequestRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.peggy.v1.IQueryValsetRequestRequest);

                /** QueryValsetRequestRequest nonce. */
                public nonce: number;

                /**
                 * Encodes the specified QueryValsetRequestRequest message. Does not implicitly {@link injective.peggy.v1.QueryValsetRequestRequest.verify|verify} messages.
                 * @param message QueryValsetRequestRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.peggy.v1.IQueryValsetRequestRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryValsetRequestRequest message, length delimited. Does not implicitly {@link injective.peggy.v1.QueryValsetRequestRequest.verify|verify} messages.
                 * @param message QueryValsetRequestRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.peggy.v1.IQueryValsetRequestRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryValsetRequestRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryValsetRequestRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.peggy.v1.QueryValsetRequestRequest;

                /**
                 * Decodes a QueryValsetRequestRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryValsetRequestRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.peggy.v1.QueryValsetRequestRequest;

                /**
                 * Verifies a QueryValsetRequestRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryValsetRequestRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryValsetRequestRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.peggy.v1.QueryValsetRequestRequest;

                /**
                 * Creates a plain object from a QueryValsetRequestRequest message. Also converts values to other types if specified.
                 * @param message QueryValsetRequestRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.peggy.v1.QueryValsetRequestRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryValsetRequestRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryValsetRequestResponse. */
            interface IQueryValsetRequestResponse {

                /** QueryValsetRequestResponse valset */
                valset?: (injective.peggy.v1.IValset|null);
            }

            /** Represents a QueryValsetRequestResponse. */
            class QueryValsetRequestResponse implements IQueryValsetRequestResponse {

                /**
                 * Constructs a new QueryValsetRequestResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.peggy.v1.IQueryValsetRequestResponse);

                /** QueryValsetRequestResponse valset. */
                public valset?: (injective.peggy.v1.IValset|null);

                /**
                 * Encodes the specified QueryValsetRequestResponse message. Does not implicitly {@link injective.peggy.v1.QueryValsetRequestResponse.verify|verify} messages.
                 * @param message QueryValsetRequestResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.peggy.v1.IQueryValsetRequestResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryValsetRequestResponse message, length delimited. Does not implicitly {@link injective.peggy.v1.QueryValsetRequestResponse.verify|verify} messages.
                 * @param message QueryValsetRequestResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.peggy.v1.IQueryValsetRequestResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryValsetRequestResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryValsetRequestResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.peggy.v1.QueryValsetRequestResponse;

                /**
                 * Decodes a QueryValsetRequestResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryValsetRequestResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.peggy.v1.QueryValsetRequestResponse;

                /**
                 * Verifies a QueryValsetRequestResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryValsetRequestResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryValsetRequestResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.peggy.v1.QueryValsetRequestResponse;

                /**
                 * Creates a plain object from a QueryValsetRequestResponse message. Also converts values to other types if specified.
                 * @param message QueryValsetRequestResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.peggy.v1.QueryValsetRequestResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryValsetRequestResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryValsetConfirmRequest. */
            interface IQueryValsetConfirmRequest {

                /** QueryValsetConfirmRequest nonce */
                nonce?: (number|null);

                /** QueryValsetConfirmRequest address */
                address?: (string|null);
            }

            /** Represents a QueryValsetConfirmRequest. */
            class QueryValsetConfirmRequest implements IQueryValsetConfirmRequest {

                /**
                 * Constructs a new QueryValsetConfirmRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.peggy.v1.IQueryValsetConfirmRequest);

                /** QueryValsetConfirmRequest nonce. */
                public nonce: number;

                /** QueryValsetConfirmRequest address. */
                public address: string;

                /**
                 * Encodes the specified QueryValsetConfirmRequest message. Does not implicitly {@link injective.peggy.v1.QueryValsetConfirmRequest.verify|verify} messages.
                 * @param message QueryValsetConfirmRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.peggy.v1.IQueryValsetConfirmRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryValsetConfirmRequest message, length delimited. Does not implicitly {@link injective.peggy.v1.QueryValsetConfirmRequest.verify|verify} messages.
                 * @param message QueryValsetConfirmRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.peggy.v1.IQueryValsetConfirmRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryValsetConfirmRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryValsetConfirmRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.peggy.v1.QueryValsetConfirmRequest;

                /**
                 * Decodes a QueryValsetConfirmRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryValsetConfirmRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.peggy.v1.QueryValsetConfirmRequest;

                /**
                 * Verifies a QueryValsetConfirmRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryValsetConfirmRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryValsetConfirmRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.peggy.v1.QueryValsetConfirmRequest;

                /**
                 * Creates a plain object from a QueryValsetConfirmRequest message. Also converts values to other types if specified.
                 * @param message QueryValsetConfirmRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.peggy.v1.QueryValsetConfirmRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryValsetConfirmRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryValsetConfirmResponse. */
            interface IQueryValsetConfirmResponse {

                /** QueryValsetConfirmResponse confirm */
                confirm?: (injective.peggy.v1.IMsgValsetConfirm|null);
            }

            /** Represents a QueryValsetConfirmResponse. */
            class QueryValsetConfirmResponse implements IQueryValsetConfirmResponse {

                /**
                 * Constructs a new QueryValsetConfirmResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.peggy.v1.IQueryValsetConfirmResponse);

                /** QueryValsetConfirmResponse confirm. */
                public confirm?: (injective.peggy.v1.IMsgValsetConfirm|null);

                /**
                 * Encodes the specified QueryValsetConfirmResponse message. Does not implicitly {@link injective.peggy.v1.QueryValsetConfirmResponse.verify|verify} messages.
                 * @param message QueryValsetConfirmResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.peggy.v1.IQueryValsetConfirmResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryValsetConfirmResponse message, length delimited. Does not implicitly {@link injective.peggy.v1.QueryValsetConfirmResponse.verify|verify} messages.
                 * @param message QueryValsetConfirmResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.peggy.v1.IQueryValsetConfirmResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryValsetConfirmResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryValsetConfirmResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.peggy.v1.QueryValsetConfirmResponse;

                /**
                 * Decodes a QueryValsetConfirmResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryValsetConfirmResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.peggy.v1.QueryValsetConfirmResponse;

                /**
                 * Verifies a QueryValsetConfirmResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryValsetConfirmResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryValsetConfirmResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.peggy.v1.QueryValsetConfirmResponse;

                /**
                 * Creates a plain object from a QueryValsetConfirmResponse message. Also converts values to other types if specified.
                 * @param message QueryValsetConfirmResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.peggy.v1.QueryValsetConfirmResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryValsetConfirmResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryValsetConfirmsByNonceRequest. */
            interface IQueryValsetConfirmsByNonceRequest {

                /** QueryValsetConfirmsByNonceRequest nonce */
                nonce?: (number|null);
            }

            /** Represents a QueryValsetConfirmsByNonceRequest. */
            class QueryValsetConfirmsByNonceRequest implements IQueryValsetConfirmsByNonceRequest {

                /**
                 * Constructs a new QueryValsetConfirmsByNonceRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.peggy.v1.IQueryValsetConfirmsByNonceRequest);

                /** QueryValsetConfirmsByNonceRequest nonce. */
                public nonce: number;

                /**
                 * Encodes the specified QueryValsetConfirmsByNonceRequest message. Does not implicitly {@link injective.peggy.v1.QueryValsetConfirmsByNonceRequest.verify|verify} messages.
                 * @param message QueryValsetConfirmsByNonceRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.peggy.v1.IQueryValsetConfirmsByNonceRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryValsetConfirmsByNonceRequest message, length delimited. Does not implicitly {@link injective.peggy.v1.QueryValsetConfirmsByNonceRequest.verify|verify} messages.
                 * @param message QueryValsetConfirmsByNonceRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.peggy.v1.IQueryValsetConfirmsByNonceRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryValsetConfirmsByNonceRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryValsetConfirmsByNonceRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.peggy.v1.QueryValsetConfirmsByNonceRequest;

                /**
                 * Decodes a QueryValsetConfirmsByNonceRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryValsetConfirmsByNonceRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.peggy.v1.QueryValsetConfirmsByNonceRequest;

                /**
                 * Verifies a QueryValsetConfirmsByNonceRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryValsetConfirmsByNonceRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryValsetConfirmsByNonceRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.peggy.v1.QueryValsetConfirmsByNonceRequest;

                /**
                 * Creates a plain object from a QueryValsetConfirmsByNonceRequest message. Also converts values to other types if specified.
                 * @param message QueryValsetConfirmsByNonceRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.peggy.v1.QueryValsetConfirmsByNonceRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryValsetConfirmsByNonceRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryValsetConfirmsByNonceResponse. */
            interface IQueryValsetConfirmsByNonceResponse {

                /** QueryValsetConfirmsByNonceResponse confirms */
                confirms?: (injective.peggy.v1.IMsgValsetConfirm[]|null);
            }

            /** Represents a QueryValsetConfirmsByNonceResponse. */
            class QueryValsetConfirmsByNonceResponse implements IQueryValsetConfirmsByNonceResponse {

                /**
                 * Constructs a new QueryValsetConfirmsByNonceResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.peggy.v1.IQueryValsetConfirmsByNonceResponse);

                /** QueryValsetConfirmsByNonceResponse confirms. */
                public confirms: injective.peggy.v1.IMsgValsetConfirm[];

                /**
                 * Encodes the specified QueryValsetConfirmsByNonceResponse message. Does not implicitly {@link injective.peggy.v1.QueryValsetConfirmsByNonceResponse.verify|verify} messages.
                 * @param message QueryValsetConfirmsByNonceResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.peggy.v1.IQueryValsetConfirmsByNonceResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryValsetConfirmsByNonceResponse message, length delimited. Does not implicitly {@link injective.peggy.v1.QueryValsetConfirmsByNonceResponse.verify|verify} messages.
                 * @param message QueryValsetConfirmsByNonceResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.peggy.v1.IQueryValsetConfirmsByNonceResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryValsetConfirmsByNonceResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryValsetConfirmsByNonceResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.peggy.v1.QueryValsetConfirmsByNonceResponse;

                /**
                 * Decodes a QueryValsetConfirmsByNonceResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryValsetConfirmsByNonceResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.peggy.v1.QueryValsetConfirmsByNonceResponse;

                /**
                 * Verifies a QueryValsetConfirmsByNonceResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryValsetConfirmsByNonceResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryValsetConfirmsByNonceResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.peggy.v1.QueryValsetConfirmsByNonceResponse;

                /**
                 * Creates a plain object from a QueryValsetConfirmsByNonceResponse message. Also converts values to other types if specified.
                 * @param message QueryValsetConfirmsByNonceResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.peggy.v1.QueryValsetConfirmsByNonceResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryValsetConfirmsByNonceResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryLastValsetRequestsRequest. */
            interface IQueryLastValsetRequestsRequest {
            }

            /** Represents a QueryLastValsetRequestsRequest. */
            class QueryLastValsetRequestsRequest implements IQueryLastValsetRequestsRequest {

                /**
                 * Constructs a new QueryLastValsetRequestsRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.peggy.v1.IQueryLastValsetRequestsRequest);

                /**
                 * Encodes the specified QueryLastValsetRequestsRequest message. Does not implicitly {@link injective.peggy.v1.QueryLastValsetRequestsRequest.verify|verify} messages.
                 * @param message QueryLastValsetRequestsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.peggy.v1.IQueryLastValsetRequestsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryLastValsetRequestsRequest message, length delimited. Does not implicitly {@link injective.peggy.v1.QueryLastValsetRequestsRequest.verify|verify} messages.
                 * @param message QueryLastValsetRequestsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.peggy.v1.IQueryLastValsetRequestsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryLastValsetRequestsRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryLastValsetRequestsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.peggy.v1.QueryLastValsetRequestsRequest;

                /**
                 * Decodes a QueryLastValsetRequestsRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryLastValsetRequestsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.peggy.v1.QueryLastValsetRequestsRequest;

                /**
                 * Verifies a QueryLastValsetRequestsRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryLastValsetRequestsRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryLastValsetRequestsRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.peggy.v1.QueryLastValsetRequestsRequest;

                /**
                 * Creates a plain object from a QueryLastValsetRequestsRequest message. Also converts values to other types if specified.
                 * @param message QueryLastValsetRequestsRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.peggy.v1.QueryLastValsetRequestsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryLastValsetRequestsRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryLastValsetRequestsResponse. */
            interface IQueryLastValsetRequestsResponse {

                /** QueryLastValsetRequestsResponse valsets */
                valsets?: (injective.peggy.v1.IValset[]|null);
            }

            /** Represents a QueryLastValsetRequestsResponse. */
            class QueryLastValsetRequestsResponse implements IQueryLastValsetRequestsResponse {

                /**
                 * Constructs a new QueryLastValsetRequestsResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.peggy.v1.IQueryLastValsetRequestsResponse);

                /** QueryLastValsetRequestsResponse valsets. */
                public valsets: injective.peggy.v1.IValset[];

                /**
                 * Encodes the specified QueryLastValsetRequestsResponse message. Does not implicitly {@link injective.peggy.v1.QueryLastValsetRequestsResponse.verify|verify} messages.
                 * @param message QueryLastValsetRequestsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.peggy.v1.IQueryLastValsetRequestsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryLastValsetRequestsResponse message, length delimited. Does not implicitly {@link injective.peggy.v1.QueryLastValsetRequestsResponse.verify|verify} messages.
                 * @param message QueryLastValsetRequestsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.peggy.v1.IQueryLastValsetRequestsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryLastValsetRequestsResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryLastValsetRequestsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.peggy.v1.QueryLastValsetRequestsResponse;

                /**
                 * Decodes a QueryLastValsetRequestsResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryLastValsetRequestsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.peggy.v1.QueryLastValsetRequestsResponse;

                /**
                 * Verifies a QueryLastValsetRequestsResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryLastValsetRequestsResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryLastValsetRequestsResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.peggy.v1.QueryLastValsetRequestsResponse;

                /**
                 * Creates a plain object from a QueryLastValsetRequestsResponse message. Also converts values to other types if specified.
                 * @param message QueryLastValsetRequestsResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.peggy.v1.QueryLastValsetRequestsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryLastValsetRequestsResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryLastPendingValsetRequestByAddrRequest. */
            interface IQueryLastPendingValsetRequestByAddrRequest {

                /** QueryLastPendingValsetRequestByAddrRequest address */
                address?: (string|null);
            }

            /** Represents a QueryLastPendingValsetRequestByAddrRequest. */
            class QueryLastPendingValsetRequestByAddrRequest implements IQueryLastPendingValsetRequestByAddrRequest {

                /**
                 * Constructs a new QueryLastPendingValsetRequestByAddrRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.peggy.v1.IQueryLastPendingValsetRequestByAddrRequest);

                /** QueryLastPendingValsetRequestByAddrRequest address. */
                public address: string;

                /**
                 * Encodes the specified QueryLastPendingValsetRequestByAddrRequest message. Does not implicitly {@link injective.peggy.v1.QueryLastPendingValsetRequestByAddrRequest.verify|verify} messages.
                 * @param message QueryLastPendingValsetRequestByAddrRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.peggy.v1.IQueryLastPendingValsetRequestByAddrRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryLastPendingValsetRequestByAddrRequest message, length delimited. Does not implicitly {@link injective.peggy.v1.QueryLastPendingValsetRequestByAddrRequest.verify|verify} messages.
                 * @param message QueryLastPendingValsetRequestByAddrRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.peggy.v1.IQueryLastPendingValsetRequestByAddrRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryLastPendingValsetRequestByAddrRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryLastPendingValsetRequestByAddrRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.peggy.v1.QueryLastPendingValsetRequestByAddrRequest;

                /**
                 * Decodes a QueryLastPendingValsetRequestByAddrRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryLastPendingValsetRequestByAddrRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.peggy.v1.QueryLastPendingValsetRequestByAddrRequest;

                /**
                 * Verifies a QueryLastPendingValsetRequestByAddrRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryLastPendingValsetRequestByAddrRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryLastPendingValsetRequestByAddrRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.peggy.v1.QueryLastPendingValsetRequestByAddrRequest;

                /**
                 * Creates a plain object from a QueryLastPendingValsetRequestByAddrRequest message. Also converts values to other types if specified.
                 * @param message QueryLastPendingValsetRequestByAddrRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.peggy.v1.QueryLastPendingValsetRequestByAddrRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryLastPendingValsetRequestByAddrRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryLastPendingValsetRequestByAddrResponse. */
            interface IQueryLastPendingValsetRequestByAddrResponse {

                /** QueryLastPendingValsetRequestByAddrResponse valsets */
                valsets?: (injective.peggy.v1.IValset[]|null);
            }

            /** Represents a QueryLastPendingValsetRequestByAddrResponse. */
            class QueryLastPendingValsetRequestByAddrResponse implements IQueryLastPendingValsetRequestByAddrResponse {

                /**
                 * Constructs a new QueryLastPendingValsetRequestByAddrResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.peggy.v1.IQueryLastPendingValsetRequestByAddrResponse);

                /** QueryLastPendingValsetRequestByAddrResponse valsets. */
                public valsets: injective.peggy.v1.IValset[];

                /**
                 * Encodes the specified QueryLastPendingValsetRequestByAddrResponse message. Does not implicitly {@link injective.peggy.v1.QueryLastPendingValsetRequestByAddrResponse.verify|verify} messages.
                 * @param message QueryLastPendingValsetRequestByAddrResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.peggy.v1.IQueryLastPendingValsetRequestByAddrResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryLastPendingValsetRequestByAddrResponse message, length delimited. Does not implicitly {@link injective.peggy.v1.QueryLastPendingValsetRequestByAddrResponse.verify|verify} messages.
                 * @param message QueryLastPendingValsetRequestByAddrResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.peggy.v1.IQueryLastPendingValsetRequestByAddrResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryLastPendingValsetRequestByAddrResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryLastPendingValsetRequestByAddrResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.peggy.v1.QueryLastPendingValsetRequestByAddrResponse;

                /**
                 * Decodes a QueryLastPendingValsetRequestByAddrResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryLastPendingValsetRequestByAddrResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.peggy.v1.QueryLastPendingValsetRequestByAddrResponse;

                /**
                 * Verifies a QueryLastPendingValsetRequestByAddrResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryLastPendingValsetRequestByAddrResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryLastPendingValsetRequestByAddrResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.peggy.v1.QueryLastPendingValsetRequestByAddrResponse;

                /**
                 * Creates a plain object from a QueryLastPendingValsetRequestByAddrResponse message. Also converts values to other types if specified.
                 * @param message QueryLastPendingValsetRequestByAddrResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.peggy.v1.QueryLastPendingValsetRequestByAddrResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryLastPendingValsetRequestByAddrResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryBatchFeeRequest. */
            interface IQueryBatchFeeRequest {
            }

            /** Represents a QueryBatchFeeRequest. */
            class QueryBatchFeeRequest implements IQueryBatchFeeRequest {

                /**
                 * Constructs a new QueryBatchFeeRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.peggy.v1.IQueryBatchFeeRequest);

                /**
                 * Encodes the specified QueryBatchFeeRequest message. Does not implicitly {@link injective.peggy.v1.QueryBatchFeeRequest.verify|verify} messages.
                 * @param message QueryBatchFeeRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.peggy.v1.IQueryBatchFeeRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryBatchFeeRequest message, length delimited. Does not implicitly {@link injective.peggy.v1.QueryBatchFeeRequest.verify|verify} messages.
                 * @param message QueryBatchFeeRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.peggy.v1.IQueryBatchFeeRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryBatchFeeRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryBatchFeeRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.peggy.v1.QueryBatchFeeRequest;

                /**
                 * Decodes a QueryBatchFeeRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryBatchFeeRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.peggy.v1.QueryBatchFeeRequest;

                /**
                 * Verifies a QueryBatchFeeRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryBatchFeeRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryBatchFeeRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.peggy.v1.QueryBatchFeeRequest;

                /**
                 * Creates a plain object from a QueryBatchFeeRequest message. Also converts values to other types if specified.
                 * @param message QueryBatchFeeRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.peggy.v1.QueryBatchFeeRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryBatchFeeRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryBatchFeeResponse. */
            interface IQueryBatchFeeResponse {

                /** QueryBatchFeeResponse batchFees */
                batchFees?: (injective.peggy.v1.IBatchFees[]|null);
            }

            /** Represents a QueryBatchFeeResponse. */
            class QueryBatchFeeResponse implements IQueryBatchFeeResponse {

                /**
                 * Constructs a new QueryBatchFeeResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.peggy.v1.IQueryBatchFeeResponse);

                /** QueryBatchFeeResponse batchFees. */
                public batchFees: injective.peggy.v1.IBatchFees[];

                /**
                 * Encodes the specified QueryBatchFeeResponse message. Does not implicitly {@link injective.peggy.v1.QueryBatchFeeResponse.verify|verify} messages.
                 * @param message QueryBatchFeeResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.peggy.v1.IQueryBatchFeeResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryBatchFeeResponse message, length delimited. Does not implicitly {@link injective.peggy.v1.QueryBatchFeeResponse.verify|verify} messages.
                 * @param message QueryBatchFeeResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.peggy.v1.IQueryBatchFeeResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryBatchFeeResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryBatchFeeResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.peggy.v1.QueryBatchFeeResponse;

                /**
                 * Decodes a QueryBatchFeeResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryBatchFeeResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.peggy.v1.QueryBatchFeeResponse;

                /**
                 * Verifies a QueryBatchFeeResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryBatchFeeResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryBatchFeeResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.peggy.v1.QueryBatchFeeResponse;

                /**
                 * Creates a plain object from a QueryBatchFeeResponse message. Also converts values to other types if specified.
                 * @param message QueryBatchFeeResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.peggy.v1.QueryBatchFeeResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryBatchFeeResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryLastPendingBatchRequestByAddrRequest. */
            interface IQueryLastPendingBatchRequestByAddrRequest {

                /** QueryLastPendingBatchRequestByAddrRequest address */
                address?: (string|null);
            }

            /** Represents a QueryLastPendingBatchRequestByAddrRequest. */
            class QueryLastPendingBatchRequestByAddrRequest implements IQueryLastPendingBatchRequestByAddrRequest {

                /**
                 * Constructs a new QueryLastPendingBatchRequestByAddrRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.peggy.v1.IQueryLastPendingBatchRequestByAddrRequest);

                /** QueryLastPendingBatchRequestByAddrRequest address. */
                public address: string;

                /**
                 * Encodes the specified QueryLastPendingBatchRequestByAddrRequest message. Does not implicitly {@link injective.peggy.v1.QueryLastPendingBatchRequestByAddrRequest.verify|verify} messages.
                 * @param message QueryLastPendingBatchRequestByAddrRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.peggy.v1.IQueryLastPendingBatchRequestByAddrRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryLastPendingBatchRequestByAddrRequest message, length delimited. Does not implicitly {@link injective.peggy.v1.QueryLastPendingBatchRequestByAddrRequest.verify|verify} messages.
                 * @param message QueryLastPendingBatchRequestByAddrRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.peggy.v1.IQueryLastPendingBatchRequestByAddrRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryLastPendingBatchRequestByAddrRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryLastPendingBatchRequestByAddrRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.peggy.v1.QueryLastPendingBatchRequestByAddrRequest;

                /**
                 * Decodes a QueryLastPendingBatchRequestByAddrRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryLastPendingBatchRequestByAddrRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.peggy.v1.QueryLastPendingBatchRequestByAddrRequest;

                /**
                 * Verifies a QueryLastPendingBatchRequestByAddrRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryLastPendingBatchRequestByAddrRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryLastPendingBatchRequestByAddrRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.peggy.v1.QueryLastPendingBatchRequestByAddrRequest;

                /**
                 * Creates a plain object from a QueryLastPendingBatchRequestByAddrRequest message. Also converts values to other types if specified.
                 * @param message QueryLastPendingBatchRequestByAddrRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.peggy.v1.QueryLastPendingBatchRequestByAddrRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryLastPendingBatchRequestByAddrRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryLastPendingBatchRequestByAddrResponse. */
            interface IQueryLastPendingBatchRequestByAddrResponse {

                /** QueryLastPendingBatchRequestByAddrResponse batch */
                batch?: (injective.peggy.v1.IOutgoingTxBatch|null);
            }

            /** Represents a QueryLastPendingBatchRequestByAddrResponse. */
            class QueryLastPendingBatchRequestByAddrResponse implements IQueryLastPendingBatchRequestByAddrResponse {

                /**
                 * Constructs a new QueryLastPendingBatchRequestByAddrResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.peggy.v1.IQueryLastPendingBatchRequestByAddrResponse);

                /** QueryLastPendingBatchRequestByAddrResponse batch. */
                public batch?: (injective.peggy.v1.IOutgoingTxBatch|null);

                /**
                 * Encodes the specified QueryLastPendingBatchRequestByAddrResponse message. Does not implicitly {@link injective.peggy.v1.QueryLastPendingBatchRequestByAddrResponse.verify|verify} messages.
                 * @param message QueryLastPendingBatchRequestByAddrResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.peggy.v1.IQueryLastPendingBatchRequestByAddrResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryLastPendingBatchRequestByAddrResponse message, length delimited. Does not implicitly {@link injective.peggy.v1.QueryLastPendingBatchRequestByAddrResponse.verify|verify} messages.
                 * @param message QueryLastPendingBatchRequestByAddrResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.peggy.v1.IQueryLastPendingBatchRequestByAddrResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryLastPendingBatchRequestByAddrResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryLastPendingBatchRequestByAddrResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.peggy.v1.QueryLastPendingBatchRequestByAddrResponse;

                /**
                 * Decodes a QueryLastPendingBatchRequestByAddrResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryLastPendingBatchRequestByAddrResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.peggy.v1.QueryLastPendingBatchRequestByAddrResponse;

                /**
                 * Verifies a QueryLastPendingBatchRequestByAddrResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryLastPendingBatchRequestByAddrResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryLastPendingBatchRequestByAddrResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.peggy.v1.QueryLastPendingBatchRequestByAddrResponse;

                /**
                 * Creates a plain object from a QueryLastPendingBatchRequestByAddrResponse message. Also converts values to other types if specified.
                 * @param message QueryLastPendingBatchRequestByAddrResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.peggy.v1.QueryLastPendingBatchRequestByAddrResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryLastPendingBatchRequestByAddrResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryOutgoingTxBatchesRequest. */
            interface IQueryOutgoingTxBatchesRequest {
            }

            /** Represents a QueryOutgoingTxBatchesRequest. */
            class QueryOutgoingTxBatchesRequest implements IQueryOutgoingTxBatchesRequest {

                /**
                 * Constructs a new QueryOutgoingTxBatchesRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.peggy.v1.IQueryOutgoingTxBatchesRequest);

                /**
                 * Encodes the specified QueryOutgoingTxBatchesRequest message. Does not implicitly {@link injective.peggy.v1.QueryOutgoingTxBatchesRequest.verify|verify} messages.
                 * @param message QueryOutgoingTxBatchesRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.peggy.v1.IQueryOutgoingTxBatchesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryOutgoingTxBatchesRequest message, length delimited. Does not implicitly {@link injective.peggy.v1.QueryOutgoingTxBatchesRequest.verify|verify} messages.
                 * @param message QueryOutgoingTxBatchesRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.peggy.v1.IQueryOutgoingTxBatchesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryOutgoingTxBatchesRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryOutgoingTxBatchesRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.peggy.v1.QueryOutgoingTxBatchesRequest;

                /**
                 * Decodes a QueryOutgoingTxBatchesRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryOutgoingTxBatchesRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.peggy.v1.QueryOutgoingTxBatchesRequest;

                /**
                 * Verifies a QueryOutgoingTxBatchesRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryOutgoingTxBatchesRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryOutgoingTxBatchesRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.peggy.v1.QueryOutgoingTxBatchesRequest;

                /**
                 * Creates a plain object from a QueryOutgoingTxBatchesRequest message. Also converts values to other types if specified.
                 * @param message QueryOutgoingTxBatchesRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.peggy.v1.QueryOutgoingTxBatchesRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryOutgoingTxBatchesRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryOutgoingTxBatchesResponse. */
            interface IQueryOutgoingTxBatchesResponse {

                /** QueryOutgoingTxBatchesResponse batches */
                batches?: (injective.peggy.v1.IOutgoingTxBatch[]|null);
            }

            /** Represents a QueryOutgoingTxBatchesResponse. */
            class QueryOutgoingTxBatchesResponse implements IQueryOutgoingTxBatchesResponse {

                /**
                 * Constructs a new QueryOutgoingTxBatchesResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.peggy.v1.IQueryOutgoingTxBatchesResponse);

                /** QueryOutgoingTxBatchesResponse batches. */
                public batches: injective.peggy.v1.IOutgoingTxBatch[];

                /**
                 * Encodes the specified QueryOutgoingTxBatchesResponse message. Does not implicitly {@link injective.peggy.v1.QueryOutgoingTxBatchesResponse.verify|verify} messages.
                 * @param message QueryOutgoingTxBatchesResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.peggy.v1.IQueryOutgoingTxBatchesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryOutgoingTxBatchesResponse message, length delimited. Does not implicitly {@link injective.peggy.v1.QueryOutgoingTxBatchesResponse.verify|verify} messages.
                 * @param message QueryOutgoingTxBatchesResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.peggy.v1.IQueryOutgoingTxBatchesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryOutgoingTxBatchesResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryOutgoingTxBatchesResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.peggy.v1.QueryOutgoingTxBatchesResponse;

                /**
                 * Decodes a QueryOutgoingTxBatchesResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryOutgoingTxBatchesResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.peggy.v1.QueryOutgoingTxBatchesResponse;

                /**
                 * Verifies a QueryOutgoingTxBatchesResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryOutgoingTxBatchesResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryOutgoingTxBatchesResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.peggy.v1.QueryOutgoingTxBatchesResponse;

                /**
                 * Creates a plain object from a QueryOutgoingTxBatchesResponse message. Also converts values to other types if specified.
                 * @param message QueryOutgoingTxBatchesResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.peggy.v1.QueryOutgoingTxBatchesResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryOutgoingTxBatchesResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryBatchRequestByNonceRequest. */
            interface IQueryBatchRequestByNonceRequest {

                /** QueryBatchRequestByNonceRequest nonce */
                nonce?: (number|null);

                /** QueryBatchRequestByNonceRequest contract_address */
                contract_address?: (string|null);
            }

            /** Represents a QueryBatchRequestByNonceRequest. */
            class QueryBatchRequestByNonceRequest implements IQueryBatchRequestByNonceRequest {

                /**
                 * Constructs a new QueryBatchRequestByNonceRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.peggy.v1.IQueryBatchRequestByNonceRequest);

                /** QueryBatchRequestByNonceRequest nonce. */
                public nonce: number;

                /** QueryBatchRequestByNonceRequest contract_address. */
                public contract_address: string;

                /**
                 * Encodes the specified QueryBatchRequestByNonceRequest message. Does not implicitly {@link injective.peggy.v1.QueryBatchRequestByNonceRequest.verify|verify} messages.
                 * @param message QueryBatchRequestByNonceRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.peggy.v1.IQueryBatchRequestByNonceRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryBatchRequestByNonceRequest message, length delimited. Does not implicitly {@link injective.peggy.v1.QueryBatchRequestByNonceRequest.verify|verify} messages.
                 * @param message QueryBatchRequestByNonceRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.peggy.v1.IQueryBatchRequestByNonceRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryBatchRequestByNonceRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryBatchRequestByNonceRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.peggy.v1.QueryBatchRequestByNonceRequest;

                /**
                 * Decodes a QueryBatchRequestByNonceRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryBatchRequestByNonceRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.peggy.v1.QueryBatchRequestByNonceRequest;

                /**
                 * Verifies a QueryBatchRequestByNonceRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryBatchRequestByNonceRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryBatchRequestByNonceRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.peggy.v1.QueryBatchRequestByNonceRequest;

                /**
                 * Creates a plain object from a QueryBatchRequestByNonceRequest message. Also converts values to other types if specified.
                 * @param message QueryBatchRequestByNonceRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.peggy.v1.QueryBatchRequestByNonceRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryBatchRequestByNonceRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryBatchRequestByNonceResponse. */
            interface IQueryBatchRequestByNonceResponse {

                /** QueryBatchRequestByNonceResponse batch */
                batch?: (injective.peggy.v1.IOutgoingTxBatch|null);
            }

            /** Represents a QueryBatchRequestByNonceResponse. */
            class QueryBatchRequestByNonceResponse implements IQueryBatchRequestByNonceResponse {

                /**
                 * Constructs a new QueryBatchRequestByNonceResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.peggy.v1.IQueryBatchRequestByNonceResponse);

                /** QueryBatchRequestByNonceResponse batch. */
                public batch?: (injective.peggy.v1.IOutgoingTxBatch|null);

                /**
                 * Encodes the specified QueryBatchRequestByNonceResponse message. Does not implicitly {@link injective.peggy.v1.QueryBatchRequestByNonceResponse.verify|verify} messages.
                 * @param message QueryBatchRequestByNonceResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.peggy.v1.IQueryBatchRequestByNonceResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryBatchRequestByNonceResponse message, length delimited. Does not implicitly {@link injective.peggy.v1.QueryBatchRequestByNonceResponse.verify|verify} messages.
                 * @param message QueryBatchRequestByNonceResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.peggy.v1.IQueryBatchRequestByNonceResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryBatchRequestByNonceResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryBatchRequestByNonceResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.peggy.v1.QueryBatchRequestByNonceResponse;

                /**
                 * Decodes a QueryBatchRequestByNonceResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryBatchRequestByNonceResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.peggy.v1.QueryBatchRequestByNonceResponse;

                /**
                 * Verifies a QueryBatchRequestByNonceResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryBatchRequestByNonceResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryBatchRequestByNonceResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.peggy.v1.QueryBatchRequestByNonceResponse;

                /**
                 * Creates a plain object from a QueryBatchRequestByNonceResponse message. Also converts values to other types if specified.
                 * @param message QueryBatchRequestByNonceResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.peggy.v1.QueryBatchRequestByNonceResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryBatchRequestByNonceResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryBatchConfirmsRequest. */
            interface IQueryBatchConfirmsRequest {

                /** QueryBatchConfirmsRequest nonce */
                nonce?: (number|null);

                /** QueryBatchConfirmsRequest contract_address */
                contract_address?: (string|null);
            }

            /** Represents a QueryBatchConfirmsRequest. */
            class QueryBatchConfirmsRequest implements IQueryBatchConfirmsRequest {

                /**
                 * Constructs a new QueryBatchConfirmsRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.peggy.v1.IQueryBatchConfirmsRequest);

                /** QueryBatchConfirmsRequest nonce. */
                public nonce: number;

                /** QueryBatchConfirmsRequest contract_address. */
                public contract_address: string;

                /**
                 * Encodes the specified QueryBatchConfirmsRequest message. Does not implicitly {@link injective.peggy.v1.QueryBatchConfirmsRequest.verify|verify} messages.
                 * @param message QueryBatchConfirmsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.peggy.v1.IQueryBatchConfirmsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryBatchConfirmsRequest message, length delimited. Does not implicitly {@link injective.peggy.v1.QueryBatchConfirmsRequest.verify|verify} messages.
                 * @param message QueryBatchConfirmsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.peggy.v1.IQueryBatchConfirmsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryBatchConfirmsRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryBatchConfirmsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.peggy.v1.QueryBatchConfirmsRequest;

                /**
                 * Decodes a QueryBatchConfirmsRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryBatchConfirmsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.peggy.v1.QueryBatchConfirmsRequest;

                /**
                 * Verifies a QueryBatchConfirmsRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryBatchConfirmsRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryBatchConfirmsRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.peggy.v1.QueryBatchConfirmsRequest;

                /**
                 * Creates a plain object from a QueryBatchConfirmsRequest message. Also converts values to other types if specified.
                 * @param message QueryBatchConfirmsRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.peggy.v1.QueryBatchConfirmsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryBatchConfirmsRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryBatchConfirmsResponse. */
            interface IQueryBatchConfirmsResponse {

                /** QueryBatchConfirmsResponse confirms */
                confirms?: (injective.peggy.v1.IMsgConfirmBatch[]|null);
            }

            /** Represents a QueryBatchConfirmsResponse. */
            class QueryBatchConfirmsResponse implements IQueryBatchConfirmsResponse {

                /**
                 * Constructs a new QueryBatchConfirmsResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.peggy.v1.IQueryBatchConfirmsResponse);

                /** QueryBatchConfirmsResponse confirms. */
                public confirms: injective.peggy.v1.IMsgConfirmBatch[];

                /**
                 * Encodes the specified QueryBatchConfirmsResponse message. Does not implicitly {@link injective.peggy.v1.QueryBatchConfirmsResponse.verify|verify} messages.
                 * @param message QueryBatchConfirmsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.peggy.v1.IQueryBatchConfirmsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryBatchConfirmsResponse message, length delimited. Does not implicitly {@link injective.peggy.v1.QueryBatchConfirmsResponse.verify|verify} messages.
                 * @param message QueryBatchConfirmsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.peggy.v1.IQueryBatchConfirmsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryBatchConfirmsResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryBatchConfirmsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.peggy.v1.QueryBatchConfirmsResponse;

                /**
                 * Decodes a QueryBatchConfirmsResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryBatchConfirmsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.peggy.v1.QueryBatchConfirmsResponse;

                /**
                 * Verifies a QueryBatchConfirmsResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryBatchConfirmsResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryBatchConfirmsResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.peggy.v1.QueryBatchConfirmsResponse;

                /**
                 * Creates a plain object from a QueryBatchConfirmsResponse message. Also converts values to other types if specified.
                 * @param message QueryBatchConfirmsResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.peggy.v1.QueryBatchConfirmsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryBatchConfirmsResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryLastEventByAddrRequest. */
            interface IQueryLastEventByAddrRequest {

                /** QueryLastEventByAddrRequest address */
                address?: (string|null);
            }

            /** Represents a QueryLastEventByAddrRequest. */
            class QueryLastEventByAddrRequest implements IQueryLastEventByAddrRequest {

                /**
                 * Constructs a new QueryLastEventByAddrRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.peggy.v1.IQueryLastEventByAddrRequest);

                /** QueryLastEventByAddrRequest address. */
                public address: string;

                /**
                 * Encodes the specified QueryLastEventByAddrRequest message. Does not implicitly {@link injective.peggy.v1.QueryLastEventByAddrRequest.verify|verify} messages.
                 * @param message QueryLastEventByAddrRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.peggy.v1.IQueryLastEventByAddrRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryLastEventByAddrRequest message, length delimited. Does not implicitly {@link injective.peggy.v1.QueryLastEventByAddrRequest.verify|verify} messages.
                 * @param message QueryLastEventByAddrRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.peggy.v1.IQueryLastEventByAddrRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryLastEventByAddrRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryLastEventByAddrRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.peggy.v1.QueryLastEventByAddrRequest;

                /**
                 * Decodes a QueryLastEventByAddrRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryLastEventByAddrRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.peggy.v1.QueryLastEventByAddrRequest;

                /**
                 * Verifies a QueryLastEventByAddrRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryLastEventByAddrRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryLastEventByAddrRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.peggy.v1.QueryLastEventByAddrRequest;

                /**
                 * Creates a plain object from a QueryLastEventByAddrRequest message. Also converts values to other types if specified.
                 * @param message QueryLastEventByAddrRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.peggy.v1.QueryLastEventByAddrRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryLastEventByAddrRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryLastEventByAddrResponse. */
            interface IQueryLastEventByAddrResponse {

                /** QueryLastEventByAddrResponse last_claim_event */
                last_claim_event?: (injective.peggy.v1.ILastClaimEvent|null);
            }

            /** Represents a QueryLastEventByAddrResponse. */
            class QueryLastEventByAddrResponse implements IQueryLastEventByAddrResponse {

                /**
                 * Constructs a new QueryLastEventByAddrResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.peggy.v1.IQueryLastEventByAddrResponse);

                /** QueryLastEventByAddrResponse last_claim_event. */
                public last_claim_event?: (injective.peggy.v1.ILastClaimEvent|null);

                /**
                 * Encodes the specified QueryLastEventByAddrResponse message. Does not implicitly {@link injective.peggy.v1.QueryLastEventByAddrResponse.verify|verify} messages.
                 * @param message QueryLastEventByAddrResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.peggy.v1.IQueryLastEventByAddrResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryLastEventByAddrResponse message, length delimited. Does not implicitly {@link injective.peggy.v1.QueryLastEventByAddrResponse.verify|verify} messages.
                 * @param message QueryLastEventByAddrResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.peggy.v1.IQueryLastEventByAddrResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryLastEventByAddrResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryLastEventByAddrResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.peggy.v1.QueryLastEventByAddrResponse;

                /**
                 * Decodes a QueryLastEventByAddrResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryLastEventByAddrResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.peggy.v1.QueryLastEventByAddrResponse;

                /**
                 * Verifies a QueryLastEventByAddrResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryLastEventByAddrResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryLastEventByAddrResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.peggy.v1.QueryLastEventByAddrResponse;

                /**
                 * Creates a plain object from a QueryLastEventByAddrResponse message. Also converts values to other types if specified.
                 * @param message QueryLastEventByAddrResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.peggy.v1.QueryLastEventByAddrResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryLastEventByAddrResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryERC20ToDenomRequest. */
            interface IQueryERC20ToDenomRequest {

                /** QueryERC20ToDenomRequest erc20 */
                erc20?: (string|null);
            }

            /** Represents a QueryERC20ToDenomRequest. */
            class QueryERC20ToDenomRequest implements IQueryERC20ToDenomRequest {

                /**
                 * Constructs a new QueryERC20ToDenomRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.peggy.v1.IQueryERC20ToDenomRequest);

                /** QueryERC20ToDenomRequest erc20. */
                public erc20: string;

                /**
                 * Encodes the specified QueryERC20ToDenomRequest message. Does not implicitly {@link injective.peggy.v1.QueryERC20ToDenomRequest.verify|verify} messages.
                 * @param message QueryERC20ToDenomRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.peggy.v1.IQueryERC20ToDenomRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryERC20ToDenomRequest message, length delimited. Does not implicitly {@link injective.peggy.v1.QueryERC20ToDenomRequest.verify|verify} messages.
                 * @param message QueryERC20ToDenomRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.peggy.v1.IQueryERC20ToDenomRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryERC20ToDenomRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryERC20ToDenomRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.peggy.v1.QueryERC20ToDenomRequest;

                /**
                 * Decodes a QueryERC20ToDenomRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryERC20ToDenomRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.peggy.v1.QueryERC20ToDenomRequest;

                /**
                 * Verifies a QueryERC20ToDenomRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryERC20ToDenomRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryERC20ToDenomRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.peggy.v1.QueryERC20ToDenomRequest;

                /**
                 * Creates a plain object from a QueryERC20ToDenomRequest message. Also converts values to other types if specified.
                 * @param message QueryERC20ToDenomRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.peggy.v1.QueryERC20ToDenomRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryERC20ToDenomRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryERC20ToDenomResponse. */
            interface IQueryERC20ToDenomResponse {

                /** QueryERC20ToDenomResponse denom */
                denom?: (string|null);

                /** QueryERC20ToDenomResponse cosmos_originated */
                cosmos_originated?: (boolean|null);
            }

            /** Represents a QueryERC20ToDenomResponse. */
            class QueryERC20ToDenomResponse implements IQueryERC20ToDenomResponse {

                /**
                 * Constructs a new QueryERC20ToDenomResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.peggy.v1.IQueryERC20ToDenomResponse);

                /** QueryERC20ToDenomResponse denom. */
                public denom: string;

                /** QueryERC20ToDenomResponse cosmos_originated. */
                public cosmos_originated: boolean;

                /**
                 * Encodes the specified QueryERC20ToDenomResponse message. Does not implicitly {@link injective.peggy.v1.QueryERC20ToDenomResponse.verify|verify} messages.
                 * @param message QueryERC20ToDenomResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.peggy.v1.IQueryERC20ToDenomResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryERC20ToDenomResponse message, length delimited. Does not implicitly {@link injective.peggy.v1.QueryERC20ToDenomResponse.verify|verify} messages.
                 * @param message QueryERC20ToDenomResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.peggy.v1.IQueryERC20ToDenomResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryERC20ToDenomResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryERC20ToDenomResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.peggy.v1.QueryERC20ToDenomResponse;

                /**
                 * Decodes a QueryERC20ToDenomResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryERC20ToDenomResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.peggy.v1.QueryERC20ToDenomResponse;

                /**
                 * Verifies a QueryERC20ToDenomResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryERC20ToDenomResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryERC20ToDenomResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.peggy.v1.QueryERC20ToDenomResponse;

                /**
                 * Creates a plain object from a QueryERC20ToDenomResponse message. Also converts values to other types if specified.
                 * @param message QueryERC20ToDenomResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.peggy.v1.QueryERC20ToDenomResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryERC20ToDenomResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryDenomToERC20Request. */
            interface IQueryDenomToERC20Request {

                /** QueryDenomToERC20Request denom */
                denom?: (string|null);
            }

            /** Represents a QueryDenomToERC20Request. */
            class QueryDenomToERC20Request implements IQueryDenomToERC20Request {

                /**
                 * Constructs a new QueryDenomToERC20Request.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.peggy.v1.IQueryDenomToERC20Request);

                /** QueryDenomToERC20Request denom. */
                public denom: string;

                /**
                 * Encodes the specified QueryDenomToERC20Request message. Does not implicitly {@link injective.peggy.v1.QueryDenomToERC20Request.verify|verify} messages.
                 * @param message QueryDenomToERC20Request message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.peggy.v1.IQueryDenomToERC20Request, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryDenomToERC20Request message, length delimited. Does not implicitly {@link injective.peggy.v1.QueryDenomToERC20Request.verify|verify} messages.
                 * @param message QueryDenomToERC20Request message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.peggy.v1.IQueryDenomToERC20Request, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryDenomToERC20Request message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryDenomToERC20Request
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.peggy.v1.QueryDenomToERC20Request;

                /**
                 * Decodes a QueryDenomToERC20Request message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryDenomToERC20Request
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.peggy.v1.QueryDenomToERC20Request;

                /**
                 * Verifies a QueryDenomToERC20Request message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryDenomToERC20Request message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryDenomToERC20Request
                 */
                public static fromObject(object: { [k: string]: any }): injective.peggy.v1.QueryDenomToERC20Request;

                /**
                 * Creates a plain object from a QueryDenomToERC20Request message. Also converts values to other types if specified.
                 * @param message QueryDenomToERC20Request
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.peggy.v1.QueryDenomToERC20Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryDenomToERC20Request to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryDenomToERC20Response. */
            interface IQueryDenomToERC20Response {

                /** QueryDenomToERC20Response erc20 */
                erc20?: (string|null);

                /** QueryDenomToERC20Response cosmos_originated */
                cosmos_originated?: (boolean|null);
            }

            /** Represents a QueryDenomToERC20Response. */
            class QueryDenomToERC20Response implements IQueryDenomToERC20Response {

                /**
                 * Constructs a new QueryDenomToERC20Response.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.peggy.v1.IQueryDenomToERC20Response);

                /** QueryDenomToERC20Response erc20. */
                public erc20: string;

                /** QueryDenomToERC20Response cosmos_originated. */
                public cosmos_originated: boolean;

                /**
                 * Encodes the specified QueryDenomToERC20Response message. Does not implicitly {@link injective.peggy.v1.QueryDenomToERC20Response.verify|verify} messages.
                 * @param message QueryDenomToERC20Response message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.peggy.v1.IQueryDenomToERC20Response, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryDenomToERC20Response message, length delimited. Does not implicitly {@link injective.peggy.v1.QueryDenomToERC20Response.verify|verify} messages.
                 * @param message QueryDenomToERC20Response message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.peggy.v1.IQueryDenomToERC20Response, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryDenomToERC20Response message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryDenomToERC20Response
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.peggy.v1.QueryDenomToERC20Response;

                /**
                 * Decodes a QueryDenomToERC20Response message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryDenomToERC20Response
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.peggy.v1.QueryDenomToERC20Response;

                /**
                 * Verifies a QueryDenomToERC20Response message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryDenomToERC20Response message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryDenomToERC20Response
                 */
                public static fromObject(object: { [k: string]: any }): injective.peggy.v1.QueryDenomToERC20Response;

                /**
                 * Creates a plain object from a QueryDenomToERC20Response message. Also converts values to other types if specified.
                 * @param message QueryDenomToERC20Response
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.peggy.v1.QueryDenomToERC20Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryDenomToERC20Response to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryDelegateKeysByValidatorAddress. */
            interface IQueryDelegateKeysByValidatorAddress {

                /** QueryDelegateKeysByValidatorAddress validator_address */
                validator_address?: (string|null);
            }

            /** Represents a QueryDelegateKeysByValidatorAddress. */
            class QueryDelegateKeysByValidatorAddress implements IQueryDelegateKeysByValidatorAddress {

                /**
                 * Constructs a new QueryDelegateKeysByValidatorAddress.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.peggy.v1.IQueryDelegateKeysByValidatorAddress);

                /** QueryDelegateKeysByValidatorAddress validator_address. */
                public validator_address: string;

                /**
                 * Encodes the specified QueryDelegateKeysByValidatorAddress message. Does not implicitly {@link injective.peggy.v1.QueryDelegateKeysByValidatorAddress.verify|verify} messages.
                 * @param message QueryDelegateKeysByValidatorAddress message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.peggy.v1.IQueryDelegateKeysByValidatorAddress, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryDelegateKeysByValidatorAddress message, length delimited. Does not implicitly {@link injective.peggy.v1.QueryDelegateKeysByValidatorAddress.verify|verify} messages.
                 * @param message QueryDelegateKeysByValidatorAddress message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.peggy.v1.IQueryDelegateKeysByValidatorAddress, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryDelegateKeysByValidatorAddress message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryDelegateKeysByValidatorAddress
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.peggy.v1.QueryDelegateKeysByValidatorAddress;

                /**
                 * Decodes a QueryDelegateKeysByValidatorAddress message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryDelegateKeysByValidatorAddress
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.peggy.v1.QueryDelegateKeysByValidatorAddress;

                /**
                 * Verifies a QueryDelegateKeysByValidatorAddress message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryDelegateKeysByValidatorAddress message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryDelegateKeysByValidatorAddress
                 */
                public static fromObject(object: { [k: string]: any }): injective.peggy.v1.QueryDelegateKeysByValidatorAddress;

                /**
                 * Creates a plain object from a QueryDelegateKeysByValidatorAddress message. Also converts values to other types if specified.
                 * @param message QueryDelegateKeysByValidatorAddress
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.peggy.v1.QueryDelegateKeysByValidatorAddress, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryDelegateKeysByValidatorAddress to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryDelegateKeysByValidatorAddressResponse. */
            interface IQueryDelegateKeysByValidatorAddressResponse {

                /** QueryDelegateKeysByValidatorAddressResponse eth_address */
                eth_address?: (string|null);

                /** QueryDelegateKeysByValidatorAddressResponse orchestrator_address */
                orchestrator_address?: (string|null);
            }

            /** Represents a QueryDelegateKeysByValidatorAddressResponse. */
            class QueryDelegateKeysByValidatorAddressResponse implements IQueryDelegateKeysByValidatorAddressResponse {

                /**
                 * Constructs a new QueryDelegateKeysByValidatorAddressResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.peggy.v1.IQueryDelegateKeysByValidatorAddressResponse);

                /** QueryDelegateKeysByValidatorAddressResponse eth_address. */
                public eth_address: string;

                /** QueryDelegateKeysByValidatorAddressResponse orchestrator_address. */
                public orchestrator_address: string;

                /**
                 * Encodes the specified QueryDelegateKeysByValidatorAddressResponse message. Does not implicitly {@link injective.peggy.v1.QueryDelegateKeysByValidatorAddressResponse.verify|verify} messages.
                 * @param message QueryDelegateKeysByValidatorAddressResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.peggy.v1.IQueryDelegateKeysByValidatorAddressResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryDelegateKeysByValidatorAddressResponse message, length delimited. Does not implicitly {@link injective.peggy.v1.QueryDelegateKeysByValidatorAddressResponse.verify|verify} messages.
                 * @param message QueryDelegateKeysByValidatorAddressResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.peggy.v1.IQueryDelegateKeysByValidatorAddressResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryDelegateKeysByValidatorAddressResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryDelegateKeysByValidatorAddressResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.peggy.v1.QueryDelegateKeysByValidatorAddressResponse;

                /**
                 * Decodes a QueryDelegateKeysByValidatorAddressResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryDelegateKeysByValidatorAddressResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.peggy.v1.QueryDelegateKeysByValidatorAddressResponse;

                /**
                 * Verifies a QueryDelegateKeysByValidatorAddressResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryDelegateKeysByValidatorAddressResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryDelegateKeysByValidatorAddressResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.peggy.v1.QueryDelegateKeysByValidatorAddressResponse;

                /**
                 * Creates a plain object from a QueryDelegateKeysByValidatorAddressResponse message. Also converts values to other types if specified.
                 * @param message QueryDelegateKeysByValidatorAddressResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.peggy.v1.QueryDelegateKeysByValidatorAddressResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryDelegateKeysByValidatorAddressResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryDelegateKeysByEthAddress. */
            interface IQueryDelegateKeysByEthAddress {

                /** QueryDelegateKeysByEthAddress eth_address */
                eth_address?: (string|null);
            }

            /** Represents a QueryDelegateKeysByEthAddress. */
            class QueryDelegateKeysByEthAddress implements IQueryDelegateKeysByEthAddress {

                /**
                 * Constructs a new QueryDelegateKeysByEthAddress.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.peggy.v1.IQueryDelegateKeysByEthAddress);

                /** QueryDelegateKeysByEthAddress eth_address. */
                public eth_address: string;

                /**
                 * Encodes the specified QueryDelegateKeysByEthAddress message. Does not implicitly {@link injective.peggy.v1.QueryDelegateKeysByEthAddress.verify|verify} messages.
                 * @param message QueryDelegateKeysByEthAddress message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.peggy.v1.IQueryDelegateKeysByEthAddress, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryDelegateKeysByEthAddress message, length delimited. Does not implicitly {@link injective.peggy.v1.QueryDelegateKeysByEthAddress.verify|verify} messages.
                 * @param message QueryDelegateKeysByEthAddress message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.peggy.v1.IQueryDelegateKeysByEthAddress, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryDelegateKeysByEthAddress message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryDelegateKeysByEthAddress
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.peggy.v1.QueryDelegateKeysByEthAddress;

                /**
                 * Decodes a QueryDelegateKeysByEthAddress message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryDelegateKeysByEthAddress
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.peggy.v1.QueryDelegateKeysByEthAddress;

                /**
                 * Verifies a QueryDelegateKeysByEthAddress message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryDelegateKeysByEthAddress message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryDelegateKeysByEthAddress
                 */
                public static fromObject(object: { [k: string]: any }): injective.peggy.v1.QueryDelegateKeysByEthAddress;

                /**
                 * Creates a plain object from a QueryDelegateKeysByEthAddress message. Also converts values to other types if specified.
                 * @param message QueryDelegateKeysByEthAddress
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.peggy.v1.QueryDelegateKeysByEthAddress, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryDelegateKeysByEthAddress to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryDelegateKeysByEthAddressResponse. */
            interface IQueryDelegateKeysByEthAddressResponse {

                /** QueryDelegateKeysByEthAddressResponse validator_address */
                validator_address?: (string|null);

                /** QueryDelegateKeysByEthAddressResponse orchestrator_address */
                orchestrator_address?: (string|null);
            }

            /** Represents a QueryDelegateKeysByEthAddressResponse. */
            class QueryDelegateKeysByEthAddressResponse implements IQueryDelegateKeysByEthAddressResponse {

                /**
                 * Constructs a new QueryDelegateKeysByEthAddressResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.peggy.v1.IQueryDelegateKeysByEthAddressResponse);

                /** QueryDelegateKeysByEthAddressResponse validator_address. */
                public validator_address: string;

                /** QueryDelegateKeysByEthAddressResponse orchestrator_address. */
                public orchestrator_address: string;

                /**
                 * Encodes the specified QueryDelegateKeysByEthAddressResponse message. Does not implicitly {@link injective.peggy.v1.QueryDelegateKeysByEthAddressResponse.verify|verify} messages.
                 * @param message QueryDelegateKeysByEthAddressResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.peggy.v1.IQueryDelegateKeysByEthAddressResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryDelegateKeysByEthAddressResponse message, length delimited. Does not implicitly {@link injective.peggy.v1.QueryDelegateKeysByEthAddressResponse.verify|verify} messages.
                 * @param message QueryDelegateKeysByEthAddressResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.peggy.v1.IQueryDelegateKeysByEthAddressResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryDelegateKeysByEthAddressResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryDelegateKeysByEthAddressResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.peggy.v1.QueryDelegateKeysByEthAddressResponse;

                /**
                 * Decodes a QueryDelegateKeysByEthAddressResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryDelegateKeysByEthAddressResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.peggy.v1.QueryDelegateKeysByEthAddressResponse;

                /**
                 * Verifies a QueryDelegateKeysByEthAddressResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryDelegateKeysByEthAddressResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryDelegateKeysByEthAddressResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.peggy.v1.QueryDelegateKeysByEthAddressResponse;

                /**
                 * Creates a plain object from a QueryDelegateKeysByEthAddressResponse message. Also converts values to other types if specified.
                 * @param message QueryDelegateKeysByEthAddressResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.peggy.v1.QueryDelegateKeysByEthAddressResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryDelegateKeysByEthAddressResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryDelegateKeysByOrchestratorAddress. */
            interface IQueryDelegateKeysByOrchestratorAddress {

                /** QueryDelegateKeysByOrchestratorAddress orchestrator_address */
                orchestrator_address?: (string|null);
            }

            /** Represents a QueryDelegateKeysByOrchestratorAddress. */
            class QueryDelegateKeysByOrchestratorAddress implements IQueryDelegateKeysByOrchestratorAddress {

                /**
                 * Constructs a new QueryDelegateKeysByOrchestratorAddress.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.peggy.v1.IQueryDelegateKeysByOrchestratorAddress);

                /** QueryDelegateKeysByOrchestratorAddress orchestrator_address. */
                public orchestrator_address: string;

                /**
                 * Encodes the specified QueryDelegateKeysByOrchestratorAddress message. Does not implicitly {@link injective.peggy.v1.QueryDelegateKeysByOrchestratorAddress.verify|verify} messages.
                 * @param message QueryDelegateKeysByOrchestratorAddress message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.peggy.v1.IQueryDelegateKeysByOrchestratorAddress, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryDelegateKeysByOrchestratorAddress message, length delimited. Does not implicitly {@link injective.peggy.v1.QueryDelegateKeysByOrchestratorAddress.verify|verify} messages.
                 * @param message QueryDelegateKeysByOrchestratorAddress message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.peggy.v1.IQueryDelegateKeysByOrchestratorAddress, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryDelegateKeysByOrchestratorAddress message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryDelegateKeysByOrchestratorAddress
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.peggy.v1.QueryDelegateKeysByOrchestratorAddress;

                /**
                 * Decodes a QueryDelegateKeysByOrchestratorAddress message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryDelegateKeysByOrchestratorAddress
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.peggy.v1.QueryDelegateKeysByOrchestratorAddress;

                /**
                 * Verifies a QueryDelegateKeysByOrchestratorAddress message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryDelegateKeysByOrchestratorAddress message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryDelegateKeysByOrchestratorAddress
                 */
                public static fromObject(object: { [k: string]: any }): injective.peggy.v1.QueryDelegateKeysByOrchestratorAddress;

                /**
                 * Creates a plain object from a QueryDelegateKeysByOrchestratorAddress message. Also converts values to other types if specified.
                 * @param message QueryDelegateKeysByOrchestratorAddress
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.peggy.v1.QueryDelegateKeysByOrchestratorAddress, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryDelegateKeysByOrchestratorAddress to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryDelegateKeysByOrchestratorAddressResponse. */
            interface IQueryDelegateKeysByOrchestratorAddressResponse {

                /** QueryDelegateKeysByOrchestratorAddressResponse validator_address */
                validator_address?: (string|null);

                /** QueryDelegateKeysByOrchestratorAddressResponse eth_address */
                eth_address?: (string|null);
            }

            /** Represents a QueryDelegateKeysByOrchestratorAddressResponse. */
            class QueryDelegateKeysByOrchestratorAddressResponse implements IQueryDelegateKeysByOrchestratorAddressResponse {

                /**
                 * Constructs a new QueryDelegateKeysByOrchestratorAddressResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.peggy.v1.IQueryDelegateKeysByOrchestratorAddressResponse);

                /** QueryDelegateKeysByOrchestratorAddressResponse validator_address. */
                public validator_address: string;

                /** QueryDelegateKeysByOrchestratorAddressResponse eth_address. */
                public eth_address: string;

                /**
                 * Encodes the specified QueryDelegateKeysByOrchestratorAddressResponse message. Does not implicitly {@link injective.peggy.v1.QueryDelegateKeysByOrchestratorAddressResponse.verify|verify} messages.
                 * @param message QueryDelegateKeysByOrchestratorAddressResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.peggy.v1.IQueryDelegateKeysByOrchestratorAddressResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryDelegateKeysByOrchestratorAddressResponse message, length delimited. Does not implicitly {@link injective.peggy.v1.QueryDelegateKeysByOrchestratorAddressResponse.verify|verify} messages.
                 * @param message QueryDelegateKeysByOrchestratorAddressResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.peggy.v1.IQueryDelegateKeysByOrchestratorAddressResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryDelegateKeysByOrchestratorAddressResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryDelegateKeysByOrchestratorAddressResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.peggy.v1.QueryDelegateKeysByOrchestratorAddressResponse;

                /**
                 * Decodes a QueryDelegateKeysByOrchestratorAddressResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryDelegateKeysByOrchestratorAddressResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.peggy.v1.QueryDelegateKeysByOrchestratorAddressResponse;

                /**
                 * Verifies a QueryDelegateKeysByOrchestratorAddressResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryDelegateKeysByOrchestratorAddressResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryDelegateKeysByOrchestratorAddressResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.peggy.v1.QueryDelegateKeysByOrchestratorAddressResponse;

                /**
                 * Creates a plain object from a QueryDelegateKeysByOrchestratorAddressResponse message. Also converts values to other types if specified.
                 * @param message QueryDelegateKeysByOrchestratorAddressResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.peggy.v1.QueryDelegateKeysByOrchestratorAddressResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryDelegateKeysByOrchestratorAddressResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryPendingSendToEth. */
            interface IQueryPendingSendToEth {

                /** QueryPendingSendToEth sender_address */
                sender_address?: (string|null);
            }

            /** Represents a QueryPendingSendToEth. */
            class QueryPendingSendToEth implements IQueryPendingSendToEth {

                /**
                 * Constructs a new QueryPendingSendToEth.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.peggy.v1.IQueryPendingSendToEth);

                /** QueryPendingSendToEth sender_address. */
                public sender_address: string;

                /**
                 * Encodes the specified QueryPendingSendToEth message. Does not implicitly {@link injective.peggy.v1.QueryPendingSendToEth.verify|verify} messages.
                 * @param message QueryPendingSendToEth message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.peggy.v1.IQueryPendingSendToEth, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryPendingSendToEth message, length delimited. Does not implicitly {@link injective.peggy.v1.QueryPendingSendToEth.verify|verify} messages.
                 * @param message QueryPendingSendToEth message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.peggy.v1.IQueryPendingSendToEth, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryPendingSendToEth message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryPendingSendToEth
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.peggy.v1.QueryPendingSendToEth;

                /**
                 * Decodes a QueryPendingSendToEth message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryPendingSendToEth
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.peggy.v1.QueryPendingSendToEth;

                /**
                 * Verifies a QueryPendingSendToEth message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryPendingSendToEth message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryPendingSendToEth
                 */
                public static fromObject(object: { [k: string]: any }): injective.peggy.v1.QueryPendingSendToEth;

                /**
                 * Creates a plain object from a QueryPendingSendToEth message. Also converts values to other types if specified.
                 * @param message QueryPendingSendToEth
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.peggy.v1.QueryPendingSendToEth, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryPendingSendToEth to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryPendingSendToEthResponse. */
            interface IQueryPendingSendToEthResponse {

                /** QueryPendingSendToEthResponse transfers_in_batches */
                transfers_in_batches?: (injective.peggy.v1.IOutgoingTransferTx[]|null);

                /** QueryPendingSendToEthResponse unbatched_transfers */
                unbatched_transfers?: (injective.peggy.v1.IOutgoingTransferTx[]|null);
            }

            /** Represents a QueryPendingSendToEthResponse. */
            class QueryPendingSendToEthResponse implements IQueryPendingSendToEthResponse {

                /**
                 * Constructs a new QueryPendingSendToEthResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.peggy.v1.IQueryPendingSendToEthResponse);

                /** QueryPendingSendToEthResponse transfers_in_batches. */
                public transfers_in_batches: injective.peggy.v1.IOutgoingTransferTx[];

                /** QueryPendingSendToEthResponse unbatched_transfers. */
                public unbatched_transfers: injective.peggy.v1.IOutgoingTransferTx[];

                /**
                 * Encodes the specified QueryPendingSendToEthResponse message. Does not implicitly {@link injective.peggy.v1.QueryPendingSendToEthResponse.verify|verify} messages.
                 * @param message QueryPendingSendToEthResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.peggy.v1.IQueryPendingSendToEthResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryPendingSendToEthResponse message, length delimited. Does not implicitly {@link injective.peggy.v1.QueryPendingSendToEthResponse.verify|verify} messages.
                 * @param message QueryPendingSendToEthResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.peggy.v1.IQueryPendingSendToEthResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryPendingSendToEthResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryPendingSendToEthResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.peggy.v1.QueryPendingSendToEthResponse;

                /**
                 * Decodes a QueryPendingSendToEthResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryPendingSendToEthResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.peggy.v1.QueryPendingSendToEthResponse;

                /**
                 * Verifies a QueryPendingSendToEthResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryPendingSendToEthResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryPendingSendToEthResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.peggy.v1.QueryPendingSendToEthResponse;

                /**
                 * Creates a plain object from a QueryPendingSendToEthResponse message. Also converts values to other types if specified.
                 * @param message QueryPendingSendToEthResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.peggy.v1.QueryPendingSendToEthResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryPendingSendToEthResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryModuleStateRequest. */
            interface IQueryModuleStateRequest {
            }

            /** Represents a QueryModuleStateRequest. */
            class QueryModuleStateRequest implements IQueryModuleStateRequest {

                /**
                 * Constructs a new QueryModuleStateRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.peggy.v1.IQueryModuleStateRequest);

                /**
                 * Encodes the specified QueryModuleStateRequest message. Does not implicitly {@link injective.peggy.v1.QueryModuleStateRequest.verify|verify} messages.
                 * @param message QueryModuleStateRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.peggy.v1.IQueryModuleStateRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryModuleStateRequest message, length delimited. Does not implicitly {@link injective.peggy.v1.QueryModuleStateRequest.verify|verify} messages.
                 * @param message QueryModuleStateRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.peggy.v1.IQueryModuleStateRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryModuleStateRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryModuleStateRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.peggy.v1.QueryModuleStateRequest;

                /**
                 * Decodes a QueryModuleStateRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryModuleStateRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.peggy.v1.QueryModuleStateRequest;

                /**
                 * Verifies a QueryModuleStateRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryModuleStateRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryModuleStateRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.peggy.v1.QueryModuleStateRequest;

                /**
                 * Creates a plain object from a QueryModuleStateRequest message. Also converts values to other types if specified.
                 * @param message QueryModuleStateRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.peggy.v1.QueryModuleStateRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryModuleStateRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryModuleStateResponse. */
            interface IQueryModuleStateResponse {

                /** QueryModuleStateResponse state */
                state?: (injective.peggy.v1.IGenesisState|null);
            }

            /** Represents a QueryModuleStateResponse. */
            class QueryModuleStateResponse implements IQueryModuleStateResponse {

                /**
                 * Constructs a new QueryModuleStateResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.peggy.v1.IQueryModuleStateResponse);

                /** QueryModuleStateResponse state. */
                public state?: (injective.peggy.v1.IGenesisState|null);

                /**
                 * Encodes the specified QueryModuleStateResponse message. Does not implicitly {@link injective.peggy.v1.QueryModuleStateResponse.verify|verify} messages.
                 * @param message QueryModuleStateResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.peggy.v1.IQueryModuleStateResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryModuleStateResponse message, length delimited. Does not implicitly {@link injective.peggy.v1.QueryModuleStateResponse.verify|verify} messages.
                 * @param message QueryModuleStateResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.peggy.v1.IQueryModuleStateResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryModuleStateResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryModuleStateResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.peggy.v1.QueryModuleStateResponse;

                /**
                 * Decodes a QueryModuleStateResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryModuleStateResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.peggy.v1.QueryModuleStateResponse;

                /**
                 * Verifies a QueryModuleStateResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryModuleStateResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryModuleStateResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.peggy.v1.QueryModuleStateResponse;

                /**
                 * Creates a plain object from a QueryModuleStateResponse message. Also converts values to other types if specified.
                 * @param message QueryModuleStateResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.peggy.v1.QueryModuleStateResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryModuleStateResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MissingNoncesRequest. */
            interface IMissingNoncesRequest {
            }

            /** Represents a MissingNoncesRequest. */
            class MissingNoncesRequest implements IMissingNoncesRequest {

                /**
                 * Constructs a new MissingNoncesRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.peggy.v1.IMissingNoncesRequest);

                /**
                 * Encodes the specified MissingNoncesRequest message. Does not implicitly {@link injective.peggy.v1.MissingNoncesRequest.verify|verify} messages.
                 * @param message MissingNoncesRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.peggy.v1.IMissingNoncesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MissingNoncesRequest message, length delimited. Does not implicitly {@link injective.peggy.v1.MissingNoncesRequest.verify|verify} messages.
                 * @param message MissingNoncesRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.peggy.v1.IMissingNoncesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MissingNoncesRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MissingNoncesRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.peggy.v1.MissingNoncesRequest;

                /**
                 * Decodes a MissingNoncesRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MissingNoncesRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.peggy.v1.MissingNoncesRequest;

                /**
                 * Verifies a MissingNoncesRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MissingNoncesRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MissingNoncesRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.peggy.v1.MissingNoncesRequest;

                /**
                 * Creates a plain object from a MissingNoncesRequest message. Also converts values to other types if specified.
                 * @param message MissingNoncesRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.peggy.v1.MissingNoncesRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MissingNoncesRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MissingNoncesResponse. */
            interface IMissingNoncesResponse {

                /** MissingNoncesResponse operator_addresses */
                operator_addresses?: (string[]|null);
            }

            /** Represents a MissingNoncesResponse. */
            class MissingNoncesResponse implements IMissingNoncesResponse {

                /**
                 * Constructs a new MissingNoncesResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.peggy.v1.IMissingNoncesResponse);

                /** MissingNoncesResponse operator_addresses. */
                public operator_addresses: string[];

                /**
                 * Encodes the specified MissingNoncesResponse message. Does not implicitly {@link injective.peggy.v1.MissingNoncesResponse.verify|verify} messages.
                 * @param message MissingNoncesResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.peggy.v1.IMissingNoncesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MissingNoncesResponse message, length delimited. Does not implicitly {@link injective.peggy.v1.MissingNoncesResponse.verify|verify} messages.
                 * @param message MissingNoncesResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.peggy.v1.IMissingNoncesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MissingNoncesResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MissingNoncesResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.peggy.v1.MissingNoncesResponse;

                /**
                 * Decodes a MissingNoncesResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MissingNoncesResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.peggy.v1.MissingNoncesResponse;

                /**
                 * Verifies a MissingNoncesResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MissingNoncesResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MissingNoncesResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.peggy.v1.MissingNoncesResponse;

                /**
                 * Creates a plain object from a MissingNoncesResponse message. Also converts values to other types if specified.
                 * @param message MissingNoncesResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.peggy.v1.MissingNoncesResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MissingNoncesResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a GenesisState. */
            interface IGenesisState {

                /** GenesisState params */
                params?: (injective.peggy.v1.IParams|null);

                /** GenesisState last_observed_nonce */
                last_observed_nonce?: (number|null);

                /** GenesisState valsets */
                valsets?: (injective.peggy.v1.IValset[]|null);

                /** GenesisState valset_confirms */
                valset_confirms?: (injective.peggy.v1.IMsgValsetConfirm[]|null);

                /** GenesisState batches */
                batches?: (injective.peggy.v1.IOutgoingTxBatch[]|null);

                /** GenesisState batch_confirms */
                batch_confirms?: (injective.peggy.v1.IMsgConfirmBatch[]|null);

                /** GenesisState attestations */
                attestations?: (injective.peggy.v1.IAttestation[]|null);

                /** GenesisState orchestrator_addresses */
                orchestrator_addresses?: (injective.peggy.v1.IMsgSetOrchestratorAddresses[]|null);

                /** GenesisState erc20_to_denoms */
                erc20_to_denoms?: (injective.peggy.v1.IERC20ToDenom[]|null);

                /** GenesisState unbatched_transfers */
                unbatched_transfers?: (injective.peggy.v1.IOutgoingTransferTx[]|null);

                /** GenesisState last_observed_ethereum_height */
                last_observed_ethereum_height?: (number|null);

                /** GenesisState last_outgoing_batch_id */
                last_outgoing_batch_id?: (number|null);

                /** GenesisState last_outgoing_pool_id */
                last_outgoing_pool_id?: (number|null);

                /** GenesisState last_observed_valset */
                last_observed_valset?: (injective.peggy.v1.IValset|null);

                /** GenesisState ethereum_blacklist */
                ethereum_blacklist?: (string[]|null);
            }

            /** Represents a GenesisState. */
            class GenesisState implements IGenesisState {

                /**
                 * Constructs a new GenesisState.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.peggy.v1.IGenesisState);

                /** GenesisState params. */
                public params?: (injective.peggy.v1.IParams|null);

                /** GenesisState last_observed_nonce. */
                public last_observed_nonce: number;

                /** GenesisState valsets. */
                public valsets: injective.peggy.v1.IValset[];

                /** GenesisState valset_confirms. */
                public valset_confirms: injective.peggy.v1.IMsgValsetConfirm[];

                /** GenesisState batches. */
                public batches: injective.peggy.v1.IOutgoingTxBatch[];

                /** GenesisState batch_confirms. */
                public batch_confirms: injective.peggy.v1.IMsgConfirmBatch[];

                /** GenesisState attestations. */
                public attestations: injective.peggy.v1.IAttestation[];

                /** GenesisState orchestrator_addresses. */
                public orchestrator_addresses: injective.peggy.v1.IMsgSetOrchestratorAddresses[];

                /** GenesisState erc20_to_denoms. */
                public erc20_to_denoms: injective.peggy.v1.IERC20ToDenom[];

                /** GenesisState unbatched_transfers. */
                public unbatched_transfers: injective.peggy.v1.IOutgoingTransferTx[];

                /** GenesisState last_observed_ethereum_height. */
                public last_observed_ethereum_height: number;

                /** GenesisState last_outgoing_batch_id. */
                public last_outgoing_batch_id: number;

                /** GenesisState last_outgoing_pool_id. */
                public last_outgoing_pool_id: number;

                /** GenesisState last_observed_valset. */
                public last_observed_valset?: (injective.peggy.v1.IValset|null);

                /** GenesisState ethereum_blacklist. */
                public ethereum_blacklist: string[];

                /**
                 * Encodes the specified GenesisState message. Does not implicitly {@link injective.peggy.v1.GenesisState.verify|verify} messages.
                 * @param message GenesisState message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.peggy.v1.IGenesisState, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified GenesisState message, length delimited. Does not implicitly {@link injective.peggy.v1.GenesisState.verify|verify} messages.
                 * @param message GenesisState message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.peggy.v1.IGenesisState, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a GenesisState message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns GenesisState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.peggy.v1.GenesisState;

                /**
                 * Decodes a GenesisState message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns GenesisState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.peggy.v1.GenesisState;

                /**
                 * Verifies a GenesisState message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a GenesisState message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns GenesisState
                 */
                public static fromObject(object: { [k: string]: any }): injective.peggy.v1.GenesisState;

                /**
                 * Creates a plain object from a GenesisState message. Also converts values to other types if specified.
                 * @param message GenesisState
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.peggy.v1.GenesisState, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this GenesisState to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Represents a Msg */
            class Msg extends $protobuf.rpc.Service {

                /**
                 * Constructs a new Msg service.
                 * @param rpcImpl RPC implementation
                 * @param [requestDelimited=false] Whether requests are length-delimited
                 * @param [responseDelimited=false] Whether responses are length-delimited
                 */
                constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

                /**
                 * Calls ValsetConfirm.
                 * @param request MsgValsetConfirm message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgValsetConfirmResponse
                 */
                public valsetConfirm(request: injective.peggy.v1.IMsgValsetConfirm, callback: injective.peggy.v1.Msg.ValsetConfirmCallback): void;

                /**
                 * Calls ValsetConfirm.
                 * @param request MsgValsetConfirm message or plain object
                 * @returns Promise
                 */
                public valsetConfirm(request: injective.peggy.v1.IMsgValsetConfirm): Promise<injective.peggy.v1.MsgValsetConfirmResponse>;

                /**
                 * Calls SendToEth.
                 * @param request MsgSendToEth message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgSendToEthResponse
                 */
                public sendToEth(request: injective.peggy.v1.IMsgSendToEth, callback: injective.peggy.v1.Msg.SendToEthCallback): void;

                /**
                 * Calls SendToEth.
                 * @param request MsgSendToEth message or plain object
                 * @returns Promise
                 */
                public sendToEth(request: injective.peggy.v1.IMsgSendToEth): Promise<injective.peggy.v1.MsgSendToEthResponse>;

                /**
                 * Calls RequestBatch.
                 * @param request MsgRequestBatch message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgRequestBatchResponse
                 */
                public requestBatch(request: injective.peggy.v1.IMsgRequestBatch, callback: injective.peggy.v1.Msg.RequestBatchCallback): void;

                /**
                 * Calls RequestBatch.
                 * @param request MsgRequestBatch message or plain object
                 * @returns Promise
                 */
                public requestBatch(request: injective.peggy.v1.IMsgRequestBatch): Promise<injective.peggy.v1.MsgRequestBatchResponse>;

                /**
                 * Calls ConfirmBatch.
                 * @param request MsgConfirmBatch message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgConfirmBatchResponse
                 */
                public confirmBatch(request: injective.peggy.v1.IMsgConfirmBatch, callback: injective.peggy.v1.Msg.ConfirmBatchCallback): void;

                /**
                 * Calls ConfirmBatch.
                 * @param request MsgConfirmBatch message or plain object
                 * @returns Promise
                 */
                public confirmBatch(request: injective.peggy.v1.IMsgConfirmBatch): Promise<injective.peggy.v1.MsgConfirmBatchResponse>;

                /**
                 * Calls DepositClaim.
                 * @param request MsgDepositClaim message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgDepositClaimResponse
                 */
                public depositClaim(request: injective.peggy.v1.IMsgDepositClaim, callback: injective.peggy.v1.Msg.DepositClaimCallback): void;

                /**
                 * Calls DepositClaim.
                 * @param request MsgDepositClaim message or plain object
                 * @returns Promise
                 */
                public depositClaim(request: injective.peggy.v1.IMsgDepositClaim): Promise<injective.peggy.v1.MsgDepositClaimResponse>;

                /**
                 * Calls WithdrawClaim.
                 * @param request MsgWithdrawClaim message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgWithdrawClaimResponse
                 */
                public withdrawClaim(request: injective.peggy.v1.IMsgWithdrawClaim, callback: injective.peggy.v1.Msg.WithdrawClaimCallback): void;

                /**
                 * Calls WithdrawClaim.
                 * @param request MsgWithdrawClaim message or plain object
                 * @returns Promise
                 */
                public withdrawClaim(request: injective.peggy.v1.IMsgWithdrawClaim): Promise<injective.peggy.v1.MsgWithdrawClaimResponse>;

                /**
                 * Calls ValsetUpdateClaim.
                 * @param request MsgValsetUpdatedClaim message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgValsetUpdatedClaimResponse
                 */
                public valsetUpdateClaim(request: injective.peggy.v1.IMsgValsetUpdatedClaim, callback: injective.peggy.v1.Msg.ValsetUpdateClaimCallback): void;

                /**
                 * Calls ValsetUpdateClaim.
                 * @param request MsgValsetUpdatedClaim message or plain object
                 * @returns Promise
                 */
                public valsetUpdateClaim(request: injective.peggy.v1.IMsgValsetUpdatedClaim): Promise<injective.peggy.v1.MsgValsetUpdatedClaimResponse>;

                /**
                 * Calls ERC20DeployedClaim.
                 * @param request MsgERC20DeployedClaim message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgERC20DeployedClaimResponse
                 */
                public eRC20DeployedClaim(request: injective.peggy.v1.IMsgERC20DeployedClaim, callback: injective.peggy.v1.Msg.ERC20DeployedClaimCallback): void;

                /**
                 * Calls ERC20DeployedClaim.
                 * @param request MsgERC20DeployedClaim message or plain object
                 * @returns Promise
                 */
                public eRC20DeployedClaim(request: injective.peggy.v1.IMsgERC20DeployedClaim): Promise<injective.peggy.v1.MsgERC20DeployedClaimResponse>;

                /**
                 * Calls SetOrchestratorAddresses.
                 * @param request MsgSetOrchestratorAddresses message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgSetOrchestratorAddressesResponse
                 */
                public setOrchestratorAddresses(request: injective.peggy.v1.IMsgSetOrchestratorAddresses, callback: injective.peggy.v1.Msg.SetOrchestratorAddressesCallback): void;

                /**
                 * Calls SetOrchestratorAddresses.
                 * @param request MsgSetOrchestratorAddresses message or plain object
                 * @returns Promise
                 */
                public setOrchestratorAddresses(request: injective.peggy.v1.IMsgSetOrchestratorAddresses): Promise<injective.peggy.v1.MsgSetOrchestratorAddressesResponse>;

                /**
                 * Calls CancelSendToEth.
                 * @param request MsgCancelSendToEth message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgCancelSendToEthResponse
                 */
                public cancelSendToEth(request: injective.peggy.v1.IMsgCancelSendToEth, callback: injective.peggy.v1.Msg.CancelSendToEthCallback): void;

                /**
                 * Calls CancelSendToEth.
                 * @param request MsgCancelSendToEth message or plain object
                 * @returns Promise
                 */
                public cancelSendToEth(request: injective.peggy.v1.IMsgCancelSendToEth): Promise<injective.peggy.v1.MsgCancelSendToEthResponse>;

                /**
                 * Calls SubmitBadSignatureEvidence.
                 * @param request MsgSubmitBadSignatureEvidence message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgSubmitBadSignatureEvidenceResponse
                 */
                public submitBadSignatureEvidence(request: injective.peggy.v1.IMsgSubmitBadSignatureEvidence, callback: injective.peggy.v1.Msg.SubmitBadSignatureEvidenceCallback): void;

                /**
                 * Calls SubmitBadSignatureEvidence.
                 * @param request MsgSubmitBadSignatureEvidence message or plain object
                 * @returns Promise
                 */
                public submitBadSignatureEvidence(request: injective.peggy.v1.IMsgSubmitBadSignatureEvidence): Promise<injective.peggy.v1.MsgSubmitBadSignatureEvidenceResponse>;

                /**
                 * Calls UpdateParams.
                 * @param request MsgUpdateParams message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgUpdateParamsResponse
                 */
                public updateParams(request: injective.peggy.v1.IMsgUpdateParams, callback: injective.peggy.v1.Msg.UpdateParamsCallback): void;

                /**
                 * Calls UpdateParams.
                 * @param request MsgUpdateParams message or plain object
                 * @returns Promise
                 */
                public updateParams(request: injective.peggy.v1.IMsgUpdateParams): Promise<injective.peggy.v1.MsgUpdateParamsResponse>;
            }

            namespace Msg {

                /**
                 * Callback as used by {@link injective.peggy.v1.Msg#valsetConfirm}.
                 * @param error Error, if any
                 * @param [response] MsgValsetConfirmResponse
                 */
                type ValsetConfirmCallback = (error: (Error|null), response?: injective.peggy.v1.MsgValsetConfirmResponse) => void;

                /**
                 * Callback as used by {@link injective.peggy.v1.Msg#sendToEth}.
                 * @param error Error, if any
                 * @param [response] MsgSendToEthResponse
                 */
                type SendToEthCallback = (error: (Error|null), response?: injective.peggy.v1.MsgSendToEthResponse) => void;

                /**
                 * Callback as used by {@link injective.peggy.v1.Msg#requestBatch}.
                 * @param error Error, if any
                 * @param [response] MsgRequestBatchResponse
                 */
                type RequestBatchCallback = (error: (Error|null), response?: injective.peggy.v1.MsgRequestBatchResponse) => void;

                /**
                 * Callback as used by {@link injective.peggy.v1.Msg#confirmBatch}.
                 * @param error Error, if any
                 * @param [response] MsgConfirmBatchResponse
                 */
                type ConfirmBatchCallback = (error: (Error|null), response?: injective.peggy.v1.MsgConfirmBatchResponse) => void;

                /**
                 * Callback as used by {@link injective.peggy.v1.Msg#depositClaim}.
                 * @param error Error, if any
                 * @param [response] MsgDepositClaimResponse
                 */
                type DepositClaimCallback = (error: (Error|null), response?: injective.peggy.v1.MsgDepositClaimResponse) => void;

                /**
                 * Callback as used by {@link injective.peggy.v1.Msg#withdrawClaim}.
                 * @param error Error, if any
                 * @param [response] MsgWithdrawClaimResponse
                 */
                type WithdrawClaimCallback = (error: (Error|null), response?: injective.peggy.v1.MsgWithdrawClaimResponse) => void;

                /**
                 * Callback as used by {@link injective.peggy.v1.Msg#valsetUpdateClaim}.
                 * @param error Error, if any
                 * @param [response] MsgValsetUpdatedClaimResponse
                 */
                type ValsetUpdateClaimCallback = (error: (Error|null), response?: injective.peggy.v1.MsgValsetUpdatedClaimResponse) => void;

                /**
                 * Callback as used by {@link injective.peggy.v1.Msg#eRC20DeployedClaim}.
                 * @param error Error, if any
                 * @param [response] MsgERC20DeployedClaimResponse
                 */
                type ERC20DeployedClaimCallback = (error: (Error|null), response?: injective.peggy.v1.MsgERC20DeployedClaimResponse) => void;

                /**
                 * Callback as used by {@link injective.peggy.v1.Msg#setOrchestratorAddresses}.
                 * @param error Error, if any
                 * @param [response] MsgSetOrchestratorAddressesResponse
                 */
                type SetOrchestratorAddressesCallback = (error: (Error|null), response?: injective.peggy.v1.MsgSetOrchestratorAddressesResponse) => void;

                /**
                 * Callback as used by {@link injective.peggy.v1.Msg#cancelSendToEth}.
                 * @param error Error, if any
                 * @param [response] MsgCancelSendToEthResponse
                 */
                type CancelSendToEthCallback = (error: (Error|null), response?: injective.peggy.v1.MsgCancelSendToEthResponse) => void;

                /**
                 * Callback as used by {@link injective.peggy.v1.Msg#submitBadSignatureEvidence}.
                 * @param error Error, if any
                 * @param [response] MsgSubmitBadSignatureEvidenceResponse
                 */
                type SubmitBadSignatureEvidenceCallback = (error: (Error|null), response?: injective.peggy.v1.MsgSubmitBadSignatureEvidenceResponse) => void;

                /**
                 * Callback as used by {@link injective.peggy.v1.Msg#updateParams}.
                 * @param error Error, if any
                 * @param [response] MsgUpdateParamsResponse
                 */
                type UpdateParamsCallback = (error: (Error|null), response?: injective.peggy.v1.MsgUpdateParamsResponse) => void;
            }

            /** Properties of a MsgSetOrchestratorAddresses. */
            interface IMsgSetOrchestratorAddresses {

                /** MsgSetOrchestratorAddresses sender */
                sender?: (string|null);

                /** MsgSetOrchestratorAddresses orchestrator */
                orchestrator?: (string|null);

                /** MsgSetOrchestratorAddresses eth_address */
                eth_address?: (string|null);
            }

            /** Represents a MsgSetOrchestratorAddresses. */
            class MsgSetOrchestratorAddresses implements IMsgSetOrchestratorAddresses {

                /**
                 * Constructs a new MsgSetOrchestratorAddresses.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.peggy.v1.IMsgSetOrchestratorAddresses);

                /** MsgSetOrchestratorAddresses sender. */
                public sender: string;

                /** MsgSetOrchestratorAddresses orchestrator. */
                public orchestrator: string;

                /** MsgSetOrchestratorAddresses eth_address. */
                public eth_address: string;

                /**
                 * Encodes the specified MsgSetOrchestratorAddresses message. Does not implicitly {@link injective.peggy.v1.MsgSetOrchestratorAddresses.verify|verify} messages.
                 * @param message MsgSetOrchestratorAddresses message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.peggy.v1.IMsgSetOrchestratorAddresses, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgSetOrchestratorAddresses message, length delimited. Does not implicitly {@link injective.peggy.v1.MsgSetOrchestratorAddresses.verify|verify} messages.
                 * @param message MsgSetOrchestratorAddresses message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.peggy.v1.IMsgSetOrchestratorAddresses, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgSetOrchestratorAddresses message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgSetOrchestratorAddresses
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.peggy.v1.MsgSetOrchestratorAddresses;

                /**
                 * Decodes a MsgSetOrchestratorAddresses message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgSetOrchestratorAddresses
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.peggy.v1.MsgSetOrchestratorAddresses;

                /**
                 * Verifies a MsgSetOrchestratorAddresses message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgSetOrchestratorAddresses message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgSetOrchestratorAddresses
                 */
                public static fromObject(object: { [k: string]: any }): injective.peggy.v1.MsgSetOrchestratorAddresses;

                /**
                 * Creates a plain object from a MsgSetOrchestratorAddresses message. Also converts values to other types if specified.
                 * @param message MsgSetOrchestratorAddresses
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.peggy.v1.MsgSetOrchestratorAddresses, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgSetOrchestratorAddresses to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgSetOrchestratorAddressesResponse. */
            interface IMsgSetOrchestratorAddressesResponse {
            }

            /** Represents a MsgSetOrchestratorAddressesResponse. */
            class MsgSetOrchestratorAddressesResponse implements IMsgSetOrchestratorAddressesResponse {

                /**
                 * Constructs a new MsgSetOrchestratorAddressesResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.peggy.v1.IMsgSetOrchestratorAddressesResponse);

                /**
                 * Encodes the specified MsgSetOrchestratorAddressesResponse message. Does not implicitly {@link injective.peggy.v1.MsgSetOrchestratorAddressesResponse.verify|verify} messages.
                 * @param message MsgSetOrchestratorAddressesResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.peggy.v1.IMsgSetOrchestratorAddressesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgSetOrchestratorAddressesResponse message, length delimited. Does not implicitly {@link injective.peggy.v1.MsgSetOrchestratorAddressesResponse.verify|verify} messages.
                 * @param message MsgSetOrchestratorAddressesResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.peggy.v1.IMsgSetOrchestratorAddressesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgSetOrchestratorAddressesResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgSetOrchestratorAddressesResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.peggy.v1.MsgSetOrchestratorAddressesResponse;

                /**
                 * Decodes a MsgSetOrchestratorAddressesResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgSetOrchestratorAddressesResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.peggy.v1.MsgSetOrchestratorAddressesResponse;

                /**
                 * Verifies a MsgSetOrchestratorAddressesResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgSetOrchestratorAddressesResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgSetOrchestratorAddressesResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.peggy.v1.MsgSetOrchestratorAddressesResponse;

                /**
                 * Creates a plain object from a MsgSetOrchestratorAddressesResponse message. Also converts values to other types if specified.
                 * @param message MsgSetOrchestratorAddressesResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.peggy.v1.MsgSetOrchestratorAddressesResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgSetOrchestratorAddressesResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgValsetConfirm. */
            interface IMsgValsetConfirm {

                /** MsgValsetConfirm nonce */
                nonce?: (number|null);

                /** MsgValsetConfirm orchestrator */
                orchestrator?: (string|null);

                /** MsgValsetConfirm eth_address */
                eth_address?: (string|null);

                /** MsgValsetConfirm signature */
                signature?: (string|null);
            }

            /** Represents a MsgValsetConfirm. */
            class MsgValsetConfirm implements IMsgValsetConfirm {

                /**
                 * Constructs a new MsgValsetConfirm.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.peggy.v1.IMsgValsetConfirm);

                /** MsgValsetConfirm nonce. */
                public nonce: number;

                /** MsgValsetConfirm orchestrator. */
                public orchestrator: string;

                /** MsgValsetConfirm eth_address. */
                public eth_address: string;

                /** MsgValsetConfirm signature. */
                public signature: string;

                /**
                 * Encodes the specified MsgValsetConfirm message. Does not implicitly {@link injective.peggy.v1.MsgValsetConfirm.verify|verify} messages.
                 * @param message MsgValsetConfirm message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.peggy.v1.IMsgValsetConfirm, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgValsetConfirm message, length delimited. Does not implicitly {@link injective.peggy.v1.MsgValsetConfirm.verify|verify} messages.
                 * @param message MsgValsetConfirm message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.peggy.v1.IMsgValsetConfirm, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgValsetConfirm message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgValsetConfirm
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.peggy.v1.MsgValsetConfirm;

                /**
                 * Decodes a MsgValsetConfirm message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgValsetConfirm
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.peggy.v1.MsgValsetConfirm;

                /**
                 * Verifies a MsgValsetConfirm message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgValsetConfirm message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgValsetConfirm
                 */
                public static fromObject(object: { [k: string]: any }): injective.peggy.v1.MsgValsetConfirm;

                /**
                 * Creates a plain object from a MsgValsetConfirm message. Also converts values to other types if specified.
                 * @param message MsgValsetConfirm
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.peggy.v1.MsgValsetConfirm, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgValsetConfirm to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgValsetConfirmResponse. */
            interface IMsgValsetConfirmResponse {
            }

            /** Represents a MsgValsetConfirmResponse. */
            class MsgValsetConfirmResponse implements IMsgValsetConfirmResponse {

                /**
                 * Constructs a new MsgValsetConfirmResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.peggy.v1.IMsgValsetConfirmResponse);

                /**
                 * Encodes the specified MsgValsetConfirmResponse message. Does not implicitly {@link injective.peggy.v1.MsgValsetConfirmResponse.verify|verify} messages.
                 * @param message MsgValsetConfirmResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.peggy.v1.IMsgValsetConfirmResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgValsetConfirmResponse message, length delimited. Does not implicitly {@link injective.peggy.v1.MsgValsetConfirmResponse.verify|verify} messages.
                 * @param message MsgValsetConfirmResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.peggy.v1.IMsgValsetConfirmResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgValsetConfirmResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgValsetConfirmResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.peggy.v1.MsgValsetConfirmResponse;

                /**
                 * Decodes a MsgValsetConfirmResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgValsetConfirmResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.peggy.v1.MsgValsetConfirmResponse;

                /**
                 * Verifies a MsgValsetConfirmResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgValsetConfirmResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgValsetConfirmResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.peggy.v1.MsgValsetConfirmResponse;

                /**
                 * Creates a plain object from a MsgValsetConfirmResponse message. Also converts values to other types if specified.
                 * @param message MsgValsetConfirmResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.peggy.v1.MsgValsetConfirmResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgValsetConfirmResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgSendToEth. */
            interface IMsgSendToEth {

                /** MsgSendToEth sender */
                sender?: (string|null);

                /** MsgSendToEth eth_dest */
                eth_dest?: (string|null);

                /** MsgSendToEth amount */
                amount?: (cosmos.base.v1beta1.ICoin|null);

                /** MsgSendToEth bridge_fee */
                bridge_fee?: (cosmos.base.v1beta1.ICoin|null);
            }

            /** Represents a MsgSendToEth. */
            class MsgSendToEth implements IMsgSendToEth {

                /**
                 * Constructs a new MsgSendToEth.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.peggy.v1.IMsgSendToEth);

                /** MsgSendToEth sender. */
                public sender: string;

                /** MsgSendToEth eth_dest. */
                public eth_dest: string;

                /** MsgSendToEth amount. */
                public amount?: (cosmos.base.v1beta1.ICoin|null);

                /** MsgSendToEth bridge_fee. */
                public bridge_fee?: (cosmos.base.v1beta1.ICoin|null);

                /**
                 * Encodes the specified MsgSendToEth message. Does not implicitly {@link injective.peggy.v1.MsgSendToEth.verify|verify} messages.
                 * @param message MsgSendToEth message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.peggy.v1.IMsgSendToEth, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgSendToEth message, length delimited. Does not implicitly {@link injective.peggy.v1.MsgSendToEth.verify|verify} messages.
                 * @param message MsgSendToEth message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.peggy.v1.IMsgSendToEth, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgSendToEth message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgSendToEth
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.peggy.v1.MsgSendToEth;

                /**
                 * Decodes a MsgSendToEth message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgSendToEth
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.peggy.v1.MsgSendToEth;

                /**
                 * Verifies a MsgSendToEth message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgSendToEth message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgSendToEth
                 */
                public static fromObject(object: { [k: string]: any }): injective.peggy.v1.MsgSendToEth;

                /**
                 * Creates a plain object from a MsgSendToEth message. Also converts values to other types if specified.
                 * @param message MsgSendToEth
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.peggy.v1.MsgSendToEth, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgSendToEth to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgSendToEthResponse. */
            interface IMsgSendToEthResponse {
            }

            /** Represents a MsgSendToEthResponse. */
            class MsgSendToEthResponse implements IMsgSendToEthResponse {

                /**
                 * Constructs a new MsgSendToEthResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.peggy.v1.IMsgSendToEthResponse);

                /**
                 * Encodes the specified MsgSendToEthResponse message. Does not implicitly {@link injective.peggy.v1.MsgSendToEthResponse.verify|verify} messages.
                 * @param message MsgSendToEthResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.peggy.v1.IMsgSendToEthResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgSendToEthResponse message, length delimited. Does not implicitly {@link injective.peggy.v1.MsgSendToEthResponse.verify|verify} messages.
                 * @param message MsgSendToEthResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.peggy.v1.IMsgSendToEthResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgSendToEthResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgSendToEthResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.peggy.v1.MsgSendToEthResponse;

                /**
                 * Decodes a MsgSendToEthResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgSendToEthResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.peggy.v1.MsgSendToEthResponse;

                /**
                 * Verifies a MsgSendToEthResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgSendToEthResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgSendToEthResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.peggy.v1.MsgSendToEthResponse;

                /**
                 * Creates a plain object from a MsgSendToEthResponse message. Also converts values to other types if specified.
                 * @param message MsgSendToEthResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.peggy.v1.MsgSendToEthResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgSendToEthResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgRequestBatch. */
            interface IMsgRequestBatch {

                /** MsgRequestBatch orchestrator */
                orchestrator?: (string|null);

                /** MsgRequestBatch denom */
                denom?: (string|null);
            }

            /** Represents a MsgRequestBatch. */
            class MsgRequestBatch implements IMsgRequestBatch {

                /**
                 * Constructs a new MsgRequestBatch.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.peggy.v1.IMsgRequestBatch);

                /** MsgRequestBatch orchestrator. */
                public orchestrator: string;

                /** MsgRequestBatch denom. */
                public denom: string;

                /**
                 * Encodes the specified MsgRequestBatch message. Does not implicitly {@link injective.peggy.v1.MsgRequestBatch.verify|verify} messages.
                 * @param message MsgRequestBatch message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.peggy.v1.IMsgRequestBatch, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgRequestBatch message, length delimited. Does not implicitly {@link injective.peggy.v1.MsgRequestBatch.verify|verify} messages.
                 * @param message MsgRequestBatch message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.peggy.v1.IMsgRequestBatch, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgRequestBatch message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgRequestBatch
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.peggy.v1.MsgRequestBatch;

                /**
                 * Decodes a MsgRequestBatch message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgRequestBatch
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.peggy.v1.MsgRequestBatch;

                /**
                 * Verifies a MsgRequestBatch message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgRequestBatch message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgRequestBatch
                 */
                public static fromObject(object: { [k: string]: any }): injective.peggy.v1.MsgRequestBatch;

                /**
                 * Creates a plain object from a MsgRequestBatch message. Also converts values to other types if specified.
                 * @param message MsgRequestBatch
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.peggy.v1.MsgRequestBatch, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgRequestBatch to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgRequestBatchResponse. */
            interface IMsgRequestBatchResponse {
            }

            /** Represents a MsgRequestBatchResponse. */
            class MsgRequestBatchResponse implements IMsgRequestBatchResponse {

                /**
                 * Constructs a new MsgRequestBatchResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.peggy.v1.IMsgRequestBatchResponse);

                /**
                 * Encodes the specified MsgRequestBatchResponse message. Does not implicitly {@link injective.peggy.v1.MsgRequestBatchResponse.verify|verify} messages.
                 * @param message MsgRequestBatchResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.peggy.v1.IMsgRequestBatchResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgRequestBatchResponse message, length delimited. Does not implicitly {@link injective.peggy.v1.MsgRequestBatchResponse.verify|verify} messages.
                 * @param message MsgRequestBatchResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.peggy.v1.IMsgRequestBatchResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgRequestBatchResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgRequestBatchResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.peggy.v1.MsgRequestBatchResponse;

                /**
                 * Decodes a MsgRequestBatchResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgRequestBatchResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.peggy.v1.MsgRequestBatchResponse;

                /**
                 * Verifies a MsgRequestBatchResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgRequestBatchResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgRequestBatchResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.peggy.v1.MsgRequestBatchResponse;

                /**
                 * Creates a plain object from a MsgRequestBatchResponse message. Also converts values to other types if specified.
                 * @param message MsgRequestBatchResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.peggy.v1.MsgRequestBatchResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgRequestBatchResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgConfirmBatch. */
            interface IMsgConfirmBatch {

                /** MsgConfirmBatch nonce */
                nonce?: (number|null);

                /** MsgConfirmBatch token_contract */
                token_contract?: (string|null);

                /** MsgConfirmBatch eth_signer */
                eth_signer?: (string|null);

                /** MsgConfirmBatch orchestrator */
                orchestrator?: (string|null);

                /** MsgConfirmBatch signature */
                signature?: (string|null);
            }

            /** Represents a MsgConfirmBatch. */
            class MsgConfirmBatch implements IMsgConfirmBatch {

                /**
                 * Constructs a new MsgConfirmBatch.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.peggy.v1.IMsgConfirmBatch);

                /** MsgConfirmBatch nonce. */
                public nonce: number;

                /** MsgConfirmBatch token_contract. */
                public token_contract: string;

                /** MsgConfirmBatch eth_signer. */
                public eth_signer: string;

                /** MsgConfirmBatch orchestrator. */
                public orchestrator: string;

                /** MsgConfirmBatch signature. */
                public signature: string;

                /**
                 * Encodes the specified MsgConfirmBatch message. Does not implicitly {@link injective.peggy.v1.MsgConfirmBatch.verify|verify} messages.
                 * @param message MsgConfirmBatch message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.peggy.v1.IMsgConfirmBatch, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgConfirmBatch message, length delimited. Does not implicitly {@link injective.peggy.v1.MsgConfirmBatch.verify|verify} messages.
                 * @param message MsgConfirmBatch message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.peggy.v1.IMsgConfirmBatch, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgConfirmBatch message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgConfirmBatch
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.peggy.v1.MsgConfirmBatch;

                /**
                 * Decodes a MsgConfirmBatch message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgConfirmBatch
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.peggy.v1.MsgConfirmBatch;

                /**
                 * Verifies a MsgConfirmBatch message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgConfirmBatch message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgConfirmBatch
                 */
                public static fromObject(object: { [k: string]: any }): injective.peggy.v1.MsgConfirmBatch;

                /**
                 * Creates a plain object from a MsgConfirmBatch message. Also converts values to other types if specified.
                 * @param message MsgConfirmBatch
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.peggy.v1.MsgConfirmBatch, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgConfirmBatch to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgConfirmBatchResponse. */
            interface IMsgConfirmBatchResponse {
            }

            /** Represents a MsgConfirmBatchResponse. */
            class MsgConfirmBatchResponse implements IMsgConfirmBatchResponse {

                /**
                 * Constructs a new MsgConfirmBatchResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.peggy.v1.IMsgConfirmBatchResponse);

                /**
                 * Encodes the specified MsgConfirmBatchResponse message. Does not implicitly {@link injective.peggy.v1.MsgConfirmBatchResponse.verify|verify} messages.
                 * @param message MsgConfirmBatchResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.peggy.v1.IMsgConfirmBatchResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgConfirmBatchResponse message, length delimited. Does not implicitly {@link injective.peggy.v1.MsgConfirmBatchResponse.verify|verify} messages.
                 * @param message MsgConfirmBatchResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.peggy.v1.IMsgConfirmBatchResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgConfirmBatchResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgConfirmBatchResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.peggy.v1.MsgConfirmBatchResponse;

                /**
                 * Decodes a MsgConfirmBatchResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgConfirmBatchResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.peggy.v1.MsgConfirmBatchResponse;

                /**
                 * Verifies a MsgConfirmBatchResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgConfirmBatchResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgConfirmBatchResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.peggy.v1.MsgConfirmBatchResponse;

                /**
                 * Creates a plain object from a MsgConfirmBatchResponse message. Also converts values to other types if specified.
                 * @param message MsgConfirmBatchResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.peggy.v1.MsgConfirmBatchResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgConfirmBatchResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgDepositClaim. */
            interface IMsgDepositClaim {

                /** MsgDepositClaim event_nonce */
                event_nonce?: (number|null);

                /** MsgDepositClaim block_height */
                block_height?: (number|null);

                /** MsgDepositClaim token_contract */
                token_contract?: (string|null);

                /** MsgDepositClaim amount */
                amount?: (string|null);

                /** MsgDepositClaim ethereum_sender */
                ethereum_sender?: (string|null);

                /** MsgDepositClaim cosmos_receiver */
                cosmos_receiver?: (string|null);

                /** MsgDepositClaim orchestrator */
                orchestrator?: (string|null);

                /** MsgDepositClaim data */
                data?: (string|null);
            }

            /** Represents a MsgDepositClaim. */
            class MsgDepositClaim implements IMsgDepositClaim {

                /**
                 * Constructs a new MsgDepositClaim.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.peggy.v1.IMsgDepositClaim);

                /** MsgDepositClaim event_nonce. */
                public event_nonce: number;

                /** MsgDepositClaim block_height. */
                public block_height: number;

                /** MsgDepositClaim token_contract. */
                public token_contract: string;

                /** MsgDepositClaim amount. */
                public amount: string;

                /** MsgDepositClaim ethereum_sender. */
                public ethereum_sender: string;

                /** MsgDepositClaim cosmos_receiver. */
                public cosmos_receiver: string;

                /** MsgDepositClaim orchestrator. */
                public orchestrator: string;

                /** MsgDepositClaim data. */
                public data: string;

                /**
                 * Encodes the specified MsgDepositClaim message. Does not implicitly {@link injective.peggy.v1.MsgDepositClaim.verify|verify} messages.
                 * @param message MsgDepositClaim message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.peggy.v1.IMsgDepositClaim, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgDepositClaim message, length delimited. Does not implicitly {@link injective.peggy.v1.MsgDepositClaim.verify|verify} messages.
                 * @param message MsgDepositClaim message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.peggy.v1.IMsgDepositClaim, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgDepositClaim message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgDepositClaim
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.peggy.v1.MsgDepositClaim;

                /**
                 * Decodes a MsgDepositClaim message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgDepositClaim
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.peggy.v1.MsgDepositClaim;

                /**
                 * Verifies a MsgDepositClaim message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgDepositClaim message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgDepositClaim
                 */
                public static fromObject(object: { [k: string]: any }): injective.peggy.v1.MsgDepositClaim;

                /**
                 * Creates a plain object from a MsgDepositClaim message. Also converts values to other types if specified.
                 * @param message MsgDepositClaim
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.peggy.v1.MsgDepositClaim, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgDepositClaim to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgDepositClaimResponse. */
            interface IMsgDepositClaimResponse {
            }

            /** Represents a MsgDepositClaimResponse. */
            class MsgDepositClaimResponse implements IMsgDepositClaimResponse {

                /**
                 * Constructs a new MsgDepositClaimResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.peggy.v1.IMsgDepositClaimResponse);

                /**
                 * Encodes the specified MsgDepositClaimResponse message. Does not implicitly {@link injective.peggy.v1.MsgDepositClaimResponse.verify|verify} messages.
                 * @param message MsgDepositClaimResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.peggy.v1.IMsgDepositClaimResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgDepositClaimResponse message, length delimited. Does not implicitly {@link injective.peggy.v1.MsgDepositClaimResponse.verify|verify} messages.
                 * @param message MsgDepositClaimResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.peggy.v1.IMsgDepositClaimResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgDepositClaimResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgDepositClaimResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.peggy.v1.MsgDepositClaimResponse;

                /**
                 * Decodes a MsgDepositClaimResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgDepositClaimResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.peggy.v1.MsgDepositClaimResponse;

                /**
                 * Verifies a MsgDepositClaimResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgDepositClaimResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgDepositClaimResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.peggy.v1.MsgDepositClaimResponse;

                /**
                 * Creates a plain object from a MsgDepositClaimResponse message. Also converts values to other types if specified.
                 * @param message MsgDepositClaimResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.peggy.v1.MsgDepositClaimResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgDepositClaimResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgWithdrawClaim. */
            interface IMsgWithdrawClaim {

                /** MsgWithdrawClaim event_nonce */
                event_nonce?: (number|null);

                /** MsgWithdrawClaim block_height */
                block_height?: (number|null);

                /** MsgWithdrawClaim batch_nonce */
                batch_nonce?: (number|null);

                /** MsgWithdrawClaim token_contract */
                token_contract?: (string|null);

                /** MsgWithdrawClaim orchestrator */
                orchestrator?: (string|null);
            }

            /** Represents a MsgWithdrawClaim. */
            class MsgWithdrawClaim implements IMsgWithdrawClaim {

                /**
                 * Constructs a new MsgWithdrawClaim.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.peggy.v1.IMsgWithdrawClaim);

                /** MsgWithdrawClaim event_nonce. */
                public event_nonce: number;

                /** MsgWithdrawClaim block_height. */
                public block_height: number;

                /** MsgWithdrawClaim batch_nonce. */
                public batch_nonce: number;

                /** MsgWithdrawClaim token_contract. */
                public token_contract: string;

                /** MsgWithdrawClaim orchestrator. */
                public orchestrator: string;

                /**
                 * Encodes the specified MsgWithdrawClaim message. Does not implicitly {@link injective.peggy.v1.MsgWithdrawClaim.verify|verify} messages.
                 * @param message MsgWithdrawClaim message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.peggy.v1.IMsgWithdrawClaim, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgWithdrawClaim message, length delimited. Does not implicitly {@link injective.peggy.v1.MsgWithdrawClaim.verify|verify} messages.
                 * @param message MsgWithdrawClaim message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.peggy.v1.IMsgWithdrawClaim, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgWithdrawClaim message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgWithdrawClaim
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.peggy.v1.MsgWithdrawClaim;

                /**
                 * Decodes a MsgWithdrawClaim message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgWithdrawClaim
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.peggy.v1.MsgWithdrawClaim;

                /**
                 * Verifies a MsgWithdrawClaim message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgWithdrawClaim message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgWithdrawClaim
                 */
                public static fromObject(object: { [k: string]: any }): injective.peggy.v1.MsgWithdrawClaim;

                /**
                 * Creates a plain object from a MsgWithdrawClaim message. Also converts values to other types if specified.
                 * @param message MsgWithdrawClaim
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.peggy.v1.MsgWithdrawClaim, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgWithdrawClaim to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgWithdrawClaimResponse. */
            interface IMsgWithdrawClaimResponse {
            }

            /** Represents a MsgWithdrawClaimResponse. */
            class MsgWithdrawClaimResponse implements IMsgWithdrawClaimResponse {

                /**
                 * Constructs a new MsgWithdrawClaimResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.peggy.v1.IMsgWithdrawClaimResponse);

                /**
                 * Encodes the specified MsgWithdrawClaimResponse message. Does not implicitly {@link injective.peggy.v1.MsgWithdrawClaimResponse.verify|verify} messages.
                 * @param message MsgWithdrawClaimResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.peggy.v1.IMsgWithdrawClaimResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgWithdrawClaimResponse message, length delimited. Does not implicitly {@link injective.peggy.v1.MsgWithdrawClaimResponse.verify|verify} messages.
                 * @param message MsgWithdrawClaimResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.peggy.v1.IMsgWithdrawClaimResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgWithdrawClaimResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgWithdrawClaimResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.peggy.v1.MsgWithdrawClaimResponse;

                /**
                 * Decodes a MsgWithdrawClaimResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgWithdrawClaimResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.peggy.v1.MsgWithdrawClaimResponse;

                /**
                 * Verifies a MsgWithdrawClaimResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgWithdrawClaimResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgWithdrawClaimResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.peggy.v1.MsgWithdrawClaimResponse;

                /**
                 * Creates a plain object from a MsgWithdrawClaimResponse message. Also converts values to other types if specified.
                 * @param message MsgWithdrawClaimResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.peggy.v1.MsgWithdrawClaimResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgWithdrawClaimResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgERC20DeployedClaim. */
            interface IMsgERC20DeployedClaim {

                /** MsgERC20DeployedClaim event_nonce */
                event_nonce?: (number|null);

                /** MsgERC20DeployedClaim block_height */
                block_height?: (number|null);

                /** MsgERC20DeployedClaim cosmos_denom */
                cosmos_denom?: (string|null);

                /** MsgERC20DeployedClaim token_contract */
                token_contract?: (string|null);

                /** MsgERC20DeployedClaim name */
                name?: (string|null);

                /** MsgERC20DeployedClaim symbol */
                symbol?: (string|null);

                /** MsgERC20DeployedClaim decimals */
                decimals?: (number|null);

                /** MsgERC20DeployedClaim orchestrator */
                orchestrator?: (string|null);
            }

            /** Represents a MsgERC20DeployedClaim. */
            class MsgERC20DeployedClaim implements IMsgERC20DeployedClaim {

                /**
                 * Constructs a new MsgERC20DeployedClaim.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.peggy.v1.IMsgERC20DeployedClaim);

                /** MsgERC20DeployedClaim event_nonce. */
                public event_nonce: number;

                /** MsgERC20DeployedClaim block_height. */
                public block_height: number;

                /** MsgERC20DeployedClaim cosmos_denom. */
                public cosmos_denom: string;

                /** MsgERC20DeployedClaim token_contract. */
                public token_contract: string;

                /** MsgERC20DeployedClaim name. */
                public name: string;

                /** MsgERC20DeployedClaim symbol. */
                public symbol: string;

                /** MsgERC20DeployedClaim decimals. */
                public decimals: number;

                /** MsgERC20DeployedClaim orchestrator. */
                public orchestrator: string;

                /**
                 * Encodes the specified MsgERC20DeployedClaim message. Does not implicitly {@link injective.peggy.v1.MsgERC20DeployedClaim.verify|verify} messages.
                 * @param message MsgERC20DeployedClaim message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.peggy.v1.IMsgERC20DeployedClaim, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgERC20DeployedClaim message, length delimited. Does not implicitly {@link injective.peggy.v1.MsgERC20DeployedClaim.verify|verify} messages.
                 * @param message MsgERC20DeployedClaim message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.peggy.v1.IMsgERC20DeployedClaim, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgERC20DeployedClaim message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgERC20DeployedClaim
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.peggy.v1.MsgERC20DeployedClaim;

                /**
                 * Decodes a MsgERC20DeployedClaim message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgERC20DeployedClaim
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.peggy.v1.MsgERC20DeployedClaim;

                /**
                 * Verifies a MsgERC20DeployedClaim message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgERC20DeployedClaim message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgERC20DeployedClaim
                 */
                public static fromObject(object: { [k: string]: any }): injective.peggy.v1.MsgERC20DeployedClaim;

                /**
                 * Creates a plain object from a MsgERC20DeployedClaim message. Also converts values to other types if specified.
                 * @param message MsgERC20DeployedClaim
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.peggy.v1.MsgERC20DeployedClaim, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgERC20DeployedClaim to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgERC20DeployedClaimResponse. */
            interface IMsgERC20DeployedClaimResponse {
            }

            /** Represents a MsgERC20DeployedClaimResponse. */
            class MsgERC20DeployedClaimResponse implements IMsgERC20DeployedClaimResponse {

                /**
                 * Constructs a new MsgERC20DeployedClaimResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.peggy.v1.IMsgERC20DeployedClaimResponse);

                /**
                 * Encodes the specified MsgERC20DeployedClaimResponse message. Does not implicitly {@link injective.peggy.v1.MsgERC20DeployedClaimResponse.verify|verify} messages.
                 * @param message MsgERC20DeployedClaimResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.peggy.v1.IMsgERC20DeployedClaimResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgERC20DeployedClaimResponse message, length delimited. Does not implicitly {@link injective.peggy.v1.MsgERC20DeployedClaimResponse.verify|verify} messages.
                 * @param message MsgERC20DeployedClaimResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.peggy.v1.IMsgERC20DeployedClaimResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgERC20DeployedClaimResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgERC20DeployedClaimResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.peggy.v1.MsgERC20DeployedClaimResponse;

                /**
                 * Decodes a MsgERC20DeployedClaimResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgERC20DeployedClaimResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.peggy.v1.MsgERC20DeployedClaimResponse;

                /**
                 * Verifies a MsgERC20DeployedClaimResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgERC20DeployedClaimResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgERC20DeployedClaimResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.peggy.v1.MsgERC20DeployedClaimResponse;

                /**
                 * Creates a plain object from a MsgERC20DeployedClaimResponse message. Also converts values to other types if specified.
                 * @param message MsgERC20DeployedClaimResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.peggy.v1.MsgERC20DeployedClaimResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgERC20DeployedClaimResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgCancelSendToEth. */
            interface IMsgCancelSendToEth {

                /** MsgCancelSendToEth transaction_id */
                transaction_id?: (number|null);

                /** MsgCancelSendToEth sender */
                sender?: (string|null);
            }

            /** Represents a MsgCancelSendToEth. */
            class MsgCancelSendToEth implements IMsgCancelSendToEth {

                /**
                 * Constructs a new MsgCancelSendToEth.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.peggy.v1.IMsgCancelSendToEth);

                /** MsgCancelSendToEth transaction_id. */
                public transaction_id: number;

                /** MsgCancelSendToEth sender. */
                public sender: string;

                /**
                 * Encodes the specified MsgCancelSendToEth message. Does not implicitly {@link injective.peggy.v1.MsgCancelSendToEth.verify|verify} messages.
                 * @param message MsgCancelSendToEth message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.peggy.v1.IMsgCancelSendToEth, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgCancelSendToEth message, length delimited. Does not implicitly {@link injective.peggy.v1.MsgCancelSendToEth.verify|verify} messages.
                 * @param message MsgCancelSendToEth message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.peggy.v1.IMsgCancelSendToEth, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgCancelSendToEth message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgCancelSendToEth
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.peggy.v1.MsgCancelSendToEth;

                /**
                 * Decodes a MsgCancelSendToEth message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgCancelSendToEth
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.peggy.v1.MsgCancelSendToEth;

                /**
                 * Verifies a MsgCancelSendToEth message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgCancelSendToEth message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgCancelSendToEth
                 */
                public static fromObject(object: { [k: string]: any }): injective.peggy.v1.MsgCancelSendToEth;

                /**
                 * Creates a plain object from a MsgCancelSendToEth message. Also converts values to other types if specified.
                 * @param message MsgCancelSendToEth
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.peggy.v1.MsgCancelSendToEth, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgCancelSendToEth to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgCancelSendToEthResponse. */
            interface IMsgCancelSendToEthResponse {
            }

            /** Represents a MsgCancelSendToEthResponse. */
            class MsgCancelSendToEthResponse implements IMsgCancelSendToEthResponse {

                /**
                 * Constructs a new MsgCancelSendToEthResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.peggy.v1.IMsgCancelSendToEthResponse);

                /**
                 * Encodes the specified MsgCancelSendToEthResponse message. Does not implicitly {@link injective.peggy.v1.MsgCancelSendToEthResponse.verify|verify} messages.
                 * @param message MsgCancelSendToEthResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.peggy.v1.IMsgCancelSendToEthResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgCancelSendToEthResponse message, length delimited. Does not implicitly {@link injective.peggy.v1.MsgCancelSendToEthResponse.verify|verify} messages.
                 * @param message MsgCancelSendToEthResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.peggy.v1.IMsgCancelSendToEthResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgCancelSendToEthResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgCancelSendToEthResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.peggy.v1.MsgCancelSendToEthResponse;

                /**
                 * Decodes a MsgCancelSendToEthResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgCancelSendToEthResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.peggy.v1.MsgCancelSendToEthResponse;

                /**
                 * Verifies a MsgCancelSendToEthResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgCancelSendToEthResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgCancelSendToEthResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.peggy.v1.MsgCancelSendToEthResponse;

                /**
                 * Creates a plain object from a MsgCancelSendToEthResponse message. Also converts values to other types if specified.
                 * @param message MsgCancelSendToEthResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.peggy.v1.MsgCancelSendToEthResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgCancelSendToEthResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgSubmitBadSignatureEvidence. */
            interface IMsgSubmitBadSignatureEvidence {

                /** MsgSubmitBadSignatureEvidence subject */
                subject?: (google.protobuf.IAny|null);

                /** MsgSubmitBadSignatureEvidence signature */
                signature?: (string|null);

                /** MsgSubmitBadSignatureEvidence sender */
                sender?: (string|null);
            }

            /** Represents a MsgSubmitBadSignatureEvidence. */
            class MsgSubmitBadSignatureEvidence implements IMsgSubmitBadSignatureEvidence {

                /**
                 * Constructs a new MsgSubmitBadSignatureEvidence.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.peggy.v1.IMsgSubmitBadSignatureEvidence);

                /** MsgSubmitBadSignatureEvidence subject. */
                public subject?: (google.protobuf.IAny|null);

                /** MsgSubmitBadSignatureEvidence signature. */
                public signature: string;

                /** MsgSubmitBadSignatureEvidence sender. */
                public sender: string;

                /**
                 * Encodes the specified MsgSubmitBadSignatureEvidence message. Does not implicitly {@link injective.peggy.v1.MsgSubmitBadSignatureEvidence.verify|verify} messages.
                 * @param message MsgSubmitBadSignatureEvidence message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.peggy.v1.IMsgSubmitBadSignatureEvidence, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgSubmitBadSignatureEvidence message, length delimited. Does not implicitly {@link injective.peggy.v1.MsgSubmitBadSignatureEvidence.verify|verify} messages.
                 * @param message MsgSubmitBadSignatureEvidence message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.peggy.v1.IMsgSubmitBadSignatureEvidence, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgSubmitBadSignatureEvidence message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgSubmitBadSignatureEvidence
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.peggy.v1.MsgSubmitBadSignatureEvidence;

                /**
                 * Decodes a MsgSubmitBadSignatureEvidence message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgSubmitBadSignatureEvidence
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.peggy.v1.MsgSubmitBadSignatureEvidence;

                /**
                 * Verifies a MsgSubmitBadSignatureEvidence message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgSubmitBadSignatureEvidence message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgSubmitBadSignatureEvidence
                 */
                public static fromObject(object: { [k: string]: any }): injective.peggy.v1.MsgSubmitBadSignatureEvidence;

                /**
                 * Creates a plain object from a MsgSubmitBadSignatureEvidence message. Also converts values to other types if specified.
                 * @param message MsgSubmitBadSignatureEvidence
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.peggy.v1.MsgSubmitBadSignatureEvidence, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgSubmitBadSignatureEvidence to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgSubmitBadSignatureEvidenceResponse. */
            interface IMsgSubmitBadSignatureEvidenceResponse {
            }

            /** Represents a MsgSubmitBadSignatureEvidenceResponse. */
            class MsgSubmitBadSignatureEvidenceResponse implements IMsgSubmitBadSignatureEvidenceResponse {

                /**
                 * Constructs a new MsgSubmitBadSignatureEvidenceResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.peggy.v1.IMsgSubmitBadSignatureEvidenceResponse);

                /**
                 * Encodes the specified MsgSubmitBadSignatureEvidenceResponse message. Does not implicitly {@link injective.peggy.v1.MsgSubmitBadSignatureEvidenceResponse.verify|verify} messages.
                 * @param message MsgSubmitBadSignatureEvidenceResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.peggy.v1.IMsgSubmitBadSignatureEvidenceResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgSubmitBadSignatureEvidenceResponse message, length delimited. Does not implicitly {@link injective.peggy.v1.MsgSubmitBadSignatureEvidenceResponse.verify|verify} messages.
                 * @param message MsgSubmitBadSignatureEvidenceResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.peggy.v1.IMsgSubmitBadSignatureEvidenceResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgSubmitBadSignatureEvidenceResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgSubmitBadSignatureEvidenceResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.peggy.v1.MsgSubmitBadSignatureEvidenceResponse;

                /**
                 * Decodes a MsgSubmitBadSignatureEvidenceResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgSubmitBadSignatureEvidenceResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.peggy.v1.MsgSubmitBadSignatureEvidenceResponse;

                /**
                 * Verifies a MsgSubmitBadSignatureEvidenceResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgSubmitBadSignatureEvidenceResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgSubmitBadSignatureEvidenceResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.peggy.v1.MsgSubmitBadSignatureEvidenceResponse;

                /**
                 * Creates a plain object from a MsgSubmitBadSignatureEvidenceResponse message. Also converts values to other types if specified.
                 * @param message MsgSubmitBadSignatureEvidenceResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.peggy.v1.MsgSubmitBadSignatureEvidenceResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgSubmitBadSignatureEvidenceResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgValsetUpdatedClaim. */
            interface IMsgValsetUpdatedClaim {

                /** MsgValsetUpdatedClaim event_nonce */
                event_nonce?: (number|null);

                /** MsgValsetUpdatedClaim valset_nonce */
                valset_nonce?: (number|null);

                /** MsgValsetUpdatedClaim block_height */
                block_height?: (number|null);

                /** MsgValsetUpdatedClaim members */
                members?: (injective.peggy.v1.IBridgeValidator[]|null);

                /** MsgValsetUpdatedClaim reward_amount */
                reward_amount?: (string|null);

                /** MsgValsetUpdatedClaim reward_token */
                reward_token?: (string|null);

                /** MsgValsetUpdatedClaim orchestrator */
                orchestrator?: (string|null);
            }

            /** Represents a MsgValsetUpdatedClaim. */
            class MsgValsetUpdatedClaim implements IMsgValsetUpdatedClaim {

                /**
                 * Constructs a new MsgValsetUpdatedClaim.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.peggy.v1.IMsgValsetUpdatedClaim);

                /** MsgValsetUpdatedClaim event_nonce. */
                public event_nonce: number;

                /** MsgValsetUpdatedClaim valset_nonce. */
                public valset_nonce: number;

                /** MsgValsetUpdatedClaim block_height. */
                public block_height: number;

                /** MsgValsetUpdatedClaim members. */
                public members: injective.peggy.v1.IBridgeValidator[];

                /** MsgValsetUpdatedClaim reward_amount. */
                public reward_amount: string;

                /** MsgValsetUpdatedClaim reward_token. */
                public reward_token: string;

                /** MsgValsetUpdatedClaim orchestrator. */
                public orchestrator: string;

                /**
                 * Encodes the specified MsgValsetUpdatedClaim message. Does not implicitly {@link injective.peggy.v1.MsgValsetUpdatedClaim.verify|verify} messages.
                 * @param message MsgValsetUpdatedClaim message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.peggy.v1.IMsgValsetUpdatedClaim, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgValsetUpdatedClaim message, length delimited. Does not implicitly {@link injective.peggy.v1.MsgValsetUpdatedClaim.verify|verify} messages.
                 * @param message MsgValsetUpdatedClaim message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.peggy.v1.IMsgValsetUpdatedClaim, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgValsetUpdatedClaim message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgValsetUpdatedClaim
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.peggy.v1.MsgValsetUpdatedClaim;

                /**
                 * Decodes a MsgValsetUpdatedClaim message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgValsetUpdatedClaim
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.peggy.v1.MsgValsetUpdatedClaim;

                /**
                 * Verifies a MsgValsetUpdatedClaim message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgValsetUpdatedClaim message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgValsetUpdatedClaim
                 */
                public static fromObject(object: { [k: string]: any }): injective.peggy.v1.MsgValsetUpdatedClaim;

                /**
                 * Creates a plain object from a MsgValsetUpdatedClaim message. Also converts values to other types if specified.
                 * @param message MsgValsetUpdatedClaim
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.peggy.v1.MsgValsetUpdatedClaim, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgValsetUpdatedClaim to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgValsetUpdatedClaimResponse. */
            interface IMsgValsetUpdatedClaimResponse {
            }

            /** Represents a MsgValsetUpdatedClaimResponse. */
            class MsgValsetUpdatedClaimResponse implements IMsgValsetUpdatedClaimResponse {

                /**
                 * Constructs a new MsgValsetUpdatedClaimResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.peggy.v1.IMsgValsetUpdatedClaimResponse);

                /**
                 * Encodes the specified MsgValsetUpdatedClaimResponse message. Does not implicitly {@link injective.peggy.v1.MsgValsetUpdatedClaimResponse.verify|verify} messages.
                 * @param message MsgValsetUpdatedClaimResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.peggy.v1.IMsgValsetUpdatedClaimResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgValsetUpdatedClaimResponse message, length delimited. Does not implicitly {@link injective.peggy.v1.MsgValsetUpdatedClaimResponse.verify|verify} messages.
                 * @param message MsgValsetUpdatedClaimResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.peggy.v1.IMsgValsetUpdatedClaimResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgValsetUpdatedClaimResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgValsetUpdatedClaimResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.peggy.v1.MsgValsetUpdatedClaimResponse;

                /**
                 * Decodes a MsgValsetUpdatedClaimResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgValsetUpdatedClaimResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.peggy.v1.MsgValsetUpdatedClaimResponse;

                /**
                 * Verifies a MsgValsetUpdatedClaimResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgValsetUpdatedClaimResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgValsetUpdatedClaimResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.peggy.v1.MsgValsetUpdatedClaimResponse;

                /**
                 * Creates a plain object from a MsgValsetUpdatedClaimResponse message. Also converts values to other types if specified.
                 * @param message MsgValsetUpdatedClaimResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.peggy.v1.MsgValsetUpdatedClaimResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgValsetUpdatedClaimResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgUpdateParams. */
            interface IMsgUpdateParams {

                /** MsgUpdateParams authority */
                authority?: (string|null);

                /** MsgUpdateParams params */
                params?: (injective.peggy.v1.IParams|null);
            }

            /** Represents a MsgUpdateParams. */
            class MsgUpdateParams implements IMsgUpdateParams {

                /**
                 * Constructs a new MsgUpdateParams.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.peggy.v1.IMsgUpdateParams);

                /** MsgUpdateParams authority. */
                public authority: string;

                /** MsgUpdateParams params. */
                public params?: (injective.peggy.v1.IParams|null);

                /**
                 * Encodes the specified MsgUpdateParams message. Does not implicitly {@link injective.peggy.v1.MsgUpdateParams.verify|verify} messages.
                 * @param message MsgUpdateParams message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.peggy.v1.IMsgUpdateParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgUpdateParams message, length delimited. Does not implicitly {@link injective.peggy.v1.MsgUpdateParams.verify|verify} messages.
                 * @param message MsgUpdateParams message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.peggy.v1.IMsgUpdateParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgUpdateParams message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgUpdateParams
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.peggy.v1.MsgUpdateParams;

                /**
                 * Decodes a MsgUpdateParams message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgUpdateParams
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.peggy.v1.MsgUpdateParams;

                /**
                 * Verifies a MsgUpdateParams message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgUpdateParams message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgUpdateParams
                 */
                public static fromObject(object: { [k: string]: any }): injective.peggy.v1.MsgUpdateParams;

                /**
                 * Creates a plain object from a MsgUpdateParams message. Also converts values to other types if specified.
                 * @param message MsgUpdateParams
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.peggy.v1.MsgUpdateParams, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgUpdateParams to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgUpdateParamsResponse. */
            interface IMsgUpdateParamsResponse {
            }

            /** Represents a MsgUpdateParamsResponse. */
            class MsgUpdateParamsResponse implements IMsgUpdateParamsResponse {

                /**
                 * Constructs a new MsgUpdateParamsResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.peggy.v1.IMsgUpdateParamsResponse);

                /**
                 * Encodes the specified MsgUpdateParamsResponse message. Does not implicitly {@link injective.peggy.v1.MsgUpdateParamsResponse.verify|verify} messages.
                 * @param message MsgUpdateParamsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.peggy.v1.IMsgUpdateParamsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgUpdateParamsResponse message, length delimited. Does not implicitly {@link injective.peggy.v1.MsgUpdateParamsResponse.verify|verify} messages.
                 * @param message MsgUpdateParamsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.peggy.v1.IMsgUpdateParamsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgUpdateParamsResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgUpdateParamsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.peggy.v1.MsgUpdateParamsResponse;

                /**
                 * Decodes a MsgUpdateParamsResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgUpdateParamsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.peggy.v1.MsgUpdateParamsResponse;

                /**
                 * Verifies a MsgUpdateParamsResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgUpdateParamsResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgUpdateParamsResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.peggy.v1.MsgUpdateParamsResponse;

                /**
                 * Creates a plain object from a MsgUpdateParamsResponse message. Also converts values to other types if specified.
                 * @param message MsgUpdateParamsResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.peggy.v1.MsgUpdateParamsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgUpdateParamsResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a Params. */
            interface IParams {

                /** Params peggy_id */
                peggy_id?: (string|null);

                /** Params contract_source_hash */
                contract_source_hash?: (string|null);

                /** Params bridge_ethereum_address */
                bridge_ethereum_address?: (string|null);

                /** Params bridge_chain_id */
                bridge_chain_id?: (number|null);

                /** Params signed_valsets_window */
                signed_valsets_window?: (number|null);

                /** Params signed_batches_window */
                signed_batches_window?: (number|null);

                /** Params signed_claims_window */
                signed_claims_window?: (number|null);

                /** Params target_batch_timeout */
                target_batch_timeout?: (number|null);

                /** Params average_block_time */
                average_block_time?: (number|null);

                /** Params average_ethereum_block_time */
                average_ethereum_block_time?: (number|null);

                /** Params slash_fraction_valset */
                slash_fraction_valset?: (Uint8Array|null);

                /** Params slash_fraction_batch */
                slash_fraction_batch?: (Uint8Array|null);

                /** Params slash_fraction_claim */
                slash_fraction_claim?: (Uint8Array|null);

                /** Params slash_fraction_conflicting_claim */
                slash_fraction_conflicting_claim?: (Uint8Array|null);

                /** Params unbond_slashing_valsets_window */
                unbond_slashing_valsets_window?: (number|null);

                /** Params slash_fraction_bad_eth_signature */
                slash_fraction_bad_eth_signature?: (Uint8Array|null);

                /** Params cosmos_coin_denom */
                cosmos_coin_denom?: (string|null);

                /** Params cosmos_coin_erc20_contract */
                cosmos_coin_erc20_contract?: (string|null);

                /** Params claim_slashing_enabled */
                claim_slashing_enabled?: (boolean|null);

                /** Params bridge_contract_start_height */
                bridge_contract_start_height?: (number|null);

                /** Params valset_reward */
                valset_reward?: (cosmos.base.v1beta1.ICoin|null);
            }

            /** Represents a Params. */
            class Params implements IParams {

                /**
                 * Constructs a new Params.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.peggy.v1.IParams);

                /** Params peggy_id. */
                public peggy_id: string;

                /** Params contract_source_hash. */
                public contract_source_hash: string;

                /** Params bridge_ethereum_address. */
                public bridge_ethereum_address: string;

                /** Params bridge_chain_id. */
                public bridge_chain_id: number;

                /** Params signed_valsets_window. */
                public signed_valsets_window: number;

                /** Params signed_batches_window. */
                public signed_batches_window: number;

                /** Params signed_claims_window. */
                public signed_claims_window: number;

                /** Params target_batch_timeout. */
                public target_batch_timeout: number;

                /** Params average_block_time. */
                public average_block_time: number;

                /** Params average_ethereum_block_time. */
                public average_ethereum_block_time: number;

                /** Params slash_fraction_valset. */
                public slash_fraction_valset: Uint8Array;

                /** Params slash_fraction_batch. */
                public slash_fraction_batch: Uint8Array;

                /** Params slash_fraction_claim. */
                public slash_fraction_claim: Uint8Array;

                /** Params slash_fraction_conflicting_claim. */
                public slash_fraction_conflicting_claim: Uint8Array;

                /** Params unbond_slashing_valsets_window. */
                public unbond_slashing_valsets_window: number;

                /** Params slash_fraction_bad_eth_signature. */
                public slash_fraction_bad_eth_signature: Uint8Array;

                /** Params cosmos_coin_denom. */
                public cosmos_coin_denom: string;

                /** Params cosmos_coin_erc20_contract. */
                public cosmos_coin_erc20_contract: string;

                /** Params claim_slashing_enabled. */
                public claim_slashing_enabled: boolean;

                /** Params bridge_contract_start_height. */
                public bridge_contract_start_height: number;

                /** Params valset_reward. */
                public valset_reward?: (cosmos.base.v1beta1.ICoin|null);

                /**
                 * Encodes the specified Params message. Does not implicitly {@link injective.peggy.v1.Params.verify|verify} messages.
                 * @param message Params message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.peggy.v1.IParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Params message, length delimited. Does not implicitly {@link injective.peggy.v1.Params.verify|verify} messages.
                 * @param message Params message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.peggy.v1.IParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Params message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Params
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.peggy.v1.Params;

                /**
                 * Decodes a Params message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Params
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.peggy.v1.Params;

                /**
                 * Verifies a Params message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Params message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Params
                 */
                public static fromObject(object: { [k: string]: any }): injective.peggy.v1.Params;

                /**
                 * Creates a plain object from a Params message. Also converts values to other types if specified.
                 * @param message Params
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.peggy.v1.Params, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Params to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** SignType enum. */
            enum SignType {
                SIGN_TYPE_UNKNOWN = 0,
                SIGN_TYPE_ORCHESTRATOR_SIGNED_MULTI_SIG_UPDATE = 1,
                SIGN_TYPE_ORCHESTRATOR_SIGNED_WITHDRAW_BATCH = 2
            }

            /** Properties of a BlacklistEthereumAddressesProposal. */
            interface IBlacklistEthereumAddressesProposal {

                /** BlacklistEthereumAddressesProposal title */
                title?: (string|null);

                /** BlacklistEthereumAddressesProposal description */
                description?: (string|null);

                /** BlacklistEthereumAddressesProposal blacklist_addresses */
                blacklist_addresses?: (string[]|null);
            }

            /** Represents a BlacklistEthereumAddressesProposal. */
            class BlacklistEthereumAddressesProposal implements IBlacklistEthereumAddressesProposal {

                /**
                 * Constructs a new BlacklistEthereumAddressesProposal.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.peggy.v1.IBlacklistEthereumAddressesProposal);

                /** BlacklistEthereumAddressesProposal title. */
                public title: string;

                /** BlacklistEthereumAddressesProposal description. */
                public description: string;

                /** BlacklistEthereumAddressesProposal blacklist_addresses. */
                public blacklist_addresses: string[];

                /**
                 * Encodes the specified BlacklistEthereumAddressesProposal message. Does not implicitly {@link injective.peggy.v1.BlacklistEthereumAddressesProposal.verify|verify} messages.
                 * @param message BlacklistEthereumAddressesProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.peggy.v1.IBlacklistEthereumAddressesProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified BlacklistEthereumAddressesProposal message, length delimited. Does not implicitly {@link injective.peggy.v1.BlacklistEthereumAddressesProposal.verify|verify} messages.
                 * @param message BlacklistEthereumAddressesProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.peggy.v1.IBlacklistEthereumAddressesProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a BlacklistEthereumAddressesProposal message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns BlacklistEthereumAddressesProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.peggy.v1.BlacklistEthereumAddressesProposal;

                /**
                 * Decodes a BlacklistEthereumAddressesProposal message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns BlacklistEthereumAddressesProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.peggy.v1.BlacklistEthereumAddressesProposal;

                /**
                 * Verifies a BlacklistEthereumAddressesProposal message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a BlacklistEthereumAddressesProposal message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns BlacklistEthereumAddressesProposal
                 */
                public static fromObject(object: { [k: string]: any }): injective.peggy.v1.BlacklistEthereumAddressesProposal;

                /**
                 * Creates a plain object from a BlacklistEthereumAddressesProposal message. Also converts values to other types if specified.
                 * @param message BlacklistEthereumAddressesProposal
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.peggy.v1.BlacklistEthereumAddressesProposal, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this BlacklistEthereumAddressesProposal to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a RevokeEthereumBlacklistProposal. */
            interface IRevokeEthereumBlacklistProposal {

                /** RevokeEthereumBlacklistProposal title */
                title?: (string|null);

                /** RevokeEthereumBlacklistProposal description */
                description?: (string|null);

                /** RevokeEthereumBlacklistProposal blacklist_addresses */
                blacklist_addresses?: (string[]|null);
            }

            /** Represents a RevokeEthereumBlacklistProposal. */
            class RevokeEthereumBlacklistProposal implements IRevokeEthereumBlacklistProposal {

                /**
                 * Constructs a new RevokeEthereumBlacklistProposal.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.peggy.v1.IRevokeEthereumBlacklistProposal);

                /** RevokeEthereumBlacklistProposal title. */
                public title: string;

                /** RevokeEthereumBlacklistProposal description. */
                public description: string;

                /** RevokeEthereumBlacklistProposal blacklist_addresses. */
                public blacklist_addresses: string[];

                /**
                 * Encodes the specified RevokeEthereumBlacklistProposal message. Does not implicitly {@link injective.peggy.v1.RevokeEthereumBlacklistProposal.verify|verify} messages.
                 * @param message RevokeEthereumBlacklistProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.peggy.v1.IRevokeEthereumBlacklistProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified RevokeEthereumBlacklistProposal message, length delimited. Does not implicitly {@link injective.peggy.v1.RevokeEthereumBlacklistProposal.verify|verify} messages.
                 * @param message RevokeEthereumBlacklistProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.peggy.v1.IRevokeEthereumBlacklistProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a RevokeEthereumBlacklistProposal message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns RevokeEthereumBlacklistProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.peggy.v1.RevokeEthereumBlacklistProposal;

                /**
                 * Decodes a RevokeEthereumBlacklistProposal message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns RevokeEthereumBlacklistProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.peggy.v1.RevokeEthereumBlacklistProposal;

                /**
                 * Verifies a RevokeEthereumBlacklistProposal message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a RevokeEthereumBlacklistProposal message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns RevokeEthereumBlacklistProposal
                 */
                public static fromObject(object: { [k: string]: any }): injective.peggy.v1.RevokeEthereumBlacklistProposal;

                /**
                 * Creates a plain object from a RevokeEthereumBlacklistProposal message. Also converts values to other types if specified.
                 * @param message RevokeEthereumBlacklistProposal
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.peggy.v1.RevokeEthereumBlacklistProposal, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this RevokeEthereumBlacklistProposal to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }
    }

    /** Namespace tokenfactory. */
    namespace tokenfactory {

        /** Namespace v1beta1. */
        namespace v1beta1 {

            /** Represents a Msg */
            class Msg extends $protobuf.rpc.Service {

                /**
                 * Constructs a new Msg service.
                 * @param rpcImpl RPC implementation
                 * @param [requestDelimited=false] Whether requests are length-delimited
                 * @param [responseDelimited=false] Whether responses are length-delimited
                 */
                constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

                /**
                 * Calls CreateDenom.
                 * @param request MsgCreateDenom message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgCreateDenomResponse
                 */
                public createDenom(request: injective.tokenfactory.v1beta1.IMsgCreateDenom, callback: injective.tokenfactory.v1beta1.Msg.CreateDenomCallback): void;

                /**
                 * Calls CreateDenom.
                 * @param request MsgCreateDenom message or plain object
                 * @returns Promise
                 */
                public createDenom(request: injective.tokenfactory.v1beta1.IMsgCreateDenom): Promise<injective.tokenfactory.v1beta1.MsgCreateDenomResponse>;

                /**
                 * Calls Mint.
                 * @param request MsgMint message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgMintResponse
                 */
                public mint(request: injective.tokenfactory.v1beta1.IMsgMint, callback: injective.tokenfactory.v1beta1.Msg.MintCallback): void;

                /**
                 * Calls Mint.
                 * @param request MsgMint message or plain object
                 * @returns Promise
                 */
                public mint(request: injective.tokenfactory.v1beta1.IMsgMint): Promise<injective.tokenfactory.v1beta1.MsgMintResponse>;

                /**
                 * Calls Burn.
                 * @param request MsgBurn message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgBurnResponse
                 */
                public burn(request: injective.tokenfactory.v1beta1.IMsgBurn, callback: injective.tokenfactory.v1beta1.Msg.BurnCallback): void;

                /**
                 * Calls Burn.
                 * @param request MsgBurn message or plain object
                 * @returns Promise
                 */
                public burn(request: injective.tokenfactory.v1beta1.IMsgBurn): Promise<injective.tokenfactory.v1beta1.MsgBurnResponse>;

                /**
                 * Calls ChangeAdmin.
                 * @param request MsgChangeAdmin message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgChangeAdminResponse
                 */
                public changeAdmin(request: injective.tokenfactory.v1beta1.IMsgChangeAdmin, callback: injective.tokenfactory.v1beta1.Msg.ChangeAdminCallback): void;

                /**
                 * Calls ChangeAdmin.
                 * @param request MsgChangeAdmin message or plain object
                 * @returns Promise
                 */
                public changeAdmin(request: injective.tokenfactory.v1beta1.IMsgChangeAdmin): Promise<injective.tokenfactory.v1beta1.MsgChangeAdminResponse>;

                /**
                 * Calls SetDenomMetadata.
                 * @param request MsgSetDenomMetadata message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgSetDenomMetadataResponse
                 */
                public setDenomMetadata(request: injective.tokenfactory.v1beta1.IMsgSetDenomMetadata, callback: injective.tokenfactory.v1beta1.Msg.SetDenomMetadataCallback): void;

                /**
                 * Calls SetDenomMetadata.
                 * @param request MsgSetDenomMetadata message or plain object
                 * @returns Promise
                 */
                public setDenomMetadata(request: injective.tokenfactory.v1beta1.IMsgSetDenomMetadata): Promise<injective.tokenfactory.v1beta1.MsgSetDenomMetadataResponse>;

                /**
                 * Calls UpdateParams.
                 * @param request MsgUpdateParams message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgUpdateParamsResponse
                 */
                public updateParams(request: injective.tokenfactory.v1beta1.IMsgUpdateParams, callback: injective.tokenfactory.v1beta1.Msg.UpdateParamsCallback): void;

                /**
                 * Calls UpdateParams.
                 * @param request MsgUpdateParams message or plain object
                 * @returns Promise
                 */
                public updateParams(request: injective.tokenfactory.v1beta1.IMsgUpdateParams): Promise<injective.tokenfactory.v1beta1.MsgUpdateParamsResponse>;
            }

            namespace Msg {

                /**
                 * Callback as used by {@link injective.tokenfactory.v1beta1.Msg#createDenom}.
                 * @param error Error, if any
                 * @param [response] MsgCreateDenomResponse
                 */
                type CreateDenomCallback = (error: (Error|null), response?: injective.tokenfactory.v1beta1.MsgCreateDenomResponse) => void;

                /**
                 * Callback as used by {@link injective.tokenfactory.v1beta1.Msg#mint}.
                 * @param error Error, if any
                 * @param [response] MsgMintResponse
                 */
                type MintCallback = (error: (Error|null), response?: injective.tokenfactory.v1beta1.MsgMintResponse) => void;

                /**
                 * Callback as used by {@link injective.tokenfactory.v1beta1.Msg#burn}.
                 * @param error Error, if any
                 * @param [response] MsgBurnResponse
                 */
                type BurnCallback = (error: (Error|null), response?: injective.tokenfactory.v1beta1.MsgBurnResponse) => void;

                /**
                 * Callback as used by {@link injective.tokenfactory.v1beta1.Msg#changeAdmin}.
                 * @param error Error, if any
                 * @param [response] MsgChangeAdminResponse
                 */
                type ChangeAdminCallback = (error: (Error|null), response?: injective.tokenfactory.v1beta1.MsgChangeAdminResponse) => void;

                /**
                 * Callback as used by {@link injective.tokenfactory.v1beta1.Msg#setDenomMetadata}.
                 * @param error Error, if any
                 * @param [response] MsgSetDenomMetadataResponse
                 */
                type SetDenomMetadataCallback = (error: (Error|null), response?: injective.tokenfactory.v1beta1.MsgSetDenomMetadataResponse) => void;

                /**
                 * Callback as used by {@link injective.tokenfactory.v1beta1.Msg#updateParams}.
                 * @param error Error, if any
                 * @param [response] MsgUpdateParamsResponse
                 */
                type UpdateParamsCallback = (error: (Error|null), response?: injective.tokenfactory.v1beta1.MsgUpdateParamsResponse) => void;
            }

            /** Properties of a MsgCreateDenom. */
            interface IMsgCreateDenom {

                /** MsgCreateDenom sender */
                sender?: (string|null);

                /** MsgCreateDenom subdenom */
                subdenom?: (string|null);
            }

            /** Represents a MsgCreateDenom. */
            class MsgCreateDenom implements IMsgCreateDenom {

                /**
                 * Constructs a new MsgCreateDenom.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.tokenfactory.v1beta1.IMsgCreateDenom);

                /** MsgCreateDenom sender. */
                public sender: string;

                /** MsgCreateDenom subdenom. */
                public subdenom: string;

                /**
                 * Encodes the specified MsgCreateDenom message. Does not implicitly {@link injective.tokenfactory.v1beta1.MsgCreateDenom.verify|verify} messages.
                 * @param message MsgCreateDenom message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.tokenfactory.v1beta1.IMsgCreateDenom, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgCreateDenom message, length delimited. Does not implicitly {@link injective.tokenfactory.v1beta1.MsgCreateDenom.verify|verify} messages.
                 * @param message MsgCreateDenom message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.tokenfactory.v1beta1.IMsgCreateDenom, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgCreateDenom message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgCreateDenom
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.tokenfactory.v1beta1.MsgCreateDenom;

                /**
                 * Decodes a MsgCreateDenom message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgCreateDenom
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.tokenfactory.v1beta1.MsgCreateDenom;

                /**
                 * Verifies a MsgCreateDenom message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgCreateDenom message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgCreateDenom
                 */
                public static fromObject(object: { [k: string]: any }): injective.tokenfactory.v1beta1.MsgCreateDenom;

                /**
                 * Creates a plain object from a MsgCreateDenom message. Also converts values to other types if specified.
                 * @param message MsgCreateDenom
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.tokenfactory.v1beta1.MsgCreateDenom, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgCreateDenom to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgCreateDenomResponse. */
            interface IMsgCreateDenomResponse {

                /** MsgCreateDenomResponse new_token_denom */
                new_token_denom?: (string|null);
            }

            /** Represents a MsgCreateDenomResponse. */
            class MsgCreateDenomResponse implements IMsgCreateDenomResponse {

                /**
                 * Constructs a new MsgCreateDenomResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.tokenfactory.v1beta1.IMsgCreateDenomResponse);

                /** MsgCreateDenomResponse new_token_denom. */
                public new_token_denom: string;

                /**
                 * Encodes the specified MsgCreateDenomResponse message. Does not implicitly {@link injective.tokenfactory.v1beta1.MsgCreateDenomResponse.verify|verify} messages.
                 * @param message MsgCreateDenomResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.tokenfactory.v1beta1.IMsgCreateDenomResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgCreateDenomResponse message, length delimited. Does not implicitly {@link injective.tokenfactory.v1beta1.MsgCreateDenomResponse.verify|verify} messages.
                 * @param message MsgCreateDenomResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.tokenfactory.v1beta1.IMsgCreateDenomResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgCreateDenomResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgCreateDenomResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.tokenfactory.v1beta1.MsgCreateDenomResponse;

                /**
                 * Decodes a MsgCreateDenomResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgCreateDenomResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.tokenfactory.v1beta1.MsgCreateDenomResponse;

                /**
                 * Verifies a MsgCreateDenomResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgCreateDenomResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgCreateDenomResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.tokenfactory.v1beta1.MsgCreateDenomResponse;

                /**
                 * Creates a plain object from a MsgCreateDenomResponse message. Also converts values to other types if specified.
                 * @param message MsgCreateDenomResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.tokenfactory.v1beta1.MsgCreateDenomResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgCreateDenomResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgMint. */
            interface IMsgMint {

                /** MsgMint sender */
                sender?: (string|null);

                /** MsgMint amount */
                amount?: (cosmos.base.v1beta1.ICoin|null);
            }

            /** Represents a MsgMint. */
            class MsgMint implements IMsgMint {

                /**
                 * Constructs a new MsgMint.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.tokenfactory.v1beta1.IMsgMint);

                /** MsgMint sender. */
                public sender: string;

                /** MsgMint amount. */
                public amount?: (cosmos.base.v1beta1.ICoin|null);

                /**
                 * Encodes the specified MsgMint message. Does not implicitly {@link injective.tokenfactory.v1beta1.MsgMint.verify|verify} messages.
                 * @param message MsgMint message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.tokenfactory.v1beta1.IMsgMint, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgMint message, length delimited. Does not implicitly {@link injective.tokenfactory.v1beta1.MsgMint.verify|verify} messages.
                 * @param message MsgMint message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.tokenfactory.v1beta1.IMsgMint, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgMint message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgMint
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.tokenfactory.v1beta1.MsgMint;

                /**
                 * Decodes a MsgMint message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgMint
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.tokenfactory.v1beta1.MsgMint;

                /**
                 * Verifies a MsgMint message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgMint message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgMint
                 */
                public static fromObject(object: { [k: string]: any }): injective.tokenfactory.v1beta1.MsgMint;

                /**
                 * Creates a plain object from a MsgMint message. Also converts values to other types if specified.
                 * @param message MsgMint
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.tokenfactory.v1beta1.MsgMint, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgMint to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgMintResponse. */
            interface IMsgMintResponse {
            }

            /** Represents a MsgMintResponse. */
            class MsgMintResponse implements IMsgMintResponse {

                /**
                 * Constructs a new MsgMintResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.tokenfactory.v1beta1.IMsgMintResponse);

                /**
                 * Encodes the specified MsgMintResponse message. Does not implicitly {@link injective.tokenfactory.v1beta1.MsgMintResponse.verify|verify} messages.
                 * @param message MsgMintResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.tokenfactory.v1beta1.IMsgMintResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgMintResponse message, length delimited. Does not implicitly {@link injective.tokenfactory.v1beta1.MsgMintResponse.verify|verify} messages.
                 * @param message MsgMintResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.tokenfactory.v1beta1.IMsgMintResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgMintResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgMintResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.tokenfactory.v1beta1.MsgMintResponse;

                /**
                 * Decodes a MsgMintResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgMintResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.tokenfactory.v1beta1.MsgMintResponse;

                /**
                 * Verifies a MsgMintResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgMintResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgMintResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.tokenfactory.v1beta1.MsgMintResponse;

                /**
                 * Creates a plain object from a MsgMintResponse message. Also converts values to other types if specified.
                 * @param message MsgMintResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.tokenfactory.v1beta1.MsgMintResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgMintResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgBurn. */
            interface IMsgBurn {

                /** MsgBurn sender */
                sender?: (string|null);

                /** MsgBurn amount */
                amount?: (cosmos.base.v1beta1.ICoin|null);
            }

            /** Represents a MsgBurn. */
            class MsgBurn implements IMsgBurn {

                /**
                 * Constructs a new MsgBurn.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.tokenfactory.v1beta1.IMsgBurn);

                /** MsgBurn sender. */
                public sender: string;

                /** MsgBurn amount. */
                public amount?: (cosmos.base.v1beta1.ICoin|null);

                /**
                 * Encodes the specified MsgBurn message. Does not implicitly {@link injective.tokenfactory.v1beta1.MsgBurn.verify|verify} messages.
                 * @param message MsgBurn message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.tokenfactory.v1beta1.IMsgBurn, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgBurn message, length delimited. Does not implicitly {@link injective.tokenfactory.v1beta1.MsgBurn.verify|verify} messages.
                 * @param message MsgBurn message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.tokenfactory.v1beta1.IMsgBurn, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgBurn message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgBurn
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.tokenfactory.v1beta1.MsgBurn;

                /**
                 * Decodes a MsgBurn message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgBurn
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.tokenfactory.v1beta1.MsgBurn;

                /**
                 * Verifies a MsgBurn message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgBurn message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgBurn
                 */
                public static fromObject(object: { [k: string]: any }): injective.tokenfactory.v1beta1.MsgBurn;

                /**
                 * Creates a plain object from a MsgBurn message. Also converts values to other types if specified.
                 * @param message MsgBurn
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.tokenfactory.v1beta1.MsgBurn, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgBurn to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgBurnResponse. */
            interface IMsgBurnResponse {
            }

            /** Represents a MsgBurnResponse. */
            class MsgBurnResponse implements IMsgBurnResponse {

                /**
                 * Constructs a new MsgBurnResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.tokenfactory.v1beta1.IMsgBurnResponse);

                /**
                 * Encodes the specified MsgBurnResponse message. Does not implicitly {@link injective.tokenfactory.v1beta1.MsgBurnResponse.verify|verify} messages.
                 * @param message MsgBurnResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.tokenfactory.v1beta1.IMsgBurnResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgBurnResponse message, length delimited. Does not implicitly {@link injective.tokenfactory.v1beta1.MsgBurnResponse.verify|verify} messages.
                 * @param message MsgBurnResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.tokenfactory.v1beta1.IMsgBurnResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgBurnResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgBurnResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.tokenfactory.v1beta1.MsgBurnResponse;

                /**
                 * Decodes a MsgBurnResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgBurnResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.tokenfactory.v1beta1.MsgBurnResponse;

                /**
                 * Verifies a MsgBurnResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgBurnResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgBurnResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.tokenfactory.v1beta1.MsgBurnResponse;

                /**
                 * Creates a plain object from a MsgBurnResponse message. Also converts values to other types if specified.
                 * @param message MsgBurnResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.tokenfactory.v1beta1.MsgBurnResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgBurnResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgChangeAdmin. */
            interface IMsgChangeAdmin {

                /** MsgChangeAdmin sender */
                sender?: (string|null);

                /** MsgChangeAdmin denom */
                denom?: (string|null);

                /** MsgChangeAdmin new_admin */
                new_admin?: (string|null);
            }

            /** Represents a MsgChangeAdmin. */
            class MsgChangeAdmin implements IMsgChangeAdmin {

                /**
                 * Constructs a new MsgChangeAdmin.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.tokenfactory.v1beta1.IMsgChangeAdmin);

                /** MsgChangeAdmin sender. */
                public sender: string;

                /** MsgChangeAdmin denom. */
                public denom: string;

                /** MsgChangeAdmin new_admin. */
                public new_admin: string;

                /**
                 * Encodes the specified MsgChangeAdmin message. Does not implicitly {@link injective.tokenfactory.v1beta1.MsgChangeAdmin.verify|verify} messages.
                 * @param message MsgChangeAdmin message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.tokenfactory.v1beta1.IMsgChangeAdmin, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgChangeAdmin message, length delimited. Does not implicitly {@link injective.tokenfactory.v1beta1.MsgChangeAdmin.verify|verify} messages.
                 * @param message MsgChangeAdmin message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.tokenfactory.v1beta1.IMsgChangeAdmin, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgChangeAdmin message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgChangeAdmin
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.tokenfactory.v1beta1.MsgChangeAdmin;

                /**
                 * Decodes a MsgChangeAdmin message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgChangeAdmin
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.tokenfactory.v1beta1.MsgChangeAdmin;

                /**
                 * Verifies a MsgChangeAdmin message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgChangeAdmin message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgChangeAdmin
                 */
                public static fromObject(object: { [k: string]: any }): injective.tokenfactory.v1beta1.MsgChangeAdmin;

                /**
                 * Creates a plain object from a MsgChangeAdmin message. Also converts values to other types if specified.
                 * @param message MsgChangeAdmin
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.tokenfactory.v1beta1.MsgChangeAdmin, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgChangeAdmin to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgChangeAdminResponse. */
            interface IMsgChangeAdminResponse {
            }

            /** Represents a MsgChangeAdminResponse. */
            class MsgChangeAdminResponse implements IMsgChangeAdminResponse {

                /**
                 * Constructs a new MsgChangeAdminResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.tokenfactory.v1beta1.IMsgChangeAdminResponse);

                /**
                 * Encodes the specified MsgChangeAdminResponse message. Does not implicitly {@link injective.tokenfactory.v1beta1.MsgChangeAdminResponse.verify|verify} messages.
                 * @param message MsgChangeAdminResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.tokenfactory.v1beta1.IMsgChangeAdminResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgChangeAdminResponse message, length delimited. Does not implicitly {@link injective.tokenfactory.v1beta1.MsgChangeAdminResponse.verify|verify} messages.
                 * @param message MsgChangeAdminResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.tokenfactory.v1beta1.IMsgChangeAdminResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgChangeAdminResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgChangeAdminResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.tokenfactory.v1beta1.MsgChangeAdminResponse;

                /**
                 * Decodes a MsgChangeAdminResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgChangeAdminResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.tokenfactory.v1beta1.MsgChangeAdminResponse;

                /**
                 * Verifies a MsgChangeAdminResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgChangeAdminResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgChangeAdminResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.tokenfactory.v1beta1.MsgChangeAdminResponse;

                /**
                 * Creates a plain object from a MsgChangeAdminResponse message. Also converts values to other types if specified.
                 * @param message MsgChangeAdminResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.tokenfactory.v1beta1.MsgChangeAdminResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgChangeAdminResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgSetDenomMetadata. */
            interface IMsgSetDenomMetadata {

                /** MsgSetDenomMetadata sender */
                sender?: (string|null);

                /** MsgSetDenomMetadata metadata */
                metadata?: (cosmos.bank.v1beta1.IMetadata|null);
            }

            /** Represents a MsgSetDenomMetadata. */
            class MsgSetDenomMetadata implements IMsgSetDenomMetadata {

                /**
                 * Constructs a new MsgSetDenomMetadata.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.tokenfactory.v1beta1.IMsgSetDenomMetadata);

                /** MsgSetDenomMetadata sender. */
                public sender: string;

                /** MsgSetDenomMetadata metadata. */
                public metadata?: (cosmos.bank.v1beta1.IMetadata|null);

                /**
                 * Encodes the specified MsgSetDenomMetadata message. Does not implicitly {@link injective.tokenfactory.v1beta1.MsgSetDenomMetadata.verify|verify} messages.
                 * @param message MsgSetDenomMetadata message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.tokenfactory.v1beta1.IMsgSetDenomMetadata, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgSetDenomMetadata message, length delimited. Does not implicitly {@link injective.tokenfactory.v1beta1.MsgSetDenomMetadata.verify|verify} messages.
                 * @param message MsgSetDenomMetadata message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.tokenfactory.v1beta1.IMsgSetDenomMetadata, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgSetDenomMetadata message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgSetDenomMetadata
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.tokenfactory.v1beta1.MsgSetDenomMetadata;

                /**
                 * Decodes a MsgSetDenomMetadata message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgSetDenomMetadata
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.tokenfactory.v1beta1.MsgSetDenomMetadata;

                /**
                 * Verifies a MsgSetDenomMetadata message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgSetDenomMetadata message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgSetDenomMetadata
                 */
                public static fromObject(object: { [k: string]: any }): injective.tokenfactory.v1beta1.MsgSetDenomMetadata;

                /**
                 * Creates a plain object from a MsgSetDenomMetadata message. Also converts values to other types if specified.
                 * @param message MsgSetDenomMetadata
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.tokenfactory.v1beta1.MsgSetDenomMetadata, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgSetDenomMetadata to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgSetDenomMetadataResponse. */
            interface IMsgSetDenomMetadataResponse {
            }

            /** Represents a MsgSetDenomMetadataResponse. */
            class MsgSetDenomMetadataResponse implements IMsgSetDenomMetadataResponse {

                /**
                 * Constructs a new MsgSetDenomMetadataResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.tokenfactory.v1beta1.IMsgSetDenomMetadataResponse);

                /**
                 * Encodes the specified MsgSetDenomMetadataResponse message. Does not implicitly {@link injective.tokenfactory.v1beta1.MsgSetDenomMetadataResponse.verify|verify} messages.
                 * @param message MsgSetDenomMetadataResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.tokenfactory.v1beta1.IMsgSetDenomMetadataResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgSetDenomMetadataResponse message, length delimited. Does not implicitly {@link injective.tokenfactory.v1beta1.MsgSetDenomMetadataResponse.verify|verify} messages.
                 * @param message MsgSetDenomMetadataResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.tokenfactory.v1beta1.IMsgSetDenomMetadataResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgSetDenomMetadataResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgSetDenomMetadataResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.tokenfactory.v1beta1.MsgSetDenomMetadataResponse;

                /**
                 * Decodes a MsgSetDenomMetadataResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgSetDenomMetadataResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.tokenfactory.v1beta1.MsgSetDenomMetadataResponse;

                /**
                 * Verifies a MsgSetDenomMetadataResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgSetDenomMetadataResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgSetDenomMetadataResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.tokenfactory.v1beta1.MsgSetDenomMetadataResponse;

                /**
                 * Creates a plain object from a MsgSetDenomMetadataResponse message. Also converts values to other types if specified.
                 * @param message MsgSetDenomMetadataResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.tokenfactory.v1beta1.MsgSetDenomMetadataResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgSetDenomMetadataResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgUpdateParams. */
            interface IMsgUpdateParams {

                /** MsgUpdateParams authority */
                authority?: (string|null);

                /** MsgUpdateParams params */
                params?: (injective.tokenfactory.v1beta1.IParams|null);
            }

            /** Represents a MsgUpdateParams. */
            class MsgUpdateParams implements IMsgUpdateParams {

                /**
                 * Constructs a new MsgUpdateParams.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.tokenfactory.v1beta1.IMsgUpdateParams);

                /** MsgUpdateParams authority. */
                public authority: string;

                /** MsgUpdateParams params. */
                public params?: (injective.tokenfactory.v1beta1.IParams|null);

                /**
                 * Encodes the specified MsgUpdateParams message. Does not implicitly {@link injective.tokenfactory.v1beta1.MsgUpdateParams.verify|verify} messages.
                 * @param message MsgUpdateParams message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.tokenfactory.v1beta1.IMsgUpdateParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgUpdateParams message, length delimited. Does not implicitly {@link injective.tokenfactory.v1beta1.MsgUpdateParams.verify|verify} messages.
                 * @param message MsgUpdateParams message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.tokenfactory.v1beta1.IMsgUpdateParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgUpdateParams message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgUpdateParams
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.tokenfactory.v1beta1.MsgUpdateParams;

                /**
                 * Decodes a MsgUpdateParams message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgUpdateParams
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.tokenfactory.v1beta1.MsgUpdateParams;

                /**
                 * Verifies a MsgUpdateParams message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgUpdateParams message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgUpdateParams
                 */
                public static fromObject(object: { [k: string]: any }): injective.tokenfactory.v1beta1.MsgUpdateParams;

                /**
                 * Creates a plain object from a MsgUpdateParams message. Also converts values to other types if specified.
                 * @param message MsgUpdateParams
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.tokenfactory.v1beta1.MsgUpdateParams, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgUpdateParams to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgUpdateParamsResponse. */
            interface IMsgUpdateParamsResponse {
            }

            /** Represents a MsgUpdateParamsResponse. */
            class MsgUpdateParamsResponse implements IMsgUpdateParamsResponse {

                /**
                 * Constructs a new MsgUpdateParamsResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.tokenfactory.v1beta1.IMsgUpdateParamsResponse);

                /**
                 * Encodes the specified MsgUpdateParamsResponse message. Does not implicitly {@link injective.tokenfactory.v1beta1.MsgUpdateParamsResponse.verify|verify} messages.
                 * @param message MsgUpdateParamsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.tokenfactory.v1beta1.IMsgUpdateParamsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgUpdateParamsResponse message, length delimited. Does not implicitly {@link injective.tokenfactory.v1beta1.MsgUpdateParamsResponse.verify|verify} messages.
                 * @param message MsgUpdateParamsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.tokenfactory.v1beta1.IMsgUpdateParamsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgUpdateParamsResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgUpdateParamsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.tokenfactory.v1beta1.MsgUpdateParamsResponse;

                /**
                 * Decodes a MsgUpdateParamsResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgUpdateParamsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.tokenfactory.v1beta1.MsgUpdateParamsResponse;

                /**
                 * Verifies a MsgUpdateParamsResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgUpdateParamsResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgUpdateParamsResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.tokenfactory.v1beta1.MsgUpdateParamsResponse;

                /**
                 * Creates a plain object from a MsgUpdateParamsResponse message. Also converts values to other types if specified.
                 * @param message MsgUpdateParamsResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.tokenfactory.v1beta1.MsgUpdateParamsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgUpdateParamsResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a Params. */
            interface IParams {

                /** Params denom_creation_fee */
                denom_creation_fee?: (cosmos.base.v1beta1.ICoin[]|null);
            }

            /** Represents a Params. */
            class Params implements IParams {

                /**
                 * Constructs a new Params.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.tokenfactory.v1beta1.IParams);

                /** Params denom_creation_fee. */
                public denom_creation_fee: cosmos.base.v1beta1.ICoin[];

                /**
                 * Encodes the specified Params message. Does not implicitly {@link injective.tokenfactory.v1beta1.Params.verify|verify} messages.
                 * @param message Params message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.tokenfactory.v1beta1.IParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Params message, length delimited. Does not implicitly {@link injective.tokenfactory.v1beta1.Params.verify|verify} messages.
                 * @param message Params message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.tokenfactory.v1beta1.IParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Params message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Params
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.tokenfactory.v1beta1.Params;

                /**
                 * Decodes a Params message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Params
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.tokenfactory.v1beta1.Params;

                /**
                 * Verifies a Params message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Params message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Params
                 */
                public static fromObject(object: { [k: string]: any }): injective.tokenfactory.v1beta1.Params;

                /**
                 * Creates a plain object from a Params message. Also converts values to other types if specified.
                 * @param message Params
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.tokenfactory.v1beta1.Params, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Params to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a DenomAuthorityMetadata. */
            interface IDenomAuthorityMetadata {

                /** DenomAuthorityMetadata admin */
                admin?: (string|null);
            }

            /** Represents a DenomAuthorityMetadata. */
            class DenomAuthorityMetadata implements IDenomAuthorityMetadata {

                /**
                 * Constructs a new DenomAuthorityMetadata.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.tokenfactory.v1beta1.IDenomAuthorityMetadata);

                /** DenomAuthorityMetadata admin. */
                public admin: string;

                /**
                 * Encodes the specified DenomAuthorityMetadata message. Does not implicitly {@link injective.tokenfactory.v1beta1.DenomAuthorityMetadata.verify|verify} messages.
                 * @param message DenomAuthorityMetadata message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.tokenfactory.v1beta1.IDenomAuthorityMetadata, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DenomAuthorityMetadata message, length delimited. Does not implicitly {@link injective.tokenfactory.v1beta1.DenomAuthorityMetadata.verify|verify} messages.
                 * @param message DenomAuthorityMetadata message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.tokenfactory.v1beta1.IDenomAuthorityMetadata, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DenomAuthorityMetadata message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DenomAuthorityMetadata
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.tokenfactory.v1beta1.DenomAuthorityMetadata;

                /**
                 * Decodes a DenomAuthorityMetadata message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DenomAuthorityMetadata
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.tokenfactory.v1beta1.DenomAuthorityMetadata;

                /**
                 * Verifies a DenomAuthorityMetadata message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DenomAuthorityMetadata message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DenomAuthorityMetadata
                 */
                public static fromObject(object: { [k: string]: any }): injective.tokenfactory.v1beta1.DenomAuthorityMetadata;

                /**
                 * Creates a plain object from a DenomAuthorityMetadata message. Also converts values to other types if specified.
                 * @param message DenomAuthorityMetadata
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.tokenfactory.v1beta1.DenomAuthorityMetadata, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DenomAuthorityMetadata to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an EventCreateTFDenom. */
            interface IEventCreateTFDenom {

                /** EventCreateTFDenom account */
                account?: (string|null);

                /** EventCreateTFDenom denom */
                denom?: (string|null);
            }

            /** Represents an EventCreateTFDenom. */
            class EventCreateTFDenom implements IEventCreateTFDenom {

                /**
                 * Constructs a new EventCreateTFDenom.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.tokenfactory.v1beta1.IEventCreateTFDenom);

                /** EventCreateTFDenom account. */
                public account: string;

                /** EventCreateTFDenom denom. */
                public denom: string;

                /**
                 * Encodes the specified EventCreateTFDenom message. Does not implicitly {@link injective.tokenfactory.v1beta1.EventCreateTFDenom.verify|verify} messages.
                 * @param message EventCreateTFDenom message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.tokenfactory.v1beta1.IEventCreateTFDenom, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified EventCreateTFDenom message, length delimited. Does not implicitly {@link injective.tokenfactory.v1beta1.EventCreateTFDenom.verify|verify} messages.
                 * @param message EventCreateTFDenom message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.tokenfactory.v1beta1.IEventCreateTFDenom, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an EventCreateTFDenom message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns EventCreateTFDenom
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.tokenfactory.v1beta1.EventCreateTFDenom;

                /**
                 * Decodes an EventCreateTFDenom message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns EventCreateTFDenom
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.tokenfactory.v1beta1.EventCreateTFDenom;

                /**
                 * Verifies an EventCreateTFDenom message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an EventCreateTFDenom message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns EventCreateTFDenom
                 */
                public static fromObject(object: { [k: string]: any }): injective.tokenfactory.v1beta1.EventCreateTFDenom;

                /**
                 * Creates a plain object from an EventCreateTFDenom message. Also converts values to other types if specified.
                 * @param message EventCreateTFDenom
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.tokenfactory.v1beta1.EventCreateTFDenom, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this EventCreateTFDenom to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an EventMintTFDenom. */
            interface IEventMintTFDenom {

                /** EventMintTFDenom recipient_address */
                recipient_address?: (string|null);

                /** EventMintTFDenom amount */
                amount?: (cosmos.base.v1beta1.ICoin|null);
            }

            /** Represents an EventMintTFDenom. */
            class EventMintTFDenom implements IEventMintTFDenom {

                /**
                 * Constructs a new EventMintTFDenom.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.tokenfactory.v1beta1.IEventMintTFDenom);

                /** EventMintTFDenom recipient_address. */
                public recipient_address: string;

                /** EventMintTFDenom amount. */
                public amount?: (cosmos.base.v1beta1.ICoin|null);

                /**
                 * Encodes the specified EventMintTFDenom message. Does not implicitly {@link injective.tokenfactory.v1beta1.EventMintTFDenom.verify|verify} messages.
                 * @param message EventMintTFDenom message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.tokenfactory.v1beta1.IEventMintTFDenom, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified EventMintTFDenom message, length delimited. Does not implicitly {@link injective.tokenfactory.v1beta1.EventMintTFDenom.verify|verify} messages.
                 * @param message EventMintTFDenom message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.tokenfactory.v1beta1.IEventMintTFDenom, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an EventMintTFDenom message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns EventMintTFDenom
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.tokenfactory.v1beta1.EventMintTFDenom;

                /**
                 * Decodes an EventMintTFDenom message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns EventMintTFDenom
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.tokenfactory.v1beta1.EventMintTFDenom;

                /**
                 * Verifies an EventMintTFDenom message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an EventMintTFDenom message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns EventMintTFDenom
                 */
                public static fromObject(object: { [k: string]: any }): injective.tokenfactory.v1beta1.EventMintTFDenom;

                /**
                 * Creates a plain object from an EventMintTFDenom message. Also converts values to other types if specified.
                 * @param message EventMintTFDenom
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.tokenfactory.v1beta1.EventMintTFDenom, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this EventMintTFDenom to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an EventBurnTFDenom. */
            interface IEventBurnTFDenom {

                /** EventBurnTFDenom burner_address */
                burner_address?: (string|null);

                /** EventBurnTFDenom amount */
                amount?: (cosmos.base.v1beta1.ICoin|null);
            }

            /** Represents an EventBurnTFDenom. */
            class EventBurnTFDenom implements IEventBurnTFDenom {

                /**
                 * Constructs a new EventBurnTFDenom.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.tokenfactory.v1beta1.IEventBurnTFDenom);

                /** EventBurnTFDenom burner_address. */
                public burner_address: string;

                /** EventBurnTFDenom amount. */
                public amount?: (cosmos.base.v1beta1.ICoin|null);

                /**
                 * Encodes the specified EventBurnTFDenom message. Does not implicitly {@link injective.tokenfactory.v1beta1.EventBurnTFDenom.verify|verify} messages.
                 * @param message EventBurnTFDenom message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.tokenfactory.v1beta1.IEventBurnTFDenom, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified EventBurnTFDenom message, length delimited. Does not implicitly {@link injective.tokenfactory.v1beta1.EventBurnTFDenom.verify|verify} messages.
                 * @param message EventBurnTFDenom message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.tokenfactory.v1beta1.IEventBurnTFDenom, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an EventBurnTFDenom message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns EventBurnTFDenom
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.tokenfactory.v1beta1.EventBurnTFDenom;

                /**
                 * Decodes an EventBurnTFDenom message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns EventBurnTFDenom
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.tokenfactory.v1beta1.EventBurnTFDenom;

                /**
                 * Verifies an EventBurnTFDenom message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an EventBurnTFDenom message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns EventBurnTFDenom
                 */
                public static fromObject(object: { [k: string]: any }): injective.tokenfactory.v1beta1.EventBurnTFDenom;

                /**
                 * Creates a plain object from an EventBurnTFDenom message. Also converts values to other types if specified.
                 * @param message EventBurnTFDenom
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.tokenfactory.v1beta1.EventBurnTFDenom, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this EventBurnTFDenom to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an EventChangeTFAdmin. */
            interface IEventChangeTFAdmin {

                /** EventChangeTFAdmin denom */
                denom?: (string|null);

                /** EventChangeTFAdmin new_admin_address */
                new_admin_address?: (string|null);
            }

            /** Represents an EventChangeTFAdmin. */
            class EventChangeTFAdmin implements IEventChangeTFAdmin {

                /**
                 * Constructs a new EventChangeTFAdmin.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.tokenfactory.v1beta1.IEventChangeTFAdmin);

                /** EventChangeTFAdmin denom. */
                public denom: string;

                /** EventChangeTFAdmin new_admin_address. */
                public new_admin_address: string;

                /**
                 * Encodes the specified EventChangeTFAdmin message. Does not implicitly {@link injective.tokenfactory.v1beta1.EventChangeTFAdmin.verify|verify} messages.
                 * @param message EventChangeTFAdmin message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.tokenfactory.v1beta1.IEventChangeTFAdmin, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified EventChangeTFAdmin message, length delimited. Does not implicitly {@link injective.tokenfactory.v1beta1.EventChangeTFAdmin.verify|verify} messages.
                 * @param message EventChangeTFAdmin message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.tokenfactory.v1beta1.IEventChangeTFAdmin, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an EventChangeTFAdmin message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns EventChangeTFAdmin
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.tokenfactory.v1beta1.EventChangeTFAdmin;

                /**
                 * Decodes an EventChangeTFAdmin message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns EventChangeTFAdmin
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.tokenfactory.v1beta1.EventChangeTFAdmin;

                /**
                 * Verifies an EventChangeTFAdmin message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an EventChangeTFAdmin message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns EventChangeTFAdmin
                 */
                public static fromObject(object: { [k: string]: any }): injective.tokenfactory.v1beta1.EventChangeTFAdmin;

                /**
                 * Creates a plain object from an EventChangeTFAdmin message. Also converts values to other types if specified.
                 * @param message EventChangeTFAdmin
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.tokenfactory.v1beta1.EventChangeTFAdmin, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this EventChangeTFAdmin to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an EventSetTFDenomMetadata. */
            interface IEventSetTFDenomMetadata {

                /** EventSetTFDenomMetadata denom */
                denom?: (string|null);

                /** EventSetTFDenomMetadata metadata */
                metadata?: (cosmos.bank.v1beta1.IMetadata|null);
            }

            /** Represents an EventSetTFDenomMetadata. */
            class EventSetTFDenomMetadata implements IEventSetTFDenomMetadata {

                /**
                 * Constructs a new EventSetTFDenomMetadata.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.tokenfactory.v1beta1.IEventSetTFDenomMetadata);

                /** EventSetTFDenomMetadata denom. */
                public denom: string;

                /** EventSetTFDenomMetadata metadata. */
                public metadata?: (cosmos.bank.v1beta1.IMetadata|null);

                /**
                 * Encodes the specified EventSetTFDenomMetadata message. Does not implicitly {@link injective.tokenfactory.v1beta1.EventSetTFDenomMetadata.verify|verify} messages.
                 * @param message EventSetTFDenomMetadata message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.tokenfactory.v1beta1.IEventSetTFDenomMetadata, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified EventSetTFDenomMetadata message, length delimited. Does not implicitly {@link injective.tokenfactory.v1beta1.EventSetTFDenomMetadata.verify|verify} messages.
                 * @param message EventSetTFDenomMetadata message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.tokenfactory.v1beta1.IEventSetTFDenomMetadata, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an EventSetTFDenomMetadata message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns EventSetTFDenomMetadata
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.tokenfactory.v1beta1.EventSetTFDenomMetadata;

                /**
                 * Decodes an EventSetTFDenomMetadata message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns EventSetTFDenomMetadata
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.tokenfactory.v1beta1.EventSetTFDenomMetadata;

                /**
                 * Verifies an EventSetTFDenomMetadata message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an EventSetTFDenomMetadata message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns EventSetTFDenomMetadata
                 */
                public static fromObject(object: { [k: string]: any }): injective.tokenfactory.v1beta1.EventSetTFDenomMetadata;

                /**
                 * Creates a plain object from an EventSetTFDenomMetadata message. Also converts values to other types if specified.
                 * @param message EventSetTFDenomMetadata
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.tokenfactory.v1beta1.EventSetTFDenomMetadata, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this EventSetTFDenomMetadata to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Represents a Query */
            class Query extends $protobuf.rpc.Service {

                /**
                 * Constructs a new Query service.
                 * @param rpcImpl RPC implementation
                 * @param [requestDelimited=false] Whether requests are length-delimited
                 * @param [responseDelimited=false] Whether responses are length-delimited
                 */
                constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

                /**
                 * Calls Params.
                 * @param request QueryParamsRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryParamsResponse
                 */
                public params(request: injective.tokenfactory.v1beta1.IQueryParamsRequest, callback: injective.tokenfactory.v1beta1.Query.ParamsCallback): void;

                /**
                 * Calls Params.
                 * @param request QueryParamsRequest message or plain object
                 * @returns Promise
                 */
                public params(request: injective.tokenfactory.v1beta1.IQueryParamsRequest): Promise<injective.tokenfactory.v1beta1.QueryParamsResponse>;

                /**
                 * Calls DenomAuthorityMetadata.
                 * @param request QueryDenomAuthorityMetadataRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryDenomAuthorityMetadataResponse
                 */
                public denomAuthorityMetadata(request: injective.tokenfactory.v1beta1.IQueryDenomAuthorityMetadataRequest, callback: injective.tokenfactory.v1beta1.Query.DenomAuthorityMetadataCallback): void;

                /**
                 * Calls DenomAuthorityMetadata.
                 * @param request QueryDenomAuthorityMetadataRequest message or plain object
                 * @returns Promise
                 */
                public denomAuthorityMetadata(request: injective.tokenfactory.v1beta1.IQueryDenomAuthorityMetadataRequest): Promise<injective.tokenfactory.v1beta1.QueryDenomAuthorityMetadataResponse>;

                /**
                 * Calls DenomsFromCreator.
                 * @param request QueryDenomsFromCreatorRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryDenomsFromCreatorResponse
                 */
                public denomsFromCreator(request: injective.tokenfactory.v1beta1.IQueryDenomsFromCreatorRequest, callback: injective.tokenfactory.v1beta1.Query.DenomsFromCreatorCallback): void;

                /**
                 * Calls DenomsFromCreator.
                 * @param request QueryDenomsFromCreatorRequest message or plain object
                 * @returns Promise
                 */
                public denomsFromCreator(request: injective.tokenfactory.v1beta1.IQueryDenomsFromCreatorRequest): Promise<injective.tokenfactory.v1beta1.QueryDenomsFromCreatorResponse>;

                /**
                 * Calls TokenfactoryModuleState.
                 * @param request QueryModuleStateRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryModuleStateResponse
                 */
                public tokenfactoryModuleState(request: injective.tokenfactory.v1beta1.IQueryModuleStateRequest, callback: injective.tokenfactory.v1beta1.Query.TokenfactoryModuleStateCallback): void;

                /**
                 * Calls TokenfactoryModuleState.
                 * @param request QueryModuleStateRequest message or plain object
                 * @returns Promise
                 */
                public tokenfactoryModuleState(request: injective.tokenfactory.v1beta1.IQueryModuleStateRequest): Promise<injective.tokenfactory.v1beta1.QueryModuleStateResponse>;
            }

            namespace Query {

                /**
                 * Callback as used by {@link injective.tokenfactory.v1beta1.Query#params}.
                 * @param error Error, if any
                 * @param [response] QueryParamsResponse
                 */
                type ParamsCallback = (error: (Error|null), response?: injective.tokenfactory.v1beta1.QueryParamsResponse) => void;

                /**
                 * Callback as used by {@link injective.tokenfactory.v1beta1.Query#denomAuthorityMetadata}.
                 * @param error Error, if any
                 * @param [response] QueryDenomAuthorityMetadataResponse
                 */
                type DenomAuthorityMetadataCallback = (error: (Error|null), response?: injective.tokenfactory.v1beta1.QueryDenomAuthorityMetadataResponse) => void;

                /**
                 * Callback as used by {@link injective.tokenfactory.v1beta1.Query#denomsFromCreator}.
                 * @param error Error, if any
                 * @param [response] QueryDenomsFromCreatorResponse
                 */
                type DenomsFromCreatorCallback = (error: (Error|null), response?: injective.tokenfactory.v1beta1.QueryDenomsFromCreatorResponse) => void;

                /**
                 * Callback as used by {@link injective.tokenfactory.v1beta1.Query#tokenfactoryModuleState}.
                 * @param error Error, if any
                 * @param [response] QueryModuleStateResponse
                 */
                type TokenfactoryModuleStateCallback = (error: (Error|null), response?: injective.tokenfactory.v1beta1.QueryModuleStateResponse) => void;
            }

            /** Properties of a QueryParamsRequest. */
            interface IQueryParamsRequest {
            }

            /** Represents a QueryParamsRequest. */
            class QueryParamsRequest implements IQueryParamsRequest {

                /**
                 * Constructs a new QueryParamsRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.tokenfactory.v1beta1.IQueryParamsRequest);

                /**
                 * Encodes the specified QueryParamsRequest message. Does not implicitly {@link injective.tokenfactory.v1beta1.QueryParamsRequest.verify|verify} messages.
                 * @param message QueryParamsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.tokenfactory.v1beta1.IQueryParamsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryParamsRequest message, length delimited. Does not implicitly {@link injective.tokenfactory.v1beta1.QueryParamsRequest.verify|verify} messages.
                 * @param message QueryParamsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.tokenfactory.v1beta1.IQueryParamsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryParamsRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryParamsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.tokenfactory.v1beta1.QueryParamsRequest;

                /**
                 * Decodes a QueryParamsRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryParamsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.tokenfactory.v1beta1.QueryParamsRequest;

                /**
                 * Verifies a QueryParamsRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryParamsRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryParamsRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.tokenfactory.v1beta1.QueryParamsRequest;

                /**
                 * Creates a plain object from a QueryParamsRequest message. Also converts values to other types if specified.
                 * @param message QueryParamsRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.tokenfactory.v1beta1.QueryParamsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryParamsRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryParamsResponse. */
            interface IQueryParamsResponse {

                /** QueryParamsResponse params */
                params?: (injective.tokenfactory.v1beta1.IParams|null);
            }

            /** Represents a QueryParamsResponse. */
            class QueryParamsResponse implements IQueryParamsResponse {

                /**
                 * Constructs a new QueryParamsResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.tokenfactory.v1beta1.IQueryParamsResponse);

                /** QueryParamsResponse params. */
                public params?: (injective.tokenfactory.v1beta1.IParams|null);

                /**
                 * Encodes the specified QueryParamsResponse message. Does not implicitly {@link injective.tokenfactory.v1beta1.QueryParamsResponse.verify|verify} messages.
                 * @param message QueryParamsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.tokenfactory.v1beta1.IQueryParamsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryParamsResponse message, length delimited. Does not implicitly {@link injective.tokenfactory.v1beta1.QueryParamsResponse.verify|verify} messages.
                 * @param message QueryParamsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.tokenfactory.v1beta1.IQueryParamsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryParamsResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryParamsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.tokenfactory.v1beta1.QueryParamsResponse;

                /**
                 * Decodes a QueryParamsResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryParamsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.tokenfactory.v1beta1.QueryParamsResponse;

                /**
                 * Verifies a QueryParamsResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryParamsResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryParamsResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.tokenfactory.v1beta1.QueryParamsResponse;

                /**
                 * Creates a plain object from a QueryParamsResponse message. Also converts values to other types if specified.
                 * @param message QueryParamsResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.tokenfactory.v1beta1.QueryParamsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryParamsResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryDenomAuthorityMetadataRequest. */
            interface IQueryDenomAuthorityMetadataRequest {

                /** QueryDenomAuthorityMetadataRequest creator */
                creator?: (string|null);

                /** QueryDenomAuthorityMetadataRequest sub_denom */
                sub_denom?: (string|null);
            }

            /** Represents a QueryDenomAuthorityMetadataRequest. */
            class QueryDenomAuthorityMetadataRequest implements IQueryDenomAuthorityMetadataRequest {

                /**
                 * Constructs a new QueryDenomAuthorityMetadataRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.tokenfactory.v1beta1.IQueryDenomAuthorityMetadataRequest);

                /** QueryDenomAuthorityMetadataRequest creator. */
                public creator: string;

                /** QueryDenomAuthorityMetadataRequest sub_denom. */
                public sub_denom: string;

                /**
                 * Encodes the specified QueryDenomAuthorityMetadataRequest message. Does not implicitly {@link injective.tokenfactory.v1beta1.QueryDenomAuthorityMetadataRequest.verify|verify} messages.
                 * @param message QueryDenomAuthorityMetadataRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.tokenfactory.v1beta1.IQueryDenomAuthorityMetadataRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryDenomAuthorityMetadataRequest message, length delimited. Does not implicitly {@link injective.tokenfactory.v1beta1.QueryDenomAuthorityMetadataRequest.verify|verify} messages.
                 * @param message QueryDenomAuthorityMetadataRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.tokenfactory.v1beta1.IQueryDenomAuthorityMetadataRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryDenomAuthorityMetadataRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryDenomAuthorityMetadataRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.tokenfactory.v1beta1.QueryDenomAuthorityMetadataRequest;

                /**
                 * Decodes a QueryDenomAuthorityMetadataRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryDenomAuthorityMetadataRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.tokenfactory.v1beta1.QueryDenomAuthorityMetadataRequest;

                /**
                 * Verifies a QueryDenomAuthorityMetadataRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryDenomAuthorityMetadataRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryDenomAuthorityMetadataRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.tokenfactory.v1beta1.QueryDenomAuthorityMetadataRequest;

                /**
                 * Creates a plain object from a QueryDenomAuthorityMetadataRequest message. Also converts values to other types if specified.
                 * @param message QueryDenomAuthorityMetadataRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.tokenfactory.v1beta1.QueryDenomAuthorityMetadataRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryDenomAuthorityMetadataRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryDenomAuthorityMetadataResponse. */
            interface IQueryDenomAuthorityMetadataResponse {

                /** QueryDenomAuthorityMetadataResponse authority_metadata */
                authority_metadata?: (injective.tokenfactory.v1beta1.IDenomAuthorityMetadata|null);
            }

            /** Represents a QueryDenomAuthorityMetadataResponse. */
            class QueryDenomAuthorityMetadataResponse implements IQueryDenomAuthorityMetadataResponse {

                /**
                 * Constructs a new QueryDenomAuthorityMetadataResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.tokenfactory.v1beta1.IQueryDenomAuthorityMetadataResponse);

                /** QueryDenomAuthorityMetadataResponse authority_metadata. */
                public authority_metadata?: (injective.tokenfactory.v1beta1.IDenomAuthorityMetadata|null);

                /**
                 * Encodes the specified QueryDenomAuthorityMetadataResponse message. Does not implicitly {@link injective.tokenfactory.v1beta1.QueryDenomAuthorityMetadataResponse.verify|verify} messages.
                 * @param message QueryDenomAuthorityMetadataResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.tokenfactory.v1beta1.IQueryDenomAuthorityMetadataResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryDenomAuthorityMetadataResponse message, length delimited. Does not implicitly {@link injective.tokenfactory.v1beta1.QueryDenomAuthorityMetadataResponse.verify|verify} messages.
                 * @param message QueryDenomAuthorityMetadataResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.tokenfactory.v1beta1.IQueryDenomAuthorityMetadataResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryDenomAuthorityMetadataResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryDenomAuthorityMetadataResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.tokenfactory.v1beta1.QueryDenomAuthorityMetadataResponse;

                /**
                 * Decodes a QueryDenomAuthorityMetadataResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryDenomAuthorityMetadataResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.tokenfactory.v1beta1.QueryDenomAuthorityMetadataResponse;

                /**
                 * Verifies a QueryDenomAuthorityMetadataResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryDenomAuthorityMetadataResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryDenomAuthorityMetadataResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.tokenfactory.v1beta1.QueryDenomAuthorityMetadataResponse;

                /**
                 * Creates a plain object from a QueryDenomAuthorityMetadataResponse message. Also converts values to other types if specified.
                 * @param message QueryDenomAuthorityMetadataResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.tokenfactory.v1beta1.QueryDenomAuthorityMetadataResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryDenomAuthorityMetadataResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryDenomsFromCreatorRequest. */
            interface IQueryDenomsFromCreatorRequest {

                /** QueryDenomsFromCreatorRequest creator */
                creator?: (string|null);
            }

            /** Represents a QueryDenomsFromCreatorRequest. */
            class QueryDenomsFromCreatorRequest implements IQueryDenomsFromCreatorRequest {

                /**
                 * Constructs a new QueryDenomsFromCreatorRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.tokenfactory.v1beta1.IQueryDenomsFromCreatorRequest);

                /** QueryDenomsFromCreatorRequest creator. */
                public creator: string;

                /**
                 * Encodes the specified QueryDenomsFromCreatorRequest message. Does not implicitly {@link injective.tokenfactory.v1beta1.QueryDenomsFromCreatorRequest.verify|verify} messages.
                 * @param message QueryDenomsFromCreatorRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.tokenfactory.v1beta1.IQueryDenomsFromCreatorRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryDenomsFromCreatorRequest message, length delimited. Does not implicitly {@link injective.tokenfactory.v1beta1.QueryDenomsFromCreatorRequest.verify|verify} messages.
                 * @param message QueryDenomsFromCreatorRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.tokenfactory.v1beta1.IQueryDenomsFromCreatorRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryDenomsFromCreatorRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryDenomsFromCreatorRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.tokenfactory.v1beta1.QueryDenomsFromCreatorRequest;

                /**
                 * Decodes a QueryDenomsFromCreatorRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryDenomsFromCreatorRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.tokenfactory.v1beta1.QueryDenomsFromCreatorRequest;

                /**
                 * Verifies a QueryDenomsFromCreatorRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryDenomsFromCreatorRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryDenomsFromCreatorRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.tokenfactory.v1beta1.QueryDenomsFromCreatorRequest;

                /**
                 * Creates a plain object from a QueryDenomsFromCreatorRequest message. Also converts values to other types if specified.
                 * @param message QueryDenomsFromCreatorRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.tokenfactory.v1beta1.QueryDenomsFromCreatorRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryDenomsFromCreatorRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryDenomsFromCreatorResponse. */
            interface IQueryDenomsFromCreatorResponse {

                /** QueryDenomsFromCreatorResponse denoms */
                denoms?: (string[]|null);
            }

            /** Represents a QueryDenomsFromCreatorResponse. */
            class QueryDenomsFromCreatorResponse implements IQueryDenomsFromCreatorResponse {

                /**
                 * Constructs a new QueryDenomsFromCreatorResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.tokenfactory.v1beta1.IQueryDenomsFromCreatorResponse);

                /** QueryDenomsFromCreatorResponse denoms. */
                public denoms: string[];

                /**
                 * Encodes the specified QueryDenomsFromCreatorResponse message. Does not implicitly {@link injective.tokenfactory.v1beta1.QueryDenomsFromCreatorResponse.verify|verify} messages.
                 * @param message QueryDenomsFromCreatorResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.tokenfactory.v1beta1.IQueryDenomsFromCreatorResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryDenomsFromCreatorResponse message, length delimited. Does not implicitly {@link injective.tokenfactory.v1beta1.QueryDenomsFromCreatorResponse.verify|verify} messages.
                 * @param message QueryDenomsFromCreatorResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.tokenfactory.v1beta1.IQueryDenomsFromCreatorResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryDenomsFromCreatorResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryDenomsFromCreatorResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.tokenfactory.v1beta1.QueryDenomsFromCreatorResponse;

                /**
                 * Decodes a QueryDenomsFromCreatorResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryDenomsFromCreatorResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.tokenfactory.v1beta1.QueryDenomsFromCreatorResponse;

                /**
                 * Verifies a QueryDenomsFromCreatorResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryDenomsFromCreatorResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryDenomsFromCreatorResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.tokenfactory.v1beta1.QueryDenomsFromCreatorResponse;

                /**
                 * Creates a plain object from a QueryDenomsFromCreatorResponse message. Also converts values to other types if specified.
                 * @param message QueryDenomsFromCreatorResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.tokenfactory.v1beta1.QueryDenomsFromCreatorResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryDenomsFromCreatorResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryModuleStateRequest. */
            interface IQueryModuleStateRequest {
            }

            /** Represents a QueryModuleStateRequest. */
            class QueryModuleStateRequest implements IQueryModuleStateRequest {

                /**
                 * Constructs a new QueryModuleStateRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.tokenfactory.v1beta1.IQueryModuleStateRequest);

                /**
                 * Encodes the specified QueryModuleStateRequest message. Does not implicitly {@link injective.tokenfactory.v1beta1.QueryModuleStateRequest.verify|verify} messages.
                 * @param message QueryModuleStateRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.tokenfactory.v1beta1.IQueryModuleStateRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryModuleStateRequest message, length delimited. Does not implicitly {@link injective.tokenfactory.v1beta1.QueryModuleStateRequest.verify|verify} messages.
                 * @param message QueryModuleStateRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.tokenfactory.v1beta1.IQueryModuleStateRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryModuleStateRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryModuleStateRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.tokenfactory.v1beta1.QueryModuleStateRequest;

                /**
                 * Decodes a QueryModuleStateRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryModuleStateRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.tokenfactory.v1beta1.QueryModuleStateRequest;

                /**
                 * Verifies a QueryModuleStateRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryModuleStateRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryModuleStateRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.tokenfactory.v1beta1.QueryModuleStateRequest;

                /**
                 * Creates a plain object from a QueryModuleStateRequest message. Also converts values to other types if specified.
                 * @param message QueryModuleStateRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.tokenfactory.v1beta1.QueryModuleStateRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryModuleStateRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryModuleStateResponse. */
            interface IQueryModuleStateResponse {

                /** QueryModuleStateResponse state */
                state?: (injective.tokenfactory.v1beta1.IGenesisState|null);
            }

            /** Represents a QueryModuleStateResponse. */
            class QueryModuleStateResponse implements IQueryModuleStateResponse {

                /**
                 * Constructs a new QueryModuleStateResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.tokenfactory.v1beta1.IQueryModuleStateResponse);

                /** QueryModuleStateResponse state. */
                public state?: (injective.tokenfactory.v1beta1.IGenesisState|null);

                /**
                 * Encodes the specified QueryModuleStateResponse message. Does not implicitly {@link injective.tokenfactory.v1beta1.QueryModuleStateResponse.verify|verify} messages.
                 * @param message QueryModuleStateResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.tokenfactory.v1beta1.IQueryModuleStateResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryModuleStateResponse message, length delimited. Does not implicitly {@link injective.tokenfactory.v1beta1.QueryModuleStateResponse.verify|verify} messages.
                 * @param message QueryModuleStateResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.tokenfactory.v1beta1.IQueryModuleStateResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryModuleStateResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryModuleStateResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.tokenfactory.v1beta1.QueryModuleStateResponse;

                /**
                 * Decodes a QueryModuleStateResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryModuleStateResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.tokenfactory.v1beta1.QueryModuleStateResponse;

                /**
                 * Verifies a QueryModuleStateResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryModuleStateResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryModuleStateResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.tokenfactory.v1beta1.QueryModuleStateResponse;

                /**
                 * Creates a plain object from a QueryModuleStateResponse message. Also converts values to other types if specified.
                 * @param message QueryModuleStateResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.tokenfactory.v1beta1.QueryModuleStateResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryModuleStateResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a GenesisState. */
            interface IGenesisState {

                /** GenesisState params */
                params?: (injective.tokenfactory.v1beta1.IParams|null);

                /** GenesisState factory_denoms */
                factory_denoms?: (injective.tokenfactory.v1beta1.IGenesisDenom[]|null);
            }

            /** Represents a GenesisState. */
            class GenesisState implements IGenesisState {

                /**
                 * Constructs a new GenesisState.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.tokenfactory.v1beta1.IGenesisState);

                /** GenesisState params. */
                public params?: (injective.tokenfactory.v1beta1.IParams|null);

                /** GenesisState factory_denoms. */
                public factory_denoms: injective.tokenfactory.v1beta1.IGenesisDenom[];

                /**
                 * Encodes the specified GenesisState message. Does not implicitly {@link injective.tokenfactory.v1beta1.GenesisState.verify|verify} messages.
                 * @param message GenesisState message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.tokenfactory.v1beta1.IGenesisState, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified GenesisState message, length delimited. Does not implicitly {@link injective.tokenfactory.v1beta1.GenesisState.verify|verify} messages.
                 * @param message GenesisState message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.tokenfactory.v1beta1.IGenesisState, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a GenesisState message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns GenesisState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.tokenfactory.v1beta1.GenesisState;

                /**
                 * Decodes a GenesisState message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns GenesisState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.tokenfactory.v1beta1.GenesisState;

                /**
                 * Verifies a GenesisState message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a GenesisState message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns GenesisState
                 */
                public static fromObject(object: { [k: string]: any }): injective.tokenfactory.v1beta1.GenesisState;

                /**
                 * Creates a plain object from a GenesisState message. Also converts values to other types if specified.
                 * @param message GenesisState
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.tokenfactory.v1beta1.GenesisState, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this GenesisState to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a GenesisDenom. */
            interface IGenesisDenom {

                /** GenesisDenom denom */
                denom?: (string|null);

                /** GenesisDenom authority_metadata */
                authority_metadata?: (injective.tokenfactory.v1beta1.IDenomAuthorityMetadata|null);
            }

            /** Represents a GenesisDenom. */
            class GenesisDenom implements IGenesisDenom {

                /**
                 * Constructs a new GenesisDenom.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.tokenfactory.v1beta1.IGenesisDenom);

                /** GenesisDenom denom. */
                public denom: string;

                /** GenesisDenom authority_metadata. */
                public authority_metadata?: (injective.tokenfactory.v1beta1.IDenomAuthorityMetadata|null);

                /**
                 * Encodes the specified GenesisDenom message. Does not implicitly {@link injective.tokenfactory.v1beta1.GenesisDenom.verify|verify} messages.
                 * @param message GenesisDenom message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.tokenfactory.v1beta1.IGenesisDenom, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified GenesisDenom message, length delimited. Does not implicitly {@link injective.tokenfactory.v1beta1.GenesisDenom.verify|verify} messages.
                 * @param message GenesisDenom message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.tokenfactory.v1beta1.IGenesisDenom, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a GenesisDenom message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns GenesisDenom
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.tokenfactory.v1beta1.GenesisDenom;

                /**
                 * Decodes a GenesisDenom message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns GenesisDenom
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.tokenfactory.v1beta1.GenesisDenom;

                /**
                 * Verifies a GenesisDenom message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a GenesisDenom message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns GenesisDenom
                 */
                public static fromObject(object: { [k: string]: any }): injective.tokenfactory.v1beta1.GenesisDenom;

                /**
                 * Creates a plain object from a GenesisDenom message. Also converts values to other types if specified.
                 * @param message GenesisDenom
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.tokenfactory.v1beta1.GenesisDenom, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this GenesisDenom to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }
    }

    /** Namespace types. */
    namespace types {

        /** Namespace v1beta1. */
        namespace v1beta1 {

            /** Properties of an ExtensionOptionsWeb3Tx. */
            interface IExtensionOptionsWeb3Tx {

                /** ExtensionOptionsWeb3Tx typedDataChainID */
                typedDataChainID?: (number|null);

                /** ExtensionOptionsWeb3Tx feePayer */
                feePayer?: (string|null);

                /** ExtensionOptionsWeb3Tx feePayerSig */
                feePayerSig?: (Uint8Array|null);
            }

            /** Represents an ExtensionOptionsWeb3Tx. */
            class ExtensionOptionsWeb3Tx implements IExtensionOptionsWeb3Tx {

                /**
                 * Constructs a new ExtensionOptionsWeb3Tx.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.types.v1beta1.IExtensionOptionsWeb3Tx);

                /** ExtensionOptionsWeb3Tx typedDataChainID. */
                public typedDataChainID: number;

                /** ExtensionOptionsWeb3Tx feePayer. */
                public feePayer: string;

                /** ExtensionOptionsWeb3Tx feePayerSig. */
                public feePayerSig: Uint8Array;

                /**
                 * Encodes the specified ExtensionOptionsWeb3Tx message. Does not implicitly {@link injective.types.v1beta1.ExtensionOptionsWeb3Tx.verify|verify} messages.
                 * @param message ExtensionOptionsWeb3Tx message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.types.v1beta1.IExtensionOptionsWeb3Tx, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ExtensionOptionsWeb3Tx message, length delimited. Does not implicitly {@link injective.types.v1beta1.ExtensionOptionsWeb3Tx.verify|verify} messages.
                 * @param message ExtensionOptionsWeb3Tx message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.types.v1beta1.IExtensionOptionsWeb3Tx, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an ExtensionOptionsWeb3Tx message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ExtensionOptionsWeb3Tx
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.types.v1beta1.ExtensionOptionsWeb3Tx;

                /**
                 * Decodes an ExtensionOptionsWeb3Tx message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ExtensionOptionsWeb3Tx
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.types.v1beta1.ExtensionOptionsWeb3Tx;

                /**
                 * Verifies an ExtensionOptionsWeb3Tx message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an ExtensionOptionsWeb3Tx message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ExtensionOptionsWeb3Tx
                 */
                public static fromObject(object: { [k: string]: any }): injective.types.v1beta1.ExtensionOptionsWeb3Tx;

                /**
                 * Creates a plain object from an ExtensionOptionsWeb3Tx message. Also converts values to other types if specified.
                 * @param message ExtensionOptionsWeb3Tx
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.types.v1beta1.ExtensionOptionsWeb3Tx, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ExtensionOptionsWeb3Tx to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an EthAccount. */
            interface IEthAccount {

                /** EthAccount base_account */
                base_account?: (cosmos.auth.v1beta1.IBaseAccount|null);

                /** EthAccount code_hash */
                code_hash?: (Uint8Array|null);
            }

            /** Represents an EthAccount. */
            class EthAccount implements IEthAccount {

                /**
                 * Constructs a new EthAccount.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.types.v1beta1.IEthAccount);

                /** EthAccount base_account. */
                public base_account?: (cosmos.auth.v1beta1.IBaseAccount|null);

                /** EthAccount code_hash. */
                public code_hash: Uint8Array;

                /**
                 * Encodes the specified EthAccount message. Does not implicitly {@link injective.types.v1beta1.EthAccount.verify|verify} messages.
                 * @param message EthAccount message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.types.v1beta1.IEthAccount, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified EthAccount message, length delimited. Does not implicitly {@link injective.types.v1beta1.EthAccount.verify|verify} messages.
                 * @param message EthAccount message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.types.v1beta1.IEthAccount, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an EthAccount message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns EthAccount
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.types.v1beta1.EthAccount;

                /**
                 * Decodes an EthAccount message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns EthAccount
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.types.v1beta1.EthAccount;

                /**
                 * Verifies an EthAccount message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an EthAccount message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns EthAccount
                 */
                public static fromObject(object: { [k: string]: any }): injective.types.v1beta1.EthAccount;

                /**
                 * Creates a plain object from an EthAccount message. Also converts values to other types if specified.
                 * @param message EthAccount
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.types.v1beta1.EthAccount, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this EthAccount to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a TxResponseGenericMessage. */
            interface ITxResponseGenericMessage {

                /** TxResponseGenericMessage header */
                header?: (string|null);

                /** TxResponseGenericMessage data */
                data?: (Uint8Array|null);
            }

            /** Represents a TxResponseGenericMessage. */
            class TxResponseGenericMessage implements ITxResponseGenericMessage {

                /**
                 * Constructs a new TxResponseGenericMessage.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.types.v1beta1.ITxResponseGenericMessage);

                /** TxResponseGenericMessage header. */
                public header: string;

                /** TxResponseGenericMessage data. */
                public data: Uint8Array;

                /**
                 * Encodes the specified TxResponseGenericMessage message. Does not implicitly {@link injective.types.v1beta1.TxResponseGenericMessage.verify|verify} messages.
                 * @param message TxResponseGenericMessage message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.types.v1beta1.ITxResponseGenericMessage, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified TxResponseGenericMessage message, length delimited. Does not implicitly {@link injective.types.v1beta1.TxResponseGenericMessage.verify|verify} messages.
                 * @param message TxResponseGenericMessage message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.types.v1beta1.ITxResponseGenericMessage, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a TxResponseGenericMessage message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns TxResponseGenericMessage
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.types.v1beta1.TxResponseGenericMessage;

                /**
                 * Decodes a TxResponseGenericMessage message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns TxResponseGenericMessage
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.types.v1beta1.TxResponseGenericMessage;

                /**
                 * Verifies a TxResponseGenericMessage message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a TxResponseGenericMessage message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns TxResponseGenericMessage
                 */
                public static fromObject(object: { [k: string]: any }): injective.types.v1beta1.TxResponseGenericMessage;

                /**
                 * Creates a plain object from a TxResponseGenericMessage message. Also converts values to other types if specified.
                 * @param message TxResponseGenericMessage
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.types.v1beta1.TxResponseGenericMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this TxResponseGenericMessage to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a TxResponseData. */
            interface ITxResponseData {

                /** TxResponseData messages */
                messages?: (injective.types.v1beta1.ITxResponseGenericMessage[]|null);
            }

            /** Represents a TxResponseData. */
            class TxResponseData implements ITxResponseData {

                /**
                 * Constructs a new TxResponseData.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.types.v1beta1.ITxResponseData);

                /** TxResponseData messages. */
                public messages: injective.types.v1beta1.ITxResponseGenericMessage[];

                /**
                 * Encodes the specified TxResponseData message. Does not implicitly {@link injective.types.v1beta1.TxResponseData.verify|verify} messages.
                 * @param message TxResponseData message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.types.v1beta1.ITxResponseData, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified TxResponseData message, length delimited. Does not implicitly {@link injective.types.v1beta1.TxResponseData.verify|verify} messages.
                 * @param message TxResponseData message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.types.v1beta1.ITxResponseData, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a TxResponseData message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns TxResponseData
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.types.v1beta1.TxResponseData;

                /**
                 * Decodes a TxResponseData message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns TxResponseData
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.types.v1beta1.TxResponseData;

                /**
                 * Verifies a TxResponseData message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a TxResponseData message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns TxResponseData
                 */
                public static fromObject(object: { [k: string]: any }): injective.types.v1beta1.TxResponseData;

                /**
                 * Creates a plain object from a TxResponseData message. Also converts values to other types if specified.
                 * @param message TxResponseData
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.types.v1beta1.TxResponseData, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this TxResponseData to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }
    }

    /** Namespace wasmx. */
    namespace wasmx {

        /** Namespace v1. */
        namespace v1 {

            /** Represents a Msg */
            class Msg extends $protobuf.rpc.Service {

                /**
                 * Constructs a new Msg service.
                 * @param rpcImpl RPC implementation
                 * @param [requestDelimited=false] Whether requests are length-delimited
                 * @param [responseDelimited=false] Whether responses are length-delimited
                 */
                constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

                /**
                 * Calls UpdateRegistryContractParams.
                 * @param request MsgUpdateContract message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgUpdateContractResponse
                 */
                public updateRegistryContractParams(request: injective.wasmx.v1.IMsgUpdateContract, callback: injective.wasmx.v1.Msg.UpdateRegistryContractParamsCallback): void;

                /**
                 * Calls UpdateRegistryContractParams.
                 * @param request MsgUpdateContract message or plain object
                 * @returns Promise
                 */
                public updateRegistryContractParams(request: injective.wasmx.v1.IMsgUpdateContract): Promise<injective.wasmx.v1.MsgUpdateContractResponse>;

                /**
                 * Calls ActivateRegistryContract.
                 * @param request MsgActivateContract message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgActivateContractResponse
                 */
                public activateRegistryContract(request: injective.wasmx.v1.IMsgActivateContract, callback: injective.wasmx.v1.Msg.ActivateRegistryContractCallback): void;

                /**
                 * Calls ActivateRegistryContract.
                 * @param request MsgActivateContract message or plain object
                 * @returns Promise
                 */
                public activateRegistryContract(request: injective.wasmx.v1.IMsgActivateContract): Promise<injective.wasmx.v1.MsgActivateContractResponse>;

                /**
                 * Calls DeactivateRegistryContract.
                 * @param request MsgDeactivateContract message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgDeactivateContractResponse
                 */
                public deactivateRegistryContract(request: injective.wasmx.v1.IMsgDeactivateContract, callback: injective.wasmx.v1.Msg.DeactivateRegistryContractCallback): void;

                /**
                 * Calls DeactivateRegistryContract.
                 * @param request MsgDeactivateContract message or plain object
                 * @returns Promise
                 */
                public deactivateRegistryContract(request: injective.wasmx.v1.IMsgDeactivateContract): Promise<injective.wasmx.v1.MsgDeactivateContractResponse>;

                /**
                 * Calls ExecuteContractCompat.
                 * @param request MsgExecuteContractCompat message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgExecuteContractCompatResponse
                 */
                public executeContractCompat(request: injective.wasmx.v1.IMsgExecuteContractCompat, callback: injective.wasmx.v1.Msg.ExecuteContractCompatCallback): void;

                /**
                 * Calls ExecuteContractCompat.
                 * @param request MsgExecuteContractCompat message or plain object
                 * @returns Promise
                 */
                public executeContractCompat(request: injective.wasmx.v1.IMsgExecuteContractCompat): Promise<injective.wasmx.v1.MsgExecuteContractCompatResponse>;

                /**
                 * Calls UpdateParams.
                 * @param request MsgUpdateParams message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgUpdateParamsResponse
                 */
                public updateParams(request: injective.wasmx.v1.IMsgUpdateParams, callback: injective.wasmx.v1.Msg.UpdateParamsCallback): void;

                /**
                 * Calls UpdateParams.
                 * @param request MsgUpdateParams message or plain object
                 * @returns Promise
                 */
                public updateParams(request: injective.wasmx.v1.IMsgUpdateParams): Promise<injective.wasmx.v1.MsgUpdateParamsResponse>;

                /**
                 * Calls RegisterContract.
                 * @param request MsgRegisterContract message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgRegisterContractResponse
                 */
                public registerContract(request: injective.wasmx.v1.IMsgRegisterContract, callback: injective.wasmx.v1.Msg.RegisterContractCallback): void;

                /**
                 * Calls RegisterContract.
                 * @param request MsgRegisterContract message or plain object
                 * @returns Promise
                 */
                public registerContract(request: injective.wasmx.v1.IMsgRegisterContract): Promise<injective.wasmx.v1.MsgRegisterContractResponse>;
            }

            namespace Msg {

                /**
                 * Callback as used by {@link injective.wasmx.v1.Msg#updateRegistryContractParams}.
                 * @param error Error, if any
                 * @param [response] MsgUpdateContractResponse
                 */
                type UpdateRegistryContractParamsCallback = (error: (Error|null), response?: injective.wasmx.v1.MsgUpdateContractResponse) => void;

                /**
                 * Callback as used by {@link injective.wasmx.v1.Msg#activateRegistryContract}.
                 * @param error Error, if any
                 * @param [response] MsgActivateContractResponse
                 */
                type ActivateRegistryContractCallback = (error: (Error|null), response?: injective.wasmx.v1.MsgActivateContractResponse) => void;

                /**
                 * Callback as used by {@link injective.wasmx.v1.Msg#deactivateRegistryContract}.
                 * @param error Error, if any
                 * @param [response] MsgDeactivateContractResponse
                 */
                type DeactivateRegistryContractCallback = (error: (Error|null), response?: injective.wasmx.v1.MsgDeactivateContractResponse) => void;

                /**
                 * Callback as used by {@link injective.wasmx.v1.Msg#executeContractCompat}.
                 * @param error Error, if any
                 * @param [response] MsgExecuteContractCompatResponse
                 */
                type ExecuteContractCompatCallback = (error: (Error|null), response?: injective.wasmx.v1.MsgExecuteContractCompatResponse) => void;

                /**
                 * Callback as used by {@link injective.wasmx.v1.Msg#updateParams}.
                 * @param error Error, if any
                 * @param [response] MsgUpdateParamsResponse
                 */
                type UpdateParamsCallback = (error: (Error|null), response?: injective.wasmx.v1.MsgUpdateParamsResponse) => void;

                /**
                 * Callback as used by {@link injective.wasmx.v1.Msg#registerContract}.
                 * @param error Error, if any
                 * @param [response] MsgRegisterContractResponse
                 */
                type RegisterContractCallback = (error: (Error|null), response?: injective.wasmx.v1.MsgRegisterContractResponse) => void;
            }

            /** Properties of a MsgExecuteContractCompat. */
            interface IMsgExecuteContractCompat {

                /** MsgExecuteContractCompat sender */
                sender?: (string|null);

                /** MsgExecuteContractCompat contract */
                contract?: (string|null);

                /** MsgExecuteContractCompat msg */
                msg?: (string|null);

                /** MsgExecuteContractCompat funds */
                funds?: (string|null);
            }

            /** Represents a MsgExecuteContractCompat. */
            class MsgExecuteContractCompat implements IMsgExecuteContractCompat {

                /**
                 * Constructs a new MsgExecuteContractCompat.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.wasmx.v1.IMsgExecuteContractCompat);

                /** MsgExecuteContractCompat sender. */
                public sender: string;

                /** MsgExecuteContractCompat contract. */
                public contract: string;

                /** MsgExecuteContractCompat msg. */
                public msg: string;

                /** MsgExecuteContractCompat funds. */
                public funds: string;

                /**
                 * Encodes the specified MsgExecuteContractCompat message. Does not implicitly {@link injective.wasmx.v1.MsgExecuteContractCompat.verify|verify} messages.
                 * @param message MsgExecuteContractCompat message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.wasmx.v1.IMsgExecuteContractCompat, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgExecuteContractCompat message, length delimited. Does not implicitly {@link injective.wasmx.v1.MsgExecuteContractCompat.verify|verify} messages.
                 * @param message MsgExecuteContractCompat message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.wasmx.v1.IMsgExecuteContractCompat, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgExecuteContractCompat message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgExecuteContractCompat
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.wasmx.v1.MsgExecuteContractCompat;

                /**
                 * Decodes a MsgExecuteContractCompat message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgExecuteContractCompat
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.wasmx.v1.MsgExecuteContractCompat;

                /**
                 * Verifies a MsgExecuteContractCompat message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgExecuteContractCompat message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgExecuteContractCompat
                 */
                public static fromObject(object: { [k: string]: any }): injective.wasmx.v1.MsgExecuteContractCompat;

                /**
                 * Creates a plain object from a MsgExecuteContractCompat message. Also converts values to other types if specified.
                 * @param message MsgExecuteContractCompat
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.wasmx.v1.MsgExecuteContractCompat, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgExecuteContractCompat to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgExecuteContractCompatResponse. */
            interface IMsgExecuteContractCompatResponse {

                /** MsgExecuteContractCompatResponse data */
                data?: (Uint8Array|null);
            }

            /** Represents a MsgExecuteContractCompatResponse. */
            class MsgExecuteContractCompatResponse implements IMsgExecuteContractCompatResponse {

                /**
                 * Constructs a new MsgExecuteContractCompatResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.wasmx.v1.IMsgExecuteContractCompatResponse);

                /** MsgExecuteContractCompatResponse data. */
                public data: Uint8Array;

                /**
                 * Encodes the specified MsgExecuteContractCompatResponse message. Does not implicitly {@link injective.wasmx.v1.MsgExecuteContractCompatResponse.verify|verify} messages.
                 * @param message MsgExecuteContractCompatResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.wasmx.v1.IMsgExecuteContractCompatResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgExecuteContractCompatResponse message, length delimited. Does not implicitly {@link injective.wasmx.v1.MsgExecuteContractCompatResponse.verify|verify} messages.
                 * @param message MsgExecuteContractCompatResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.wasmx.v1.IMsgExecuteContractCompatResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgExecuteContractCompatResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgExecuteContractCompatResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.wasmx.v1.MsgExecuteContractCompatResponse;

                /**
                 * Decodes a MsgExecuteContractCompatResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgExecuteContractCompatResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.wasmx.v1.MsgExecuteContractCompatResponse;

                /**
                 * Verifies a MsgExecuteContractCompatResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgExecuteContractCompatResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgExecuteContractCompatResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.wasmx.v1.MsgExecuteContractCompatResponse;

                /**
                 * Creates a plain object from a MsgExecuteContractCompatResponse message. Also converts values to other types if specified.
                 * @param message MsgExecuteContractCompatResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.wasmx.v1.MsgExecuteContractCompatResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgExecuteContractCompatResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgUpdateContract. */
            interface IMsgUpdateContract {

                /** MsgUpdateContract sender */
                sender?: (string|null);

                /** MsgUpdateContract contract_address */
                contract_address?: (string|null);

                /** MsgUpdateContract gas_limit */
                gas_limit?: (number|null);

                /** MsgUpdateContract gas_price */
                gas_price?: (number|null);

                /** MsgUpdateContract admin_address */
                admin_address?: (string|null);
            }

            /** Represents a MsgUpdateContract. */
            class MsgUpdateContract implements IMsgUpdateContract {

                /**
                 * Constructs a new MsgUpdateContract.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.wasmx.v1.IMsgUpdateContract);

                /** MsgUpdateContract sender. */
                public sender: string;

                /** MsgUpdateContract contract_address. */
                public contract_address: string;

                /** MsgUpdateContract gas_limit. */
                public gas_limit: number;

                /** MsgUpdateContract gas_price. */
                public gas_price: number;

                /** MsgUpdateContract admin_address. */
                public admin_address: string;

                /**
                 * Encodes the specified MsgUpdateContract message. Does not implicitly {@link injective.wasmx.v1.MsgUpdateContract.verify|verify} messages.
                 * @param message MsgUpdateContract message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.wasmx.v1.IMsgUpdateContract, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgUpdateContract message, length delimited. Does not implicitly {@link injective.wasmx.v1.MsgUpdateContract.verify|verify} messages.
                 * @param message MsgUpdateContract message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.wasmx.v1.IMsgUpdateContract, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgUpdateContract message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgUpdateContract
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.wasmx.v1.MsgUpdateContract;

                /**
                 * Decodes a MsgUpdateContract message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgUpdateContract
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.wasmx.v1.MsgUpdateContract;

                /**
                 * Verifies a MsgUpdateContract message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgUpdateContract message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgUpdateContract
                 */
                public static fromObject(object: { [k: string]: any }): injective.wasmx.v1.MsgUpdateContract;

                /**
                 * Creates a plain object from a MsgUpdateContract message. Also converts values to other types if specified.
                 * @param message MsgUpdateContract
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.wasmx.v1.MsgUpdateContract, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgUpdateContract to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgUpdateContractResponse. */
            interface IMsgUpdateContractResponse {
            }

            /** Represents a MsgUpdateContractResponse. */
            class MsgUpdateContractResponse implements IMsgUpdateContractResponse {

                /**
                 * Constructs a new MsgUpdateContractResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.wasmx.v1.IMsgUpdateContractResponse);

                /**
                 * Encodes the specified MsgUpdateContractResponse message. Does not implicitly {@link injective.wasmx.v1.MsgUpdateContractResponse.verify|verify} messages.
                 * @param message MsgUpdateContractResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.wasmx.v1.IMsgUpdateContractResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgUpdateContractResponse message, length delimited. Does not implicitly {@link injective.wasmx.v1.MsgUpdateContractResponse.verify|verify} messages.
                 * @param message MsgUpdateContractResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.wasmx.v1.IMsgUpdateContractResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgUpdateContractResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgUpdateContractResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.wasmx.v1.MsgUpdateContractResponse;

                /**
                 * Decodes a MsgUpdateContractResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgUpdateContractResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.wasmx.v1.MsgUpdateContractResponse;

                /**
                 * Verifies a MsgUpdateContractResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgUpdateContractResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgUpdateContractResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.wasmx.v1.MsgUpdateContractResponse;

                /**
                 * Creates a plain object from a MsgUpdateContractResponse message. Also converts values to other types if specified.
                 * @param message MsgUpdateContractResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.wasmx.v1.MsgUpdateContractResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgUpdateContractResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgActivateContract. */
            interface IMsgActivateContract {

                /** MsgActivateContract sender */
                sender?: (string|null);

                /** MsgActivateContract contract_address */
                contract_address?: (string|null);
            }

            /** Represents a MsgActivateContract. */
            class MsgActivateContract implements IMsgActivateContract {

                /**
                 * Constructs a new MsgActivateContract.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.wasmx.v1.IMsgActivateContract);

                /** MsgActivateContract sender. */
                public sender: string;

                /** MsgActivateContract contract_address. */
                public contract_address: string;

                /**
                 * Encodes the specified MsgActivateContract message. Does not implicitly {@link injective.wasmx.v1.MsgActivateContract.verify|verify} messages.
                 * @param message MsgActivateContract message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.wasmx.v1.IMsgActivateContract, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgActivateContract message, length delimited. Does not implicitly {@link injective.wasmx.v1.MsgActivateContract.verify|verify} messages.
                 * @param message MsgActivateContract message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.wasmx.v1.IMsgActivateContract, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgActivateContract message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgActivateContract
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.wasmx.v1.MsgActivateContract;

                /**
                 * Decodes a MsgActivateContract message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgActivateContract
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.wasmx.v1.MsgActivateContract;

                /**
                 * Verifies a MsgActivateContract message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgActivateContract message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgActivateContract
                 */
                public static fromObject(object: { [k: string]: any }): injective.wasmx.v1.MsgActivateContract;

                /**
                 * Creates a plain object from a MsgActivateContract message. Also converts values to other types if specified.
                 * @param message MsgActivateContract
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.wasmx.v1.MsgActivateContract, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgActivateContract to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgActivateContractResponse. */
            interface IMsgActivateContractResponse {
            }

            /** Represents a MsgActivateContractResponse. */
            class MsgActivateContractResponse implements IMsgActivateContractResponse {

                /**
                 * Constructs a new MsgActivateContractResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.wasmx.v1.IMsgActivateContractResponse);

                /**
                 * Encodes the specified MsgActivateContractResponse message. Does not implicitly {@link injective.wasmx.v1.MsgActivateContractResponse.verify|verify} messages.
                 * @param message MsgActivateContractResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.wasmx.v1.IMsgActivateContractResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgActivateContractResponse message, length delimited. Does not implicitly {@link injective.wasmx.v1.MsgActivateContractResponse.verify|verify} messages.
                 * @param message MsgActivateContractResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.wasmx.v1.IMsgActivateContractResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgActivateContractResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgActivateContractResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.wasmx.v1.MsgActivateContractResponse;

                /**
                 * Decodes a MsgActivateContractResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgActivateContractResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.wasmx.v1.MsgActivateContractResponse;

                /**
                 * Verifies a MsgActivateContractResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgActivateContractResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgActivateContractResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.wasmx.v1.MsgActivateContractResponse;

                /**
                 * Creates a plain object from a MsgActivateContractResponse message. Also converts values to other types if specified.
                 * @param message MsgActivateContractResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.wasmx.v1.MsgActivateContractResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgActivateContractResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgDeactivateContract. */
            interface IMsgDeactivateContract {

                /** MsgDeactivateContract sender */
                sender?: (string|null);

                /** MsgDeactivateContract contract_address */
                contract_address?: (string|null);
            }

            /** Represents a MsgDeactivateContract. */
            class MsgDeactivateContract implements IMsgDeactivateContract {

                /**
                 * Constructs a new MsgDeactivateContract.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.wasmx.v1.IMsgDeactivateContract);

                /** MsgDeactivateContract sender. */
                public sender: string;

                /** MsgDeactivateContract contract_address. */
                public contract_address: string;

                /**
                 * Encodes the specified MsgDeactivateContract message. Does not implicitly {@link injective.wasmx.v1.MsgDeactivateContract.verify|verify} messages.
                 * @param message MsgDeactivateContract message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.wasmx.v1.IMsgDeactivateContract, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgDeactivateContract message, length delimited. Does not implicitly {@link injective.wasmx.v1.MsgDeactivateContract.verify|verify} messages.
                 * @param message MsgDeactivateContract message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.wasmx.v1.IMsgDeactivateContract, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgDeactivateContract message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgDeactivateContract
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.wasmx.v1.MsgDeactivateContract;

                /**
                 * Decodes a MsgDeactivateContract message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgDeactivateContract
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.wasmx.v1.MsgDeactivateContract;

                /**
                 * Verifies a MsgDeactivateContract message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgDeactivateContract message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgDeactivateContract
                 */
                public static fromObject(object: { [k: string]: any }): injective.wasmx.v1.MsgDeactivateContract;

                /**
                 * Creates a plain object from a MsgDeactivateContract message. Also converts values to other types if specified.
                 * @param message MsgDeactivateContract
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.wasmx.v1.MsgDeactivateContract, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgDeactivateContract to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgDeactivateContractResponse. */
            interface IMsgDeactivateContractResponse {
            }

            /** Represents a MsgDeactivateContractResponse. */
            class MsgDeactivateContractResponse implements IMsgDeactivateContractResponse {

                /**
                 * Constructs a new MsgDeactivateContractResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.wasmx.v1.IMsgDeactivateContractResponse);

                /**
                 * Encodes the specified MsgDeactivateContractResponse message. Does not implicitly {@link injective.wasmx.v1.MsgDeactivateContractResponse.verify|verify} messages.
                 * @param message MsgDeactivateContractResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.wasmx.v1.IMsgDeactivateContractResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgDeactivateContractResponse message, length delimited. Does not implicitly {@link injective.wasmx.v1.MsgDeactivateContractResponse.verify|verify} messages.
                 * @param message MsgDeactivateContractResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.wasmx.v1.IMsgDeactivateContractResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgDeactivateContractResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgDeactivateContractResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.wasmx.v1.MsgDeactivateContractResponse;

                /**
                 * Decodes a MsgDeactivateContractResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgDeactivateContractResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.wasmx.v1.MsgDeactivateContractResponse;

                /**
                 * Verifies a MsgDeactivateContractResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgDeactivateContractResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgDeactivateContractResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.wasmx.v1.MsgDeactivateContractResponse;

                /**
                 * Creates a plain object from a MsgDeactivateContractResponse message. Also converts values to other types if specified.
                 * @param message MsgDeactivateContractResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.wasmx.v1.MsgDeactivateContractResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgDeactivateContractResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgUpdateParams. */
            interface IMsgUpdateParams {

                /** MsgUpdateParams authority */
                authority?: (string|null);

                /** MsgUpdateParams params */
                params?: (injective.wasmx.v1.IParams|null);
            }

            /** Represents a MsgUpdateParams. */
            class MsgUpdateParams implements IMsgUpdateParams {

                /**
                 * Constructs a new MsgUpdateParams.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.wasmx.v1.IMsgUpdateParams);

                /** MsgUpdateParams authority. */
                public authority: string;

                /** MsgUpdateParams params. */
                public params?: (injective.wasmx.v1.IParams|null);

                /**
                 * Encodes the specified MsgUpdateParams message. Does not implicitly {@link injective.wasmx.v1.MsgUpdateParams.verify|verify} messages.
                 * @param message MsgUpdateParams message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.wasmx.v1.IMsgUpdateParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgUpdateParams message, length delimited. Does not implicitly {@link injective.wasmx.v1.MsgUpdateParams.verify|verify} messages.
                 * @param message MsgUpdateParams message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.wasmx.v1.IMsgUpdateParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgUpdateParams message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgUpdateParams
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.wasmx.v1.MsgUpdateParams;

                /**
                 * Decodes a MsgUpdateParams message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgUpdateParams
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.wasmx.v1.MsgUpdateParams;

                /**
                 * Verifies a MsgUpdateParams message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgUpdateParams message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgUpdateParams
                 */
                public static fromObject(object: { [k: string]: any }): injective.wasmx.v1.MsgUpdateParams;

                /**
                 * Creates a plain object from a MsgUpdateParams message. Also converts values to other types if specified.
                 * @param message MsgUpdateParams
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.wasmx.v1.MsgUpdateParams, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgUpdateParams to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgUpdateParamsResponse. */
            interface IMsgUpdateParamsResponse {
            }

            /** Represents a MsgUpdateParamsResponse. */
            class MsgUpdateParamsResponse implements IMsgUpdateParamsResponse {

                /**
                 * Constructs a new MsgUpdateParamsResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.wasmx.v1.IMsgUpdateParamsResponse);

                /**
                 * Encodes the specified MsgUpdateParamsResponse message. Does not implicitly {@link injective.wasmx.v1.MsgUpdateParamsResponse.verify|verify} messages.
                 * @param message MsgUpdateParamsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.wasmx.v1.IMsgUpdateParamsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgUpdateParamsResponse message, length delimited. Does not implicitly {@link injective.wasmx.v1.MsgUpdateParamsResponse.verify|verify} messages.
                 * @param message MsgUpdateParamsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.wasmx.v1.IMsgUpdateParamsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgUpdateParamsResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgUpdateParamsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.wasmx.v1.MsgUpdateParamsResponse;

                /**
                 * Decodes a MsgUpdateParamsResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgUpdateParamsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.wasmx.v1.MsgUpdateParamsResponse;

                /**
                 * Verifies a MsgUpdateParamsResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgUpdateParamsResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgUpdateParamsResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.wasmx.v1.MsgUpdateParamsResponse;

                /**
                 * Creates a plain object from a MsgUpdateParamsResponse message. Also converts values to other types if specified.
                 * @param message MsgUpdateParamsResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.wasmx.v1.MsgUpdateParamsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgUpdateParamsResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgRegisterContract. */
            interface IMsgRegisterContract {

                /** MsgRegisterContract sender */
                sender?: (string|null);

                /** MsgRegisterContract contract_registration_request */
                contract_registration_request?: (injective.wasmx.v1.IContractRegistrationRequest|null);
            }

            /** Represents a MsgRegisterContract. */
            class MsgRegisterContract implements IMsgRegisterContract {

                /**
                 * Constructs a new MsgRegisterContract.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.wasmx.v1.IMsgRegisterContract);

                /** MsgRegisterContract sender. */
                public sender: string;

                /** MsgRegisterContract contract_registration_request. */
                public contract_registration_request?: (injective.wasmx.v1.IContractRegistrationRequest|null);

                /**
                 * Encodes the specified MsgRegisterContract message. Does not implicitly {@link injective.wasmx.v1.MsgRegisterContract.verify|verify} messages.
                 * @param message MsgRegisterContract message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.wasmx.v1.IMsgRegisterContract, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgRegisterContract message, length delimited. Does not implicitly {@link injective.wasmx.v1.MsgRegisterContract.verify|verify} messages.
                 * @param message MsgRegisterContract message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.wasmx.v1.IMsgRegisterContract, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgRegisterContract message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgRegisterContract
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.wasmx.v1.MsgRegisterContract;

                /**
                 * Decodes a MsgRegisterContract message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgRegisterContract
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.wasmx.v1.MsgRegisterContract;

                /**
                 * Verifies a MsgRegisterContract message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgRegisterContract message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgRegisterContract
                 */
                public static fromObject(object: { [k: string]: any }): injective.wasmx.v1.MsgRegisterContract;

                /**
                 * Creates a plain object from a MsgRegisterContract message. Also converts values to other types if specified.
                 * @param message MsgRegisterContract
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.wasmx.v1.MsgRegisterContract, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgRegisterContract to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgRegisterContractResponse. */
            interface IMsgRegisterContractResponse {
            }

            /** Represents a MsgRegisterContractResponse. */
            class MsgRegisterContractResponse implements IMsgRegisterContractResponse {

                /**
                 * Constructs a new MsgRegisterContractResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.wasmx.v1.IMsgRegisterContractResponse);

                /**
                 * Encodes the specified MsgRegisterContractResponse message. Does not implicitly {@link injective.wasmx.v1.MsgRegisterContractResponse.verify|verify} messages.
                 * @param message MsgRegisterContractResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.wasmx.v1.IMsgRegisterContractResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgRegisterContractResponse message, length delimited. Does not implicitly {@link injective.wasmx.v1.MsgRegisterContractResponse.verify|verify} messages.
                 * @param message MsgRegisterContractResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.wasmx.v1.IMsgRegisterContractResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgRegisterContractResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgRegisterContractResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.wasmx.v1.MsgRegisterContractResponse;

                /**
                 * Decodes a MsgRegisterContractResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgRegisterContractResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.wasmx.v1.MsgRegisterContractResponse;

                /**
                 * Verifies a MsgRegisterContractResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgRegisterContractResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgRegisterContractResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.wasmx.v1.MsgRegisterContractResponse;

                /**
                 * Creates a plain object from a MsgRegisterContractResponse message. Also converts values to other types if specified.
                 * @param message MsgRegisterContractResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.wasmx.v1.MsgRegisterContractResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgRegisterContractResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a Params. */
            interface IParams {

                /** Params is_execution_enabled */
                is_execution_enabled?: (boolean|null);

                /** Params max_begin_block_total_gas */
                max_begin_block_total_gas?: (number|null);

                /** Params max_contract_gas_limit */
                max_contract_gas_limit?: (number|null);

                /** Params min_gas_price */
                min_gas_price?: (number|null);
            }

            /** Represents a Params. */
            class Params implements IParams {

                /**
                 * Constructs a new Params.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.wasmx.v1.IParams);

                /** Params is_execution_enabled. */
                public is_execution_enabled: boolean;

                /** Params max_begin_block_total_gas. */
                public max_begin_block_total_gas: number;

                /** Params max_contract_gas_limit. */
                public max_contract_gas_limit: number;

                /** Params min_gas_price. */
                public min_gas_price: number;

                /**
                 * Encodes the specified Params message. Does not implicitly {@link injective.wasmx.v1.Params.verify|verify} messages.
                 * @param message Params message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.wasmx.v1.IParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Params message, length delimited. Does not implicitly {@link injective.wasmx.v1.Params.verify|verify} messages.
                 * @param message Params message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.wasmx.v1.IParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Params message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Params
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.wasmx.v1.Params;

                /**
                 * Decodes a Params message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Params
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.wasmx.v1.Params;

                /**
                 * Verifies a Params message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Params message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Params
                 */
                public static fromObject(object: { [k: string]: any }): injective.wasmx.v1.Params;

                /**
                 * Creates a plain object from a Params message. Also converts values to other types if specified.
                 * @param message Params
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.wasmx.v1.Params, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Params to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a RegisteredContract. */
            interface IRegisteredContract {

                /** RegisteredContract gas_limit */
                gas_limit?: (number|null);

                /** RegisteredContract gas_price */
                gas_price?: (number|null);

                /** RegisteredContract is_executable */
                is_executable?: (boolean|null);

                /** RegisteredContract code_id */
                code_id?: (number|null);

                /** RegisteredContract admin_address */
                admin_address?: (string|null);

                /** RegisteredContract granter_address */
                granter_address?: (string|null);

                /** RegisteredContract fund_mode */
                fund_mode?: (injective.wasmx.v1.FundingMode|null);
            }

            /** Represents a RegisteredContract. */
            class RegisteredContract implements IRegisteredContract {

                /**
                 * Constructs a new RegisteredContract.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.wasmx.v1.IRegisteredContract);

                /** RegisteredContract gas_limit. */
                public gas_limit: number;

                /** RegisteredContract gas_price. */
                public gas_price: number;

                /** RegisteredContract is_executable. */
                public is_executable: boolean;

                /** RegisteredContract code_id. */
                public code_id: number;

                /** RegisteredContract admin_address. */
                public admin_address: string;

                /** RegisteredContract granter_address. */
                public granter_address: string;

                /** RegisteredContract fund_mode. */
                public fund_mode: injective.wasmx.v1.FundingMode;

                /**
                 * Encodes the specified RegisteredContract message. Does not implicitly {@link injective.wasmx.v1.RegisteredContract.verify|verify} messages.
                 * @param message RegisteredContract message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.wasmx.v1.IRegisteredContract, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified RegisteredContract message, length delimited. Does not implicitly {@link injective.wasmx.v1.RegisteredContract.verify|verify} messages.
                 * @param message RegisteredContract message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.wasmx.v1.IRegisteredContract, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a RegisteredContract message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns RegisteredContract
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.wasmx.v1.RegisteredContract;

                /**
                 * Decodes a RegisteredContract message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns RegisteredContract
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.wasmx.v1.RegisteredContract;

                /**
                 * Verifies a RegisteredContract message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a RegisteredContract message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns RegisteredContract
                 */
                public static fromObject(object: { [k: string]: any }): injective.wasmx.v1.RegisteredContract;

                /**
                 * Creates a plain object from a RegisteredContract message. Also converts values to other types if specified.
                 * @param message RegisteredContract
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.wasmx.v1.RegisteredContract, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this RegisteredContract to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a ContractRegistrationRequestProposal. */
            interface IContractRegistrationRequestProposal {

                /** ContractRegistrationRequestProposal title */
                title?: (string|null);

                /** ContractRegistrationRequestProposal description */
                description?: (string|null);

                /** ContractRegistrationRequestProposal contract_registration_request */
                contract_registration_request?: (injective.wasmx.v1.IContractRegistrationRequest|null);
            }

            /** Represents a ContractRegistrationRequestProposal. */
            class ContractRegistrationRequestProposal implements IContractRegistrationRequestProposal {

                /**
                 * Constructs a new ContractRegistrationRequestProposal.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.wasmx.v1.IContractRegistrationRequestProposal);

                /** ContractRegistrationRequestProposal title. */
                public title: string;

                /** ContractRegistrationRequestProposal description. */
                public description: string;

                /** ContractRegistrationRequestProposal contract_registration_request. */
                public contract_registration_request?: (injective.wasmx.v1.IContractRegistrationRequest|null);

                /**
                 * Encodes the specified ContractRegistrationRequestProposal message. Does not implicitly {@link injective.wasmx.v1.ContractRegistrationRequestProposal.verify|verify} messages.
                 * @param message ContractRegistrationRequestProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.wasmx.v1.IContractRegistrationRequestProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ContractRegistrationRequestProposal message, length delimited. Does not implicitly {@link injective.wasmx.v1.ContractRegistrationRequestProposal.verify|verify} messages.
                 * @param message ContractRegistrationRequestProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.wasmx.v1.IContractRegistrationRequestProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ContractRegistrationRequestProposal message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ContractRegistrationRequestProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.wasmx.v1.ContractRegistrationRequestProposal;

                /**
                 * Decodes a ContractRegistrationRequestProposal message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ContractRegistrationRequestProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.wasmx.v1.ContractRegistrationRequestProposal;

                /**
                 * Verifies a ContractRegistrationRequestProposal message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ContractRegistrationRequestProposal message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ContractRegistrationRequestProposal
                 */
                public static fromObject(object: { [k: string]: any }): injective.wasmx.v1.ContractRegistrationRequestProposal;

                /**
                 * Creates a plain object from a ContractRegistrationRequestProposal message. Also converts values to other types if specified.
                 * @param message ContractRegistrationRequestProposal
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.wasmx.v1.ContractRegistrationRequestProposal, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ContractRegistrationRequestProposal to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a BatchContractRegistrationRequestProposal. */
            interface IBatchContractRegistrationRequestProposal {

                /** BatchContractRegistrationRequestProposal title */
                title?: (string|null);

                /** BatchContractRegistrationRequestProposal description */
                description?: (string|null);

                /** BatchContractRegistrationRequestProposal contract_registration_requests */
                contract_registration_requests?: (injective.wasmx.v1.IContractRegistrationRequest[]|null);
            }

            /** Represents a BatchContractRegistrationRequestProposal. */
            class BatchContractRegistrationRequestProposal implements IBatchContractRegistrationRequestProposal {

                /**
                 * Constructs a new BatchContractRegistrationRequestProposal.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.wasmx.v1.IBatchContractRegistrationRequestProposal);

                /** BatchContractRegistrationRequestProposal title. */
                public title: string;

                /** BatchContractRegistrationRequestProposal description. */
                public description: string;

                /** BatchContractRegistrationRequestProposal contract_registration_requests. */
                public contract_registration_requests: injective.wasmx.v1.IContractRegistrationRequest[];

                /**
                 * Encodes the specified BatchContractRegistrationRequestProposal message. Does not implicitly {@link injective.wasmx.v1.BatchContractRegistrationRequestProposal.verify|verify} messages.
                 * @param message BatchContractRegistrationRequestProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.wasmx.v1.IBatchContractRegistrationRequestProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified BatchContractRegistrationRequestProposal message, length delimited. Does not implicitly {@link injective.wasmx.v1.BatchContractRegistrationRequestProposal.verify|verify} messages.
                 * @param message BatchContractRegistrationRequestProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.wasmx.v1.IBatchContractRegistrationRequestProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a BatchContractRegistrationRequestProposal message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns BatchContractRegistrationRequestProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.wasmx.v1.BatchContractRegistrationRequestProposal;

                /**
                 * Decodes a BatchContractRegistrationRequestProposal message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns BatchContractRegistrationRequestProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.wasmx.v1.BatchContractRegistrationRequestProposal;

                /**
                 * Verifies a BatchContractRegistrationRequestProposal message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a BatchContractRegistrationRequestProposal message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns BatchContractRegistrationRequestProposal
                 */
                public static fromObject(object: { [k: string]: any }): injective.wasmx.v1.BatchContractRegistrationRequestProposal;

                /**
                 * Creates a plain object from a BatchContractRegistrationRequestProposal message. Also converts values to other types if specified.
                 * @param message BatchContractRegistrationRequestProposal
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.wasmx.v1.BatchContractRegistrationRequestProposal, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this BatchContractRegistrationRequestProposal to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a BatchContractDeregistrationProposal. */
            interface IBatchContractDeregistrationProposal {

                /** BatchContractDeregistrationProposal title */
                title?: (string|null);

                /** BatchContractDeregistrationProposal description */
                description?: (string|null);

                /** BatchContractDeregistrationProposal contracts */
                contracts?: (string[]|null);
            }

            /** Represents a BatchContractDeregistrationProposal. */
            class BatchContractDeregistrationProposal implements IBatchContractDeregistrationProposal {

                /**
                 * Constructs a new BatchContractDeregistrationProposal.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.wasmx.v1.IBatchContractDeregistrationProposal);

                /** BatchContractDeregistrationProposal title. */
                public title: string;

                /** BatchContractDeregistrationProposal description. */
                public description: string;

                /** BatchContractDeregistrationProposal contracts. */
                public contracts: string[];

                /**
                 * Encodes the specified BatchContractDeregistrationProposal message. Does not implicitly {@link injective.wasmx.v1.BatchContractDeregistrationProposal.verify|verify} messages.
                 * @param message BatchContractDeregistrationProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.wasmx.v1.IBatchContractDeregistrationProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified BatchContractDeregistrationProposal message, length delimited. Does not implicitly {@link injective.wasmx.v1.BatchContractDeregistrationProposal.verify|verify} messages.
                 * @param message BatchContractDeregistrationProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.wasmx.v1.IBatchContractDeregistrationProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a BatchContractDeregistrationProposal message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns BatchContractDeregistrationProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.wasmx.v1.BatchContractDeregistrationProposal;

                /**
                 * Decodes a BatchContractDeregistrationProposal message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns BatchContractDeregistrationProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.wasmx.v1.BatchContractDeregistrationProposal;

                /**
                 * Verifies a BatchContractDeregistrationProposal message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a BatchContractDeregistrationProposal message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns BatchContractDeregistrationProposal
                 */
                public static fromObject(object: { [k: string]: any }): injective.wasmx.v1.BatchContractDeregistrationProposal;

                /**
                 * Creates a plain object from a BatchContractDeregistrationProposal message. Also converts values to other types if specified.
                 * @param message BatchContractDeregistrationProposal
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.wasmx.v1.BatchContractDeregistrationProposal, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this BatchContractDeregistrationProposal to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** FundingMode enum. */
            enum FundingMode {
                Unspecified = 0,
                SelfFunded = 1,
                GrantOnly = 2,
                Dual = 3
            }

            /** Properties of a ContractRegistrationRequest. */
            interface IContractRegistrationRequest {

                /** ContractRegistrationRequest contract_address */
                contract_address?: (string|null);

                /** ContractRegistrationRequest gas_limit */
                gas_limit?: (number|null);

                /** ContractRegistrationRequest gas_price */
                gas_price?: (number|null);

                /** ContractRegistrationRequest should_pin_contract */
                should_pin_contract?: (boolean|null);

                /** ContractRegistrationRequest is_migration_allowed */
                is_migration_allowed?: (boolean|null);

                /** ContractRegistrationRequest code_id */
                code_id?: (number|null);

                /** ContractRegistrationRequest admin_address */
                admin_address?: (string|null);

                /** ContractRegistrationRequest granter_address */
                granter_address?: (string|null);

                /** ContractRegistrationRequest funding_mode */
                funding_mode?: (injective.wasmx.v1.FundingMode|null);
            }

            /** Represents a ContractRegistrationRequest. */
            class ContractRegistrationRequest implements IContractRegistrationRequest {

                /**
                 * Constructs a new ContractRegistrationRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.wasmx.v1.IContractRegistrationRequest);

                /** ContractRegistrationRequest contract_address. */
                public contract_address: string;

                /** ContractRegistrationRequest gas_limit. */
                public gas_limit: number;

                /** ContractRegistrationRequest gas_price. */
                public gas_price: number;

                /** ContractRegistrationRequest should_pin_contract. */
                public should_pin_contract: boolean;

                /** ContractRegistrationRequest is_migration_allowed. */
                public is_migration_allowed: boolean;

                /** ContractRegistrationRequest code_id. */
                public code_id: number;

                /** ContractRegistrationRequest admin_address. */
                public admin_address: string;

                /** ContractRegistrationRequest granter_address. */
                public granter_address: string;

                /** ContractRegistrationRequest funding_mode. */
                public funding_mode: injective.wasmx.v1.FundingMode;

                /**
                 * Encodes the specified ContractRegistrationRequest message. Does not implicitly {@link injective.wasmx.v1.ContractRegistrationRequest.verify|verify} messages.
                 * @param message ContractRegistrationRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.wasmx.v1.IContractRegistrationRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ContractRegistrationRequest message, length delimited. Does not implicitly {@link injective.wasmx.v1.ContractRegistrationRequest.verify|verify} messages.
                 * @param message ContractRegistrationRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.wasmx.v1.IContractRegistrationRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ContractRegistrationRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ContractRegistrationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.wasmx.v1.ContractRegistrationRequest;

                /**
                 * Decodes a ContractRegistrationRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ContractRegistrationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.wasmx.v1.ContractRegistrationRequest;

                /**
                 * Verifies a ContractRegistrationRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ContractRegistrationRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ContractRegistrationRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.wasmx.v1.ContractRegistrationRequest;

                /**
                 * Creates a plain object from a ContractRegistrationRequest message. Also converts values to other types if specified.
                 * @param message ContractRegistrationRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.wasmx.v1.ContractRegistrationRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ContractRegistrationRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a BatchStoreCodeProposal. */
            interface IBatchStoreCodeProposal {

                /** BatchStoreCodeProposal title */
                title?: (string|null);

                /** BatchStoreCodeProposal description */
                description?: (string|null);

                /** BatchStoreCodeProposal proposals */
                proposals?: (cosmwasm.wasm.v1.IStoreCodeProposal[]|null);
            }

            /** Represents a BatchStoreCodeProposal. */
            class BatchStoreCodeProposal implements IBatchStoreCodeProposal {

                /**
                 * Constructs a new BatchStoreCodeProposal.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.wasmx.v1.IBatchStoreCodeProposal);

                /** BatchStoreCodeProposal title. */
                public title: string;

                /** BatchStoreCodeProposal description. */
                public description: string;

                /** BatchStoreCodeProposal proposals. */
                public proposals: cosmwasm.wasm.v1.IStoreCodeProposal[];

                /**
                 * Encodes the specified BatchStoreCodeProposal message. Does not implicitly {@link injective.wasmx.v1.BatchStoreCodeProposal.verify|verify} messages.
                 * @param message BatchStoreCodeProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.wasmx.v1.IBatchStoreCodeProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified BatchStoreCodeProposal message, length delimited. Does not implicitly {@link injective.wasmx.v1.BatchStoreCodeProposal.verify|verify} messages.
                 * @param message BatchStoreCodeProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.wasmx.v1.IBatchStoreCodeProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a BatchStoreCodeProposal message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns BatchStoreCodeProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.wasmx.v1.BatchStoreCodeProposal;

                /**
                 * Decodes a BatchStoreCodeProposal message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns BatchStoreCodeProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.wasmx.v1.BatchStoreCodeProposal;

                /**
                 * Verifies a BatchStoreCodeProposal message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a BatchStoreCodeProposal message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns BatchStoreCodeProposal
                 */
                public static fromObject(object: { [k: string]: any }): injective.wasmx.v1.BatchStoreCodeProposal;

                /**
                 * Creates a plain object from a BatchStoreCodeProposal message. Also converts values to other types if specified.
                 * @param message BatchStoreCodeProposal
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.wasmx.v1.BatchStoreCodeProposal, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this BatchStoreCodeProposal to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an EventContractExecution. */
            interface IEventContractExecution {

                /** EventContractExecution contract_address */
                contract_address?: (string|null);

                /** EventContractExecution response */
                response?: (Uint8Array|null);

                /** EventContractExecution error */
                error?: (string|null);
            }

            /** Represents an EventContractExecution. */
            class EventContractExecution implements IEventContractExecution {

                /**
                 * Constructs a new EventContractExecution.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.wasmx.v1.IEventContractExecution);

                /** EventContractExecution contract_address. */
                public contract_address: string;

                /** EventContractExecution response. */
                public response: Uint8Array;

                /** EventContractExecution error. */
                public error: string;

                /**
                 * Encodes the specified EventContractExecution message. Does not implicitly {@link injective.wasmx.v1.EventContractExecution.verify|verify} messages.
                 * @param message EventContractExecution message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.wasmx.v1.IEventContractExecution, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified EventContractExecution message, length delimited. Does not implicitly {@link injective.wasmx.v1.EventContractExecution.verify|verify} messages.
                 * @param message EventContractExecution message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.wasmx.v1.IEventContractExecution, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an EventContractExecution message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns EventContractExecution
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.wasmx.v1.EventContractExecution;

                /**
                 * Decodes an EventContractExecution message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns EventContractExecution
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.wasmx.v1.EventContractExecution;

                /**
                 * Verifies an EventContractExecution message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an EventContractExecution message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns EventContractExecution
                 */
                public static fromObject(object: { [k: string]: any }): injective.wasmx.v1.EventContractExecution;

                /**
                 * Creates a plain object from an EventContractExecution message. Also converts values to other types if specified.
                 * @param message EventContractExecution
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.wasmx.v1.EventContractExecution, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this EventContractExecution to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Represents a Query */
            class Query extends $protobuf.rpc.Service {

                /**
                 * Constructs a new Query service.
                 * @param rpcImpl RPC implementation
                 * @param [requestDelimited=false] Whether requests are length-delimited
                 * @param [responseDelimited=false] Whether responses are length-delimited
                 */
                constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

                /**
                 * Calls WasmxParams.
                 * @param request QueryWasmxParamsRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryWasmxParamsResponse
                 */
                public wasmxParams(request: injective.wasmx.v1.IQueryWasmxParamsRequest, callback: injective.wasmx.v1.Query.WasmxParamsCallback): void;

                /**
                 * Calls WasmxParams.
                 * @param request QueryWasmxParamsRequest message or plain object
                 * @returns Promise
                 */
                public wasmxParams(request: injective.wasmx.v1.IQueryWasmxParamsRequest): Promise<injective.wasmx.v1.QueryWasmxParamsResponse>;

                /**
                 * Calls ContractRegistrationInfo.
                 * @param request QueryContractRegistrationInfoRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryContractRegistrationInfoResponse
                 */
                public contractRegistrationInfo(request: injective.wasmx.v1.IQueryContractRegistrationInfoRequest, callback: injective.wasmx.v1.Query.ContractRegistrationInfoCallback): void;

                /**
                 * Calls ContractRegistrationInfo.
                 * @param request QueryContractRegistrationInfoRequest message or plain object
                 * @returns Promise
                 */
                public contractRegistrationInfo(request: injective.wasmx.v1.IQueryContractRegistrationInfoRequest): Promise<injective.wasmx.v1.QueryContractRegistrationInfoResponse>;

                /**
                 * Calls WasmxModuleState.
                 * @param request QueryModuleStateRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryModuleStateResponse
                 */
                public wasmxModuleState(request: injective.wasmx.v1.IQueryModuleStateRequest, callback: injective.wasmx.v1.Query.WasmxModuleStateCallback): void;

                /**
                 * Calls WasmxModuleState.
                 * @param request QueryModuleStateRequest message or plain object
                 * @returns Promise
                 */
                public wasmxModuleState(request: injective.wasmx.v1.IQueryModuleStateRequest): Promise<injective.wasmx.v1.QueryModuleStateResponse>;
            }

            namespace Query {

                /**
                 * Callback as used by {@link injective.wasmx.v1.Query#wasmxParams}.
                 * @param error Error, if any
                 * @param [response] QueryWasmxParamsResponse
                 */
                type WasmxParamsCallback = (error: (Error|null), response?: injective.wasmx.v1.QueryWasmxParamsResponse) => void;

                /**
                 * Callback as used by {@link injective.wasmx.v1.Query#contractRegistrationInfo}.
                 * @param error Error, if any
                 * @param [response] QueryContractRegistrationInfoResponse
                 */
                type ContractRegistrationInfoCallback = (error: (Error|null), response?: injective.wasmx.v1.QueryContractRegistrationInfoResponse) => void;

                /**
                 * Callback as used by {@link injective.wasmx.v1.Query#wasmxModuleState}.
                 * @param error Error, if any
                 * @param [response] QueryModuleStateResponse
                 */
                type WasmxModuleStateCallback = (error: (Error|null), response?: injective.wasmx.v1.QueryModuleStateResponse) => void;
            }

            /** Properties of a QueryWasmxParamsRequest. */
            interface IQueryWasmxParamsRequest {
            }

            /** Represents a QueryWasmxParamsRequest. */
            class QueryWasmxParamsRequest implements IQueryWasmxParamsRequest {

                /**
                 * Constructs a new QueryWasmxParamsRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.wasmx.v1.IQueryWasmxParamsRequest);

                /**
                 * Encodes the specified QueryWasmxParamsRequest message. Does not implicitly {@link injective.wasmx.v1.QueryWasmxParamsRequest.verify|verify} messages.
                 * @param message QueryWasmxParamsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.wasmx.v1.IQueryWasmxParamsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryWasmxParamsRequest message, length delimited. Does not implicitly {@link injective.wasmx.v1.QueryWasmxParamsRequest.verify|verify} messages.
                 * @param message QueryWasmxParamsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.wasmx.v1.IQueryWasmxParamsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryWasmxParamsRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryWasmxParamsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.wasmx.v1.QueryWasmxParamsRequest;

                /**
                 * Decodes a QueryWasmxParamsRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryWasmxParamsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.wasmx.v1.QueryWasmxParamsRequest;

                /**
                 * Verifies a QueryWasmxParamsRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryWasmxParamsRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryWasmxParamsRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.wasmx.v1.QueryWasmxParamsRequest;

                /**
                 * Creates a plain object from a QueryWasmxParamsRequest message. Also converts values to other types if specified.
                 * @param message QueryWasmxParamsRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.wasmx.v1.QueryWasmxParamsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryWasmxParamsRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryWasmxParamsResponse. */
            interface IQueryWasmxParamsResponse {

                /** QueryWasmxParamsResponse params */
                params?: (injective.wasmx.v1.IParams|null);
            }

            /** Represents a QueryWasmxParamsResponse. */
            class QueryWasmxParamsResponse implements IQueryWasmxParamsResponse {

                /**
                 * Constructs a new QueryWasmxParamsResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.wasmx.v1.IQueryWasmxParamsResponse);

                /** QueryWasmxParamsResponse params. */
                public params?: (injective.wasmx.v1.IParams|null);

                /**
                 * Encodes the specified QueryWasmxParamsResponse message. Does not implicitly {@link injective.wasmx.v1.QueryWasmxParamsResponse.verify|verify} messages.
                 * @param message QueryWasmxParamsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.wasmx.v1.IQueryWasmxParamsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryWasmxParamsResponse message, length delimited. Does not implicitly {@link injective.wasmx.v1.QueryWasmxParamsResponse.verify|verify} messages.
                 * @param message QueryWasmxParamsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.wasmx.v1.IQueryWasmxParamsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryWasmxParamsResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryWasmxParamsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.wasmx.v1.QueryWasmxParamsResponse;

                /**
                 * Decodes a QueryWasmxParamsResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryWasmxParamsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.wasmx.v1.QueryWasmxParamsResponse;

                /**
                 * Verifies a QueryWasmxParamsResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryWasmxParamsResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryWasmxParamsResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.wasmx.v1.QueryWasmxParamsResponse;

                /**
                 * Creates a plain object from a QueryWasmxParamsResponse message. Also converts values to other types if specified.
                 * @param message QueryWasmxParamsResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.wasmx.v1.QueryWasmxParamsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryWasmxParamsResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryModuleStateRequest. */
            interface IQueryModuleStateRequest {
            }

            /** Represents a QueryModuleStateRequest. */
            class QueryModuleStateRequest implements IQueryModuleStateRequest {

                /**
                 * Constructs a new QueryModuleStateRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.wasmx.v1.IQueryModuleStateRequest);

                /**
                 * Encodes the specified QueryModuleStateRequest message. Does not implicitly {@link injective.wasmx.v1.QueryModuleStateRequest.verify|verify} messages.
                 * @param message QueryModuleStateRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.wasmx.v1.IQueryModuleStateRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryModuleStateRequest message, length delimited. Does not implicitly {@link injective.wasmx.v1.QueryModuleStateRequest.verify|verify} messages.
                 * @param message QueryModuleStateRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.wasmx.v1.IQueryModuleStateRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryModuleStateRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryModuleStateRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.wasmx.v1.QueryModuleStateRequest;

                /**
                 * Decodes a QueryModuleStateRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryModuleStateRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.wasmx.v1.QueryModuleStateRequest;

                /**
                 * Verifies a QueryModuleStateRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryModuleStateRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryModuleStateRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.wasmx.v1.QueryModuleStateRequest;

                /**
                 * Creates a plain object from a QueryModuleStateRequest message. Also converts values to other types if specified.
                 * @param message QueryModuleStateRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.wasmx.v1.QueryModuleStateRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryModuleStateRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryModuleStateResponse. */
            interface IQueryModuleStateResponse {

                /** QueryModuleStateResponse state */
                state?: (injective.wasmx.v1.IGenesisState|null);
            }

            /** Represents a QueryModuleStateResponse. */
            class QueryModuleStateResponse implements IQueryModuleStateResponse {

                /**
                 * Constructs a new QueryModuleStateResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.wasmx.v1.IQueryModuleStateResponse);

                /** QueryModuleStateResponse state. */
                public state?: (injective.wasmx.v1.IGenesisState|null);

                /**
                 * Encodes the specified QueryModuleStateResponse message. Does not implicitly {@link injective.wasmx.v1.QueryModuleStateResponse.verify|verify} messages.
                 * @param message QueryModuleStateResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.wasmx.v1.IQueryModuleStateResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryModuleStateResponse message, length delimited. Does not implicitly {@link injective.wasmx.v1.QueryModuleStateResponse.verify|verify} messages.
                 * @param message QueryModuleStateResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.wasmx.v1.IQueryModuleStateResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryModuleStateResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryModuleStateResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.wasmx.v1.QueryModuleStateResponse;

                /**
                 * Decodes a QueryModuleStateResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryModuleStateResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.wasmx.v1.QueryModuleStateResponse;

                /**
                 * Verifies a QueryModuleStateResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryModuleStateResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryModuleStateResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.wasmx.v1.QueryModuleStateResponse;

                /**
                 * Creates a plain object from a QueryModuleStateResponse message. Also converts values to other types if specified.
                 * @param message QueryModuleStateResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.wasmx.v1.QueryModuleStateResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryModuleStateResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryContractRegistrationInfoRequest. */
            interface IQueryContractRegistrationInfoRequest {

                /** QueryContractRegistrationInfoRequest contract_address */
                contract_address?: (string|null);
            }

            /** Represents a QueryContractRegistrationInfoRequest. */
            class QueryContractRegistrationInfoRequest implements IQueryContractRegistrationInfoRequest {

                /**
                 * Constructs a new QueryContractRegistrationInfoRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.wasmx.v1.IQueryContractRegistrationInfoRequest);

                /** QueryContractRegistrationInfoRequest contract_address. */
                public contract_address: string;

                /**
                 * Encodes the specified QueryContractRegistrationInfoRequest message. Does not implicitly {@link injective.wasmx.v1.QueryContractRegistrationInfoRequest.verify|verify} messages.
                 * @param message QueryContractRegistrationInfoRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.wasmx.v1.IQueryContractRegistrationInfoRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryContractRegistrationInfoRequest message, length delimited. Does not implicitly {@link injective.wasmx.v1.QueryContractRegistrationInfoRequest.verify|verify} messages.
                 * @param message QueryContractRegistrationInfoRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.wasmx.v1.IQueryContractRegistrationInfoRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryContractRegistrationInfoRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryContractRegistrationInfoRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.wasmx.v1.QueryContractRegistrationInfoRequest;

                /**
                 * Decodes a QueryContractRegistrationInfoRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryContractRegistrationInfoRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.wasmx.v1.QueryContractRegistrationInfoRequest;

                /**
                 * Verifies a QueryContractRegistrationInfoRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryContractRegistrationInfoRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryContractRegistrationInfoRequest
                 */
                public static fromObject(object: { [k: string]: any }): injective.wasmx.v1.QueryContractRegistrationInfoRequest;

                /**
                 * Creates a plain object from a QueryContractRegistrationInfoRequest message. Also converts values to other types if specified.
                 * @param message QueryContractRegistrationInfoRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.wasmx.v1.QueryContractRegistrationInfoRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryContractRegistrationInfoRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryContractRegistrationInfoResponse. */
            interface IQueryContractRegistrationInfoResponse {

                /** QueryContractRegistrationInfoResponse contract */
                contract?: (injective.wasmx.v1.IRegisteredContract|null);
            }

            /** Represents a QueryContractRegistrationInfoResponse. */
            class QueryContractRegistrationInfoResponse implements IQueryContractRegistrationInfoResponse {

                /**
                 * Constructs a new QueryContractRegistrationInfoResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.wasmx.v1.IQueryContractRegistrationInfoResponse);

                /** QueryContractRegistrationInfoResponse contract. */
                public contract?: (injective.wasmx.v1.IRegisteredContract|null);

                /**
                 * Encodes the specified QueryContractRegistrationInfoResponse message. Does not implicitly {@link injective.wasmx.v1.QueryContractRegistrationInfoResponse.verify|verify} messages.
                 * @param message QueryContractRegistrationInfoResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.wasmx.v1.IQueryContractRegistrationInfoResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryContractRegistrationInfoResponse message, length delimited. Does not implicitly {@link injective.wasmx.v1.QueryContractRegistrationInfoResponse.verify|verify} messages.
                 * @param message QueryContractRegistrationInfoResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.wasmx.v1.IQueryContractRegistrationInfoResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryContractRegistrationInfoResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryContractRegistrationInfoResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.wasmx.v1.QueryContractRegistrationInfoResponse;

                /**
                 * Decodes a QueryContractRegistrationInfoResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryContractRegistrationInfoResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.wasmx.v1.QueryContractRegistrationInfoResponse;

                /**
                 * Verifies a QueryContractRegistrationInfoResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryContractRegistrationInfoResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryContractRegistrationInfoResponse
                 */
                public static fromObject(object: { [k: string]: any }): injective.wasmx.v1.QueryContractRegistrationInfoResponse;

                /**
                 * Creates a plain object from a QueryContractRegistrationInfoResponse message. Also converts values to other types if specified.
                 * @param message QueryContractRegistrationInfoResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.wasmx.v1.QueryContractRegistrationInfoResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryContractRegistrationInfoResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a RegisteredContractWithAddress. */
            interface IRegisteredContractWithAddress {

                /** RegisteredContractWithAddress address */
                address?: (string|null);

                /** RegisteredContractWithAddress registered_contract */
                registered_contract?: (injective.wasmx.v1.IRegisteredContract|null);
            }

            /** Represents a RegisteredContractWithAddress. */
            class RegisteredContractWithAddress implements IRegisteredContractWithAddress {

                /**
                 * Constructs a new RegisteredContractWithAddress.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.wasmx.v1.IRegisteredContractWithAddress);

                /** RegisteredContractWithAddress address. */
                public address: string;

                /** RegisteredContractWithAddress registered_contract. */
                public registered_contract?: (injective.wasmx.v1.IRegisteredContract|null);

                /**
                 * Encodes the specified RegisteredContractWithAddress message. Does not implicitly {@link injective.wasmx.v1.RegisteredContractWithAddress.verify|verify} messages.
                 * @param message RegisteredContractWithAddress message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.wasmx.v1.IRegisteredContractWithAddress, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified RegisteredContractWithAddress message, length delimited. Does not implicitly {@link injective.wasmx.v1.RegisteredContractWithAddress.verify|verify} messages.
                 * @param message RegisteredContractWithAddress message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.wasmx.v1.IRegisteredContractWithAddress, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a RegisteredContractWithAddress message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns RegisteredContractWithAddress
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.wasmx.v1.RegisteredContractWithAddress;

                /**
                 * Decodes a RegisteredContractWithAddress message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns RegisteredContractWithAddress
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.wasmx.v1.RegisteredContractWithAddress;

                /**
                 * Verifies a RegisteredContractWithAddress message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a RegisteredContractWithAddress message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns RegisteredContractWithAddress
                 */
                public static fromObject(object: { [k: string]: any }): injective.wasmx.v1.RegisteredContractWithAddress;

                /**
                 * Creates a plain object from a RegisteredContractWithAddress message. Also converts values to other types if specified.
                 * @param message RegisteredContractWithAddress
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.wasmx.v1.RegisteredContractWithAddress, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this RegisteredContractWithAddress to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a GenesisState. */
            interface IGenesisState {

                /** GenesisState params */
                params?: (injective.wasmx.v1.IParams|null);

                /** GenesisState registered_contracts */
                registered_contracts?: (injective.wasmx.v1.IRegisteredContractWithAddress[]|null);
            }

            /** Represents a GenesisState. */
            class GenesisState implements IGenesisState {

                /**
                 * Constructs a new GenesisState.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: injective.wasmx.v1.IGenesisState);

                /** GenesisState params. */
                public params?: (injective.wasmx.v1.IParams|null);

                /** GenesisState registered_contracts. */
                public registered_contracts: injective.wasmx.v1.IRegisteredContractWithAddress[];

                /**
                 * Encodes the specified GenesisState message. Does not implicitly {@link injective.wasmx.v1.GenesisState.verify|verify} messages.
                 * @param message GenesisState message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: injective.wasmx.v1.IGenesisState, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified GenesisState message, length delimited. Does not implicitly {@link injective.wasmx.v1.GenesisState.verify|verify} messages.
                 * @param message GenesisState message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: injective.wasmx.v1.IGenesisState, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a GenesisState message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns GenesisState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): injective.wasmx.v1.GenesisState;

                /**
                 * Decodes a GenesisState message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns GenesisState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): injective.wasmx.v1.GenesisState;

                /**
                 * Verifies a GenesisState message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a GenesisState message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns GenesisState
                 */
                public static fromObject(object: { [k: string]: any }): injective.wasmx.v1.GenesisState;

                /**
                 * Creates a plain object from a GenesisState message. Also converts values to other types if specified.
                 * @param message GenesisState
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: injective.wasmx.v1.GenesisState, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this GenesisState to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }
    }
}

/** Namespace cosmos. */
export namespace cosmos {

    /** Namespace base. */
    namespace base {

        /** Namespace v1beta1. */
        namespace v1beta1 {

            /** Properties of a Coin. */
            interface ICoin {

                /** Coin denom */
                denom?: (string|null);

                /** Coin amount */
                amount?: (string|null);
            }

            /** Represents a Coin. */
            class Coin implements ICoin {

                /**
                 * Constructs a new Coin.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.base.v1beta1.ICoin);

                /** Coin denom. */
                public denom: string;

                /** Coin amount. */
                public amount: string;

                /**
                 * Encodes the specified Coin message. Does not implicitly {@link cosmos.base.v1beta1.Coin.verify|verify} messages.
                 * @param message Coin message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.base.v1beta1.ICoin, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Coin message, length delimited. Does not implicitly {@link cosmos.base.v1beta1.Coin.verify|verify} messages.
                 * @param message Coin message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.base.v1beta1.ICoin, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Coin message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Coin
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.base.v1beta1.Coin;

                /**
                 * Decodes a Coin message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Coin
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.base.v1beta1.Coin;

                /**
                 * Verifies a Coin message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Coin message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Coin
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.base.v1beta1.Coin;

                /**
                 * Creates a plain object from a Coin message. Also converts values to other types if specified.
                 * @param message Coin
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.base.v1beta1.Coin, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Coin to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a DecCoin. */
            interface IDecCoin {

                /** DecCoin denom */
                denom?: (string|null);

                /** DecCoin amount */
                amount?: (string|null);
            }

            /** Represents a DecCoin. */
            class DecCoin implements IDecCoin {

                /**
                 * Constructs a new DecCoin.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.base.v1beta1.IDecCoin);

                /** DecCoin denom. */
                public denom: string;

                /** DecCoin amount. */
                public amount: string;

                /**
                 * Encodes the specified DecCoin message. Does not implicitly {@link cosmos.base.v1beta1.DecCoin.verify|verify} messages.
                 * @param message DecCoin message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.base.v1beta1.IDecCoin, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DecCoin message, length delimited. Does not implicitly {@link cosmos.base.v1beta1.DecCoin.verify|verify} messages.
                 * @param message DecCoin message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.base.v1beta1.IDecCoin, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DecCoin message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DecCoin
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.base.v1beta1.DecCoin;

                /**
                 * Decodes a DecCoin message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DecCoin
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.base.v1beta1.DecCoin;

                /**
                 * Verifies a DecCoin message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DecCoin message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DecCoin
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.base.v1beta1.DecCoin;

                /**
                 * Creates a plain object from a DecCoin message. Also converts values to other types if specified.
                 * @param message DecCoin
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.base.v1beta1.DecCoin, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DecCoin to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an IntProto. */
            interface IIntProto {

                /** IntProto int */
                int?: (string|null);
            }

            /** Represents an IntProto. */
            class IntProto implements IIntProto {

                /**
                 * Constructs a new IntProto.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.base.v1beta1.IIntProto);

                /** IntProto int. */
                public int: string;

                /**
                 * Encodes the specified IntProto message. Does not implicitly {@link cosmos.base.v1beta1.IntProto.verify|verify} messages.
                 * @param message IntProto message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.base.v1beta1.IIntProto, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified IntProto message, length delimited. Does not implicitly {@link cosmos.base.v1beta1.IntProto.verify|verify} messages.
                 * @param message IntProto message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.base.v1beta1.IIntProto, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an IntProto message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns IntProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.base.v1beta1.IntProto;

                /**
                 * Decodes an IntProto message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns IntProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.base.v1beta1.IntProto;

                /**
                 * Verifies an IntProto message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an IntProto message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns IntProto
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.base.v1beta1.IntProto;

                /**
                 * Creates a plain object from an IntProto message. Also converts values to other types if specified.
                 * @param message IntProto
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.base.v1beta1.IntProto, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this IntProto to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a DecProto. */
            interface IDecProto {

                /** DecProto dec */
                dec?: (string|null);
            }

            /** Represents a DecProto. */
            class DecProto implements IDecProto {

                /**
                 * Constructs a new DecProto.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.base.v1beta1.IDecProto);

                /** DecProto dec. */
                public dec: string;

                /**
                 * Encodes the specified DecProto message. Does not implicitly {@link cosmos.base.v1beta1.DecProto.verify|verify} messages.
                 * @param message DecProto message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.base.v1beta1.IDecProto, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DecProto message, length delimited. Does not implicitly {@link cosmos.base.v1beta1.DecProto.verify|verify} messages.
                 * @param message DecProto message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.base.v1beta1.IDecProto, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DecProto message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DecProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.base.v1beta1.DecProto;

                /**
                 * Decodes a DecProto message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DecProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.base.v1beta1.DecProto;

                /**
                 * Verifies a DecProto message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DecProto message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DecProto
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.base.v1beta1.DecProto;

                /**
                 * Creates a plain object from a DecProto message. Also converts values to other types if specified.
                 * @param message DecProto
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.base.v1beta1.DecProto, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DecProto to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Namespace query. */
        namespace query {

            /** Namespace v1beta1. */
            namespace v1beta1 {

                /** Properties of a PageRequest. */
                interface IPageRequest {

                    /** PageRequest key */
                    key?: (Uint8Array|null);

                    /** PageRequest offset */
                    offset?: (number|null);

                    /** PageRequest limit */
                    limit?: (number|null);

                    /** PageRequest count_total */
                    count_total?: (boolean|null);

                    /** PageRequest reverse */
                    reverse?: (boolean|null);
                }

                /** Represents a PageRequest. */
                class PageRequest implements IPageRequest {

                    /**
                     * Constructs a new PageRequest.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: cosmos.base.query.v1beta1.IPageRequest);

                    /** PageRequest key. */
                    public key: Uint8Array;

                    /** PageRequest offset. */
                    public offset: number;

                    /** PageRequest limit. */
                    public limit: number;

                    /** PageRequest count_total. */
                    public count_total: boolean;

                    /** PageRequest reverse. */
                    public reverse: boolean;

                    /**
                     * Encodes the specified PageRequest message. Does not implicitly {@link cosmos.base.query.v1beta1.PageRequest.verify|verify} messages.
                     * @param message PageRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: cosmos.base.query.v1beta1.IPageRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified PageRequest message, length delimited. Does not implicitly {@link cosmos.base.query.v1beta1.PageRequest.verify|verify} messages.
                     * @param message PageRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: cosmos.base.query.v1beta1.IPageRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a PageRequest message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns PageRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.base.query.v1beta1.PageRequest;

                    /**
                     * Decodes a PageRequest message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns PageRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.base.query.v1beta1.PageRequest;

                    /**
                     * Verifies a PageRequest message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a PageRequest message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns PageRequest
                     */
                    public static fromObject(object: { [k: string]: any }): cosmos.base.query.v1beta1.PageRequest;

                    /**
                     * Creates a plain object from a PageRequest message. Also converts values to other types if specified.
                     * @param message PageRequest
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: cosmos.base.query.v1beta1.PageRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this PageRequest to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a PageResponse. */
                interface IPageResponse {

                    /** PageResponse next_key */
                    next_key?: (Uint8Array|null);

                    /** PageResponse total */
                    total?: (number|null);
                }

                /** Represents a PageResponse. */
                class PageResponse implements IPageResponse {

                    /**
                     * Constructs a new PageResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: cosmos.base.query.v1beta1.IPageResponse);

                    /** PageResponse next_key. */
                    public next_key: Uint8Array;

                    /** PageResponse total. */
                    public total: number;

                    /**
                     * Encodes the specified PageResponse message. Does not implicitly {@link cosmos.base.query.v1beta1.PageResponse.verify|verify} messages.
                     * @param message PageResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: cosmos.base.query.v1beta1.IPageResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified PageResponse message, length delimited. Does not implicitly {@link cosmos.base.query.v1beta1.PageResponse.verify|verify} messages.
                     * @param message PageResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: cosmos.base.query.v1beta1.IPageResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a PageResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns PageResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.base.query.v1beta1.PageResponse;

                    /**
                     * Decodes a PageResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns PageResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.base.query.v1beta1.PageResponse;

                    /**
                     * Verifies a PageResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a PageResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns PageResponse
                     */
                    public static fromObject(object: { [k: string]: any }): cosmos.base.query.v1beta1.PageResponse;

                    /**
                     * Creates a plain object from a PageResponse message. Also converts values to other types if specified.
                     * @param message PageResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: cosmos.base.query.v1beta1.PageResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this PageResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }
            }
        }
    }

    /** Namespace distribution. */
    namespace distribution {

        /** Namespace v1beta1. */
        namespace v1beta1 {

            /** Properties of a Params. */
            interface IParams {

                /** Params community_tax */
                community_tax?: (string|null);

                /** Params base_proposer_reward */
                base_proposer_reward?: (string|null);

                /** Params bonus_proposer_reward */
                bonus_proposer_reward?: (string|null);

                /** Params withdraw_addr_enabled */
                withdraw_addr_enabled?: (boolean|null);
            }

            /** Represents a Params. */
            class Params implements IParams {

                /**
                 * Constructs a new Params.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.distribution.v1beta1.IParams);

                /** Params community_tax. */
                public community_tax: string;

                /** Params base_proposer_reward. */
                public base_proposer_reward: string;

                /** Params bonus_proposer_reward. */
                public bonus_proposer_reward: string;

                /** Params withdraw_addr_enabled. */
                public withdraw_addr_enabled: boolean;

                /**
                 * Encodes the specified Params message. Does not implicitly {@link cosmos.distribution.v1beta1.Params.verify|verify} messages.
                 * @param message Params message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.distribution.v1beta1.IParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Params message, length delimited. Does not implicitly {@link cosmos.distribution.v1beta1.Params.verify|verify} messages.
                 * @param message Params message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.distribution.v1beta1.IParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Params message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Params
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.distribution.v1beta1.Params;

                /**
                 * Decodes a Params message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Params
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.distribution.v1beta1.Params;

                /**
                 * Verifies a Params message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Params message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Params
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.distribution.v1beta1.Params;

                /**
                 * Creates a plain object from a Params message. Also converts values to other types if specified.
                 * @param message Params
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.distribution.v1beta1.Params, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Params to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a ValidatorHistoricalRewards. */
            interface IValidatorHistoricalRewards {

                /** ValidatorHistoricalRewards cumulative_reward_ratio */
                cumulative_reward_ratio?: (cosmos.base.v1beta1.IDecCoin[]|null);

                /** ValidatorHistoricalRewards reference_count */
                reference_count?: (number|null);
            }

            /** Represents a ValidatorHistoricalRewards. */
            class ValidatorHistoricalRewards implements IValidatorHistoricalRewards {

                /**
                 * Constructs a new ValidatorHistoricalRewards.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.distribution.v1beta1.IValidatorHistoricalRewards);

                /** ValidatorHistoricalRewards cumulative_reward_ratio. */
                public cumulative_reward_ratio: cosmos.base.v1beta1.IDecCoin[];

                /** ValidatorHistoricalRewards reference_count. */
                public reference_count: number;

                /**
                 * Encodes the specified ValidatorHistoricalRewards message. Does not implicitly {@link cosmos.distribution.v1beta1.ValidatorHistoricalRewards.verify|verify} messages.
                 * @param message ValidatorHistoricalRewards message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.distribution.v1beta1.IValidatorHistoricalRewards, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ValidatorHistoricalRewards message, length delimited. Does not implicitly {@link cosmos.distribution.v1beta1.ValidatorHistoricalRewards.verify|verify} messages.
                 * @param message ValidatorHistoricalRewards message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.distribution.v1beta1.IValidatorHistoricalRewards, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ValidatorHistoricalRewards message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ValidatorHistoricalRewards
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.distribution.v1beta1.ValidatorHistoricalRewards;

                /**
                 * Decodes a ValidatorHistoricalRewards message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ValidatorHistoricalRewards
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.distribution.v1beta1.ValidatorHistoricalRewards;

                /**
                 * Verifies a ValidatorHistoricalRewards message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ValidatorHistoricalRewards message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ValidatorHistoricalRewards
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.distribution.v1beta1.ValidatorHistoricalRewards;

                /**
                 * Creates a plain object from a ValidatorHistoricalRewards message. Also converts values to other types if specified.
                 * @param message ValidatorHistoricalRewards
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.distribution.v1beta1.ValidatorHistoricalRewards, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ValidatorHistoricalRewards to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a ValidatorCurrentRewards. */
            interface IValidatorCurrentRewards {

                /** ValidatorCurrentRewards rewards */
                rewards?: (cosmos.base.v1beta1.IDecCoin[]|null);

                /** ValidatorCurrentRewards period */
                period?: (number|null);
            }

            /** Represents a ValidatorCurrentRewards. */
            class ValidatorCurrentRewards implements IValidatorCurrentRewards {

                /**
                 * Constructs a new ValidatorCurrentRewards.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.distribution.v1beta1.IValidatorCurrentRewards);

                /** ValidatorCurrentRewards rewards. */
                public rewards: cosmos.base.v1beta1.IDecCoin[];

                /** ValidatorCurrentRewards period. */
                public period: number;

                /**
                 * Encodes the specified ValidatorCurrentRewards message. Does not implicitly {@link cosmos.distribution.v1beta1.ValidatorCurrentRewards.verify|verify} messages.
                 * @param message ValidatorCurrentRewards message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.distribution.v1beta1.IValidatorCurrentRewards, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ValidatorCurrentRewards message, length delimited. Does not implicitly {@link cosmos.distribution.v1beta1.ValidatorCurrentRewards.verify|verify} messages.
                 * @param message ValidatorCurrentRewards message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.distribution.v1beta1.IValidatorCurrentRewards, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ValidatorCurrentRewards message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ValidatorCurrentRewards
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.distribution.v1beta1.ValidatorCurrentRewards;

                /**
                 * Decodes a ValidatorCurrentRewards message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ValidatorCurrentRewards
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.distribution.v1beta1.ValidatorCurrentRewards;

                /**
                 * Verifies a ValidatorCurrentRewards message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ValidatorCurrentRewards message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ValidatorCurrentRewards
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.distribution.v1beta1.ValidatorCurrentRewards;

                /**
                 * Creates a plain object from a ValidatorCurrentRewards message. Also converts values to other types if specified.
                 * @param message ValidatorCurrentRewards
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.distribution.v1beta1.ValidatorCurrentRewards, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ValidatorCurrentRewards to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a ValidatorAccumulatedCommission. */
            interface IValidatorAccumulatedCommission {

                /** ValidatorAccumulatedCommission commission */
                commission?: (cosmos.base.v1beta1.IDecCoin[]|null);
            }

            /** Represents a ValidatorAccumulatedCommission. */
            class ValidatorAccumulatedCommission implements IValidatorAccumulatedCommission {

                /**
                 * Constructs a new ValidatorAccumulatedCommission.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.distribution.v1beta1.IValidatorAccumulatedCommission);

                /** ValidatorAccumulatedCommission commission. */
                public commission: cosmos.base.v1beta1.IDecCoin[];

                /**
                 * Encodes the specified ValidatorAccumulatedCommission message. Does not implicitly {@link cosmos.distribution.v1beta1.ValidatorAccumulatedCommission.verify|verify} messages.
                 * @param message ValidatorAccumulatedCommission message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.distribution.v1beta1.IValidatorAccumulatedCommission, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ValidatorAccumulatedCommission message, length delimited. Does not implicitly {@link cosmos.distribution.v1beta1.ValidatorAccumulatedCommission.verify|verify} messages.
                 * @param message ValidatorAccumulatedCommission message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.distribution.v1beta1.IValidatorAccumulatedCommission, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ValidatorAccumulatedCommission message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ValidatorAccumulatedCommission
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.distribution.v1beta1.ValidatorAccumulatedCommission;

                /**
                 * Decodes a ValidatorAccumulatedCommission message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ValidatorAccumulatedCommission
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.distribution.v1beta1.ValidatorAccumulatedCommission;

                /**
                 * Verifies a ValidatorAccumulatedCommission message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ValidatorAccumulatedCommission message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ValidatorAccumulatedCommission
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.distribution.v1beta1.ValidatorAccumulatedCommission;

                /**
                 * Creates a plain object from a ValidatorAccumulatedCommission message. Also converts values to other types if specified.
                 * @param message ValidatorAccumulatedCommission
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.distribution.v1beta1.ValidatorAccumulatedCommission, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ValidatorAccumulatedCommission to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a ValidatorOutstandingRewards. */
            interface IValidatorOutstandingRewards {

                /** ValidatorOutstandingRewards rewards */
                rewards?: (cosmos.base.v1beta1.IDecCoin[]|null);
            }

            /** Represents a ValidatorOutstandingRewards. */
            class ValidatorOutstandingRewards implements IValidatorOutstandingRewards {

                /**
                 * Constructs a new ValidatorOutstandingRewards.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.distribution.v1beta1.IValidatorOutstandingRewards);

                /** ValidatorOutstandingRewards rewards. */
                public rewards: cosmos.base.v1beta1.IDecCoin[];

                /**
                 * Encodes the specified ValidatorOutstandingRewards message. Does not implicitly {@link cosmos.distribution.v1beta1.ValidatorOutstandingRewards.verify|verify} messages.
                 * @param message ValidatorOutstandingRewards message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.distribution.v1beta1.IValidatorOutstandingRewards, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ValidatorOutstandingRewards message, length delimited. Does not implicitly {@link cosmos.distribution.v1beta1.ValidatorOutstandingRewards.verify|verify} messages.
                 * @param message ValidatorOutstandingRewards message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.distribution.v1beta1.IValidatorOutstandingRewards, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ValidatorOutstandingRewards message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ValidatorOutstandingRewards
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.distribution.v1beta1.ValidatorOutstandingRewards;

                /**
                 * Decodes a ValidatorOutstandingRewards message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ValidatorOutstandingRewards
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.distribution.v1beta1.ValidatorOutstandingRewards;

                /**
                 * Verifies a ValidatorOutstandingRewards message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ValidatorOutstandingRewards message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ValidatorOutstandingRewards
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.distribution.v1beta1.ValidatorOutstandingRewards;

                /**
                 * Creates a plain object from a ValidatorOutstandingRewards message. Also converts values to other types if specified.
                 * @param message ValidatorOutstandingRewards
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.distribution.v1beta1.ValidatorOutstandingRewards, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ValidatorOutstandingRewards to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a ValidatorSlashEvent. */
            interface IValidatorSlashEvent {

                /** ValidatorSlashEvent validator_period */
                validator_period?: (number|null);

                /** ValidatorSlashEvent fraction */
                fraction?: (string|null);
            }

            /** Represents a ValidatorSlashEvent. */
            class ValidatorSlashEvent implements IValidatorSlashEvent {

                /**
                 * Constructs a new ValidatorSlashEvent.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.distribution.v1beta1.IValidatorSlashEvent);

                /** ValidatorSlashEvent validator_period. */
                public validator_period: number;

                /** ValidatorSlashEvent fraction. */
                public fraction: string;

                /**
                 * Encodes the specified ValidatorSlashEvent message. Does not implicitly {@link cosmos.distribution.v1beta1.ValidatorSlashEvent.verify|verify} messages.
                 * @param message ValidatorSlashEvent message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.distribution.v1beta1.IValidatorSlashEvent, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ValidatorSlashEvent message, length delimited. Does not implicitly {@link cosmos.distribution.v1beta1.ValidatorSlashEvent.verify|verify} messages.
                 * @param message ValidatorSlashEvent message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.distribution.v1beta1.IValidatorSlashEvent, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ValidatorSlashEvent message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ValidatorSlashEvent
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.distribution.v1beta1.ValidatorSlashEvent;

                /**
                 * Decodes a ValidatorSlashEvent message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ValidatorSlashEvent
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.distribution.v1beta1.ValidatorSlashEvent;

                /**
                 * Verifies a ValidatorSlashEvent message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ValidatorSlashEvent message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ValidatorSlashEvent
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.distribution.v1beta1.ValidatorSlashEvent;

                /**
                 * Creates a plain object from a ValidatorSlashEvent message. Also converts values to other types if specified.
                 * @param message ValidatorSlashEvent
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.distribution.v1beta1.ValidatorSlashEvent, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ValidatorSlashEvent to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a ValidatorSlashEvents. */
            interface IValidatorSlashEvents {

                /** ValidatorSlashEvents validator_slash_events */
                validator_slash_events?: (cosmos.distribution.v1beta1.IValidatorSlashEvent[]|null);
            }

            /** Represents a ValidatorSlashEvents. */
            class ValidatorSlashEvents implements IValidatorSlashEvents {

                /**
                 * Constructs a new ValidatorSlashEvents.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.distribution.v1beta1.IValidatorSlashEvents);

                /** ValidatorSlashEvents validator_slash_events. */
                public validator_slash_events: cosmos.distribution.v1beta1.IValidatorSlashEvent[];

                /**
                 * Encodes the specified ValidatorSlashEvents message. Does not implicitly {@link cosmos.distribution.v1beta1.ValidatorSlashEvents.verify|verify} messages.
                 * @param message ValidatorSlashEvents message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.distribution.v1beta1.IValidatorSlashEvents, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ValidatorSlashEvents message, length delimited. Does not implicitly {@link cosmos.distribution.v1beta1.ValidatorSlashEvents.verify|verify} messages.
                 * @param message ValidatorSlashEvents message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.distribution.v1beta1.IValidatorSlashEvents, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ValidatorSlashEvents message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ValidatorSlashEvents
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.distribution.v1beta1.ValidatorSlashEvents;

                /**
                 * Decodes a ValidatorSlashEvents message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ValidatorSlashEvents
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.distribution.v1beta1.ValidatorSlashEvents;

                /**
                 * Verifies a ValidatorSlashEvents message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ValidatorSlashEvents message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ValidatorSlashEvents
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.distribution.v1beta1.ValidatorSlashEvents;

                /**
                 * Creates a plain object from a ValidatorSlashEvents message. Also converts values to other types if specified.
                 * @param message ValidatorSlashEvents
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.distribution.v1beta1.ValidatorSlashEvents, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ValidatorSlashEvents to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a FeePool. */
            interface IFeePool {

                /** FeePool community_pool */
                community_pool?: (cosmos.base.v1beta1.IDecCoin[]|null);
            }

            /** Represents a FeePool. */
            class FeePool implements IFeePool {

                /**
                 * Constructs a new FeePool.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.distribution.v1beta1.IFeePool);

                /** FeePool community_pool. */
                public community_pool: cosmos.base.v1beta1.IDecCoin[];

                /**
                 * Encodes the specified FeePool message. Does not implicitly {@link cosmos.distribution.v1beta1.FeePool.verify|verify} messages.
                 * @param message FeePool message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.distribution.v1beta1.IFeePool, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified FeePool message, length delimited. Does not implicitly {@link cosmos.distribution.v1beta1.FeePool.verify|verify} messages.
                 * @param message FeePool message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.distribution.v1beta1.IFeePool, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a FeePool message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns FeePool
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.distribution.v1beta1.FeePool;

                /**
                 * Decodes a FeePool message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns FeePool
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.distribution.v1beta1.FeePool;

                /**
                 * Verifies a FeePool message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a FeePool message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns FeePool
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.distribution.v1beta1.FeePool;

                /**
                 * Creates a plain object from a FeePool message. Also converts values to other types if specified.
                 * @param message FeePool
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.distribution.v1beta1.FeePool, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this FeePool to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a CommunityPoolSpendProposal. */
            interface ICommunityPoolSpendProposal {

                /** CommunityPoolSpendProposal title */
                title?: (string|null);

                /** CommunityPoolSpendProposal description */
                description?: (string|null);

                /** CommunityPoolSpendProposal recipient */
                recipient?: (string|null);

                /** CommunityPoolSpendProposal amount */
                amount?: (cosmos.base.v1beta1.ICoin[]|null);
            }

            /** Represents a CommunityPoolSpendProposal. */
            class CommunityPoolSpendProposal implements ICommunityPoolSpendProposal {

                /**
                 * Constructs a new CommunityPoolSpendProposal.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.distribution.v1beta1.ICommunityPoolSpendProposal);

                /** CommunityPoolSpendProposal title. */
                public title: string;

                /** CommunityPoolSpendProposal description. */
                public description: string;

                /** CommunityPoolSpendProposal recipient. */
                public recipient: string;

                /** CommunityPoolSpendProposal amount. */
                public amount: cosmos.base.v1beta1.ICoin[];

                /**
                 * Encodes the specified CommunityPoolSpendProposal message. Does not implicitly {@link cosmos.distribution.v1beta1.CommunityPoolSpendProposal.verify|verify} messages.
                 * @param message CommunityPoolSpendProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.distribution.v1beta1.ICommunityPoolSpendProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified CommunityPoolSpendProposal message, length delimited. Does not implicitly {@link cosmos.distribution.v1beta1.CommunityPoolSpendProposal.verify|verify} messages.
                 * @param message CommunityPoolSpendProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.distribution.v1beta1.ICommunityPoolSpendProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a CommunityPoolSpendProposal message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns CommunityPoolSpendProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.distribution.v1beta1.CommunityPoolSpendProposal;

                /**
                 * Decodes a CommunityPoolSpendProposal message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns CommunityPoolSpendProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.distribution.v1beta1.CommunityPoolSpendProposal;

                /**
                 * Verifies a CommunityPoolSpendProposal message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a CommunityPoolSpendProposal message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns CommunityPoolSpendProposal
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.distribution.v1beta1.CommunityPoolSpendProposal;

                /**
                 * Creates a plain object from a CommunityPoolSpendProposal message. Also converts values to other types if specified.
                 * @param message CommunityPoolSpendProposal
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.distribution.v1beta1.CommunityPoolSpendProposal, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this CommunityPoolSpendProposal to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a DelegatorStartingInfo. */
            interface IDelegatorStartingInfo {

                /** DelegatorStartingInfo previous_period */
                previous_period?: (number|null);

                /** DelegatorStartingInfo stake */
                stake?: (string|null);

                /** DelegatorStartingInfo height */
                height?: (number|null);
            }

            /** Represents a DelegatorStartingInfo. */
            class DelegatorStartingInfo implements IDelegatorStartingInfo {

                /**
                 * Constructs a new DelegatorStartingInfo.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.distribution.v1beta1.IDelegatorStartingInfo);

                /** DelegatorStartingInfo previous_period. */
                public previous_period: number;

                /** DelegatorStartingInfo stake. */
                public stake: string;

                /** DelegatorStartingInfo height. */
                public height: number;

                /**
                 * Encodes the specified DelegatorStartingInfo message. Does not implicitly {@link cosmos.distribution.v1beta1.DelegatorStartingInfo.verify|verify} messages.
                 * @param message DelegatorStartingInfo message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.distribution.v1beta1.IDelegatorStartingInfo, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DelegatorStartingInfo message, length delimited. Does not implicitly {@link cosmos.distribution.v1beta1.DelegatorStartingInfo.verify|verify} messages.
                 * @param message DelegatorStartingInfo message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.distribution.v1beta1.IDelegatorStartingInfo, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DelegatorStartingInfo message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DelegatorStartingInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.distribution.v1beta1.DelegatorStartingInfo;

                /**
                 * Decodes a DelegatorStartingInfo message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DelegatorStartingInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.distribution.v1beta1.DelegatorStartingInfo;

                /**
                 * Verifies a DelegatorStartingInfo message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DelegatorStartingInfo message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DelegatorStartingInfo
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.distribution.v1beta1.DelegatorStartingInfo;

                /**
                 * Creates a plain object from a DelegatorStartingInfo message. Also converts values to other types if specified.
                 * @param message DelegatorStartingInfo
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.distribution.v1beta1.DelegatorStartingInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DelegatorStartingInfo to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a DelegationDelegatorReward. */
            interface IDelegationDelegatorReward {

                /** DelegationDelegatorReward validator_address */
                validator_address?: (string|null);

                /** DelegationDelegatorReward reward */
                reward?: (cosmos.base.v1beta1.IDecCoin[]|null);
            }

            /** Represents a DelegationDelegatorReward. */
            class DelegationDelegatorReward implements IDelegationDelegatorReward {

                /**
                 * Constructs a new DelegationDelegatorReward.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.distribution.v1beta1.IDelegationDelegatorReward);

                /** DelegationDelegatorReward validator_address. */
                public validator_address: string;

                /** DelegationDelegatorReward reward. */
                public reward: cosmos.base.v1beta1.IDecCoin[];

                /**
                 * Encodes the specified DelegationDelegatorReward message. Does not implicitly {@link cosmos.distribution.v1beta1.DelegationDelegatorReward.verify|verify} messages.
                 * @param message DelegationDelegatorReward message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.distribution.v1beta1.IDelegationDelegatorReward, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DelegationDelegatorReward message, length delimited. Does not implicitly {@link cosmos.distribution.v1beta1.DelegationDelegatorReward.verify|verify} messages.
                 * @param message DelegationDelegatorReward message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.distribution.v1beta1.IDelegationDelegatorReward, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DelegationDelegatorReward message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DelegationDelegatorReward
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.distribution.v1beta1.DelegationDelegatorReward;

                /**
                 * Decodes a DelegationDelegatorReward message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DelegationDelegatorReward
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.distribution.v1beta1.DelegationDelegatorReward;

                /**
                 * Verifies a DelegationDelegatorReward message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DelegationDelegatorReward message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DelegationDelegatorReward
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.distribution.v1beta1.DelegationDelegatorReward;

                /**
                 * Creates a plain object from a DelegationDelegatorReward message. Also converts values to other types if specified.
                 * @param message DelegationDelegatorReward
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.distribution.v1beta1.DelegationDelegatorReward, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DelegationDelegatorReward to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a CommunityPoolSpendProposalWithDeposit. */
            interface ICommunityPoolSpendProposalWithDeposit {

                /** CommunityPoolSpendProposalWithDeposit title */
                title?: (string|null);

                /** CommunityPoolSpendProposalWithDeposit description */
                description?: (string|null);

                /** CommunityPoolSpendProposalWithDeposit recipient */
                recipient?: (string|null);

                /** CommunityPoolSpendProposalWithDeposit amount */
                amount?: (string|null);

                /** CommunityPoolSpendProposalWithDeposit deposit */
                deposit?: (string|null);
            }

            /** Represents a CommunityPoolSpendProposalWithDeposit. */
            class CommunityPoolSpendProposalWithDeposit implements ICommunityPoolSpendProposalWithDeposit {

                /**
                 * Constructs a new CommunityPoolSpendProposalWithDeposit.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.distribution.v1beta1.ICommunityPoolSpendProposalWithDeposit);

                /** CommunityPoolSpendProposalWithDeposit title. */
                public title: string;

                /** CommunityPoolSpendProposalWithDeposit description. */
                public description: string;

                /** CommunityPoolSpendProposalWithDeposit recipient. */
                public recipient: string;

                /** CommunityPoolSpendProposalWithDeposit amount. */
                public amount: string;

                /** CommunityPoolSpendProposalWithDeposit deposit. */
                public deposit: string;

                /**
                 * Encodes the specified CommunityPoolSpendProposalWithDeposit message. Does not implicitly {@link cosmos.distribution.v1beta1.CommunityPoolSpendProposalWithDeposit.verify|verify} messages.
                 * @param message CommunityPoolSpendProposalWithDeposit message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.distribution.v1beta1.ICommunityPoolSpendProposalWithDeposit, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified CommunityPoolSpendProposalWithDeposit message, length delimited. Does not implicitly {@link cosmos.distribution.v1beta1.CommunityPoolSpendProposalWithDeposit.verify|verify} messages.
                 * @param message CommunityPoolSpendProposalWithDeposit message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.distribution.v1beta1.ICommunityPoolSpendProposalWithDeposit, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a CommunityPoolSpendProposalWithDeposit message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns CommunityPoolSpendProposalWithDeposit
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.distribution.v1beta1.CommunityPoolSpendProposalWithDeposit;

                /**
                 * Decodes a CommunityPoolSpendProposalWithDeposit message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns CommunityPoolSpendProposalWithDeposit
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.distribution.v1beta1.CommunityPoolSpendProposalWithDeposit;

                /**
                 * Verifies a CommunityPoolSpendProposalWithDeposit message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a CommunityPoolSpendProposalWithDeposit message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns CommunityPoolSpendProposalWithDeposit
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.distribution.v1beta1.CommunityPoolSpendProposalWithDeposit;

                /**
                 * Creates a plain object from a CommunityPoolSpendProposalWithDeposit message. Also converts values to other types if specified.
                 * @param message CommunityPoolSpendProposalWithDeposit
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.distribution.v1beta1.CommunityPoolSpendProposalWithDeposit, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this CommunityPoolSpendProposalWithDeposit to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }
    }

    /** Namespace msg. */
    namespace msg {
    }

    /** Namespace bank. */
    namespace bank {

        /** Namespace v1beta1. */
        namespace v1beta1 {

            /** Properties of a Params. */
            interface IParams {

                /** Params send_enabled */
                send_enabled?: (cosmos.bank.v1beta1.ISendEnabled[]|null);

                /** Params default_send_enabled */
                default_send_enabled?: (boolean|null);
            }

            /** Represents a Params. */
            class Params implements IParams {

                /**
                 * Constructs a new Params.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.bank.v1beta1.IParams);

                /** Params send_enabled. */
                public send_enabled: cosmos.bank.v1beta1.ISendEnabled[];

                /** Params default_send_enabled. */
                public default_send_enabled: boolean;

                /**
                 * Encodes the specified Params message. Does not implicitly {@link cosmos.bank.v1beta1.Params.verify|verify} messages.
                 * @param message Params message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.bank.v1beta1.IParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Params message, length delimited. Does not implicitly {@link cosmos.bank.v1beta1.Params.verify|verify} messages.
                 * @param message Params message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.bank.v1beta1.IParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Params message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Params
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.bank.v1beta1.Params;

                /**
                 * Decodes a Params message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Params
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.bank.v1beta1.Params;

                /**
                 * Verifies a Params message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Params message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Params
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.bank.v1beta1.Params;

                /**
                 * Creates a plain object from a Params message. Also converts values to other types if specified.
                 * @param message Params
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.bank.v1beta1.Params, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Params to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a SendEnabled. */
            interface ISendEnabled {

                /** SendEnabled denom */
                denom?: (string|null);

                /** SendEnabled enabled */
                enabled?: (boolean|null);
            }

            /** Represents a SendEnabled. */
            class SendEnabled implements ISendEnabled {

                /**
                 * Constructs a new SendEnabled.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.bank.v1beta1.ISendEnabled);

                /** SendEnabled denom. */
                public denom: string;

                /** SendEnabled enabled. */
                public enabled: boolean;

                /**
                 * Encodes the specified SendEnabled message. Does not implicitly {@link cosmos.bank.v1beta1.SendEnabled.verify|verify} messages.
                 * @param message SendEnabled message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.bank.v1beta1.ISendEnabled, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified SendEnabled message, length delimited. Does not implicitly {@link cosmos.bank.v1beta1.SendEnabled.verify|verify} messages.
                 * @param message SendEnabled message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.bank.v1beta1.ISendEnabled, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a SendEnabled message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns SendEnabled
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.bank.v1beta1.SendEnabled;

                /**
                 * Decodes a SendEnabled message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns SendEnabled
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.bank.v1beta1.SendEnabled;

                /**
                 * Verifies a SendEnabled message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a SendEnabled message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns SendEnabled
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.bank.v1beta1.SendEnabled;

                /**
                 * Creates a plain object from a SendEnabled message. Also converts values to other types if specified.
                 * @param message SendEnabled
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.bank.v1beta1.SendEnabled, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this SendEnabled to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an Input. */
            interface IInput {

                /** Input address */
                address?: (string|null);

                /** Input coins */
                coins?: (cosmos.base.v1beta1.ICoin[]|null);
            }

            /** Represents an Input. */
            class Input implements IInput {

                /**
                 * Constructs a new Input.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.bank.v1beta1.IInput);

                /** Input address. */
                public address: string;

                /** Input coins. */
                public coins: cosmos.base.v1beta1.ICoin[];

                /**
                 * Encodes the specified Input message. Does not implicitly {@link cosmos.bank.v1beta1.Input.verify|verify} messages.
                 * @param message Input message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.bank.v1beta1.IInput, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Input message, length delimited. Does not implicitly {@link cosmos.bank.v1beta1.Input.verify|verify} messages.
                 * @param message Input message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.bank.v1beta1.IInput, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an Input message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Input
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.bank.v1beta1.Input;

                /**
                 * Decodes an Input message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Input
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.bank.v1beta1.Input;

                /**
                 * Verifies an Input message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an Input message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Input
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.bank.v1beta1.Input;

                /**
                 * Creates a plain object from an Input message. Also converts values to other types if specified.
                 * @param message Input
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.bank.v1beta1.Input, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Input to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an Output. */
            interface IOutput {

                /** Output address */
                address?: (string|null);

                /** Output coins */
                coins?: (cosmos.base.v1beta1.ICoin[]|null);
            }

            /** Represents an Output. */
            class Output implements IOutput {

                /**
                 * Constructs a new Output.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.bank.v1beta1.IOutput);

                /** Output address. */
                public address: string;

                /** Output coins. */
                public coins: cosmos.base.v1beta1.ICoin[];

                /**
                 * Encodes the specified Output message. Does not implicitly {@link cosmos.bank.v1beta1.Output.verify|verify} messages.
                 * @param message Output message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.bank.v1beta1.IOutput, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Output message, length delimited. Does not implicitly {@link cosmos.bank.v1beta1.Output.verify|verify} messages.
                 * @param message Output message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.bank.v1beta1.IOutput, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an Output message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Output
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.bank.v1beta1.Output;

                /**
                 * Decodes an Output message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Output
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.bank.v1beta1.Output;

                /**
                 * Verifies an Output message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an Output message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Output
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.bank.v1beta1.Output;

                /**
                 * Creates a plain object from an Output message. Also converts values to other types if specified.
                 * @param message Output
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.bank.v1beta1.Output, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Output to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a Supply. */
            interface ISupply {

                /** Supply total */
                total?: (cosmos.base.v1beta1.ICoin[]|null);
            }

            /** Represents a Supply. */
            class Supply implements ISupply {

                /**
                 * Constructs a new Supply.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.bank.v1beta1.ISupply);

                /** Supply total. */
                public total: cosmos.base.v1beta1.ICoin[];

                /**
                 * Encodes the specified Supply message. Does not implicitly {@link cosmos.bank.v1beta1.Supply.verify|verify} messages.
                 * @param message Supply message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.bank.v1beta1.ISupply, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Supply message, length delimited. Does not implicitly {@link cosmos.bank.v1beta1.Supply.verify|verify} messages.
                 * @param message Supply message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.bank.v1beta1.ISupply, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Supply message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Supply
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.bank.v1beta1.Supply;

                /**
                 * Decodes a Supply message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Supply
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.bank.v1beta1.Supply;

                /**
                 * Verifies a Supply message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Supply message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Supply
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.bank.v1beta1.Supply;

                /**
                 * Creates a plain object from a Supply message. Also converts values to other types if specified.
                 * @param message Supply
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.bank.v1beta1.Supply, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Supply to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a DenomUnit. */
            interface IDenomUnit {

                /** DenomUnit denom */
                denom?: (string|null);

                /** DenomUnit exponent */
                exponent?: (number|null);

                /** DenomUnit aliases */
                aliases?: (string[]|null);
            }

            /** Represents a DenomUnit. */
            class DenomUnit implements IDenomUnit {

                /**
                 * Constructs a new DenomUnit.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.bank.v1beta1.IDenomUnit);

                /** DenomUnit denom. */
                public denom: string;

                /** DenomUnit exponent. */
                public exponent: number;

                /** DenomUnit aliases. */
                public aliases: string[];

                /**
                 * Encodes the specified DenomUnit message. Does not implicitly {@link cosmos.bank.v1beta1.DenomUnit.verify|verify} messages.
                 * @param message DenomUnit message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.bank.v1beta1.IDenomUnit, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DenomUnit message, length delimited. Does not implicitly {@link cosmos.bank.v1beta1.DenomUnit.verify|verify} messages.
                 * @param message DenomUnit message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.bank.v1beta1.IDenomUnit, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DenomUnit message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DenomUnit
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.bank.v1beta1.DenomUnit;

                /**
                 * Decodes a DenomUnit message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DenomUnit
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.bank.v1beta1.DenomUnit;

                /**
                 * Verifies a DenomUnit message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DenomUnit message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DenomUnit
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.bank.v1beta1.DenomUnit;

                /**
                 * Creates a plain object from a DenomUnit message. Also converts values to other types if specified.
                 * @param message DenomUnit
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.bank.v1beta1.DenomUnit, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DenomUnit to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a Metadata. */
            interface IMetadata {

                /** Metadata description */
                description?: (string|null);

                /** Metadata denom_units */
                denom_units?: (cosmos.bank.v1beta1.IDenomUnit[]|null);

                /** Metadata base */
                base?: (string|null);

                /** Metadata display */
                display?: (string|null);

                /** Metadata name */
                name?: (string|null);

                /** Metadata symbol */
                symbol?: (string|null);

                /** Metadata uri */
                uri?: (string|null);

                /** Metadata uri_hash */
                uri_hash?: (string|null);
            }

            /** Represents a Metadata. */
            class Metadata implements IMetadata {

                /**
                 * Constructs a new Metadata.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.bank.v1beta1.IMetadata);

                /** Metadata description. */
                public description: string;

                /** Metadata denom_units. */
                public denom_units: cosmos.bank.v1beta1.IDenomUnit[];

                /** Metadata base. */
                public base: string;

                /** Metadata display. */
                public display: string;

                /** Metadata name. */
                public name: string;

                /** Metadata symbol. */
                public symbol: string;

                /** Metadata uri. */
                public uri: string;

                /** Metadata uri_hash. */
                public uri_hash: string;

                /**
                 * Encodes the specified Metadata message. Does not implicitly {@link cosmos.bank.v1beta1.Metadata.verify|verify} messages.
                 * @param message Metadata message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.bank.v1beta1.IMetadata, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Metadata message, length delimited. Does not implicitly {@link cosmos.bank.v1beta1.Metadata.verify|verify} messages.
                 * @param message Metadata message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.bank.v1beta1.IMetadata, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Metadata message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Metadata
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.bank.v1beta1.Metadata;

                /**
                 * Decodes a Metadata message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Metadata
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.bank.v1beta1.Metadata;

                /**
                 * Verifies a Metadata message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Metadata message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Metadata
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.bank.v1beta1.Metadata;

                /**
                 * Creates a plain object from a Metadata message. Also converts values to other types if specified.
                 * @param message Metadata
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.bank.v1beta1.Metadata, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Metadata to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }
    }

    /** Namespace auth. */
    namespace auth {

        /** Namespace v1beta1. */
        namespace v1beta1 {

            /** Properties of a BaseAccount. */
            interface IBaseAccount {

                /** BaseAccount address */
                address?: (string|null);

                /** BaseAccount pub_key */
                pub_key?: (google.protobuf.IAny|null);

                /** BaseAccount account_number */
                account_number?: (number|null);

                /** BaseAccount sequence */
                sequence?: (number|null);
            }

            /** Represents a BaseAccount. */
            class BaseAccount implements IBaseAccount {

                /**
                 * Constructs a new BaseAccount.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.auth.v1beta1.IBaseAccount);

                /** BaseAccount address. */
                public address: string;

                /** BaseAccount pub_key. */
                public pub_key?: (google.protobuf.IAny|null);

                /** BaseAccount account_number. */
                public account_number: number;

                /** BaseAccount sequence. */
                public sequence: number;

                /**
                 * Encodes the specified BaseAccount message. Does not implicitly {@link cosmos.auth.v1beta1.BaseAccount.verify|verify} messages.
                 * @param message BaseAccount message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.auth.v1beta1.IBaseAccount, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified BaseAccount message, length delimited. Does not implicitly {@link cosmos.auth.v1beta1.BaseAccount.verify|verify} messages.
                 * @param message BaseAccount message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.auth.v1beta1.IBaseAccount, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a BaseAccount message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns BaseAccount
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.auth.v1beta1.BaseAccount;

                /**
                 * Decodes a BaseAccount message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns BaseAccount
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.auth.v1beta1.BaseAccount;

                /**
                 * Verifies a BaseAccount message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a BaseAccount message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns BaseAccount
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.auth.v1beta1.BaseAccount;

                /**
                 * Creates a plain object from a BaseAccount message. Also converts values to other types if specified.
                 * @param message BaseAccount
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.auth.v1beta1.BaseAccount, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this BaseAccount to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a ModuleAccount. */
            interface IModuleAccount {

                /** ModuleAccount base_account */
                base_account?: (cosmos.auth.v1beta1.IBaseAccount|null);

                /** ModuleAccount name */
                name?: (string|null);

                /** ModuleAccount permissions */
                permissions?: (string[]|null);
            }

            /** Represents a ModuleAccount. */
            class ModuleAccount implements IModuleAccount {

                /**
                 * Constructs a new ModuleAccount.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.auth.v1beta1.IModuleAccount);

                /** ModuleAccount base_account. */
                public base_account?: (cosmos.auth.v1beta1.IBaseAccount|null);

                /** ModuleAccount name. */
                public name: string;

                /** ModuleAccount permissions. */
                public permissions: string[];

                /**
                 * Encodes the specified ModuleAccount message. Does not implicitly {@link cosmos.auth.v1beta1.ModuleAccount.verify|verify} messages.
                 * @param message ModuleAccount message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.auth.v1beta1.IModuleAccount, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ModuleAccount message, length delimited. Does not implicitly {@link cosmos.auth.v1beta1.ModuleAccount.verify|verify} messages.
                 * @param message ModuleAccount message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.auth.v1beta1.IModuleAccount, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ModuleAccount message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ModuleAccount
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.auth.v1beta1.ModuleAccount;

                /**
                 * Decodes a ModuleAccount message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ModuleAccount
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.auth.v1beta1.ModuleAccount;

                /**
                 * Verifies a ModuleAccount message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ModuleAccount message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ModuleAccount
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.auth.v1beta1.ModuleAccount;

                /**
                 * Creates a plain object from a ModuleAccount message. Also converts values to other types if specified.
                 * @param message ModuleAccount
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.auth.v1beta1.ModuleAccount, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ModuleAccount to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a ModuleCredential. */
            interface IModuleCredential {

                /** ModuleCredential module_name */
                module_name?: (string|null);

                /** ModuleCredential derivation_keys */
                derivation_keys?: (Uint8Array[]|null);
            }

            /** Represents a ModuleCredential. */
            class ModuleCredential implements IModuleCredential {

                /**
                 * Constructs a new ModuleCredential.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.auth.v1beta1.IModuleCredential);

                /** ModuleCredential module_name. */
                public module_name: string;

                /** ModuleCredential derivation_keys. */
                public derivation_keys: Uint8Array[];

                /**
                 * Encodes the specified ModuleCredential message. Does not implicitly {@link cosmos.auth.v1beta1.ModuleCredential.verify|verify} messages.
                 * @param message ModuleCredential message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.auth.v1beta1.IModuleCredential, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ModuleCredential message, length delimited. Does not implicitly {@link cosmos.auth.v1beta1.ModuleCredential.verify|verify} messages.
                 * @param message ModuleCredential message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.auth.v1beta1.IModuleCredential, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ModuleCredential message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ModuleCredential
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.auth.v1beta1.ModuleCredential;

                /**
                 * Decodes a ModuleCredential message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ModuleCredential
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.auth.v1beta1.ModuleCredential;

                /**
                 * Verifies a ModuleCredential message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ModuleCredential message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ModuleCredential
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.auth.v1beta1.ModuleCredential;

                /**
                 * Creates a plain object from a ModuleCredential message. Also converts values to other types if specified.
                 * @param message ModuleCredential
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.auth.v1beta1.ModuleCredential, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ModuleCredential to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a Params. */
            interface IParams {

                /** Params max_memo_characters */
                max_memo_characters?: (number|null);

                /** Params tx_sig_limit */
                tx_sig_limit?: (number|null);

                /** Params tx_size_cost_per_byte */
                tx_size_cost_per_byte?: (number|null);

                /** Params sig_verify_cost_ed25519 */
                sig_verify_cost_ed25519?: (number|null);

                /** Params sig_verify_cost_secp256k1 */
                sig_verify_cost_secp256k1?: (number|null);
            }

            /** Represents a Params. */
            class Params implements IParams {

                /**
                 * Constructs a new Params.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.auth.v1beta1.IParams);

                /** Params max_memo_characters. */
                public max_memo_characters: number;

                /** Params tx_sig_limit. */
                public tx_sig_limit: number;

                /** Params tx_size_cost_per_byte. */
                public tx_size_cost_per_byte: number;

                /** Params sig_verify_cost_ed25519. */
                public sig_verify_cost_ed25519: number;

                /** Params sig_verify_cost_secp256k1. */
                public sig_verify_cost_secp256k1: number;

                /**
                 * Encodes the specified Params message. Does not implicitly {@link cosmos.auth.v1beta1.Params.verify|verify} messages.
                 * @param message Params message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.auth.v1beta1.IParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Params message, length delimited. Does not implicitly {@link cosmos.auth.v1beta1.Params.verify|verify} messages.
                 * @param message Params message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.auth.v1beta1.IParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Params message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Params
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.auth.v1beta1.Params;

                /**
                 * Decodes a Params message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Params
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.auth.v1beta1.Params;

                /**
                 * Verifies a Params message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Params message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Params
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.auth.v1beta1.Params;

                /**
                 * Creates a plain object from a Params message. Also converts values to other types if specified.
                 * @param message Params
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.auth.v1beta1.Params, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Params to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }
    }
}

/** Namespace google. */
export namespace google {

    /** Namespace protobuf. */
    namespace protobuf {

        /** Properties of a FileDescriptorSet. */
        interface IFileDescriptorSet {

            /** FileDescriptorSet file */
            file?: (google.protobuf.IFileDescriptorProto[]|null);
        }

        /** Represents a FileDescriptorSet. */
        class FileDescriptorSet implements IFileDescriptorSet {

            /**
             * Constructs a new FileDescriptorSet.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IFileDescriptorSet);

            /** FileDescriptorSet file. */
            public file: google.protobuf.IFileDescriptorProto[];

            /**
             * Encodes the specified FileDescriptorSet message. Does not implicitly {@link google.protobuf.FileDescriptorSet.verify|verify} messages.
             * @param message FileDescriptorSet message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IFileDescriptorSet, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified FileDescriptorSet message, length delimited. Does not implicitly {@link google.protobuf.FileDescriptorSet.verify|verify} messages.
             * @param message FileDescriptorSet message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IFileDescriptorSet, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a FileDescriptorSet message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns FileDescriptorSet
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.FileDescriptorSet;

            /**
             * Decodes a FileDescriptorSet message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns FileDescriptorSet
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.FileDescriptorSet;

            /**
             * Verifies a FileDescriptorSet message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a FileDescriptorSet message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns FileDescriptorSet
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.FileDescriptorSet;

            /**
             * Creates a plain object from a FileDescriptorSet message. Also converts values to other types if specified.
             * @param message FileDescriptorSet
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.FileDescriptorSet, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this FileDescriptorSet to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a FileDescriptorProto. */
        interface IFileDescriptorProto {

            /** FileDescriptorProto name */
            name?: (string|null);

            /** FileDescriptorProto package */
            "package"?: (string|null);

            /** FileDescriptorProto dependency */
            dependency?: (string[]|null);

            /** FileDescriptorProto public_dependency */
            public_dependency?: (number[]|null);

            /** FileDescriptorProto weak_dependency */
            weak_dependency?: (number[]|null);

            /** FileDescriptorProto message_type */
            message_type?: (google.protobuf.IDescriptorProto[]|null);

            /** FileDescriptorProto enum_type */
            enum_type?: (google.protobuf.IEnumDescriptorProto[]|null);

            /** FileDescriptorProto service */
            service?: (google.protobuf.IServiceDescriptorProto[]|null);

            /** FileDescriptorProto extension */
            extension?: (google.protobuf.IFieldDescriptorProto[]|null);

            /** FileDescriptorProto options */
            options?: (google.protobuf.IFileOptions|null);

            /** FileDescriptorProto source_code_info */
            source_code_info?: (google.protobuf.ISourceCodeInfo|null);

            /** FileDescriptorProto syntax */
            syntax?: (string|null);
        }

        /** Represents a FileDescriptorProto. */
        class FileDescriptorProto implements IFileDescriptorProto {

            /**
             * Constructs a new FileDescriptorProto.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IFileDescriptorProto);

            /** FileDescriptorProto name. */
            public name: string;

            /** FileDescriptorProto package. */
            public package: string;

            /** FileDescriptorProto dependency. */
            public dependency: string[];

            /** FileDescriptorProto public_dependency. */
            public public_dependency: number[];

            /** FileDescriptorProto weak_dependency. */
            public weak_dependency: number[];

            /** FileDescriptorProto message_type. */
            public message_type: google.protobuf.IDescriptorProto[];

            /** FileDescriptorProto enum_type. */
            public enum_type: google.protobuf.IEnumDescriptorProto[];

            /** FileDescriptorProto service. */
            public service: google.protobuf.IServiceDescriptorProto[];

            /** FileDescriptorProto extension. */
            public extension: google.protobuf.IFieldDescriptorProto[];

            /** FileDescriptorProto options. */
            public options?: (google.protobuf.IFileOptions|null);

            /** FileDescriptorProto source_code_info. */
            public source_code_info?: (google.protobuf.ISourceCodeInfo|null);

            /** FileDescriptorProto syntax. */
            public syntax: string;

            /**
             * Encodes the specified FileDescriptorProto message. Does not implicitly {@link google.protobuf.FileDescriptorProto.verify|verify} messages.
             * @param message FileDescriptorProto message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IFileDescriptorProto, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified FileDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.FileDescriptorProto.verify|verify} messages.
             * @param message FileDescriptorProto message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IFileDescriptorProto, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a FileDescriptorProto message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns FileDescriptorProto
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.FileDescriptorProto;

            /**
             * Decodes a FileDescriptorProto message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns FileDescriptorProto
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.FileDescriptorProto;

            /**
             * Verifies a FileDescriptorProto message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a FileDescriptorProto message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns FileDescriptorProto
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.FileDescriptorProto;

            /**
             * Creates a plain object from a FileDescriptorProto message. Also converts values to other types if specified.
             * @param message FileDescriptorProto
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.FileDescriptorProto, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this FileDescriptorProto to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a DescriptorProto. */
        interface IDescriptorProto {

            /** DescriptorProto name */
            name?: (string|null);

            /** DescriptorProto field */
            field?: (google.protobuf.IFieldDescriptorProto[]|null);

            /** DescriptorProto extension */
            extension?: (google.protobuf.IFieldDescriptorProto[]|null);

            /** DescriptorProto nested_type */
            nested_type?: (google.protobuf.IDescriptorProto[]|null);

            /** DescriptorProto enum_type */
            enum_type?: (google.protobuf.IEnumDescriptorProto[]|null);

            /** DescriptorProto extension_range */
            extension_range?: (google.protobuf.DescriptorProto.IExtensionRange[]|null);

            /** DescriptorProto oneof_decl */
            oneof_decl?: (google.protobuf.IOneofDescriptorProto[]|null);

            /** DescriptorProto options */
            options?: (google.protobuf.IMessageOptions|null);

            /** DescriptorProto reserved_range */
            reserved_range?: (google.protobuf.DescriptorProto.IReservedRange[]|null);

            /** DescriptorProto reserved_name */
            reserved_name?: (string[]|null);
        }

        /** Represents a DescriptorProto. */
        class DescriptorProto implements IDescriptorProto {

            /**
             * Constructs a new DescriptorProto.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IDescriptorProto);

            /** DescriptorProto name. */
            public name: string;

            /** DescriptorProto field. */
            public field: google.protobuf.IFieldDescriptorProto[];

            /** DescriptorProto extension. */
            public extension: google.protobuf.IFieldDescriptorProto[];

            /** DescriptorProto nested_type. */
            public nested_type: google.protobuf.IDescriptorProto[];

            /** DescriptorProto enum_type. */
            public enum_type: google.protobuf.IEnumDescriptorProto[];

            /** DescriptorProto extension_range. */
            public extension_range: google.protobuf.DescriptorProto.IExtensionRange[];

            /** DescriptorProto oneof_decl. */
            public oneof_decl: google.protobuf.IOneofDescriptorProto[];

            /** DescriptorProto options. */
            public options?: (google.protobuf.IMessageOptions|null);

            /** DescriptorProto reserved_range. */
            public reserved_range: google.protobuf.DescriptorProto.IReservedRange[];

            /** DescriptorProto reserved_name. */
            public reserved_name: string[];

            /**
             * Encodes the specified DescriptorProto message. Does not implicitly {@link google.protobuf.DescriptorProto.verify|verify} messages.
             * @param message DescriptorProto message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IDescriptorProto, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified DescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.verify|verify} messages.
             * @param message DescriptorProto message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IDescriptorProto, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a DescriptorProto message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns DescriptorProto
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.DescriptorProto;

            /**
             * Decodes a DescriptorProto message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns DescriptorProto
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.DescriptorProto;

            /**
             * Verifies a DescriptorProto message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a DescriptorProto message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns DescriptorProto
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.DescriptorProto;

            /**
             * Creates a plain object from a DescriptorProto message. Also converts values to other types if specified.
             * @param message DescriptorProto
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.DescriptorProto, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this DescriptorProto to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace DescriptorProto {

            /** Properties of an ExtensionRange. */
            interface IExtensionRange {

                /** ExtensionRange start */
                start?: (number|null);

                /** ExtensionRange end */
                end?: (number|null);
            }

            /** Represents an ExtensionRange. */
            class ExtensionRange implements IExtensionRange {

                /**
                 * Constructs a new ExtensionRange.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: google.protobuf.DescriptorProto.IExtensionRange);

                /** ExtensionRange start. */
                public start: number;

                /** ExtensionRange end. */
                public end: number;

                /**
                 * Encodes the specified ExtensionRange message. Does not implicitly {@link google.protobuf.DescriptorProto.ExtensionRange.verify|verify} messages.
                 * @param message ExtensionRange message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: google.protobuf.DescriptorProto.IExtensionRange, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ExtensionRange message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.ExtensionRange.verify|verify} messages.
                 * @param message ExtensionRange message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: google.protobuf.DescriptorProto.IExtensionRange, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an ExtensionRange message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ExtensionRange
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.DescriptorProto.ExtensionRange;

                /**
                 * Decodes an ExtensionRange message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ExtensionRange
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.DescriptorProto.ExtensionRange;

                /**
                 * Verifies an ExtensionRange message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an ExtensionRange message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ExtensionRange
                 */
                public static fromObject(object: { [k: string]: any }): google.protobuf.DescriptorProto.ExtensionRange;

                /**
                 * Creates a plain object from an ExtensionRange message. Also converts values to other types if specified.
                 * @param message ExtensionRange
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: google.protobuf.DescriptorProto.ExtensionRange, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ExtensionRange to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a ReservedRange. */
            interface IReservedRange {

                /** ReservedRange start */
                start?: (number|null);

                /** ReservedRange end */
                end?: (number|null);
            }

            /** Represents a ReservedRange. */
            class ReservedRange implements IReservedRange {

                /**
                 * Constructs a new ReservedRange.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: google.protobuf.DescriptorProto.IReservedRange);

                /** ReservedRange start. */
                public start: number;

                /** ReservedRange end. */
                public end: number;

                /**
                 * Encodes the specified ReservedRange message. Does not implicitly {@link google.protobuf.DescriptorProto.ReservedRange.verify|verify} messages.
                 * @param message ReservedRange message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: google.protobuf.DescriptorProto.IReservedRange, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ReservedRange message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.ReservedRange.verify|verify} messages.
                 * @param message ReservedRange message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: google.protobuf.DescriptorProto.IReservedRange, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ReservedRange message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ReservedRange
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.DescriptorProto.ReservedRange;

                /**
                 * Decodes a ReservedRange message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ReservedRange
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.DescriptorProto.ReservedRange;

                /**
                 * Verifies a ReservedRange message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ReservedRange message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ReservedRange
                 */
                public static fromObject(object: { [k: string]: any }): google.protobuf.DescriptorProto.ReservedRange;

                /**
                 * Creates a plain object from a ReservedRange message. Also converts values to other types if specified.
                 * @param message ReservedRange
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: google.protobuf.DescriptorProto.ReservedRange, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ReservedRange to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a FieldDescriptorProto. */
        interface IFieldDescriptorProto {

            /** FieldDescriptorProto name */
            name?: (string|null);

            /** FieldDescriptorProto number */
            number?: (number|null);

            /** FieldDescriptorProto label */
            label?: (google.protobuf.FieldDescriptorProto.Label|null);

            /** FieldDescriptorProto type */
            type?: (google.protobuf.FieldDescriptorProto.Type|null);

            /** FieldDescriptorProto type_name */
            type_name?: (string|null);

            /** FieldDescriptorProto extendee */
            extendee?: (string|null);

            /** FieldDescriptorProto default_value */
            default_value?: (string|null);

            /** FieldDescriptorProto oneof_index */
            oneof_index?: (number|null);

            /** FieldDescriptorProto json_name */
            json_name?: (string|null);

            /** FieldDescriptorProto options */
            options?: (google.protobuf.IFieldOptions|null);
        }

        /** Represents a FieldDescriptorProto. */
        class FieldDescriptorProto implements IFieldDescriptorProto {

            /**
             * Constructs a new FieldDescriptorProto.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IFieldDescriptorProto);

            /** FieldDescriptorProto name. */
            public name: string;

            /** FieldDescriptorProto number. */
            public number: number;

            /** FieldDescriptorProto label. */
            public label: google.protobuf.FieldDescriptorProto.Label;

            /** FieldDescriptorProto type. */
            public type: google.protobuf.FieldDescriptorProto.Type;

            /** FieldDescriptorProto type_name. */
            public type_name: string;

            /** FieldDescriptorProto extendee. */
            public extendee: string;

            /** FieldDescriptorProto default_value. */
            public default_value: string;

            /** FieldDescriptorProto oneof_index. */
            public oneof_index: number;

            /** FieldDescriptorProto json_name. */
            public json_name: string;

            /** FieldDescriptorProto options. */
            public options?: (google.protobuf.IFieldOptions|null);

            /**
             * Encodes the specified FieldDescriptorProto message. Does not implicitly {@link google.protobuf.FieldDescriptorProto.verify|verify} messages.
             * @param message FieldDescriptorProto message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IFieldDescriptorProto, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified FieldDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.FieldDescriptorProto.verify|verify} messages.
             * @param message FieldDescriptorProto message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IFieldDescriptorProto, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a FieldDescriptorProto message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns FieldDescriptorProto
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.FieldDescriptorProto;

            /**
             * Decodes a FieldDescriptorProto message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns FieldDescriptorProto
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.FieldDescriptorProto;

            /**
             * Verifies a FieldDescriptorProto message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a FieldDescriptorProto message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns FieldDescriptorProto
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.FieldDescriptorProto;

            /**
             * Creates a plain object from a FieldDescriptorProto message. Also converts values to other types if specified.
             * @param message FieldDescriptorProto
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.FieldDescriptorProto, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this FieldDescriptorProto to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace FieldDescriptorProto {

            /** Type enum. */
            enum Type {
                TYPE_DOUBLE = 1,
                TYPE_FLOAT = 2,
                TYPE_INT64 = 3,
                TYPE_UINT64 = 4,
                TYPE_INT32 = 5,
                TYPE_FIXED64 = 6,
                TYPE_FIXED32 = 7,
                TYPE_BOOL = 8,
                TYPE_STRING = 9,
                TYPE_GROUP = 10,
                TYPE_MESSAGE = 11,
                TYPE_BYTES = 12,
                TYPE_UINT32 = 13,
                TYPE_ENUM = 14,
                TYPE_SFIXED32 = 15,
                TYPE_SFIXED64 = 16,
                TYPE_SINT32 = 17,
                TYPE_SINT64 = 18
            }

            /** Label enum. */
            enum Label {
                LABEL_OPTIONAL = 1,
                LABEL_REQUIRED = 2,
                LABEL_REPEATED = 3
            }
        }

        /** Properties of an OneofDescriptorProto. */
        interface IOneofDescriptorProto {

            /** OneofDescriptorProto name */
            name?: (string|null);

            /** OneofDescriptorProto options */
            options?: (google.protobuf.IOneofOptions|null);
        }

        /** Represents an OneofDescriptorProto. */
        class OneofDescriptorProto implements IOneofDescriptorProto {

            /**
             * Constructs a new OneofDescriptorProto.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IOneofDescriptorProto);

            /** OneofDescriptorProto name. */
            public name: string;

            /** OneofDescriptorProto options. */
            public options?: (google.protobuf.IOneofOptions|null);

            /**
             * Encodes the specified OneofDescriptorProto message. Does not implicitly {@link google.protobuf.OneofDescriptorProto.verify|verify} messages.
             * @param message OneofDescriptorProto message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IOneofDescriptorProto, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified OneofDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.OneofDescriptorProto.verify|verify} messages.
             * @param message OneofDescriptorProto message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IOneofDescriptorProto, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an OneofDescriptorProto message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns OneofDescriptorProto
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.OneofDescriptorProto;

            /**
             * Decodes an OneofDescriptorProto message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns OneofDescriptorProto
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.OneofDescriptorProto;

            /**
             * Verifies an OneofDescriptorProto message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an OneofDescriptorProto message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns OneofDescriptorProto
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.OneofDescriptorProto;

            /**
             * Creates a plain object from an OneofDescriptorProto message. Also converts values to other types if specified.
             * @param message OneofDescriptorProto
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.OneofDescriptorProto, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this OneofDescriptorProto to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an EnumDescriptorProto. */
        interface IEnumDescriptorProto {

            /** EnumDescriptorProto name */
            name?: (string|null);

            /** EnumDescriptorProto value */
            value?: (google.protobuf.IEnumValueDescriptorProto[]|null);

            /** EnumDescriptorProto options */
            options?: (google.protobuf.IEnumOptions|null);
        }

        /** Represents an EnumDescriptorProto. */
        class EnumDescriptorProto implements IEnumDescriptorProto {

            /**
             * Constructs a new EnumDescriptorProto.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IEnumDescriptorProto);

            /** EnumDescriptorProto name. */
            public name: string;

            /** EnumDescriptorProto value. */
            public value: google.protobuf.IEnumValueDescriptorProto[];

            /** EnumDescriptorProto options. */
            public options?: (google.protobuf.IEnumOptions|null);

            /**
             * Encodes the specified EnumDescriptorProto message. Does not implicitly {@link google.protobuf.EnumDescriptorProto.verify|verify} messages.
             * @param message EnumDescriptorProto message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IEnumDescriptorProto, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified EnumDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.EnumDescriptorProto.verify|verify} messages.
             * @param message EnumDescriptorProto message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IEnumDescriptorProto, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an EnumDescriptorProto message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns EnumDescriptorProto
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.EnumDescriptorProto;

            /**
             * Decodes an EnumDescriptorProto message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns EnumDescriptorProto
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.EnumDescriptorProto;

            /**
             * Verifies an EnumDescriptorProto message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an EnumDescriptorProto message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns EnumDescriptorProto
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.EnumDescriptorProto;

            /**
             * Creates a plain object from an EnumDescriptorProto message. Also converts values to other types if specified.
             * @param message EnumDescriptorProto
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.EnumDescriptorProto, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this EnumDescriptorProto to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an EnumValueDescriptorProto. */
        interface IEnumValueDescriptorProto {

            /** EnumValueDescriptorProto name */
            name?: (string|null);

            /** EnumValueDescriptorProto number */
            number?: (number|null);

            /** EnumValueDescriptorProto options */
            options?: (google.protobuf.IEnumValueOptions|null);
        }

        /** Represents an EnumValueDescriptorProto. */
        class EnumValueDescriptorProto implements IEnumValueDescriptorProto {

            /**
             * Constructs a new EnumValueDescriptorProto.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IEnumValueDescriptorProto);

            /** EnumValueDescriptorProto name. */
            public name: string;

            /** EnumValueDescriptorProto number. */
            public number: number;

            /** EnumValueDescriptorProto options. */
            public options?: (google.protobuf.IEnumValueOptions|null);

            /**
             * Encodes the specified EnumValueDescriptorProto message. Does not implicitly {@link google.protobuf.EnumValueDescriptorProto.verify|verify} messages.
             * @param message EnumValueDescriptorProto message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IEnumValueDescriptorProto, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified EnumValueDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.EnumValueDescriptorProto.verify|verify} messages.
             * @param message EnumValueDescriptorProto message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IEnumValueDescriptorProto, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an EnumValueDescriptorProto message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns EnumValueDescriptorProto
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.EnumValueDescriptorProto;

            /**
             * Decodes an EnumValueDescriptorProto message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns EnumValueDescriptorProto
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.EnumValueDescriptorProto;

            /**
             * Verifies an EnumValueDescriptorProto message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an EnumValueDescriptorProto message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns EnumValueDescriptorProto
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.EnumValueDescriptorProto;

            /**
             * Creates a plain object from an EnumValueDescriptorProto message. Also converts values to other types if specified.
             * @param message EnumValueDescriptorProto
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.EnumValueDescriptorProto, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this EnumValueDescriptorProto to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a ServiceDescriptorProto. */
        interface IServiceDescriptorProto {

            /** ServiceDescriptorProto name */
            name?: (string|null);

            /** ServiceDescriptorProto method */
            method?: (google.protobuf.IMethodDescriptorProto[]|null);

            /** ServiceDescriptorProto options */
            options?: (google.protobuf.IServiceOptions|null);
        }

        /** Represents a ServiceDescriptorProto. */
        class ServiceDescriptorProto implements IServiceDescriptorProto {

            /**
             * Constructs a new ServiceDescriptorProto.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IServiceDescriptorProto);

            /** ServiceDescriptorProto name. */
            public name: string;

            /** ServiceDescriptorProto method. */
            public method: google.protobuf.IMethodDescriptorProto[];

            /** ServiceDescriptorProto options. */
            public options?: (google.protobuf.IServiceOptions|null);

            /**
             * Encodes the specified ServiceDescriptorProto message. Does not implicitly {@link google.protobuf.ServiceDescriptorProto.verify|verify} messages.
             * @param message ServiceDescriptorProto message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IServiceDescriptorProto, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ServiceDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.ServiceDescriptorProto.verify|verify} messages.
             * @param message ServiceDescriptorProto message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IServiceDescriptorProto, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ServiceDescriptorProto message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ServiceDescriptorProto
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.ServiceDescriptorProto;

            /**
             * Decodes a ServiceDescriptorProto message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ServiceDescriptorProto
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.ServiceDescriptorProto;

            /**
             * Verifies a ServiceDescriptorProto message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ServiceDescriptorProto message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ServiceDescriptorProto
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.ServiceDescriptorProto;

            /**
             * Creates a plain object from a ServiceDescriptorProto message. Also converts values to other types if specified.
             * @param message ServiceDescriptorProto
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.ServiceDescriptorProto, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ServiceDescriptorProto to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a MethodDescriptorProto. */
        interface IMethodDescriptorProto {

            /** MethodDescriptorProto name */
            name?: (string|null);

            /** MethodDescriptorProto input_type */
            input_type?: (string|null);

            /** MethodDescriptorProto output_type */
            output_type?: (string|null);

            /** MethodDescriptorProto options */
            options?: (google.protobuf.IMethodOptions|null);

            /** MethodDescriptorProto client_streaming */
            client_streaming?: (boolean|null);

            /** MethodDescriptorProto server_streaming */
            server_streaming?: (boolean|null);
        }

        /** Represents a MethodDescriptorProto. */
        class MethodDescriptorProto implements IMethodDescriptorProto {

            /**
             * Constructs a new MethodDescriptorProto.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IMethodDescriptorProto);

            /** MethodDescriptorProto name. */
            public name: string;

            /** MethodDescriptorProto input_type. */
            public input_type: string;

            /** MethodDescriptorProto output_type. */
            public output_type: string;

            /** MethodDescriptorProto options. */
            public options?: (google.protobuf.IMethodOptions|null);

            /** MethodDescriptorProto client_streaming. */
            public client_streaming: boolean;

            /** MethodDescriptorProto server_streaming. */
            public server_streaming: boolean;

            /**
             * Encodes the specified MethodDescriptorProto message. Does not implicitly {@link google.protobuf.MethodDescriptorProto.verify|verify} messages.
             * @param message MethodDescriptorProto message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IMethodDescriptorProto, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified MethodDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.MethodDescriptorProto.verify|verify} messages.
             * @param message MethodDescriptorProto message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IMethodDescriptorProto, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a MethodDescriptorProto message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MethodDescriptorProto
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.MethodDescriptorProto;

            /**
             * Decodes a MethodDescriptorProto message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MethodDescriptorProto
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.MethodDescriptorProto;

            /**
             * Verifies a MethodDescriptorProto message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MethodDescriptorProto message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MethodDescriptorProto
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.MethodDescriptorProto;

            /**
             * Creates a plain object from a MethodDescriptorProto message. Also converts values to other types if specified.
             * @param message MethodDescriptorProto
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.MethodDescriptorProto, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MethodDescriptorProto to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a FileOptions. */
        interface IFileOptions {

            /** FileOptions java_package */
            java_package?: (string|null);

            /** FileOptions java_outer_classname */
            java_outer_classname?: (string|null);

            /** FileOptions java_multiple_files */
            java_multiple_files?: (boolean|null);

            /** FileOptions java_generate_equals_and_hash */
            java_generate_equals_and_hash?: (boolean|null);

            /** FileOptions java_string_check_utf8 */
            java_string_check_utf8?: (boolean|null);

            /** FileOptions optimize_for */
            optimize_for?: (google.protobuf.FileOptions.OptimizeMode|null);

            /** FileOptions go_package */
            go_package?: (string|null);

            /** FileOptions cc_generic_services */
            cc_generic_services?: (boolean|null);

            /** FileOptions java_generic_services */
            java_generic_services?: (boolean|null);

            /** FileOptions py_generic_services */
            py_generic_services?: (boolean|null);

            /** FileOptions deprecated */
            deprecated?: (boolean|null);

            /** FileOptions cc_enable_arenas */
            cc_enable_arenas?: (boolean|null);

            /** FileOptions objc_class_prefix */
            objc_class_prefix?: (string|null);

            /** FileOptions csharp_namespace */
            csharp_namespace?: (string|null);

            /** FileOptions uninterpreted_option */
            uninterpreted_option?: (google.protobuf.IUninterpretedOption[]|null);
        }

        /** Represents a FileOptions. */
        class FileOptions implements IFileOptions {

            /**
             * Constructs a new FileOptions.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IFileOptions);

            /** FileOptions java_package. */
            public java_package: string;

            /** FileOptions java_outer_classname. */
            public java_outer_classname: string;

            /** FileOptions java_multiple_files. */
            public java_multiple_files: boolean;

            /** FileOptions java_generate_equals_and_hash. */
            public java_generate_equals_and_hash: boolean;

            /** FileOptions java_string_check_utf8. */
            public java_string_check_utf8: boolean;

            /** FileOptions optimize_for. */
            public optimize_for: google.protobuf.FileOptions.OptimizeMode;

            /** FileOptions go_package. */
            public go_package: string;

            /** FileOptions cc_generic_services. */
            public cc_generic_services: boolean;

            /** FileOptions java_generic_services. */
            public java_generic_services: boolean;

            /** FileOptions py_generic_services. */
            public py_generic_services: boolean;

            /** FileOptions deprecated. */
            public deprecated: boolean;

            /** FileOptions cc_enable_arenas. */
            public cc_enable_arenas: boolean;

            /** FileOptions objc_class_prefix. */
            public objc_class_prefix: string;

            /** FileOptions csharp_namespace. */
            public csharp_namespace: string;

            /** FileOptions uninterpreted_option. */
            public uninterpreted_option: google.protobuf.IUninterpretedOption[];

            /**
             * Encodes the specified FileOptions message. Does not implicitly {@link google.protobuf.FileOptions.verify|verify} messages.
             * @param message FileOptions message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IFileOptions, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified FileOptions message, length delimited. Does not implicitly {@link google.protobuf.FileOptions.verify|verify} messages.
             * @param message FileOptions message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IFileOptions, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a FileOptions message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns FileOptions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.FileOptions;

            /**
             * Decodes a FileOptions message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns FileOptions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.FileOptions;

            /**
             * Verifies a FileOptions message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a FileOptions message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns FileOptions
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.FileOptions;

            /**
             * Creates a plain object from a FileOptions message. Also converts values to other types if specified.
             * @param message FileOptions
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.FileOptions, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this FileOptions to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace FileOptions {

            /** OptimizeMode enum. */
            enum OptimizeMode {
                SPEED = 1,
                CODE_SIZE = 2,
                LITE_RUNTIME = 3
            }
        }

        /** Properties of a MessageOptions. */
        interface IMessageOptions {

            /** MessageOptions message_set_wire_format */
            message_set_wire_format?: (boolean|null);

            /** MessageOptions no_standard_descriptor_accessor */
            no_standard_descriptor_accessor?: (boolean|null);

            /** MessageOptions deprecated */
            deprecated?: (boolean|null);

            /** MessageOptions map_entry */
            map_entry?: (boolean|null);

            /** MessageOptions uninterpreted_option */
            uninterpreted_option?: (google.protobuf.IUninterpretedOption[]|null);

            /** MessageOptions .amino.name */
            ".amino.name"?: (string|null);

            /** MessageOptions .amino.message_encoding */
            ".amino.message_encoding"?: (string|null);

            /** MessageOptions .cosmos.msg.v1.signer */
            ".cosmos.msg.v1.signer"?: (string[]|null);
        }

        /** Represents a MessageOptions. */
        class MessageOptions implements IMessageOptions {

            /**
             * Constructs a new MessageOptions.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IMessageOptions);

            /** MessageOptions message_set_wire_format. */
            public message_set_wire_format: boolean;

            /** MessageOptions no_standard_descriptor_accessor. */
            public no_standard_descriptor_accessor: boolean;

            /** MessageOptions deprecated. */
            public deprecated: boolean;

            /** MessageOptions map_entry. */
            public map_entry: boolean;

            /** MessageOptions uninterpreted_option. */
            public uninterpreted_option: google.protobuf.IUninterpretedOption[];

            /**
             * Encodes the specified MessageOptions message. Does not implicitly {@link google.protobuf.MessageOptions.verify|verify} messages.
             * @param message MessageOptions message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IMessageOptions, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified MessageOptions message, length delimited. Does not implicitly {@link google.protobuf.MessageOptions.verify|verify} messages.
             * @param message MessageOptions message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IMessageOptions, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a MessageOptions message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MessageOptions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.MessageOptions;

            /**
             * Decodes a MessageOptions message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MessageOptions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.MessageOptions;

            /**
             * Verifies a MessageOptions message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MessageOptions message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MessageOptions
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.MessageOptions;

            /**
             * Creates a plain object from a MessageOptions message. Also converts values to other types if specified.
             * @param message MessageOptions
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.MessageOptions, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MessageOptions to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a FieldOptions. */
        interface IFieldOptions {

            /** FieldOptions ctype */
            ctype?: (google.protobuf.FieldOptions.CType|null);

            /** FieldOptions packed */
            packed?: (boolean|null);

            /** FieldOptions jstype */
            jstype?: (google.protobuf.FieldOptions.JSType|null);

            /** FieldOptions lazy */
            lazy?: (boolean|null);

            /** FieldOptions deprecated */
            deprecated?: (boolean|null);

            /** FieldOptions weak */
            weak?: (boolean|null);

            /** FieldOptions uninterpreted_option */
            uninterpreted_option?: (google.protobuf.IUninterpretedOption[]|null);

            /** FieldOptions .amino.encoding */
            ".amino.encoding"?: (string|null);

            /** FieldOptions .amino.field_name */
            ".amino.field_name"?: (string|null);

            /** FieldOptions .amino.dont_omitempty */
            ".amino.dont_omitempty"?: (boolean|null);
        }

        /** Represents a FieldOptions. */
        class FieldOptions implements IFieldOptions {

            /**
             * Constructs a new FieldOptions.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IFieldOptions);

            /** FieldOptions ctype. */
            public ctype: google.protobuf.FieldOptions.CType;

            /** FieldOptions packed. */
            public packed: boolean;

            /** FieldOptions jstype. */
            public jstype: google.protobuf.FieldOptions.JSType;

            /** FieldOptions lazy. */
            public lazy: boolean;

            /** FieldOptions deprecated. */
            public deprecated: boolean;

            /** FieldOptions weak. */
            public weak: boolean;

            /** FieldOptions uninterpreted_option. */
            public uninterpreted_option: google.protobuf.IUninterpretedOption[];

            /**
             * Encodes the specified FieldOptions message. Does not implicitly {@link google.protobuf.FieldOptions.verify|verify} messages.
             * @param message FieldOptions message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IFieldOptions, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified FieldOptions message, length delimited. Does not implicitly {@link google.protobuf.FieldOptions.verify|verify} messages.
             * @param message FieldOptions message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IFieldOptions, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a FieldOptions message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns FieldOptions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.FieldOptions;

            /**
             * Decodes a FieldOptions message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns FieldOptions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.FieldOptions;

            /**
             * Verifies a FieldOptions message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a FieldOptions message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns FieldOptions
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.FieldOptions;

            /**
             * Creates a plain object from a FieldOptions message. Also converts values to other types if specified.
             * @param message FieldOptions
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.FieldOptions, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this FieldOptions to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace FieldOptions {

            /** CType enum. */
            enum CType {
                STRING = 0,
                CORD = 1,
                STRING_PIECE = 2
            }

            /** JSType enum. */
            enum JSType {
                JS_NORMAL = 0,
                JS_STRING = 1,
                JS_NUMBER = 2
            }
        }

        /** Properties of an OneofOptions. */
        interface IOneofOptions {

            /** OneofOptions uninterpreted_option */
            uninterpreted_option?: (google.protobuf.IUninterpretedOption[]|null);
        }

        /** Represents an OneofOptions. */
        class OneofOptions implements IOneofOptions {

            /**
             * Constructs a new OneofOptions.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IOneofOptions);

            /** OneofOptions uninterpreted_option. */
            public uninterpreted_option: google.protobuf.IUninterpretedOption[];

            /**
             * Encodes the specified OneofOptions message. Does not implicitly {@link google.protobuf.OneofOptions.verify|verify} messages.
             * @param message OneofOptions message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IOneofOptions, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified OneofOptions message, length delimited. Does not implicitly {@link google.protobuf.OneofOptions.verify|verify} messages.
             * @param message OneofOptions message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IOneofOptions, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an OneofOptions message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns OneofOptions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.OneofOptions;

            /**
             * Decodes an OneofOptions message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns OneofOptions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.OneofOptions;

            /**
             * Verifies an OneofOptions message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an OneofOptions message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns OneofOptions
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.OneofOptions;

            /**
             * Creates a plain object from an OneofOptions message. Also converts values to other types if specified.
             * @param message OneofOptions
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.OneofOptions, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this OneofOptions to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an EnumOptions. */
        interface IEnumOptions {

            /** EnumOptions allow_alias */
            allow_alias?: (boolean|null);

            /** EnumOptions deprecated */
            deprecated?: (boolean|null);

            /** EnumOptions uninterpreted_option */
            uninterpreted_option?: (google.protobuf.IUninterpretedOption[]|null);
        }

        /** Represents an EnumOptions. */
        class EnumOptions implements IEnumOptions {

            /**
             * Constructs a new EnumOptions.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IEnumOptions);

            /** EnumOptions allow_alias. */
            public allow_alias: boolean;

            /** EnumOptions deprecated. */
            public deprecated: boolean;

            /** EnumOptions uninterpreted_option. */
            public uninterpreted_option: google.protobuf.IUninterpretedOption[];

            /**
             * Encodes the specified EnumOptions message. Does not implicitly {@link google.protobuf.EnumOptions.verify|verify} messages.
             * @param message EnumOptions message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IEnumOptions, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified EnumOptions message, length delimited. Does not implicitly {@link google.protobuf.EnumOptions.verify|verify} messages.
             * @param message EnumOptions message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IEnumOptions, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an EnumOptions message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns EnumOptions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.EnumOptions;

            /**
             * Decodes an EnumOptions message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns EnumOptions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.EnumOptions;

            /**
             * Verifies an EnumOptions message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an EnumOptions message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns EnumOptions
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.EnumOptions;

            /**
             * Creates a plain object from an EnumOptions message. Also converts values to other types if specified.
             * @param message EnumOptions
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.EnumOptions, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this EnumOptions to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an EnumValueOptions. */
        interface IEnumValueOptions {

            /** EnumValueOptions deprecated */
            deprecated?: (boolean|null);

            /** EnumValueOptions uninterpreted_option */
            uninterpreted_option?: (google.protobuf.IUninterpretedOption[]|null);
        }

        /** Represents an EnumValueOptions. */
        class EnumValueOptions implements IEnumValueOptions {

            /**
             * Constructs a new EnumValueOptions.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IEnumValueOptions);

            /** EnumValueOptions deprecated. */
            public deprecated: boolean;

            /** EnumValueOptions uninterpreted_option. */
            public uninterpreted_option: google.protobuf.IUninterpretedOption[];

            /**
             * Encodes the specified EnumValueOptions message. Does not implicitly {@link google.protobuf.EnumValueOptions.verify|verify} messages.
             * @param message EnumValueOptions message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IEnumValueOptions, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified EnumValueOptions message, length delimited. Does not implicitly {@link google.protobuf.EnumValueOptions.verify|verify} messages.
             * @param message EnumValueOptions message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IEnumValueOptions, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an EnumValueOptions message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns EnumValueOptions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.EnumValueOptions;

            /**
             * Decodes an EnumValueOptions message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns EnumValueOptions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.EnumValueOptions;

            /**
             * Verifies an EnumValueOptions message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an EnumValueOptions message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns EnumValueOptions
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.EnumValueOptions;

            /**
             * Creates a plain object from an EnumValueOptions message. Also converts values to other types if specified.
             * @param message EnumValueOptions
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.EnumValueOptions, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this EnumValueOptions to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a ServiceOptions. */
        interface IServiceOptions {

            /** ServiceOptions deprecated */
            deprecated?: (boolean|null);

            /** ServiceOptions uninterpreted_option */
            uninterpreted_option?: (google.protobuf.IUninterpretedOption[]|null);

            /** ServiceOptions .cosmos.msg.v1.service */
            ".cosmos.msg.v1.service"?: (boolean|null);
        }

        /** Represents a ServiceOptions. */
        class ServiceOptions implements IServiceOptions {

            /**
             * Constructs a new ServiceOptions.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IServiceOptions);

            /** ServiceOptions deprecated. */
            public deprecated: boolean;

            /** ServiceOptions uninterpreted_option. */
            public uninterpreted_option: google.protobuf.IUninterpretedOption[];

            /**
             * Encodes the specified ServiceOptions message. Does not implicitly {@link google.protobuf.ServiceOptions.verify|verify} messages.
             * @param message ServiceOptions message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IServiceOptions, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ServiceOptions message, length delimited. Does not implicitly {@link google.protobuf.ServiceOptions.verify|verify} messages.
             * @param message ServiceOptions message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IServiceOptions, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ServiceOptions message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ServiceOptions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.ServiceOptions;

            /**
             * Decodes a ServiceOptions message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ServiceOptions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.ServiceOptions;

            /**
             * Verifies a ServiceOptions message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ServiceOptions message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ServiceOptions
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.ServiceOptions;

            /**
             * Creates a plain object from a ServiceOptions message. Also converts values to other types if specified.
             * @param message ServiceOptions
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.ServiceOptions, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ServiceOptions to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a MethodOptions. */
        interface IMethodOptions {

            /** MethodOptions deprecated */
            deprecated?: (boolean|null);

            /** MethodOptions uninterpreted_option */
            uninterpreted_option?: (google.protobuf.IUninterpretedOption[]|null);

            /** MethodOptions .google.api.http */
            ".google.api.http"?: (google.api.IHttpRule|null);
        }

        /** Represents a MethodOptions. */
        class MethodOptions implements IMethodOptions {

            /**
             * Constructs a new MethodOptions.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IMethodOptions);

            /** MethodOptions deprecated. */
            public deprecated: boolean;

            /** MethodOptions uninterpreted_option. */
            public uninterpreted_option: google.protobuf.IUninterpretedOption[];

            /**
             * Encodes the specified MethodOptions message. Does not implicitly {@link google.protobuf.MethodOptions.verify|verify} messages.
             * @param message MethodOptions message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IMethodOptions, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified MethodOptions message, length delimited. Does not implicitly {@link google.protobuf.MethodOptions.verify|verify} messages.
             * @param message MethodOptions message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IMethodOptions, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a MethodOptions message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MethodOptions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.MethodOptions;

            /**
             * Decodes a MethodOptions message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MethodOptions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.MethodOptions;

            /**
             * Verifies a MethodOptions message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MethodOptions message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MethodOptions
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.MethodOptions;

            /**
             * Creates a plain object from a MethodOptions message. Also converts values to other types if specified.
             * @param message MethodOptions
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.MethodOptions, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MethodOptions to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an UninterpretedOption. */
        interface IUninterpretedOption {

            /** UninterpretedOption name */
            name?: (google.protobuf.UninterpretedOption.INamePart[]|null);

            /** UninterpretedOption identifier_value */
            identifier_value?: (string|null);

            /** UninterpretedOption positive_int_value */
            positive_int_value?: (number|null);

            /** UninterpretedOption negative_int_value */
            negative_int_value?: (number|null);

            /** UninterpretedOption double_value */
            double_value?: (number|null);

            /** UninterpretedOption string_value */
            string_value?: (Uint8Array|null);

            /** UninterpretedOption aggregate_value */
            aggregate_value?: (string|null);
        }

        /** Represents an UninterpretedOption. */
        class UninterpretedOption implements IUninterpretedOption {

            /**
             * Constructs a new UninterpretedOption.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IUninterpretedOption);

            /** UninterpretedOption name. */
            public name: google.protobuf.UninterpretedOption.INamePart[];

            /** UninterpretedOption identifier_value. */
            public identifier_value: string;

            /** UninterpretedOption positive_int_value. */
            public positive_int_value: number;

            /** UninterpretedOption negative_int_value. */
            public negative_int_value: number;

            /** UninterpretedOption double_value. */
            public double_value: number;

            /** UninterpretedOption string_value. */
            public string_value: Uint8Array;

            /** UninterpretedOption aggregate_value. */
            public aggregate_value: string;

            /**
             * Encodes the specified UninterpretedOption message. Does not implicitly {@link google.protobuf.UninterpretedOption.verify|verify} messages.
             * @param message UninterpretedOption message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IUninterpretedOption, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified UninterpretedOption message, length delimited. Does not implicitly {@link google.protobuf.UninterpretedOption.verify|verify} messages.
             * @param message UninterpretedOption message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IUninterpretedOption, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an UninterpretedOption message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns UninterpretedOption
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.UninterpretedOption;

            /**
             * Decodes an UninterpretedOption message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns UninterpretedOption
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.UninterpretedOption;

            /**
             * Verifies an UninterpretedOption message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an UninterpretedOption message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns UninterpretedOption
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.UninterpretedOption;

            /**
             * Creates a plain object from an UninterpretedOption message. Also converts values to other types if specified.
             * @param message UninterpretedOption
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.UninterpretedOption, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this UninterpretedOption to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace UninterpretedOption {

            /** Properties of a NamePart. */
            interface INamePart {

                /** NamePart name_part */
                name_part: string;

                /** NamePart is_extension */
                is_extension: boolean;
            }

            /** Represents a NamePart. */
            class NamePart implements INamePart {

                /**
                 * Constructs a new NamePart.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: google.protobuf.UninterpretedOption.INamePart);

                /** NamePart name_part. */
                public name_part: string;

                /** NamePart is_extension. */
                public is_extension: boolean;

                /**
                 * Encodes the specified NamePart message. Does not implicitly {@link google.protobuf.UninterpretedOption.NamePart.verify|verify} messages.
                 * @param message NamePart message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: google.protobuf.UninterpretedOption.INamePart, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified NamePart message, length delimited. Does not implicitly {@link google.protobuf.UninterpretedOption.NamePart.verify|verify} messages.
                 * @param message NamePart message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: google.protobuf.UninterpretedOption.INamePart, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a NamePart message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns NamePart
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.UninterpretedOption.NamePart;

                /**
                 * Decodes a NamePart message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns NamePart
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.UninterpretedOption.NamePart;

                /**
                 * Verifies a NamePart message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a NamePart message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns NamePart
                 */
                public static fromObject(object: { [k: string]: any }): google.protobuf.UninterpretedOption.NamePart;

                /**
                 * Creates a plain object from a NamePart message. Also converts values to other types if specified.
                 * @param message NamePart
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: google.protobuf.UninterpretedOption.NamePart, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this NamePart to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a SourceCodeInfo. */
        interface ISourceCodeInfo {

            /** SourceCodeInfo location */
            location?: (google.protobuf.SourceCodeInfo.ILocation[]|null);
        }

        /** Represents a SourceCodeInfo. */
        class SourceCodeInfo implements ISourceCodeInfo {

            /**
             * Constructs a new SourceCodeInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.ISourceCodeInfo);

            /** SourceCodeInfo location. */
            public location: google.protobuf.SourceCodeInfo.ILocation[];

            /**
             * Encodes the specified SourceCodeInfo message. Does not implicitly {@link google.protobuf.SourceCodeInfo.verify|verify} messages.
             * @param message SourceCodeInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.ISourceCodeInfo, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified SourceCodeInfo message, length delimited. Does not implicitly {@link google.protobuf.SourceCodeInfo.verify|verify} messages.
             * @param message SourceCodeInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.ISourceCodeInfo, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a SourceCodeInfo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SourceCodeInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.SourceCodeInfo;

            /**
             * Decodes a SourceCodeInfo message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns SourceCodeInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.SourceCodeInfo;

            /**
             * Verifies a SourceCodeInfo message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a SourceCodeInfo message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns SourceCodeInfo
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.SourceCodeInfo;

            /**
             * Creates a plain object from a SourceCodeInfo message. Also converts values to other types if specified.
             * @param message SourceCodeInfo
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.SourceCodeInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this SourceCodeInfo to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace SourceCodeInfo {

            /** Properties of a Location. */
            interface ILocation {

                /** Location path */
                path?: (number[]|null);

                /** Location span */
                span?: (number[]|null);

                /** Location leading_comments */
                leading_comments?: (string|null);

                /** Location trailing_comments */
                trailing_comments?: (string|null);

                /** Location leading_detached_comments */
                leading_detached_comments?: (string[]|null);
            }

            /** Represents a Location. */
            class Location implements ILocation {

                /**
                 * Constructs a new Location.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: google.protobuf.SourceCodeInfo.ILocation);

                /** Location path. */
                public path: number[];

                /** Location span. */
                public span: number[];

                /** Location leading_comments. */
                public leading_comments: string;

                /** Location trailing_comments. */
                public trailing_comments: string;

                /** Location leading_detached_comments. */
                public leading_detached_comments: string[];

                /**
                 * Encodes the specified Location message. Does not implicitly {@link google.protobuf.SourceCodeInfo.Location.verify|verify} messages.
                 * @param message Location message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: google.protobuf.SourceCodeInfo.ILocation, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Location message, length delimited. Does not implicitly {@link google.protobuf.SourceCodeInfo.Location.verify|verify} messages.
                 * @param message Location message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: google.protobuf.SourceCodeInfo.ILocation, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Location message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Location
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.SourceCodeInfo.Location;

                /**
                 * Decodes a Location message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Location
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.SourceCodeInfo.Location;

                /**
                 * Verifies a Location message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Location message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Location
                 */
                public static fromObject(object: { [k: string]: any }): google.protobuf.SourceCodeInfo.Location;

                /**
                 * Creates a plain object from a Location message. Also converts values to other types if specified.
                 * @param message Location
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: google.protobuf.SourceCodeInfo.Location, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Location to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a GeneratedCodeInfo. */
        interface IGeneratedCodeInfo {

            /** GeneratedCodeInfo annotation */
            annotation?: (google.protobuf.GeneratedCodeInfo.IAnnotation[]|null);
        }

        /** Represents a GeneratedCodeInfo. */
        class GeneratedCodeInfo implements IGeneratedCodeInfo {

            /**
             * Constructs a new GeneratedCodeInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IGeneratedCodeInfo);

            /** GeneratedCodeInfo annotation. */
            public annotation: google.protobuf.GeneratedCodeInfo.IAnnotation[];

            /**
             * Encodes the specified GeneratedCodeInfo message. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.verify|verify} messages.
             * @param message GeneratedCodeInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IGeneratedCodeInfo, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified GeneratedCodeInfo message, length delimited. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.verify|verify} messages.
             * @param message GeneratedCodeInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IGeneratedCodeInfo, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a GeneratedCodeInfo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GeneratedCodeInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.GeneratedCodeInfo;

            /**
             * Decodes a GeneratedCodeInfo message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns GeneratedCodeInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.GeneratedCodeInfo;

            /**
             * Verifies a GeneratedCodeInfo message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a GeneratedCodeInfo message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns GeneratedCodeInfo
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.GeneratedCodeInfo;

            /**
             * Creates a plain object from a GeneratedCodeInfo message. Also converts values to other types if specified.
             * @param message GeneratedCodeInfo
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.GeneratedCodeInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this GeneratedCodeInfo to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace GeneratedCodeInfo {

            /** Properties of an Annotation. */
            interface IAnnotation {

                /** Annotation path */
                path?: (number[]|null);

                /** Annotation source_file */
                source_file?: (string|null);

                /** Annotation begin */
                begin?: (number|null);

                /** Annotation end */
                end?: (number|null);
            }

            /** Represents an Annotation. */
            class Annotation implements IAnnotation {

                /**
                 * Constructs a new Annotation.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: google.protobuf.GeneratedCodeInfo.IAnnotation);

                /** Annotation path. */
                public path: number[];

                /** Annotation source_file. */
                public source_file: string;

                /** Annotation begin. */
                public begin: number;

                /** Annotation end. */
                public end: number;

                /**
                 * Encodes the specified Annotation message. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.Annotation.verify|verify} messages.
                 * @param message Annotation message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: google.protobuf.GeneratedCodeInfo.IAnnotation, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Annotation message, length delimited. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.Annotation.verify|verify} messages.
                 * @param message Annotation message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: google.protobuf.GeneratedCodeInfo.IAnnotation, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an Annotation message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Annotation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.GeneratedCodeInfo.Annotation;

                /**
                 * Decodes an Annotation message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Annotation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.GeneratedCodeInfo.Annotation;

                /**
                 * Verifies an Annotation message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an Annotation message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Annotation
                 */
                public static fromObject(object: { [k: string]: any }): google.protobuf.GeneratedCodeInfo.Annotation;

                /**
                 * Creates a plain object from an Annotation message. Also converts values to other types if specified.
                 * @param message Annotation
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: google.protobuf.GeneratedCodeInfo.Annotation, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Annotation to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a Duration. */
        interface IDuration {

            /** Duration seconds */
            seconds?: (number|null);

            /** Duration nanos */
            nanos?: (number|null);
        }

        /** Represents a Duration. */
        class Duration implements IDuration {

            /**
             * Constructs a new Duration.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IDuration);

            /** Duration seconds. */
            public seconds: number;

            /** Duration nanos. */
            public nanos: number;

            /**
             * Encodes the specified Duration message. Does not implicitly {@link google.protobuf.Duration.verify|verify} messages.
             * @param message Duration message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IDuration, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Duration message, length delimited. Does not implicitly {@link google.protobuf.Duration.verify|verify} messages.
             * @param message Duration message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IDuration, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Duration message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Duration
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.Duration;

            /**
             * Decodes a Duration message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Duration
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.Duration;

            /**
             * Verifies a Duration message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Duration message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Duration
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.Duration;

            /**
             * Creates a plain object from a Duration message. Also converts values to other types if specified.
             * @param message Duration
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.Duration, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Duration to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a Timestamp. */
        interface ITimestamp {

            /** Timestamp seconds */
            seconds?: (number|null);

            /** Timestamp nanos */
            nanos?: (number|null);
        }

        /** Represents a Timestamp. */
        class Timestamp implements ITimestamp {

            /**
             * Constructs a new Timestamp.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.ITimestamp);

            /** Timestamp seconds. */
            public seconds: number;

            /** Timestamp nanos. */
            public nanos: number;

            /**
             * Encodes the specified Timestamp message. Does not implicitly {@link google.protobuf.Timestamp.verify|verify} messages.
             * @param message Timestamp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.ITimestamp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Timestamp message, length delimited. Does not implicitly {@link google.protobuf.Timestamp.verify|verify} messages.
             * @param message Timestamp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.ITimestamp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Timestamp message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Timestamp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.Timestamp;

            /**
             * Decodes a Timestamp message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Timestamp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.Timestamp;

            /**
             * Verifies a Timestamp message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Timestamp message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Timestamp
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.Timestamp;

            /**
             * Creates a plain object from a Timestamp message. Also converts values to other types if specified.
             * @param message Timestamp
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.Timestamp, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Timestamp to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an Any. */
        interface IAny {

            /** Any type_url */
            type_url?: (string|null);

            /** Any value */
            value?: (Uint8Array|null);
        }

        /** Represents an Any. */
        class Any implements IAny {

            /**
             * Constructs a new Any.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IAny);

            /** Any type_url. */
            public type_url: string;

            /** Any value. */
            public value: Uint8Array;

            /**
             * Encodes the specified Any message. Does not implicitly {@link google.protobuf.Any.verify|verify} messages.
             * @param message Any message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IAny, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Any message, length delimited. Does not implicitly {@link google.protobuf.Any.verify|verify} messages.
             * @param message Any message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IAny, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an Any message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Any
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.Any;

            /**
             * Decodes an Any message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Any
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.Any;

            /**
             * Verifies an Any message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an Any message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Any
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.Any;

            /**
             * Creates a plain object from an Any message. Also converts values to other types if specified.
             * @param message Any
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.Any, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Any to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Namespace api. */
    namespace api {

        /** Properties of a Http. */
        interface IHttp {

            /** Http rules */
            rules?: (google.api.IHttpRule[]|null);
        }

        /** Represents a Http. */
        class Http implements IHttp {

            /**
             * Constructs a new Http.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.api.IHttp);

            /** Http rules. */
            public rules: google.api.IHttpRule[];

            /**
             * Encodes the specified Http message. Does not implicitly {@link google.api.Http.verify|verify} messages.
             * @param message Http message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.api.IHttp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Http message, length delimited. Does not implicitly {@link google.api.Http.verify|verify} messages.
             * @param message Http message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.api.IHttp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Http message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Http
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.api.Http;

            /**
             * Decodes a Http message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Http
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.api.Http;

            /**
             * Verifies a Http message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Http message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Http
             */
            public static fromObject(object: { [k: string]: any }): google.api.Http;

            /**
             * Creates a plain object from a Http message. Also converts values to other types if specified.
             * @param message Http
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.api.Http, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Http to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a HttpRule. */
        interface IHttpRule {

            /** HttpRule get */
            get?: (string|null);

            /** HttpRule put */
            put?: (string|null);

            /** HttpRule post */
            post?: (string|null);

            /** HttpRule delete */
            "delete"?: (string|null);

            /** HttpRule patch */
            patch?: (string|null);

            /** HttpRule custom */
            custom?: (google.api.ICustomHttpPattern|null);

            /** HttpRule selector */
            selector?: (string|null);

            /** HttpRule body */
            body?: (string|null);

            /** HttpRule additional_bindings */
            additional_bindings?: (google.api.IHttpRule[]|null);
        }

        /** Represents a HttpRule. */
        class HttpRule implements IHttpRule {

            /**
             * Constructs a new HttpRule.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.api.IHttpRule);

            /** HttpRule get. */
            public get?: (string|null);

            /** HttpRule put. */
            public put?: (string|null);

            /** HttpRule post. */
            public post?: (string|null);

            /** HttpRule delete. */
            public delete?: (string|null);

            /** HttpRule patch. */
            public patch?: (string|null);

            /** HttpRule custom. */
            public custom?: (google.api.ICustomHttpPattern|null);

            /** HttpRule selector. */
            public selector: string;

            /** HttpRule body. */
            public body: string;

            /** HttpRule additional_bindings. */
            public additional_bindings: google.api.IHttpRule[];

            /** HttpRule pattern. */
            public pattern?: ("get"|"put"|"post"|"delete"|"patch"|"custom");

            /**
             * Encodes the specified HttpRule message. Does not implicitly {@link google.api.HttpRule.verify|verify} messages.
             * @param message HttpRule message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.api.IHttpRule, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified HttpRule message, length delimited. Does not implicitly {@link google.api.HttpRule.verify|verify} messages.
             * @param message HttpRule message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.api.IHttpRule, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a HttpRule message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns HttpRule
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.api.HttpRule;

            /**
             * Decodes a HttpRule message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns HttpRule
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.api.HttpRule;

            /**
             * Verifies a HttpRule message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a HttpRule message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns HttpRule
             */
            public static fromObject(object: { [k: string]: any }): google.api.HttpRule;

            /**
             * Creates a plain object from a HttpRule message. Also converts values to other types if specified.
             * @param message HttpRule
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.api.HttpRule, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this HttpRule to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a CustomHttpPattern. */
        interface ICustomHttpPattern {

            /** CustomHttpPattern kind */
            kind?: (string|null);

            /** CustomHttpPattern path */
            path?: (string|null);
        }

        /** Represents a CustomHttpPattern. */
        class CustomHttpPattern implements ICustomHttpPattern {

            /**
             * Constructs a new CustomHttpPattern.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.api.ICustomHttpPattern);

            /** CustomHttpPattern kind. */
            public kind: string;

            /** CustomHttpPattern path. */
            public path: string;

            /**
             * Encodes the specified CustomHttpPattern message. Does not implicitly {@link google.api.CustomHttpPattern.verify|verify} messages.
             * @param message CustomHttpPattern message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.api.ICustomHttpPattern, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified CustomHttpPattern message, length delimited. Does not implicitly {@link google.api.CustomHttpPattern.verify|verify} messages.
             * @param message CustomHttpPattern message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.api.ICustomHttpPattern, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a CustomHttpPattern message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CustomHttpPattern
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.api.CustomHttpPattern;

            /**
             * Decodes a CustomHttpPattern message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns CustomHttpPattern
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.api.CustomHttpPattern;

            /**
             * Verifies a CustomHttpPattern message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a CustomHttpPattern message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns CustomHttpPattern
             */
            public static fromObject(object: { [k: string]: any }): google.api.CustomHttpPattern;

            /**
             * Creates a plain object from a CustomHttpPattern message. Also converts values to other types if specified.
             * @param message CustomHttpPattern
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.api.CustomHttpPattern, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this CustomHttpPattern to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }
}

/** Namespace cosmwasm. */
export namespace cosmwasm {

    /** Namespace wasm. */
    namespace wasm {

        /** Namespace v1. */
        namespace v1 {

            /** Properties of a StoreCodeProposal. */
            interface IStoreCodeProposal {

                /** StoreCodeProposal title */
                title?: (string|null);

                /** StoreCodeProposal description */
                description?: (string|null);

                /** StoreCodeProposal run_as */
                run_as?: (string|null);

                /** StoreCodeProposal wasm_byte_code */
                wasm_byte_code?: (Uint8Array|null);

                /** StoreCodeProposal instantiate_permission */
                instantiate_permission?: (cosmwasm.wasm.v1.IAccessConfig|null);

                /** StoreCodeProposal unpin_code */
                unpin_code?: (boolean|null);

                /** StoreCodeProposal source */
                source?: (string|null);

                /** StoreCodeProposal builder */
                builder?: (string|null);

                /** StoreCodeProposal code_hash */
                code_hash?: (Uint8Array|null);
            }

            /** Represents a StoreCodeProposal. */
            class StoreCodeProposal implements IStoreCodeProposal {

                /**
                 * Constructs a new StoreCodeProposal.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmwasm.wasm.v1.IStoreCodeProposal);

                /** StoreCodeProposal title. */
                public title: string;

                /** StoreCodeProposal description. */
                public description: string;

                /** StoreCodeProposal run_as. */
                public run_as: string;

                /** StoreCodeProposal wasm_byte_code. */
                public wasm_byte_code: Uint8Array;

                /** StoreCodeProposal instantiate_permission. */
                public instantiate_permission?: (cosmwasm.wasm.v1.IAccessConfig|null);

                /** StoreCodeProposal unpin_code. */
                public unpin_code: boolean;

                /** StoreCodeProposal source. */
                public source: string;

                /** StoreCodeProposal builder. */
                public builder: string;

                /** StoreCodeProposal code_hash. */
                public code_hash: Uint8Array;

                /**
                 * Encodes the specified StoreCodeProposal message. Does not implicitly {@link cosmwasm.wasm.v1.StoreCodeProposal.verify|verify} messages.
                 * @param message StoreCodeProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmwasm.wasm.v1.IStoreCodeProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified StoreCodeProposal message, length delimited. Does not implicitly {@link cosmwasm.wasm.v1.StoreCodeProposal.verify|verify} messages.
                 * @param message StoreCodeProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmwasm.wasm.v1.IStoreCodeProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a StoreCodeProposal message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns StoreCodeProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmwasm.wasm.v1.StoreCodeProposal;

                /**
                 * Decodes a StoreCodeProposal message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns StoreCodeProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmwasm.wasm.v1.StoreCodeProposal;

                /**
                 * Verifies a StoreCodeProposal message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a StoreCodeProposal message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns StoreCodeProposal
                 */
                public static fromObject(object: { [k: string]: any }): cosmwasm.wasm.v1.StoreCodeProposal;

                /**
                 * Creates a plain object from a StoreCodeProposal message. Also converts values to other types if specified.
                 * @param message StoreCodeProposal
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmwasm.wasm.v1.StoreCodeProposal, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this StoreCodeProposal to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an InstantiateContractProposal. */
            interface IInstantiateContractProposal {

                /** InstantiateContractProposal title */
                title?: (string|null);

                /** InstantiateContractProposal description */
                description?: (string|null);

                /** InstantiateContractProposal run_as */
                run_as?: (string|null);

                /** InstantiateContractProposal admin */
                admin?: (string|null);

                /** InstantiateContractProposal code_id */
                code_id?: (number|null);

                /** InstantiateContractProposal label */
                label?: (string|null);

                /** InstantiateContractProposal msg */
                msg?: (Uint8Array|null);

                /** InstantiateContractProposal funds */
                funds?: (cosmos.base.v1beta1.ICoin[]|null);
            }

            /** Represents an InstantiateContractProposal. */
            class InstantiateContractProposal implements IInstantiateContractProposal {

                /**
                 * Constructs a new InstantiateContractProposal.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmwasm.wasm.v1.IInstantiateContractProposal);

                /** InstantiateContractProposal title. */
                public title: string;

                /** InstantiateContractProposal description. */
                public description: string;

                /** InstantiateContractProposal run_as. */
                public run_as: string;

                /** InstantiateContractProposal admin. */
                public admin: string;

                /** InstantiateContractProposal code_id. */
                public code_id: number;

                /** InstantiateContractProposal label. */
                public label: string;

                /** InstantiateContractProposal msg. */
                public msg: Uint8Array;

                /** InstantiateContractProposal funds. */
                public funds: cosmos.base.v1beta1.ICoin[];

                /**
                 * Encodes the specified InstantiateContractProposal message. Does not implicitly {@link cosmwasm.wasm.v1.InstantiateContractProposal.verify|verify} messages.
                 * @param message InstantiateContractProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmwasm.wasm.v1.IInstantiateContractProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified InstantiateContractProposal message, length delimited. Does not implicitly {@link cosmwasm.wasm.v1.InstantiateContractProposal.verify|verify} messages.
                 * @param message InstantiateContractProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmwasm.wasm.v1.IInstantiateContractProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an InstantiateContractProposal message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns InstantiateContractProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmwasm.wasm.v1.InstantiateContractProposal;

                /**
                 * Decodes an InstantiateContractProposal message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns InstantiateContractProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmwasm.wasm.v1.InstantiateContractProposal;

                /**
                 * Verifies an InstantiateContractProposal message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an InstantiateContractProposal message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns InstantiateContractProposal
                 */
                public static fromObject(object: { [k: string]: any }): cosmwasm.wasm.v1.InstantiateContractProposal;

                /**
                 * Creates a plain object from an InstantiateContractProposal message. Also converts values to other types if specified.
                 * @param message InstantiateContractProposal
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmwasm.wasm.v1.InstantiateContractProposal, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this InstantiateContractProposal to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an InstantiateContract2Proposal. */
            interface IInstantiateContract2Proposal {

                /** InstantiateContract2Proposal title */
                title?: (string|null);

                /** InstantiateContract2Proposal description */
                description?: (string|null);

                /** InstantiateContract2Proposal run_as */
                run_as?: (string|null);

                /** InstantiateContract2Proposal admin */
                admin?: (string|null);

                /** InstantiateContract2Proposal code_id */
                code_id?: (number|null);

                /** InstantiateContract2Proposal label */
                label?: (string|null);

                /** InstantiateContract2Proposal msg */
                msg?: (Uint8Array|null);

                /** InstantiateContract2Proposal funds */
                funds?: (cosmos.base.v1beta1.ICoin[]|null);

                /** InstantiateContract2Proposal salt */
                salt?: (Uint8Array|null);

                /** InstantiateContract2Proposal fix_msg */
                fix_msg?: (boolean|null);
            }

            /** Represents an InstantiateContract2Proposal. */
            class InstantiateContract2Proposal implements IInstantiateContract2Proposal {

                /**
                 * Constructs a new InstantiateContract2Proposal.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmwasm.wasm.v1.IInstantiateContract2Proposal);

                /** InstantiateContract2Proposal title. */
                public title: string;

                /** InstantiateContract2Proposal description. */
                public description: string;

                /** InstantiateContract2Proposal run_as. */
                public run_as: string;

                /** InstantiateContract2Proposal admin. */
                public admin: string;

                /** InstantiateContract2Proposal code_id. */
                public code_id: number;

                /** InstantiateContract2Proposal label. */
                public label: string;

                /** InstantiateContract2Proposal msg. */
                public msg: Uint8Array;

                /** InstantiateContract2Proposal funds. */
                public funds: cosmos.base.v1beta1.ICoin[];

                /** InstantiateContract2Proposal salt. */
                public salt: Uint8Array;

                /** InstantiateContract2Proposal fix_msg. */
                public fix_msg: boolean;

                /**
                 * Encodes the specified InstantiateContract2Proposal message. Does not implicitly {@link cosmwasm.wasm.v1.InstantiateContract2Proposal.verify|verify} messages.
                 * @param message InstantiateContract2Proposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmwasm.wasm.v1.IInstantiateContract2Proposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified InstantiateContract2Proposal message, length delimited. Does not implicitly {@link cosmwasm.wasm.v1.InstantiateContract2Proposal.verify|verify} messages.
                 * @param message InstantiateContract2Proposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmwasm.wasm.v1.IInstantiateContract2Proposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an InstantiateContract2Proposal message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns InstantiateContract2Proposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmwasm.wasm.v1.InstantiateContract2Proposal;

                /**
                 * Decodes an InstantiateContract2Proposal message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns InstantiateContract2Proposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmwasm.wasm.v1.InstantiateContract2Proposal;

                /**
                 * Verifies an InstantiateContract2Proposal message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an InstantiateContract2Proposal message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns InstantiateContract2Proposal
                 */
                public static fromObject(object: { [k: string]: any }): cosmwasm.wasm.v1.InstantiateContract2Proposal;

                /**
                 * Creates a plain object from an InstantiateContract2Proposal message. Also converts values to other types if specified.
                 * @param message InstantiateContract2Proposal
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmwasm.wasm.v1.InstantiateContract2Proposal, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this InstantiateContract2Proposal to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MigrateContractProposal. */
            interface IMigrateContractProposal {

                /** MigrateContractProposal title */
                title?: (string|null);

                /** MigrateContractProposal description */
                description?: (string|null);

                /** MigrateContractProposal contract */
                contract?: (string|null);

                /** MigrateContractProposal code_id */
                code_id?: (number|null);

                /** MigrateContractProposal msg */
                msg?: (Uint8Array|null);
            }

            /** Represents a MigrateContractProposal. */
            class MigrateContractProposal implements IMigrateContractProposal {

                /**
                 * Constructs a new MigrateContractProposal.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmwasm.wasm.v1.IMigrateContractProposal);

                /** MigrateContractProposal title. */
                public title: string;

                /** MigrateContractProposal description. */
                public description: string;

                /** MigrateContractProposal contract. */
                public contract: string;

                /** MigrateContractProposal code_id. */
                public code_id: number;

                /** MigrateContractProposal msg. */
                public msg: Uint8Array;

                /**
                 * Encodes the specified MigrateContractProposal message. Does not implicitly {@link cosmwasm.wasm.v1.MigrateContractProposal.verify|verify} messages.
                 * @param message MigrateContractProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmwasm.wasm.v1.IMigrateContractProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MigrateContractProposal message, length delimited. Does not implicitly {@link cosmwasm.wasm.v1.MigrateContractProposal.verify|verify} messages.
                 * @param message MigrateContractProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmwasm.wasm.v1.IMigrateContractProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MigrateContractProposal message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MigrateContractProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmwasm.wasm.v1.MigrateContractProposal;

                /**
                 * Decodes a MigrateContractProposal message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MigrateContractProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmwasm.wasm.v1.MigrateContractProposal;

                /**
                 * Verifies a MigrateContractProposal message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MigrateContractProposal message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MigrateContractProposal
                 */
                public static fromObject(object: { [k: string]: any }): cosmwasm.wasm.v1.MigrateContractProposal;

                /**
                 * Creates a plain object from a MigrateContractProposal message. Also converts values to other types if specified.
                 * @param message MigrateContractProposal
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmwasm.wasm.v1.MigrateContractProposal, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MigrateContractProposal to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a SudoContractProposal. */
            interface ISudoContractProposal {

                /** SudoContractProposal title */
                title?: (string|null);

                /** SudoContractProposal description */
                description?: (string|null);

                /** SudoContractProposal contract */
                contract?: (string|null);

                /** SudoContractProposal msg */
                msg?: (Uint8Array|null);
            }

            /** Represents a SudoContractProposal. */
            class SudoContractProposal implements ISudoContractProposal {

                /**
                 * Constructs a new SudoContractProposal.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmwasm.wasm.v1.ISudoContractProposal);

                /** SudoContractProposal title. */
                public title: string;

                /** SudoContractProposal description. */
                public description: string;

                /** SudoContractProposal contract. */
                public contract: string;

                /** SudoContractProposal msg. */
                public msg: Uint8Array;

                /**
                 * Encodes the specified SudoContractProposal message. Does not implicitly {@link cosmwasm.wasm.v1.SudoContractProposal.verify|verify} messages.
                 * @param message SudoContractProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmwasm.wasm.v1.ISudoContractProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified SudoContractProposal message, length delimited. Does not implicitly {@link cosmwasm.wasm.v1.SudoContractProposal.verify|verify} messages.
                 * @param message SudoContractProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmwasm.wasm.v1.ISudoContractProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a SudoContractProposal message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns SudoContractProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmwasm.wasm.v1.SudoContractProposal;

                /**
                 * Decodes a SudoContractProposal message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns SudoContractProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmwasm.wasm.v1.SudoContractProposal;

                /**
                 * Verifies a SudoContractProposal message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a SudoContractProposal message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns SudoContractProposal
                 */
                public static fromObject(object: { [k: string]: any }): cosmwasm.wasm.v1.SudoContractProposal;

                /**
                 * Creates a plain object from a SudoContractProposal message. Also converts values to other types if specified.
                 * @param message SudoContractProposal
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmwasm.wasm.v1.SudoContractProposal, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this SudoContractProposal to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an ExecuteContractProposal. */
            interface IExecuteContractProposal {

                /** ExecuteContractProposal title */
                title?: (string|null);

                /** ExecuteContractProposal description */
                description?: (string|null);

                /** ExecuteContractProposal run_as */
                run_as?: (string|null);

                /** ExecuteContractProposal contract */
                contract?: (string|null);

                /** ExecuteContractProposal msg */
                msg?: (Uint8Array|null);

                /** ExecuteContractProposal funds */
                funds?: (cosmos.base.v1beta1.ICoin[]|null);
            }

            /** Represents an ExecuteContractProposal. */
            class ExecuteContractProposal implements IExecuteContractProposal {

                /**
                 * Constructs a new ExecuteContractProposal.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmwasm.wasm.v1.IExecuteContractProposal);

                /** ExecuteContractProposal title. */
                public title: string;

                /** ExecuteContractProposal description. */
                public description: string;

                /** ExecuteContractProposal run_as. */
                public run_as: string;

                /** ExecuteContractProposal contract. */
                public contract: string;

                /** ExecuteContractProposal msg. */
                public msg: Uint8Array;

                /** ExecuteContractProposal funds. */
                public funds: cosmos.base.v1beta1.ICoin[];

                /**
                 * Encodes the specified ExecuteContractProposal message. Does not implicitly {@link cosmwasm.wasm.v1.ExecuteContractProposal.verify|verify} messages.
                 * @param message ExecuteContractProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmwasm.wasm.v1.IExecuteContractProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ExecuteContractProposal message, length delimited. Does not implicitly {@link cosmwasm.wasm.v1.ExecuteContractProposal.verify|verify} messages.
                 * @param message ExecuteContractProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmwasm.wasm.v1.IExecuteContractProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an ExecuteContractProposal message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ExecuteContractProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmwasm.wasm.v1.ExecuteContractProposal;

                /**
                 * Decodes an ExecuteContractProposal message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ExecuteContractProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmwasm.wasm.v1.ExecuteContractProposal;

                /**
                 * Verifies an ExecuteContractProposal message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an ExecuteContractProposal message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ExecuteContractProposal
                 */
                public static fromObject(object: { [k: string]: any }): cosmwasm.wasm.v1.ExecuteContractProposal;

                /**
                 * Creates a plain object from an ExecuteContractProposal message. Also converts values to other types if specified.
                 * @param message ExecuteContractProposal
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmwasm.wasm.v1.ExecuteContractProposal, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ExecuteContractProposal to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an UpdateAdminProposal. */
            interface IUpdateAdminProposal {

                /** UpdateAdminProposal title */
                title?: (string|null);

                /** UpdateAdminProposal description */
                description?: (string|null);

                /** UpdateAdminProposal new_admin */
                new_admin?: (string|null);

                /** UpdateAdminProposal contract */
                contract?: (string|null);
            }

            /** Represents an UpdateAdminProposal. */
            class UpdateAdminProposal implements IUpdateAdminProposal {

                /**
                 * Constructs a new UpdateAdminProposal.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmwasm.wasm.v1.IUpdateAdminProposal);

                /** UpdateAdminProposal title. */
                public title: string;

                /** UpdateAdminProposal description. */
                public description: string;

                /** UpdateAdminProposal new_admin. */
                public new_admin: string;

                /** UpdateAdminProposal contract. */
                public contract: string;

                /**
                 * Encodes the specified UpdateAdminProposal message. Does not implicitly {@link cosmwasm.wasm.v1.UpdateAdminProposal.verify|verify} messages.
                 * @param message UpdateAdminProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmwasm.wasm.v1.IUpdateAdminProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified UpdateAdminProposal message, length delimited. Does not implicitly {@link cosmwasm.wasm.v1.UpdateAdminProposal.verify|verify} messages.
                 * @param message UpdateAdminProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmwasm.wasm.v1.IUpdateAdminProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an UpdateAdminProposal message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns UpdateAdminProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmwasm.wasm.v1.UpdateAdminProposal;

                /**
                 * Decodes an UpdateAdminProposal message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns UpdateAdminProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmwasm.wasm.v1.UpdateAdminProposal;

                /**
                 * Verifies an UpdateAdminProposal message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an UpdateAdminProposal message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns UpdateAdminProposal
                 */
                public static fromObject(object: { [k: string]: any }): cosmwasm.wasm.v1.UpdateAdminProposal;

                /**
                 * Creates a plain object from an UpdateAdminProposal message. Also converts values to other types if specified.
                 * @param message UpdateAdminProposal
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmwasm.wasm.v1.UpdateAdminProposal, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this UpdateAdminProposal to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a ClearAdminProposal. */
            interface IClearAdminProposal {

                /** ClearAdminProposal title */
                title?: (string|null);

                /** ClearAdminProposal description */
                description?: (string|null);

                /** ClearAdminProposal contract */
                contract?: (string|null);
            }

            /** Represents a ClearAdminProposal. */
            class ClearAdminProposal implements IClearAdminProposal {

                /**
                 * Constructs a new ClearAdminProposal.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmwasm.wasm.v1.IClearAdminProposal);

                /** ClearAdminProposal title. */
                public title: string;

                /** ClearAdminProposal description. */
                public description: string;

                /** ClearAdminProposal contract. */
                public contract: string;

                /**
                 * Encodes the specified ClearAdminProposal message. Does not implicitly {@link cosmwasm.wasm.v1.ClearAdminProposal.verify|verify} messages.
                 * @param message ClearAdminProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmwasm.wasm.v1.IClearAdminProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ClearAdminProposal message, length delimited. Does not implicitly {@link cosmwasm.wasm.v1.ClearAdminProposal.verify|verify} messages.
                 * @param message ClearAdminProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmwasm.wasm.v1.IClearAdminProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ClearAdminProposal message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ClearAdminProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmwasm.wasm.v1.ClearAdminProposal;

                /**
                 * Decodes a ClearAdminProposal message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ClearAdminProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmwasm.wasm.v1.ClearAdminProposal;

                /**
                 * Verifies a ClearAdminProposal message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ClearAdminProposal message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ClearAdminProposal
                 */
                public static fromObject(object: { [k: string]: any }): cosmwasm.wasm.v1.ClearAdminProposal;

                /**
                 * Creates a plain object from a ClearAdminProposal message. Also converts values to other types if specified.
                 * @param message ClearAdminProposal
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmwasm.wasm.v1.ClearAdminProposal, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ClearAdminProposal to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a PinCodesProposal. */
            interface IPinCodesProposal {

                /** PinCodesProposal title */
                title?: (string|null);

                /** PinCodesProposal description */
                description?: (string|null);

                /** PinCodesProposal code_ids */
                code_ids?: (number[]|null);
            }

            /** Represents a PinCodesProposal. */
            class PinCodesProposal implements IPinCodesProposal {

                /**
                 * Constructs a new PinCodesProposal.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmwasm.wasm.v1.IPinCodesProposal);

                /** PinCodesProposal title. */
                public title: string;

                /** PinCodesProposal description. */
                public description: string;

                /** PinCodesProposal code_ids. */
                public code_ids: number[];

                /**
                 * Encodes the specified PinCodesProposal message. Does not implicitly {@link cosmwasm.wasm.v1.PinCodesProposal.verify|verify} messages.
                 * @param message PinCodesProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmwasm.wasm.v1.IPinCodesProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified PinCodesProposal message, length delimited. Does not implicitly {@link cosmwasm.wasm.v1.PinCodesProposal.verify|verify} messages.
                 * @param message PinCodesProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmwasm.wasm.v1.IPinCodesProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a PinCodesProposal message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns PinCodesProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmwasm.wasm.v1.PinCodesProposal;

                /**
                 * Decodes a PinCodesProposal message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns PinCodesProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmwasm.wasm.v1.PinCodesProposal;

                /**
                 * Verifies a PinCodesProposal message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a PinCodesProposal message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns PinCodesProposal
                 */
                public static fromObject(object: { [k: string]: any }): cosmwasm.wasm.v1.PinCodesProposal;

                /**
                 * Creates a plain object from a PinCodesProposal message. Also converts values to other types if specified.
                 * @param message PinCodesProposal
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmwasm.wasm.v1.PinCodesProposal, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this PinCodesProposal to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an UnpinCodesProposal. */
            interface IUnpinCodesProposal {

                /** UnpinCodesProposal title */
                title?: (string|null);

                /** UnpinCodesProposal description */
                description?: (string|null);

                /** UnpinCodesProposal code_ids */
                code_ids?: (number[]|null);
            }

            /** Represents an UnpinCodesProposal. */
            class UnpinCodesProposal implements IUnpinCodesProposal {

                /**
                 * Constructs a new UnpinCodesProposal.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmwasm.wasm.v1.IUnpinCodesProposal);

                /** UnpinCodesProposal title. */
                public title: string;

                /** UnpinCodesProposal description. */
                public description: string;

                /** UnpinCodesProposal code_ids. */
                public code_ids: number[];

                /**
                 * Encodes the specified UnpinCodesProposal message. Does not implicitly {@link cosmwasm.wasm.v1.UnpinCodesProposal.verify|verify} messages.
                 * @param message UnpinCodesProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmwasm.wasm.v1.IUnpinCodesProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified UnpinCodesProposal message, length delimited. Does not implicitly {@link cosmwasm.wasm.v1.UnpinCodesProposal.verify|verify} messages.
                 * @param message UnpinCodesProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmwasm.wasm.v1.IUnpinCodesProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an UnpinCodesProposal message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns UnpinCodesProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmwasm.wasm.v1.UnpinCodesProposal;

                /**
                 * Decodes an UnpinCodesProposal message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns UnpinCodesProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmwasm.wasm.v1.UnpinCodesProposal;

                /**
                 * Verifies an UnpinCodesProposal message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an UnpinCodesProposal message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns UnpinCodesProposal
                 */
                public static fromObject(object: { [k: string]: any }): cosmwasm.wasm.v1.UnpinCodesProposal;

                /**
                 * Creates a plain object from an UnpinCodesProposal message. Also converts values to other types if specified.
                 * @param message UnpinCodesProposal
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmwasm.wasm.v1.UnpinCodesProposal, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this UnpinCodesProposal to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an AccessConfigUpdate. */
            interface IAccessConfigUpdate {

                /** AccessConfigUpdate code_id */
                code_id?: (number|null);

                /** AccessConfigUpdate instantiate_permission */
                instantiate_permission?: (cosmwasm.wasm.v1.IAccessConfig|null);
            }

            /** Represents an AccessConfigUpdate. */
            class AccessConfigUpdate implements IAccessConfigUpdate {

                /**
                 * Constructs a new AccessConfigUpdate.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmwasm.wasm.v1.IAccessConfigUpdate);

                /** AccessConfigUpdate code_id. */
                public code_id: number;

                /** AccessConfigUpdate instantiate_permission. */
                public instantiate_permission?: (cosmwasm.wasm.v1.IAccessConfig|null);

                /**
                 * Encodes the specified AccessConfigUpdate message. Does not implicitly {@link cosmwasm.wasm.v1.AccessConfigUpdate.verify|verify} messages.
                 * @param message AccessConfigUpdate message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmwasm.wasm.v1.IAccessConfigUpdate, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified AccessConfigUpdate message, length delimited. Does not implicitly {@link cosmwasm.wasm.v1.AccessConfigUpdate.verify|verify} messages.
                 * @param message AccessConfigUpdate message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmwasm.wasm.v1.IAccessConfigUpdate, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an AccessConfigUpdate message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns AccessConfigUpdate
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmwasm.wasm.v1.AccessConfigUpdate;

                /**
                 * Decodes an AccessConfigUpdate message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns AccessConfigUpdate
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmwasm.wasm.v1.AccessConfigUpdate;

                /**
                 * Verifies an AccessConfigUpdate message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an AccessConfigUpdate message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns AccessConfigUpdate
                 */
                public static fromObject(object: { [k: string]: any }): cosmwasm.wasm.v1.AccessConfigUpdate;

                /**
                 * Creates a plain object from an AccessConfigUpdate message. Also converts values to other types if specified.
                 * @param message AccessConfigUpdate
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmwasm.wasm.v1.AccessConfigUpdate, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this AccessConfigUpdate to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an UpdateInstantiateConfigProposal. */
            interface IUpdateInstantiateConfigProposal {

                /** UpdateInstantiateConfigProposal title */
                title?: (string|null);

                /** UpdateInstantiateConfigProposal description */
                description?: (string|null);

                /** UpdateInstantiateConfigProposal access_config_updates */
                access_config_updates?: (cosmwasm.wasm.v1.IAccessConfigUpdate[]|null);
            }

            /** Represents an UpdateInstantiateConfigProposal. */
            class UpdateInstantiateConfigProposal implements IUpdateInstantiateConfigProposal {

                /**
                 * Constructs a new UpdateInstantiateConfigProposal.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmwasm.wasm.v1.IUpdateInstantiateConfigProposal);

                /** UpdateInstantiateConfigProposal title. */
                public title: string;

                /** UpdateInstantiateConfigProposal description. */
                public description: string;

                /** UpdateInstantiateConfigProposal access_config_updates. */
                public access_config_updates: cosmwasm.wasm.v1.IAccessConfigUpdate[];

                /**
                 * Encodes the specified UpdateInstantiateConfigProposal message. Does not implicitly {@link cosmwasm.wasm.v1.UpdateInstantiateConfigProposal.verify|verify} messages.
                 * @param message UpdateInstantiateConfigProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmwasm.wasm.v1.IUpdateInstantiateConfigProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified UpdateInstantiateConfigProposal message, length delimited. Does not implicitly {@link cosmwasm.wasm.v1.UpdateInstantiateConfigProposal.verify|verify} messages.
                 * @param message UpdateInstantiateConfigProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmwasm.wasm.v1.IUpdateInstantiateConfigProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an UpdateInstantiateConfigProposal message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns UpdateInstantiateConfigProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmwasm.wasm.v1.UpdateInstantiateConfigProposal;

                /**
                 * Decodes an UpdateInstantiateConfigProposal message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns UpdateInstantiateConfigProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmwasm.wasm.v1.UpdateInstantiateConfigProposal;

                /**
                 * Verifies an UpdateInstantiateConfigProposal message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an UpdateInstantiateConfigProposal message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns UpdateInstantiateConfigProposal
                 */
                public static fromObject(object: { [k: string]: any }): cosmwasm.wasm.v1.UpdateInstantiateConfigProposal;

                /**
                 * Creates a plain object from an UpdateInstantiateConfigProposal message. Also converts values to other types if specified.
                 * @param message UpdateInstantiateConfigProposal
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmwasm.wasm.v1.UpdateInstantiateConfigProposal, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this UpdateInstantiateConfigProposal to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a StoreAndInstantiateContractProposal. */
            interface IStoreAndInstantiateContractProposal {

                /** StoreAndInstantiateContractProposal title */
                title?: (string|null);

                /** StoreAndInstantiateContractProposal description */
                description?: (string|null);

                /** StoreAndInstantiateContractProposal run_as */
                run_as?: (string|null);

                /** StoreAndInstantiateContractProposal wasm_byte_code */
                wasm_byte_code?: (Uint8Array|null);

                /** StoreAndInstantiateContractProposal instantiate_permission */
                instantiate_permission?: (cosmwasm.wasm.v1.IAccessConfig|null);

                /** StoreAndInstantiateContractProposal unpin_code */
                unpin_code?: (boolean|null);

                /** StoreAndInstantiateContractProposal admin */
                admin?: (string|null);

                /** StoreAndInstantiateContractProposal label */
                label?: (string|null);

                /** StoreAndInstantiateContractProposal msg */
                msg?: (Uint8Array|null);

                /** StoreAndInstantiateContractProposal funds */
                funds?: (cosmos.base.v1beta1.ICoin[]|null);

                /** StoreAndInstantiateContractProposal source */
                source?: (string|null);

                /** StoreAndInstantiateContractProposal builder */
                builder?: (string|null);

                /** StoreAndInstantiateContractProposal code_hash */
                code_hash?: (Uint8Array|null);
            }

            /** Represents a StoreAndInstantiateContractProposal. */
            class StoreAndInstantiateContractProposal implements IStoreAndInstantiateContractProposal {

                /**
                 * Constructs a new StoreAndInstantiateContractProposal.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmwasm.wasm.v1.IStoreAndInstantiateContractProposal);

                /** StoreAndInstantiateContractProposal title. */
                public title: string;

                /** StoreAndInstantiateContractProposal description. */
                public description: string;

                /** StoreAndInstantiateContractProposal run_as. */
                public run_as: string;

                /** StoreAndInstantiateContractProposal wasm_byte_code. */
                public wasm_byte_code: Uint8Array;

                /** StoreAndInstantiateContractProposal instantiate_permission. */
                public instantiate_permission?: (cosmwasm.wasm.v1.IAccessConfig|null);

                /** StoreAndInstantiateContractProposal unpin_code. */
                public unpin_code: boolean;

                /** StoreAndInstantiateContractProposal admin. */
                public admin: string;

                /** StoreAndInstantiateContractProposal label. */
                public label: string;

                /** StoreAndInstantiateContractProposal msg. */
                public msg: Uint8Array;

                /** StoreAndInstantiateContractProposal funds. */
                public funds: cosmos.base.v1beta1.ICoin[];

                /** StoreAndInstantiateContractProposal source. */
                public source: string;

                /** StoreAndInstantiateContractProposal builder. */
                public builder: string;

                /** StoreAndInstantiateContractProposal code_hash. */
                public code_hash: Uint8Array;

                /**
                 * Encodes the specified StoreAndInstantiateContractProposal message. Does not implicitly {@link cosmwasm.wasm.v1.StoreAndInstantiateContractProposal.verify|verify} messages.
                 * @param message StoreAndInstantiateContractProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmwasm.wasm.v1.IStoreAndInstantiateContractProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified StoreAndInstantiateContractProposal message, length delimited. Does not implicitly {@link cosmwasm.wasm.v1.StoreAndInstantiateContractProposal.verify|verify} messages.
                 * @param message StoreAndInstantiateContractProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmwasm.wasm.v1.IStoreAndInstantiateContractProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a StoreAndInstantiateContractProposal message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns StoreAndInstantiateContractProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmwasm.wasm.v1.StoreAndInstantiateContractProposal;

                /**
                 * Decodes a StoreAndInstantiateContractProposal message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns StoreAndInstantiateContractProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmwasm.wasm.v1.StoreAndInstantiateContractProposal;

                /**
                 * Verifies a StoreAndInstantiateContractProposal message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a StoreAndInstantiateContractProposal message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns StoreAndInstantiateContractProposal
                 */
                public static fromObject(object: { [k: string]: any }): cosmwasm.wasm.v1.StoreAndInstantiateContractProposal;

                /**
                 * Creates a plain object from a StoreAndInstantiateContractProposal message. Also converts values to other types if specified.
                 * @param message StoreAndInstantiateContractProposal
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmwasm.wasm.v1.StoreAndInstantiateContractProposal, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this StoreAndInstantiateContractProposal to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** AccessType enum. */
            enum AccessType {
                ACCESS_TYPE_UNSPECIFIED = 0,
                ACCESS_TYPE_NOBODY = 1,
                ACCESS_TYPE_ONLY_ADDRESS = 2,
                ACCESS_TYPE_EVERYBODY = 3,
                ACCESS_TYPE_ANY_OF_ADDRESSES = 4
            }

            /** Properties of an AccessTypeParam. */
            interface IAccessTypeParam {

                /** AccessTypeParam value */
                value?: (cosmwasm.wasm.v1.AccessType|null);
            }

            /** Represents an AccessTypeParam. */
            class AccessTypeParam implements IAccessTypeParam {

                /**
                 * Constructs a new AccessTypeParam.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmwasm.wasm.v1.IAccessTypeParam);

                /** AccessTypeParam value. */
                public value: cosmwasm.wasm.v1.AccessType;

                /**
                 * Encodes the specified AccessTypeParam message. Does not implicitly {@link cosmwasm.wasm.v1.AccessTypeParam.verify|verify} messages.
                 * @param message AccessTypeParam message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmwasm.wasm.v1.IAccessTypeParam, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified AccessTypeParam message, length delimited. Does not implicitly {@link cosmwasm.wasm.v1.AccessTypeParam.verify|verify} messages.
                 * @param message AccessTypeParam message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmwasm.wasm.v1.IAccessTypeParam, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an AccessTypeParam message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns AccessTypeParam
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmwasm.wasm.v1.AccessTypeParam;

                /**
                 * Decodes an AccessTypeParam message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns AccessTypeParam
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmwasm.wasm.v1.AccessTypeParam;

                /**
                 * Verifies an AccessTypeParam message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an AccessTypeParam message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns AccessTypeParam
                 */
                public static fromObject(object: { [k: string]: any }): cosmwasm.wasm.v1.AccessTypeParam;

                /**
                 * Creates a plain object from an AccessTypeParam message. Also converts values to other types if specified.
                 * @param message AccessTypeParam
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmwasm.wasm.v1.AccessTypeParam, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this AccessTypeParam to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an AccessConfig. */
            interface IAccessConfig {

                /** AccessConfig permission */
                permission?: (cosmwasm.wasm.v1.AccessType|null);

                /** AccessConfig address */
                address?: (string|null);

                /** AccessConfig addresses */
                addresses?: (string[]|null);
            }

            /** Represents an AccessConfig. */
            class AccessConfig implements IAccessConfig {

                /**
                 * Constructs a new AccessConfig.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmwasm.wasm.v1.IAccessConfig);

                /** AccessConfig permission. */
                public permission: cosmwasm.wasm.v1.AccessType;

                /** AccessConfig address. */
                public address: string;

                /** AccessConfig addresses. */
                public addresses: string[];

                /**
                 * Encodes the specified AccessConfig message. Does not implicitly {@link cosmwasm.wasm.v1.AccessConfig.verify|verify} messages.
                 * @param message AccessConfig message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmwasm.wasm.v1.IAccessConfig, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified AccessConfig message, length delimited. Does not implicitly {@link cosmwasm.wasm.v1.AccessConfig.verify|verify} messages.
                 * @param message AccessConfig message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmwasm.wasm.v1.IAccessConfig, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an AccessConfig message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns AccessConfig
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmwasm.wasm.v1.AccessConfig;

                /**
                 * Decodes an AccessConfig message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns AccessConfig
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmwasm.wasm.v1.AccessConfig;

                /**
                 * Verifies an AccessConfig message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an AccessConfig message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns AccessConfig
                 */
                public static fromObject(object: { [k: string]: any }): cosmwasm.wasm.v1.AccessConfig;

                /**
                 * Creates a plain object from an AccessConfig message. Also converts values to other types if specified.
                 * @param message AccessConfig
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmwasm.wasm.v1.AccessConfig, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this AccessConfig to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a Params. */
            interface IParams {

                /** Params code_upload_access */
                code_upload_access?: (cosmwasm.wasm.v1.IAccessConfig|null);

                /** Params instantiate_default_permission */
                instantiate_default_permission?: (cosmwasm.wasm.v1.AccessType|null);
            }

            /** Represents a Params. */
            class Params implements IParams {

                /**
                 * Constructs a new Params.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmwasm.wasm.v1.IParams);

                /** Params code_upload_access. */
                public code_upload_access?: (cosmwasm.wasm.v1.IAccessConfig|null);

                /** Params instantiate_default_permission. */
                public instantiate_default_permission: cosmwasm.wasm.v1.AccessType;

                /**
                 * Encodes the specified Params message. Does not implicitly {@link cosmwasm.wasm.v1.Params.verify|verify} messages.
                 * @param message Params message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmwasm.wasm.v1.IParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Params message, length delimited. Does not implicitly {@link cosmwasm.wasm.v1.Params.verify|verify} messages.
                 * @param message Params message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmwasm.wasm.v1.IParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Params message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Params
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmwasm.wasm.v1.Params;

                /**
                 * Decodes a Params message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Params
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmwasm.wasm.v1.Params;

                /**
                 * Verifies a Params message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Params message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Params
                 */
                public static fromObject(object: { [k: string]: any }): cosmwasm.wasm.v1.Params;

                /**
                 * Creates a plain object from a Params message. Also converts values to other types if specified.
                 * @param message Params
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmwasm.wasm.v1.Params, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Params to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a CodeInfo. */
            interface ICodeInfo {

                /** CodeInfo code_hash */
                code_hash?: (Uint8Array|null);

                /** CodeInfo creator */
                creator?: (string|null);

                /** CodeInfo instantiate_config */
                instantiate_config?: (cosmwasm.wasm.v1.IAccessConfig|null);
            }

            /** Represents a CodeInfo. */
            class CodeInfo implements ICodeInfo {

                /**
                 * Constructs a new CodeInfo.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmwasm.wasm.v1.ICodeInfo);

                /** CodeInfo code_hash. */
                public code_hash: Uint8Array;

                /** CodeInfo creator. */
                public creator: string;

                /** CodeInfo instantiate_config. */
                public instantiate_config?: (cosmwasm.wasm.v1.IAccessConfig|null);

                /**
                 * Encodes the specified CodeInfo message. Does not implicitly {@link cosmwasm.wasm.v1.CodeInfo.verify|verify} messages.
                 * @param message CodeInfo message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmwasm.wasm.v1.ICodeInfo, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified CodeInfo message, length delimited. Does not implicitly {@link cosmwasm.wasm.v1.CodeInfo.verify|verify} messages.
                 * @param message CodeInfo message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmwasm.wasm.v1.ICodeInfo, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a CodeInfo message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns CodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmwasm.wasm.v1.CodeInfo;

                /**
                 * Decodes a CodeInfo message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns CodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmwasm.wasm.v1.CodeInfo;

                /**
                 * Verifies a CodeInfo message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a CodeInfo message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns CodeInfo
                 */
                public static fromObject(object: { [k: string]: any }): cosmwasm.wasm.v1.CodeInfo;

                /**
                 * Creates a plain object from a CodeInfo message. Also converts values to other types if specified.
                 * @param message CodeInfo
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmwasm.wasm.v1.CodeInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this CodeInfo to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a ContractInfo. */
            interface IContractInfo {

                /** ContractInfo code_id */
                code_id?: (number|null);

                /** ContractInfo creator */
                creator?: (string|null);

                /** ContractInfo admin */
                admin?: (string|null);

                /** ContractInfo label */
                label?: (string|null);

                /** ContractInfo created */
                created?: (cosmwasm.wasm.v1.IAbsoluteTxPosition|null);

                /** ContractInfo ibc_port_id */
                ibc_port_id?: (string|null);

                /** ContractInfo extension */
                extension?: (google.protobuf.IAny|null);
            }

            /** Represents a ContractInfo. */
            class ContractInfo implements IContractInfo {

                /**
                 * Constructs a new ContractInfo.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmwasm.wasm.v1.IContractInfo);

                /** ContractInfo code_id. */
                public code_id: number;

                /** ContractInfo creator. */
                public creator: string;

                /** ContractInfo admin. */
                public admin: string;

                /** ContractInfo label. */
                public label: string;

                /** ContractInfo created. */
                public created?: (cosmwasm.wasm.v1.IAbsoluteTxPosition|null);

                /** ContractInfo ibc_port_id. */
                public ibc_port_id: string;

                /** ContractInfo extension. */
                public extension?: (google.protobuf.IAny|null);

                /**
                 * Encodes the specified ContractInfo message. Does not implicitly {@link cosmwasm.wasm.v1.ContractInfo.verify|verify} messages.
                 * @param message ContractInfo message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmwasm.wasm.v1.IContractInfo, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ContractInfo message, length delimited. Does not implicitly {@link cosmwasm.wasm.v1.ContractInfo.verify|verify} messages.
                 * @param message ContractInfo message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmwasm.wasm.v1.IContractInfo, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ContractInfo message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ContractInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmwasm.wasm.v1.ContractInfo;

                /**
                 * Decodes a ContractInfo message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ContractInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmwasm.wasm.v1.ContractInfo;

                /**
                 * Verifies a ContractInfo message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ContractInfo message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ContractInfo
                 */
                public static fromObject(object: { [k: string]: any }): cosmwasm.wasm.v1.ContractInfo;

                /**
                 * Creates a plain object from a ContractInfo message. Also converts values to other types if specified.
                 * @param message ContractInfo
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmwasm.wasm.v1.ContractInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ContractInfo to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** ContractCodeHistoryOperationType enum. */
            enum ContractCodeHistoryOperationType {
                CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED = 0,
                CONTRACT_CODE_HISTORY_OPERATION_TYPE_INIT = 1,
                CONTRACT_CODE_HISTORY_OPERATION_TYPE_MIGRATE = 2,
                CONTRACT_CODE_HISTORY_OPERATION_TYPE_GENESIS = 3
            }

            /** Properties of a ContractCodeHistoryEntry. */
            interface IContractCodeHistoryEntry {

                /** ContractCodeHistoryEntry operation */
                operation?: (cosmwasm.wasm.v1.ContractCodeHistoryOperationType|null);

                /** ContractCodeHistoryEntry code_id */
                code_id?: (number|null);

                /** ContractCodeHistoryEntry updated */
                updated?: (cosmwasm.wasm.v1.IAbsoluteTxPosition|null);

                /** ContractCodeHistoryEntry msg */
                msg?: (Uint8Array|null);
            }

            /** Represents a ContractCodeHistoryEntry. */
            class ContractCodeHistoryEntry implements IContractCodeHistoryEntry {

                /**
                 * Constructs a new ContractCodeHistoryEntry.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmwasm.wasm.v1.IContractCodeHistoryEntry);

                /** ContractCodeHistoryEntry operation. */
                public operation: cosmwasm.wasm.v1.ContractCodeHistoryOperationType;

                /** ContractCodeHistoryEntry code_id. */
                public code_id: number;

                /** ContractCodeHistoryEntry updated. */
                public updated?: (cosmwasm.wasm.v1.IAbsoluteTxPosition|null);

                /** ContractCodeHistoryEntry msg. */
                public msg: Uint8Array;

                /**
                 * Encodes the specified ContractCodeHistoryEntry message. Does not implicitly {@link cosmwasm.wasm.v1.ContractCodeHistoryEntry.verify|verify} messages.
                 * @param message ContractCodeHistoryEntry message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmwasm.wasm.v1.IContractCodeHistoryEntry, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ContractCodeHistoryEntry message, length delimited. Does not implicitly {@link cosmwasm.wasm.v1.ContractCodeHistoryEntry.verify|verify} messages.
                 * @param message ContractCodeHistoryEntry message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmwasm.wasm.v1.IContractCodeHistoryEntry, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ContractCodeHistoryEntry message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ContractCodeHistoryEntry
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmwasm.wasm.v1.ContractCodeHistoryEntry;

                /**
                 * Decodes a ContractCodeHistoryEntry message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ContractCodeHistoryEntry
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmwasm.wasm.v1.ContractCodeHistoryEntry;

                /**
                 * Verifies a ContractCodeHistoryEntry message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ContractCodeHistoryEntry message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ContractCodeHistoryEntry
                 */
                public static fromObject(object: { [k: string]: any }): cosmwasm.wasm.v1.ContractCodeHistoryEntry;

                /**
                 * Creates a plain object from a ContractCodeHistoryEntry message. Also converts values to other types if specified.
                 * @param message ContractCodeHistoryEntry
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmwasm.wasm.v1.ContractCodeHistoryEntry, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ContractCodeHistoryEntry to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an AbsoluteTxPosition. */
            interface IAbsoluteTxPosition {

                /** AbsoluteTxPosition block_height */
                block_height?: (number|null);

                /** AbsoluteTxPosition tx_index */
                tx_index?: (number|null);
            }

            /** Represents an AbsoluteTxPosition. */
            class AbsoluteTxPosition implements IAbsoluteTxPosition {

                /**
                 * Constructs a new AbsoluteTxPosition.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmwasm.wasm.v1.IAbsoluteTxPosition);

                /** AbsoluteTxPosition block_height. */
                public block_height: number;

                /** AbsoluteTxPosition tx_index. */
                public tx_index: number;

                /**
                 * Encodes the specified AbsoluteTxPosition message. Does not implicitly {@link cosmwasm.wasm.v1.AbsoluteTxPosition.verify|verify} messages.
                 * @param message AbsoluteTxPosition message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmwasm.wasm.v1.IAbsoluteTxPosition, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified AbsoluteTxPosition message, length delimited. Does not implicitly {@link cosmwasm.wasm.v1.AbsoluteTxPosition.verify|verify} messages.
                 * @param message AbsoluteTxPosition message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmwasm.wasm.v1.IAbsoluteTxPosition, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an AbsoluteTxPosition message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns AbsoluteTxPosition
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmwasm.wasm.v1.AbsoluteTxPosition;

                /**
                 * Decodes an AbsoluteTxPosition message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns AbsoluteTxPosition
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmwasm.wasm.v1.AbsoluteTxPosition;

                /**
                 * Verifies an AbsoluteTxPosition message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an AbsoluteTxPosition message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns AbsoluteTxPosition
                 */
                public static fromObject(object: { [k: string]: any }): cosmwasm.wasm.v1.AbsoluteTxPosition;

                /**
                 * Creates a plain object from an AbsoluteTxPosition message. Also converts values to other types if specified.
                 * @param message AbsoluteTxPosition
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmwasm.wasm.v1.AbsoluteTxPosition, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this AbsoluteTxPosition to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a Model. */
            interface IModel {

                /** Model key */
                key?: (Uint8Array|null);

                /** Model value */
                value?: (Uint8Array|null);
            }

            /** Represents a Model. */
            class Model implements IModel {

                /**
                 * Constructs a new Model.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmwasm.wasm.v1.IModel);

                /** Model key. */
                public key: Uint8Array;

                /** Model value. */
                public value: Uint8Array;

                /**
                 * Encodes the specified Model message. Does not implicitly {@link cosmwasm.wasm.v1.Model.verify|verify} messages.
                 * @param message Model message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmwasm.wasm.v1.IModel, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Model message, length delimited. Does not implicitly {@link cosmwasm.wasm.v1.Model.verify|verify} messages.
                 * @param message Model message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmwasm.wasm.v1.IModel, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Model message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Model
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmwasm.wasm.v1.Model;

                /**
                 * Decodes a Model message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Model
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmwasm.wasm.v1.Model;

                /**
                 * Verifies a Model message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Model message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Model
                 */
                public static fromObject(object: { [k: string]: any }): cosmwasm.wasm.v1.Model;

                /**
                 * Creates a plain object from a Model message. Also converts values to other types if specified.
                 * @param message Model
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmwasm.wasm.v1.Model, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Model to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }
    }
}
